// Code generated for package util by go-bindata DO NOT EDIT. (@generated)
// sources:
// ../resources/events.yaml
package util

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ResourcesEventsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5d\xdd\x72\x1b\xb7\x92\xbe\xcf\x53\xa0\x7c\x71\x2a\xa9\x8a\xb2\x96\x48\xc6\xa2\xef\x64\x59\x72\xe9\xac\x65\xb9\x44\x39\x67\xf7\x2a\x05\xce\x34\x49\x44\x33\xc0\x04\xc0\x50\xe2\x49\xe5\x5d\xf8\x2c\x7c\xb2\x2d\x00\xf3\x47\x02\x43\x36\x41\xef\xf1\x95\x45\xce\xe0\xeb\x6e\x34\xfa\x0f\x0d\xf0\xec\xec\xec\x87\x4f\x82\x66\xef\xc9\xcd\x12\xb8\x56\xe4\x1b\x67\x33\x96\x50\xcd\x04\xff\x21\x17\x69\x99\x81\x7a\xff\x03\x21\x67\x84\xd3\x1c\xde\x93\x37\xd7\x0f\xf7\xf7\x0f\x5f\xde\xfc\x40\x08\x21\x89\x28\xb9\x7e\x4f\xc6\xe3\xb1\xfd\x93\xa5\x13\x4d\xa5\x7e\x4f\xde\x56\x7f\xde\xf0\xf4\x3d\x21\xed\xf7\x7c\x26\xde\xdb\xff\x99\xf1\x12\x91\x42\xfd\xa8\xf9\x97\xc1\x12\xb2\xf7\xe4\xcd\xdd\x97\xdb\x87\x37\xcd\xa7\x39\x28\x45\xe7\x06\x78\x52\x26\x09\x28\xd5\x7e\x55\x48\x31\xcd\x20\x7f\x4f\xde\xb4\x9f\x29\x91\x95\x86\xf4\xea\xc3\x96\xea\xcf\x77\x3b\x24\x6f\x53\x7c\xfe\xf6\xed\x0e\xd1\xe7\x6f\xc7\x97\xbd\x54\x37\x8f\x63\x08\x4f\x32\x46\x14\xc8\x25\x48\xc2\x38\xd3\x8c\x66\xec\xdf\x90\x1e\xc5\xc7\x0e\xf6\x39\x1a\x9b\xc3\x0b\x49\x32\x06\x5c\x9f\x82\x77\xb1\x8b\x67\xe0\x7c\x34\x07\x44\x52\xa6\x12\xc1\x39\x24\x1a\x52\x0f\xd4\x47\xf4\xe1\x06\x38\x38\x09\x7f\x96\xa0\x34\xc9\xd5\x9c\x48\x48\x96\x51\x58\x43\x2c\x96\x2a\x04\x57\x60\xc1\x14\x70\x1d\x05\x36\xc2\x81\x01\xa7\xd3\x0c\xc8\x33\x40\x71\x46\x33\xb6\x84\x28\xb0\x5f\x77\xc1\xfe\x75\xf5\xf8\x05\x01\x46\x66\x94\x65\x91\x33\xf7\xee\x28\x06\x25\x94\x0a\xce\x68\x9a\xca\x28\xb0\xcb\xa3\x18\x6c\xc1\x36\xeb\x78\x0e\xcf\xbd\x65\xdf\x03\xfa\x9a\x40\x61\x86\x20\x82\x93\x44\xe4\x39\xe5\xa9\xc1\x31\x16\x8c\xf1\x79\x14\xb4\xb7\xea\x6f\x1e\x1f\x1f\x1e\x7d\x6c\xc7\x1d\xd1\xc2\x28\x6a\x1c\x97\xc8\x05\x7f\xf3\x3f\x77\x4f\x51\xe3\x7b\x2b\x3c\x2c\x45\x33\xfe\x0e\x97\x7b\x51\x1a\x73\x7f\xf7\x41\xdc\x3e\x4c\xc8\x44\x53\x0d\xe4\x9e\x72\x3a\x07\xb9\x65\xff\x2f\x1a\x73\x5f\x3b\x80\x73\xcf\x01\x5c\xec\x71\x5b\xcd\xe3\x1d\x1e\x3e\xde\x7c\xf8\xf6\xc9\x67\x42\x19\x22\x7e\x2f\xca\x69\xc6\xd4\x02\x62\x54\xfd\xdc\x37\xf8\xe1\xf9\xb0\x50\x24\x11\x5c\xc3\xab\x26\x34\x4d\xa3\x94\xfc\x1c\x6b\xef\xb7\xe1\x24\xe4\x62\x19\x09\x88\xb4\xf8\xdb\x80\x65\x91\xd2\x38\x17\x73\x8e\x35\xfb\x15\xe0\x82\xf2\x79\x1c\x90\x6f\x2f\xc2\x40\x4f\x1f\x3e\x46\x0c\x7f\xe1\x2b\xe1\xe3\xcd\xd7\x87\xc7\xa7\xdf\x9f\x1e\xaf\xae\x6f\xbe\x0f\xcc\x0e\xc2\x77\xa3\x7d\xe0\xcd\xc1\x7e\xda\x59\xb5\xa6\x57\x4a\x43\x4e\x1e\x21\x11\x4b\x90\x2b\x72\xc7\x0b\x29\xe6\x12\x94\x3a\xd2\x46\xfc\x26\xb2\x32\x87\x90\x71\x18\xec\x1a\x87\x0b\x2f\x3a\xbc\xd8\x67\x1c\x2e\x02\xd1\x61\x78\xda\x1d\x0d\x24\x91\x10\xa7\xc9\x17\x81\x58\x70\x2f\x52\x0a\x19\xc4\x22\x21\xad\x42\x85\x94\x1b\x59\x46\x22\x21\xcd\x41\x85\x54\xf2\x53\xb0\x90\x96\xa0\xc2\xb2\x36\xd5\xb8\x56\xbd\x00\x92\x31\x15\x11\x07\x5e\xa0\xe3\x40\x87\xb9\x59\x57\x96\x95\xcc\xa4\xc8\x0d\xf0\x66\x1d\x8b\x8c\x0d\x5f\x9e\x16\x50\x87\xd7\x90\x92\x65\xa5\x3b\x02\x14\xe1\x42\x13\x78\x0d\xc1\xdb\x97\xaa\x47\x5f\x98\x5e\x58\x11\x79\x83\x98\xc5\x47\x84\xac\xff\xbc\xfb\xd8\x37\x6c\x9b\x91\xdc\x70\x0d\xd2\x8e\x96\x08\x29\x21\xd1\xfd\x63\xd1\x99\x79\x34\x59\x40\xf2\xcc\xf8\xdc\xbe\x53\x7d\xd9\x91\x58\x47\x1c\xde\xe2\x09\x8b\xa3\x9a\x7c\xc5\xfe\x0d\x84\x29\xa2\x85\x20\x19\x95\x73\x3f\x2e\x6f\x16\x34\xe5\x96\xa5\x69\xb3\xb6\xc9\x14\x12\x5a\x2a\xb0\x34\xe5\xf4\x95\xe5\x65\x4e\x78\x99\x4f\x41\x12\x31\xab\xa8\x54\x44\x2f\xa8\xb6\x6f\x77\xde\x64\xca\x86\x93\xd0\xf5\xe6\xad\x74\x1e\x41\xcb\x55\xc5\xb8\x55\x14\xc3\x78\x69\xd2\x2f\x43\xbd\x5c\xd5\x02\xa0\xb9\xe0\x73\x27\x63\xf3\x44\x3d\x78\x05\xec\x8b\xc6\x5b\xed\x3d\x21\x9a\xa5\xcc\x0d\x67\xe3\xec\x65\x2b\xab\xb0\x8a\x78\x2a\x61\xc5\xea\x38\x54\xe4\x4a\x4a\xba\x22\x09\x2d\x68\xb2\x0a\x70\x7b\x6d\xa6\xd6\xca\x50\x39\x3f\x60\x9f\x64\x7a\x45\x4c\x80\x6d\x25\x31\xa7\x8c\x7b\xec\x5c\x20\x15\x7f\x67\xfe\x16\x74\x09\x84\x92\x69\x46\xf9\xb3\x55\x37\x9f\xa5\x0f\xf6\x3b\xe6\x54\x98\x66\x99\x78\x31\x2b\xb5\xd5\xca\xad\xb7\xb0\x4a\xdd\x79\xdf\x4a\x96\x89\x00\x4b\xc7\x29\xaf\x19\x77\xb3\x6e\xd4\x57\x04\x92\x90\xee\xa3\x04\x0c\x81\x4e\xfb\xbc\x17\x76\xd9\xa0\x5b\xc4\x5b\x1d\xee\xac\x6a\xab\x20\xaf\xaf\x26\x8c\x92\x34\xd1\x20\x7d\x6d\xbb\x40\x6a\x5b\x97\x40\xa6\x48\x5a\x16\x19\x4b\x82\xae\x93\x5c\x6d\xd9\x22\xda\x3e\xeb\xde\xa6\x99\x04\x9a\xae\xdc\x82\x50\x7b\x38\x4b\xd9\x6c\x06\x12\xb8\x0e\x4c\x68\x87\x01\x64\x46\xf3\x8d\xd3\xc4\x64\x86\xdd\xa5\x12\xd6\xab\xd0\x5c\x98\xc8\x97\x32\xae\x08\x25\x4a\x4b\x67\xe1\xa8\xde\x51\xbe\xbd\xca\xe6\xcd\x53\x0e\xa0\x95\xf7\x95\x2c\xb3\x80\x4d\x18\x20\x17\xd1\x63\xb3\xc2\xed\xd2\xde\x63\x2e\xfb\xed\x41\xd0\xcc\x86\xad\xde\x96\xb9\x2f\x84\x52\x2c\x6c\x87\x3a\x8c\x20\x97\x4e\x80\x11\x95\xd3\x2c\x3b\x9e\x91\xcd\x7a\xfb\xc5\x90\x45\xcb\x19\xb7\x5e\xc1\xcc\x63\xe2\x5b\x53\x6b\xe1\xa4\xe1\xdb\xe7\x07\xb9\x7c\x76\xf8\x71\x4a\xc3\xe6\x3c\xb4\x7e\x42\x1c\x6d\xd6\xf6\xbd\x66\x6d\xdb\x97\xdd\x02\x9b\x66\x22\x79\xde\xb6\xfa\x2d\x8f\x77\xbc\x28\xf5\x16\x2f\x5a\x18\x0f\x97\x97\x99\x66\x45\x06\xc6\x03\x7a\x03\xb4\xec\x0d\x8f\x33\xde\xf5\xd2\xee\x8b\x0a\xc9\x95\xd6\x90\x17\xda\x10\x61\x9f\x69\xed\x57\xbd\x9c\xfa\x86\x68\x59\xfa\x22\xf4\xc2\xea\x9c\x20\xa9\xf0\x29\x3e\xce\x36\xd7\x70\xfd\x91\x6c\x97\xe6\xea\xa9\x7e\xaa\xfd\x61\xb0\x74\x8f\xfc\xbc\x85\xcf\x84\x4f\xf7\x75\xe5\x1f\x5d\x3a\x51\x8b\xa9\xa2\xa7\x97\x78\x17\x39\x57\xef\xd0\xbe\xb7\x5a\x5a\x3b\x3c\x57\x2f\xd5\xb1\x8c\x5d\xf7\x15\x9b\xdb\x81\x9e\xc7\xd2\xaf\x1e\x4b\x37\x52\x0a\xe9\xf3\x74\x4b\x59\x66\xa0\x5c\x64\x54\x43\xe5\xa0\x69\x4c\xa4\xfd\xab\x5f\xad\xdb\x0f\x2b\x0a\xe0\x27\x83\x7a\x76\xe0\x00\xa8\xd1\x97\x93\x41\x3d\xd7\x77\x00\xf4\x45\xb2\xef\x20\x5f\x2f\x6f\xeb\x41\xfd\xad\xc5\xd9\xac\x6d\xe9\x88\x6b\x32\x95\xe2\x19\x78\x0c\xee\x3b\xac\x3a\xdd\x43\x2e\x8c\x8b\x72\xc6\x9c\x09\xee\xca\xce\xa5\x0c\xad\x0f\x92\x50\x55\xad\x63\xb5\x10\x65\x96\x12\x0e\x4b\x93\x19\x24\x49\x29\xc9\x19\x59\x00\x2d\x3a\x43\x91\xdd\x91\xda\x35\xf3\xd4\x1b\x02\xbf\xc3\x6a\xe4\x1d\x5f\xd2\x8c\xa5\x84\xf1\x14\x5e\x09\x6c\x3d\x84\x27\xd9\xbe\xfd\x63\x35\xcb\x2c\xfd\x89\x30\x13\x84\x70\x9a\x65\x2b\x32\x97\x94\x57\x99\x0d\x73\x60\x41\xa7\xe1\x9e\x27\x99\x98\xb3\x64\xb3\xee\x12\xd2\xe1\xea\x58\x95\xb7\x52\xfc\x65\xb3\xe6\xf0\xb2\x59\x37\x99\x63\x04\x83\xdf\xdc\xbe\x82\x16\x64\xce\x96\xd0\x26\xa1\x3f\x93\x14\x54\x61\x54\xbc\x13\x55\xd9\xca\x52\x1d\xa8\xe5\xf4\x35\x9e\x5f\xec\x6a\x33\xfe\x5b\x51\x97\x16\x57\x44\xec\xc4\xba\x78\x56\xaf\xbc\xbc\xbe\x1e\xf9\x60\x18\x8d\xe3\xea\xd2\xf7\xf0\x54\xf2\xee\x46\x49\xc3\xd7\x43\xa9\x4d\xb8\xf0\xa7\x50\x44\x52\x1e\x0a\x2a\xaf\xc8\x92\x66\x25\x90\x0c\x94\x4d\xa8\xf9\x76\x74\x55\xd8\x3c\xc0\x4c\x9d\x19\xc3\x3d\xfa\x42\x55\x1d\x64\xa3\x42\xb4\xf6\xcd\x6e\xc2\x5e\x87\xe9\x5b\xa9\xe8\x2f\x1e\xb3\x63\x3c\xb3\x2e\x1b\xb6\x3a\xd3\x17\x18\xb4\x19\xeb\x4e\xc1\x41\x48\x92\x09\x9a\x42\x6a\x67\x4d\x94\x9a\xb0\xa9\x98\x09\xb5\x27\xa8\x69\x8c\x47\xe5\x61\x5d\x9c\xe1\x5e\xf3\xd9\xf0\x63\x9c\x3e\x36\xaa\x9a\xed\x2d\x2d\xb3\x40\xdd\xa8\xe6\xa0\xda\x25\x6b\x39\x29\x40\xce\x84\xcc\x8d\xa1\x70\x73\x38\x79\x7a\xf8\xea\x6a\xf2\x08\x4b\x3d\xf6\x83\xe2\x3e\xfa\x3e\x0a\x5e\xe9\x76\x8f\xb5\x9b\x08\xb3\x7c\xcc\x77\x8a\xe4\x74\x55\x2d\x8c\xb4\x94\x4d\xda\xd1\x6c\xed\x19\xe5\xec\x54\xbe\x7e\x76\xda\x60\x96\x4c\x39\x55\xe6\x33\xae\x8d\xaf\x97\xce\x90\xe7\xd5\xf4\xbe\x08\xf9\x4c\x5e\x20\xcb\x7e\x09\xa5\x6f\x06\xd8\xd6\x04\x2c\x09\x64\x41\x79\x9a\x19\x28\x9a\x99\x89\x9d\x2f\x08\xd3\xb5\xd8\x1c\x65\x96\x97\x52\x81\x24\x0e\x32\xf1\xe2\xa2\xc0\xfe\x55\xaf\x78\x0c\xe5\x6e\x06\x0d\x42\x5f\xb1\xda\x0f\xab\xbb\x46\x83\x8b\xce\x30\xbb\x43\xb4\xac\x4e\xea\x67\x14\xc9\x4b\xb5\x53\x40\x9b\x09\x59\xc5\x9a\x86\xf9\xb6\x72\xd5\x94\xf4\xef\x3f\x3c\x06\x77\xfb\xce\xbd\x82\xfe\xc0\x2b\xe8\x0f\xf6\x15\xf4\x07\xd8\x82\xfe\x95\xf3\xd1\x26\xde\xb0\xee\x5f\xb9\xa6\x95\x88\x48\x63\x80\xad\xec\xe7\x53\x49\x52\xaa\x69\x1d\xb8\x1a\x7d\xb3\x21\x56\x14\x28\xb2\xc8\xdf\x80\xd2\x34\x3d\x11\x11\x59\xec\x2f\xa8\x64\x7a\xe5\x92\xfd\x93\xc4\x8a\xdd\xfa\x73\xaa\x5a\x96\x2c\x3d\x1d\x14\x5b\x77\x4f\x61\xc9\x12\x97\x98\xcf\x44\x19\xb3\x79\x7f\x31\xc0\x16\xb5\xb7\x04\x6a\x02\xca\x28\x30\x64\xe5\xc1\x97\x66\x34\x22\xb2\xd2\xd6\x68\xe8\x69\xc2\xf4\xb4\xa5\x1f\xed\x19\x56\xa7\x81\xf9\xf5\xb5\x9e\x0e\x8f\x5d\x2b\x13\x2b\x4b\xbf\x0e\xd6\x03\xd8\x08\xd3\xd5\xea\x83\x4e\x12\x83\xe7\x07\xeb\xfd\x78\xc6\xf5\x53\x7d\x02\x98\x1f\x29\x87\xc1\xe6\xa0\xb7\xf4\x13\x2f\xcd\xc6\xf1\x7c\xb4\xeb\x16\xe7\x7a\x86\x9e\xeb\x19\xee\x73\x3d\x43\xac\xeb\xb9\x73\xbd\x85\x44\x25\x34\x26\xb3\x1d\x62\xfd\xcd\x23\x44\x23\x20\x9d\xcb\x67\xa6\x74\x65\x0a\xa3\x60\x90\x1e\xc5\xc2\x50\x13\x61\x6f\xd6\x27\xa0\x05\xfd\xc9\x7f\x85\xcd\xc4\x2d\xe3\xa9\xe1\xec\xc7\x92\xa5\x3f\x45\xa1\x79\x5b\xc7\x3d\x4a\x6d\xe6\x28\x7a\xed\x0c\xfd\xe6\xc1\x1e\x98\xca\x61\xd9\xe2\x55\x3c\x9a\xd7\x36\xb8\x1f\x2d\xc9\x84\x8a\xb7\x42\x43\x6c\xe3\x60\x85\xb6\x59\xf7\x1b\x75\xe2\x16\x7e\xa7\x50\xee\x0a\xdb\xf5\x8e\xbd\xc9\x2b\xfd\xb7\xf7\x90\x36\xc6\x91\xf6\x45\x70\x0b\x61\xd3\xd8\x8f\x61\xdd\x25\x0f\x3c\x5b\x91\x14\x34\x4d\x16\x90\x36\xb2\x73\xa9\xea\x6e\xb3\x56\x3f\x49\xd8\x0e\xa6\x94\x42\x2e\xb8\xc9\xce\x64\x4c\x6b\xc2\xd0\x0f\x5b\x0e\xe0\x88\x22\x0a\x06\x69\x83\x2a\x71\x51\x6d\xc4\x97\xdb\xb6\x66\xd0\x91\x2d\xcd\x17\x43\x3f\x68\xd9\x87\x6a\xcc\xd1\xf7\x81\x45\xc6\xba\x8e\xcb\x13\x4c\xee\x39\xb2\xa3\xc5\xf1\x75\x0a\x10\xb2\xab\x79\x8b\xa3\x78\x53\x71\xee\x59\xa6\x3e\x53\xf1\x7d\xe0\x90\x96\xa9\x6c\x4a\x8f\x76\xb9\x91\x5c\x70\xa6\x85\x0c\x35\x16\x13\x9a\x65\x9d\xef\xab\xe5\xa3\x08\x95\xcd\xb6\xd3\x66\x2d\x4b\x6e\x32\xff\x9f\x89\x90\x26\x51\xaf\x1e\x57\x7d\x1d\x39\x3e\xdd\x48\xb3\xd5\xa5\x5b\x14\x87\xc8\xde\xac\x7d\xba\x37\xeb\x0e\xe1\x76\x94\x02\xd2\x68\xba\xfd\xae\x90\x3e\xc7\xd3\x1a\x9d\x02\x52\x52\x72\x78\x2d\xec\xaa\xcc\x56\x3e\xe9\x98\x87\xf7\xd0\xe4\xd9\xc1\x9e\xbe\xe2\x42\x42\x61\x84\x11\xbf\x98\xfc\xae\x8b\x1e\x28\x09\x19\x50\x75\x1c\x54\x13\x1b\xdb\x1a\xe6\x81\xfe\xca\x91\x17\x13\xbf\xdb\x17\x13\x8f\xfc\x98\xb8\x2f\x53\xb2\x05\xd4\x6a\x6f\x34\xa5\xcd\x8e\xee\x2f\x11\xf2\x1a\xf9\x11\x32\x06\xd5\xee\xc8\x9e\x04\x8b\xcd\x9a\x1c\x6c\x4f\x49\xfe\x18\x40\x6c\xe6\xe4\x00\xb7\x1b\xf8\xe2\x10\xfd\xdd\xbc\x30\xe2\xc7\xd3\x0b\x24\x23\x74\x0c\xad\x17\xd0\x69\xd1\x53\x2a\x6d\x8b\x92\x53\xd0\x2f\x00\x9c\xfc\xf5\xb7\xad\x7e\xfd\xf5\x77\x14\x21\xd8\x28\x9b\x2f\xf3\xda\xb7\x9c\x94\x80\x8f\xd0\x91\xf6\x44\x55\x3d\x22\x35\xc3\x73\x5b\x5c\x94\x6e\x3f\xe5\xaf\xbf\xc9\x74\xa5\x21\x6e\xaa\x3d\x1f\xd7\x4f\x42\x2b\xef\x66\xcf\xc9\x10\x15\x87\xeb\xf9\xa8\x1e\xdc\xfb\x0f\x8f\x9b\xb5\xdd\x18\x8f\x16\xb3\x1f\x33\xf7\x63\x55\xdb\xe1\xf1\x58\x58\xa3\x64\x77\x5f\xce\xb4\xc8\x40\x52\x9e\x80\xb5\xac\xe4\x44\x3e\xb1\x96\xe9\x5f\x52\xf0\xb9\x47\x41\x0e\x7a\x21\x52\xa2\x57\x45\x8c\xfb\x1a\xf9\x41\x75\x0f\xfa\x9b\xbf\xfe\x26\x5f\xa9\xd4\xcc\x6e\xb9\xd4\x0d\x95\x8e\x6d\xff\x58\x24\x06\x19\x6b\xae\x5a\x64\xc1\xed\x6e\xdc\x29\xa0\x58\xb3\x65\x85\xbd\x59\x3b\xe3\x0c\x4b\x93\x44\xb0\x28\x43\xe9\x07\xdb\x3d\x88\xd5\x26\xbe\xdb\xe3\xa5\x19\xa1\x69\x2a\x41\xa9\x13\x14\x0b\x6b\x24\x9c\x62\x19\x0d\xb2\xfb\x63\xd4\x39\xa4\x9e\x84\xf8\x69\x01\xee\xd1\x1f\xcd\xb3\xd3\x72\x36\x33\x96\xdd\xed\xac\xa5\x54\xd3\x33\xa5\x85\xa4\x73\xf8\x89\xa8\x02\x12\x36\x63\x90\x92\xe9\xca\xda\x9e\xee\xc0\xcd\x8e\x1e\x4d\x74\x49\xb3\xfa\x53\x3b\xb2\x0d\xc8\xea\x8e\xd1\xd0\x5e\x5e\xbb\x97\xec\x9e\xef\xeb\xe9\x1b\xf9\xb1\x69\x38\xa5\xb2\x9b\x81\x75\x68\x46\xda\xc4\x31\x46\xec\xd8\x96\x62\x6e\x0c\x47\x4e\x99\x49\x1a\x88\x3a\x2d\x0a\x1d\xf9\x51\xe8\xe1\x73\x8d\x2f\xb4\xa8\x70\xed\xe6\xa2\x99\xbc\x18\x68\xbf\xe0\x1e\x96\xb1\xa7\x01\x0b\xaa\xc8\xd4\xf8\xff\xc8\x33\x76\x17\x23\xbf\xf4\x7e\x2c\x74\xf4\x79\xbb\x8b\x11\xb6\x5f\xb4\x95\x38\x4d\x53\x8f\x14\x7f\x81\x79\xc4\xc6\xf5\x5e\xfb\xf4\x22\xf7\x7c\x5a\x7a\x9d\x70\x10\x24\x1b\x9b\xd0\x25\x76\xfb\xd0\x4a\xdd\x68\x6e\xe2\xcd\xaa\x07\x21\x63\xca\x36\xa0\x74\x87\x0d\x2c\x74\x9f\x07\x6c\x2d\xa6\x33\xae\x4b\xd3\x93\x0c\xa8\x8c\x9c\x68\xac\xcf\xd8\x9e\x69\x21\x6b\x01\xf6\x89\x8d\x36\x8d\x29\xbd\x7b\xf9\x3e\x31\x58\x77\x72\x2c\x31\x25\x7f\xe6\xe2\x85\x6f\xcd\xe3\x8b\x75\x0c\xe1\xc3\x17\x3e\x65\xd8\xb0\x78\x9b\xb2\x7d\xcb\xa0\xd5\xa1\x8a\xaa\x4e\x36\x58\x69\x92\x95\x21\x82\xba\x40\x53\xee\x1e\xcd\x51\x9a\xea\x52\xc5\x1f\x8e\xbd\xf8\xd5\x4f\xae\xaf\x1f\xef\x9e\xee\xae\xaf\x3e\x07\x82\xf4\xff\x9d\x3c\xdd\xdc\xdb\xc6\x9c\xaf\x37\x81\x2e\xba\x99\x09\xf9\x48\x1b\xf2\xd5\x07\x99\x48\x5a\x82\xeb\xeb\xb5\xc2\xe9\xef\x67\x94\x50\x64\xd4\x3e\x61\x06\x6a\x96\x85\x75\x9b\x67\x75\xc7\x43\x25\xc8\xa6\xe4\xf0\x08\xd3\x92\x65\xe9\x81\x8d\xb8\x4b\xaf\xe8\x70\xb9\xaf\xe8\x70\x89\x3d\xb6\x27\x1d\x3a\x39\xee\x5c\xea\x0e\x96\xb7\x56\x7a\xba\x14\x5c\xa0\x92\xd8\xf3\x20\x85\xd5\xb2\x4c\x24\xcf\x51\x13\x7f\x89\xbd\xbe\x61\x07\x74\xb3\x66\x8a\x94\x3c\x1e\x17\xbb\xc5\x50\x0b\x36\x11\x79\x61\xdb\xc1\xab\x8e\x8c\x59\x99\x05\xea\x70\x18\x60\x6c\xee\xf4\xa6\x86\x96\xa0\xca\x4c\xb7\xa4\x54\x8a\x1b\x13\xd0\x5f\x62\x7b\x27\x7a\xc1\xab\x0a\x63\x1c\x38\xd2\xa5\xda\x50\xcf\xc1\x69\x2a\xe7\x10\xe8\xdf\xd3\x8b\x9d\xf0\xd3\x75\xf6\xba\x26\xbe\x4c\xb8\xc3\x06\x94\xaf\x48\x51\xe7\x60\x18\xfa\x90\xee\x92\x0b\xc2\xa1\xf6\xf9\x96\x4e\x9f\x40\x77\x8a\xbf\x22\x29\x85\xb9\xa4\xc1\xa3\x94\x3e\x0d\x58\xef\x79\xdb\x46\xa6\xb6\x1e\x5f\x51\xf2\x73\xdd\x56\xc0\x94\x2b\x78\x6f\xb7\x2e\xe2\xca\xa7\xd7\x82\xcf\xd8\x1c\xd7\x5a\x30\xf6\x2c\xda\xbe\xab\x97\x9a\xc7\x0f\x0a\x39\xb1\x34\x90\x19\xb3\xf7\xa8\xd0\x94\xa4\x82\xc7\xc4\xfa\x63\x6c\x8f\xc1\x1c\x74\xd5\x5f\x1b\x8d\x84\xdc\xe7\x73\x89\xab\xc3\x8a\x6f\xf0\x1a\x63\x7b\x0e\xba\x70\x91\x5d\x3b\xe3\x40\x33\x59\x5f\xe7\x66\x7d\x45\x52\x35\x81\x36\xe5\x8c\x4d\xca\xc7\x81\xc6\xb2\x43\xb8\xcf\xb0\x8a\xc7\x0b\xec\xce\x84\x5b\xdd\xbb\xea\x69\x3b\x11\x62\x25\xeb\xe7\xbf\x87\x11\xab\x33\x71\xf1\x5c\x62\x0f\x30\x6c\x61\x9e\x54\xb7\x1b\xfb\xa7\x55\x11\x92\x3d\xb1\x1f\x6b\x7c\x81\x3d\xb1\xf3\x87\x12\x9c\xa4\x22\xa9\x2d\xb6\x98\xfe\x01\x49\xc0\xef\xd4\x4a\xd6\x1a\x8b\x7f\xb8\xf5\x65\x8f\x6f\xd9\x0f\x5c\x1b\xfb\xb6\x62\xfc\xdc\x29\x7a\x92\x7f\x84\xd9\x0a\x5a\xe2\x7b\x5a\x14\x87\xae\x11\x1a\x78\x37\x85\x0c\xce\x77\x4c\x70\xbb\x31\xe6\xba\xf8\xc4\xa1\x21\x2f\xbc\x21\x77\x7b\x95\x9b\x21\x3f\x5d\xef\xf7\x10\x03\xaf\xf9\x6c\xb0\xaf\xf9\x6c\x80\x6e\x3e\xfb\x74\x4d\xb4\x64\xf3\x39\x44\x25\xaa\x03\x74\xf3\xd9\xa7\x6b\xe7\x62\x23\x51\x90\x4e\xe1\xd3\xf5\x66\x1d\xe7\x78\x06\xe8\xee\xb3\x4f\xd7\xcd\x2d\x03\x91\x3d\x33\x03\x74\x6f\xce\x6f\x2c\xd1\x2c\x6f\xc2\xf5\x44\x70\xa5\x65\x99\xe8\x98\x85\x3c\x40\x77\xea\x7c\x16\xd4\xc4\xac\x4b\x90\x0a\x48\x4e\x23\xda\x75\x06\xe8\x76\x1d\x8b\xe5\x9c\xab\x3d\x48\x7c\xec\x65\x40\xf7\xa0\xe9\xed\x64\x6b\xf1\x8c\x76\x17\xcf\xd0\x5b\xdb\xc3\x7d\x8b\x67\x18\xb8\x05\xa8\x67\x7f\xfd\xde\xfd\xa7\xad\x63\xa7\x30\x2d\xe7\xf3\xa8\x8b\xe2\x86\x81\x93\x1d\x61\x99\x79\xa8\x86\x0b\x63\x0c\xbb\x11\x3a\x1e\x37\x70\x19\x55\x38\xa5\xb8\x6b\x2e\xc1\x24\xf7\xb7\x93\xad\xd3\x8a\xc7\xe1\x21\xab\xd5\xf7\xf6\x30\xca\x69\x50\xc8\x54\xed\x5b\x75\x34\xfb\x14\xb0\xc0\x59\x93\xbe\xdd\xc3\xdb\x89\xf1\x91\xd1\xb7\x1f\x0d\x03\x67\x4c\xf6\x43\x9d\x70\xd5\xd2\x30\x70\xb6\xa4\x0f\x6c\x57\x31\x23\x63\x8e\x61\xe0\x70\x49\x0f\x64\x7d\xe6\xb5\xa0\x92\xe6\xd0\xb9\xa3\xe4\x38\x38\xec\xbe\xa0\xb1\xfa\xb6\x16\x18\x85\x82\x4d\x4b\xeb\x7a\x63\x3c\xd2\xf1\x15\xdb\xf6\x86\xdb\x28\xc0\xe3\x0b\xb1\x53\xdb\x1e\x56\x46\x78\x97\xe1\x00\xdd\x8b\xc0\x05\xc9\x21\x65\xd4\x6a\xe3\xfd\xed\x24\x0a\x0c\xdb\x80\x50\xdd\xd2\xb1\x75\x0f\xca\x94\xc5\xb8\x82\xc0\xb9\xa3\x83\xf2\x34\x71\x72\x14\x14\xd6\x94\xb0\xe6\x78\xf9\x29\xde\x26\x70\xf2\xe8\x20\x6b\x55\xb9\xd8\xa4\x03\x51\x88\x58\x63\xd2\x22\xce\x58\xb5\x55\x1c\x8d\x89\xb5\x28\x35\x48\x93\x34\x15\x10\xba\xd6\x05\x03\x79\xfc\x9e\xd1\xe9\x6c\x62\x0d\x8d\x96\xac\x55\xd3\x96\xe9\x68\x5f\xeb\x37\xf8\x1e\xd6\x22\x7b\xfa\xe0\x24\x6e\xb1\x66\xa7\x23\x61\x97\xa5\x9e\x84\x8a\xb5\x3f\x2d\x6a\x75\xeb\xca\x29\xa8\xe8\x16\xdb\xae\x02\xd7\x8e\x2b\x76\x4b\x61\x38\x08\x54\x72\x0e\x31\x6b\xab\x02\x27\xb1\x7a\xbc\x45\x72\xbd\x5f\xd5\x75\x92\xd1\xb8\x58\xbb\xf4\x22\x85\x6e\x6f\xa5\x72\x37\x51\x68\x5b\xae\xb7\x5b\xa6\xb2\xe3\x77\x3c\x3a\xac\xe7\x93\x34\x27\x29\x53\xcf\x18\xa2\xb0\x86\xab\x7b\x5b\x35\x3c\xf7\x0b\xe2\x68\x02\xb0\x66\xcc\xce\xfb\x7f\x48\x28\x58\x33\xf7\x1f\x9d\x29\xac\x09\x74\xa9\x4d\xcf\xdd\xe9\x47\xa3\x62\x6d\x60\x7d\xdb\xd5\xf7\xc2\xc5\x5a\xc1\x3a\xe4\x3b\x19\x11\x7d\xaa\xd7\x0b\x54\x72\xd0\x94\x54\x3d\x69\x31\x86\x01\x7d\xbc\x77\xd7\xb9\x9d\x0c\x8c\x3e\xe7\xdb\x01\xaa\x35\x3d\x3a\x5b\x41\x1f\xf8\x0d\x0b\xba\xe7\xf2\x32\x0c\xf0\xf1\xb6\xce\x86\x2f\xa7\xc2\x1e\x1f\xa8\x75\xa6\xf7\x04\x5c\x74\xdb\xba\xd0\x04\xb8\xbd\xa0\x44\x15\x34\x81\x56\xe2\x51\xb0\x58\x3b\x45\xb3\x5c\x28\x4d\x66\x65\xe0\xa2\x46\x0c\x0e\xd6\x32\xd5\x51\x8a\x15\x6a\x54\x94\x32\xc0\x1a\x23\x7b\x4f\x2c\xd5\x34\x13\xf3\xd0\xa5\x59\x47\x40\xfa\x77\x29\xf6\x40\x02\xff\xb3\x84\x32\xfe\xd7\x40\x86\x03\xff\x12\xc4\xfd\xfa\x69\x5d\xdb\x92\x4a\x26\x4a\x65\xac\x80\x8a\x4b\x0c\x87\x11\xfd\xa4\x74\x09\x84\x71\x91\x46\x29\xe6\xf0\x78\xbb\x53\x88\xc2\xdd\xe6\x4d\x89\x95\x72\x14\xec\xf1\x56\xa7\x28\xd5\xc2\x36\x63\x44\xa3\x06\x36\x84\xfa\x9b\xc3\xae\x5b\x8d\x3d\xe6\xc2\xbd\xa6\x28\x3f\x59\xa9\x33\xdb\xbf\xbe\x55\x97\xbf\xdc\x2d\xcb\x7b\x87\xc7\x86\xa3\x77\x7b\xca\xf2\x81\xc3\x63\x3d\x65\x79\x67\x22\x7f\xb7\x24\x44\xc8\x2a\x70\x0c\xa4\x07\xc8\x75\xcf\xfc\x4e\xd3\x78\x2c\x3f\xcf\xda\xfb\x73\x24\xd5\x4f\x5a\x1c\x83\xd7\x4c\xcb\x67\x31\xf7\x7f\x4e\x65\x77\x4e\x2e\xbd\x39\xd9\xb7\x55\x32\x0a\x5c\x00\x17\xee\xf0\x65\x99\x06\x49\xd4\x8a\x6b\xda\x77\x37\x21\x42\x5a\x97\xf8\x46\xf7\x0a\xd1\xa5\xa6\xae\xe4\x50\x50\xbd\x88\x42\x45\xee\x22\xb4\xbd\xa3\x99\x98\x9f\xd9\x47\x5d\x7e\xa4\x8f\x36\xfe\xed\x2f\xe2\x3c\x7c\xa5\x7a\x71\xc6\x97\xf9\x6c\xff\x16\xf1\xc8\xdb\xe5\x1a\xbd\xed\xdb\x6e\xae\x06\x9d\x49\x7b\xad\xe6\x81\x7e\xcb\x91\xf7\x0b\x3b\xa3\xde\xad\xf1\x6a\xe0\x29\x4d\x9e\x0f\x8f\xeb\xed\x8f\x8f\x76\x7f\x9c\xa3\x19\xd7\xf5\x63\xed\x8e\xb7\x33\xe0\xd8\x93\xc0\x78\x5f\x1b\xd5\x18\xfd\x6b\x1f\x93\xaf\x57\xd7\x37\xdb\xdf\xa1\xb5\x67\x1c\xf8\xa5\x8f\x83\xf6\xbe\xce\x9d\xb6\x6e\xf0\xeb\x64\x32\xd5\x85\x80\xa1\xfb\x05\xf7\xd0\x71\xbc\x7f\x3d\x44\xc7\x82\xcd\x17\x20\x49\x21\x99\xb0\x77\x52\xfd\x21\xa6\x44\x95\xc9\x82\x50\x55\xf7\xd2\x31\x6e\xfd\x48\xdd\x53\xcb\xf8\x3c\x74\xba\x46\xef\x5c\x60\x48\xc9\xcb\xa2\x2d\x26\x74\x78\x38\xde\x65\xa3\x24\x59\x87\x84\xcd\x21\x8d\x7d\x62\xed\x34\x96\x70\x3a\x07\x7b\xdb\xc3\x44\xd3\xe4\xf9\xc7\xfb\xf1\x7f\xff\xe4\x29\xe9\xee\x0f\x56\xbd\xf5\x7f\x94\xa6\xfd\xa8\xe7\x27\xab\xb0\xc1\xdf\x04\xb8\x95\x78\xcf\x75\x88\xd5\xcf\xfb\x31\xc1\xeb\xcf\x9a\x03\xb1\x5f\x1f\x26\xb6\x3b\x7b\x97\xa7\xc0\x64\x49\x70\xdd\x92\x5f\x1f\x26\x3e\xa9\xe8\x9d\x8b\x7f\x2a\xc1\x77\x3a\x89\x1a\x3a\xef\x69\x75\x7f\xe4\x3f\x55\xa8\xe9\x94\x7c\x53\x50\x35\x0d\xd8\x51\x5c\x91\xd5\xa7\x05\x5d\xc3\xbc\x6e\xe5\xf2\xff\x29\xb9\xff\x0b\x00\x00\xff\xff\x7d\xcf\xcc\x81\xb4\x73\x00\x00")

func ResourcesEventsYamlBytes() ([]byte, error) {
	return bindataRead(
		_ResourcesEventsYaml,
		"../resources/events.yaml",
	)
}

func ResourcesEventsYaml() (*asset, error) {
	bytes, err := ResourcesEventsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../resources/events.yaml", size: 29620, mode: os.FileMode(420), modTime: time.Unix(1594707378, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../resources/events.yaml": ResourcesEventsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"resources": &bintree{nil, map[string]*bintree{
			"events.yaml": &bintree{ResourcesEventsYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
