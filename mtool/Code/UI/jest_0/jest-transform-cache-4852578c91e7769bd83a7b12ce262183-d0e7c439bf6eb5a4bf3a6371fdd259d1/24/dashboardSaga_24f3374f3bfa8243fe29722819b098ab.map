{"version":3,"sources":["dashboardSaga.js"],"names":["fetchVolumeInfo","response","axios","get","headers","Accept","localStorage","getItem","result","data","message","actionCreators","fetchVolumes","enableFetchingAlerts","error","defaultResponse","fetchAlertsInfo","fetchAlerts","alerts","fetchStorageInfo","Date","now","fetchStorage","avail_size","total_size","arraySize","fetchPerformanceInfo","fetchPerformance","Math","round","iops_read","iops_write","bw_total","fetchIpAndMacInfo","fetchIpAndMac","ip","mac","host","dashboardWatcher","actionTypes","SAGA_FETCH_VOLUME_INFO","SAGA_FETCH_ALERTS_INFO","SAGA_FETCH_STORAGE_INFO","SAGA_FETCH_PERFORMANCE_INFO","SAGA_FETCH_IPANDMAC_INFO"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <Contains Generator Functions for Dashboard component> *\n@NAME : dashboardSaga.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport axios from 'axios';\nimport { call, takeEvery, put,cancelled } from 'redux-saga/effects';\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as actionCreators from \"../store/actions/exportActionCreators\";\n\n\nexport function* fetchVolumeInfo() {\n    try {\n        const response = yield call([axios, axios.get], '/api/v1.0/get_volumes/',{ \n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n\n        const result = response.data;\n        if (result && !result.message) {\n            yield put(actionCreators.fetchVolumes(result));\n        }\n        yield put(actionCreators.enableFetchingAlerts(false));\n    }\n    catch (error) {\n       const defaultResponse = [];\n       yield put(actionCreators.fetchVolumes(defaultResponse));\n       yield put(actionCreators.enableFetchingAlerts(false));\n    }\n    finally {\n        if(yield cancelled())\n        {\n            const defaultResponse = [];\n            yield put(actionCreators.fetchVolumes(defaultResponse));\n            yield put(actionCreators.enableFetchingAlerts(false));\n        }\n    }\n}\n\nexport function* fetchAlertsInfo() {\n    try {\n        const response = yield call([axios, axios.get], \"/api/v1.0/get_alert_info\",{ \n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchAlerts(result.alerts));\n        }\n    }\n    catch (error) {\n        // console.log(error);\n    }\n}\n\nfunction* fetchStorageInfo() {\n    try {\n        const response = yield call([axios, axios.get], `/api/v1.0/available_storage/?ts=${Date.now()}`,{ \n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchStorage(\n                result[0] ? ((result[0].avail_size / result[0].total_size) * 100) : 0,\n                result[0].total_size - result[0].avail_size,\n                result[0].avail_size,\n                result[0].arraySize\n            ));\n        }\n    }\n    catch (error) {\n        // console.log(error);\n    }\n}\n\nfunction* fetchPerformanceInfo() {\n    try {\n        const response = yield call([axios, axios.get], `/api/v1.0/perf/all?ts=${Date.now()}`,{ \n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchPerformance(\n                Math.round(result.iops_read),\n                Math.round(result.iops_write),\n                Math.round((result.bw_total / (1000 * 1000)) * 100) / 100\n            ));\n        }\n    }\n    catch (error) {\n        // console.log(error);\n    }\n}\n\n\nfunction* fetchIpAndMacInfo() {\n    try {\n        const response = yield call([axios, axios.get], \"/api/v1.0/get_ip_and_mac\",{ \n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchIpAndMac(\n                result.ip, result.mac, result.host\n            ));\n        }\n    }\n    catch (error) {\n       // console.log(error);\n    }\n}\n\nexport function* dashboardWatcher() {\n    yield takeEvery(actionTypes.SAGA_FETCH_VOLUME_INFO, fetchVolumeInfo);\n    yield takeEvery(actionTypes.SAGA_FETCH_ALERTS_INFO, fetchAlertsInfo);\n    yield takeEvery(actionTypes.SAGA_FETCH_STORAGE_INFO, fetchStorageInfo);\n    yield takeEvery(actionTypes.SAGA_FETCH_PERFORMANCE_INFO, fetchPerformanceInfo);\n    yield takeEvery(actionTypes.SAGA_FETCH_IPANDMAC_INFO, fetchIpAndMacInfo);\n   // console.log(\"This is async operation\");\n}\n"]}