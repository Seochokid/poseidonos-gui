{"version":3,"sources":["index.test.js"],"names":["jest","unmock","describe","wrapper","mock","history","store","beforeEach","sagaMiddleware","rootReducers","headerReducer","configurationsettingReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","run","rootSaga","route","initialEntries","MockAdapter","axios","renderComponent","afterEach","cleanup","it","asFragment","getByTestId","getByText","getByPlaceholderText","fireEvent","click","oldPwd","expect","toBeDefined","keyDown","key","code","charCode","change","target","value","newPwd","confPwd","spyOn","global","mockImplementation","Promise","resolve","status","json","innerWidth","innerHeight","dispatchEvent","Event","toMatchSnapshot"],"mappings":"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","sourcesContent":["/* eslint-disable import/imports-first */\n/* eslint-disable import/first */\n\njest.unmock('axios');\n\nimport axios from \"axios\";\nimport MockAdapter from \"axios-mock-adapter\";\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { render, fireEvent, cleanup, waitForElement, getByPlaceholderText, getByText } from '@testing-library/react';\nimport { createMemoryHistory } from 'history';\nimport '@testing-library/jest-dom/extend-expect';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { act } from \"react-dom/test-utils\";\nimport Header from './index';\nimport headerReducer from '../../store/reducers/headerReducer';\nimport configurationsettingReducer from '../../store/reducers/configurationsettingReducer';\nimport rootSaga from \"../../sagas/indexSaga\";\nimport { async } from \"q\";\n\n\ndescribe('<Header />', () => {\n  let wrapper;\n  let mock;\n  let history;\n  let store;\n  beforeEach(() => {\n    const sagaMiddleware = createSagaMiddleware();\n    const rootReducers = combineReducers({\n      headerReducer,\n      configurationsettingReducer\n    });\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    store = createStore(rootReducers, composeEnhancers(applyMiddleware(sagaMiddleware)))\n    sagaMiddleware.run(rootSaga);\n    const route = '/';\n    history = createMemoryHistory({ initialEntries: [route] })\n    mock = new MockAdapter(axios);\n  });\n\n  const renderComponent = () => {\n    wrapper = render(\n      <Router history={history}>\n        <Provider store={store}>\n          <Header />\n        </Provider>\n      </Router>\n    );\n  }\n\n  afterEach(cleanup);\n\n  it(\"should render Change Password dialogue\", async () => {\n    renderComponent();\n    const  { asFragment, getByTestId, getByText, getByPlaceholderText } = wrapper;\n    fireEvent.click(getByTestId('header-dropdown'));\n    fireEvent.click(await waitForElement(() => getByText('Change Password')));\n    const oldPwd = await waitForElement(() => getByPlaceholderText(\"Enter Old Password\"));\n    expect(oldPwd).toBeDefined();\n    // expect(asFragment()).toMatchSnapshot();\n    fireEvent.click(await waitForElement(() => getByText('Poseidon OS status:')));\n  });\n\n  it(\"should change the Password\", async () => {\n    renderComponent();\n    const  { asFragment, getByTestId, getByText, getByPlaceholderText } = wrapper;\n    fireEvent.click(getByTestId('header-dropdown'));\n    fireEvent.click(await waitForElement(() => getByText('Change Password')));\n    const oldPwd = await waitForElement(() => getByPlaceholderText(\"Enter Old Password\"));\n    fireEvent.keyDown(oldPwd, { key: 'A', code: 65, charCode: 65 });\n    fireEvent.change(oldPwd, {target: {value: \"abcd\"}});\n    const newPwd = await waitForElement(() => getByPlaceholderText(\"Enter New Password\"));\n    fireEvent.keyDown(newPwd, { key: 'D', code: 68, charCode: 68 });\n    fireEvent.change(newPwd, {target: {value: \"defg\"}});\n    const confPwd = await waitForElement(() => getByPlaceholderText(\"Confirm New Password\"));\n    fireEvent.keyDown(confPwd, { key: 'D', code: 68, charCode: 68 });\n    fireEvent.change(confPwd, {target: {value: \"defg\"}});\n    jest.spyOn(global, 'fetch')\n    .mockImplementation(() => Promise.resolve({\n      status: 200,\n      json: () => Promise.resolve({\n        value: \"\"\n      })\n    }));\n    fireEvent.click(await waitForElement(() => getByTestId(\"change-pwd-submit\")));\n  });\n\n  it(\"should redirect if user session ended\", async () => {\n    renderComponent();\n    const  { asFragment, getByTestId, getByText, getByPlaceholderText } = wrapper;\n    fireEvent.click(getByTestId('header-dropdown'));\n    fireEvent.click(await waitForElement(() => getByText('Change Password')));\n    const oldPwd = await waitForElement(() => getByPlaceholderText(\"Enter Old Password\"));\n    fireEvent.keyDown(oldPwd, { key: 'A', code: 65, charCode: 65 });\n    fireEvent.change(oldPwd, {target: {value: \"abcd\"}});\n    const newPwd = await waitForElement(() => getByPlaceholderText(\"Enter New Password\"));\n    fireEvent.keyDown(newPwd, { key: 'D', code: 68, charCode: 68 });\n    fireEvent.change(newPwd, {target: {value: \"defg\"}});\n    const confPwd = await waitForElement(() => getByPlaceholderText(\"Confirm New Password\"));\n    fireEvent.keyDown(confPwd, { key: 'D', code: 68, charCode: 68 });\n    fireEvent.change(confPwd, {target: {value: \"defg\"}});\n    jest.spyOn(global, 'fetch')\n    .mockImplementation(() => Promise.resolve({\n      status: 401,\n      json: () => Promise.resolve({\n        value: \"\"\n      })\n    }));\n    fireEvent.click(await waitForElement(() => getByTestId(\"change-pwd-submit\")));\n  });\n\n  it(\"should throw error if password change failed\", async () => {\n    renderComponent();\n    const  { asFragment, getByTestId, getByText, getByPlaceholderText } = wrapper;\n    fireEvent.click(getByTestId('header-dropdown'));\n    fireEvent.click(await waitForElement(() => getByText('Change Password')));\n    const oldPwd = await waitForElement(() => getByPlaceholderText(\"Enter Old Password\"));\n    fireEvent.keyDown(oldPwd, { key: 'A', code: 65, charCode: 65 });\n    fireEvent.change(oldPwd, {target: {value: \"abcd\"}});\n    const newPwd = await waitForElement(() => getByPlaceholderText(\"Enter New Password\"));\n    fireEvent.keyDown(newPwd, { key: 'D', code: 68, charCode: 68 });\n    fireEvent.change(newPwd, {target: {value: \"defg\"}});\n    const confPwd = await waitForElement(() => getByPlaceholderText(\"Confirm New Password\"));\n    fireEvent.keyDown(confPwd, { key: 'D', code: 68, charCode: 68 });\n    fireEvent.change(confPwd, {target: {value: \"defg\"}});\n    jest.spyOn(global, 'fetch')\n    .mockImplementation(() => Promise.resolve({\n      status: 400,\n      json: () => Promise.resolve({\n        value: \"\"\n      })\n    }));\n    fireEvent.click(await waitForElement(() => getByTestId(\"change-pwd-submit\")));\n    expect(await waitForElement(() => getByText(\"Error in setting Password\"))).toBeDefined();\n  });\n\n  it(\"should show error when old password is not entered\", async () => {\n    renderComponent();\n    const  { asFragment, getByTestId, getByText, getByPlaceholderText } = wrapper;\n    fireEvent.click(getByTestId('header-dropdown'));\n    fireEvent.click(await waitForElement(() => getByText('Change Password')));\n    await waitForElement(() => getByPlaceholderText(\"Enter Old Password\"));\n    fireEvent.click(await waitForElement(() => getByTestId(\"change-pwd-submit\")));\n    fireEvent.click(await waitForElement(() => getByText('OK')));\n  });\n\n  it(\"should show error when new password is not entered\", async () => {\n    renderComponent();\n    const  { asFragment, getByTestId, getByText, getByPlaceholderText } = wrapper;\n    fireEvent.click(getByTestId('header-dropdown'));\n    fireEvent.click(await waitForElement(() => getByText('Change Password')));\n    const oldPwd = await waitForElement(() => getByPlaceholderText(\"Enter Old Password\"));\n    fireEvent.change(oldPwd, {target: {value: \"abcd\"}});\n    fireEvent.click(await waitForElement(() => getByTestId(\"change-pwd-submit\")));\n    fireEvent.click(await waitForElement(() => getByText('OK')));\n  });\n\n  it(\"should show error when confirm password is not entered\", async () => {\n    renderComponent();\n    const  { asFragment, getByTestId, getByText, getByPlaceholderText } = wrapper;\n    fireEvent.click(getByTestId('header-dropdown'));\n    fireEvent.click(await waitForElement(() => getByText('Change Password')));\n    const oldPwd = await waitForElement(() => getByPlaceholderText(\"Enter Old Password\"));\n    fireEvent.change(oldPwd, {target: {value: \"abcd\"}});\n    const newPwd = await waitForElement(() => getByPlaceholderText(\"Enter New Password\"));\n    fireEvent.change(newPwd, {target: {value: \"defg\"}});\n    fireEvent.click(await waitForElement(() => getByTestId(\"change-pwd-submit\")));\n    fireEvent.click(await waitForElement(() => getByText('OK')));\n  });\n\n  it(\"should show error when new password and confirm password do not match\", async () => {\n    renderComponent();\n    const  { asFragment, getByTestId, getByText, getByPlaceholderText } = wrapper;\n    fireEvent.click(getByTestId('header-dropdown'));\n    fireEvent.click(await waitForElement(() => getByText('Change Password')));\n    const oldPwd = await waitForElement(() => getByPlaceholderText(\"Enter Old Password\"));\n    fireEvent.change(oldPwd, {target: {value: \"abcd\"}});\n    const newPwd = await waitForElement(() => getByPlaceholderText(\"Enter New Password\"));\n    fireEvent.change(newPwd, {target: {value: \"deg\"}});\n    const confPwd = await waitForElement(() => getByPlaceholderText(\"Confirm New Password\"));\n    fireEvent.change(confPwd, {target: {value: \"defg\"}});\n    fireEvent.click(await waitForElement(() => getByTestId(\"change-pwd-submit\")));\n    expect(await waitForElement(() => getByText(\"Passwords do not match\"))).toBeDefined();\n  });\n\n  it(\"should toggle the menu\", async () => {\n    window.innerWidth = 500\n    window.innerHeight = 200\n    window.dispatchEvent(new Event('resize'));\n    renderComponent();\n    const { getByText, asFragment, getByTestId } = wrapper;\n    fireEvent.click(await waitForElement(() => getByTestId('sidebar-toggle')));\n    // expect(await waitForElement(() => getByText('Dashboard'))).toBeDefined();\n    fireEvent.click(await waitForElement(() => getByTestId('mobile-show-more')));\n    fireEvent.click(await waitForElement(() => getByTestId('menu-expand')));\n    fireEvent.click(await waitForElement(() => getByText('Poseidon OS status:')));\n    expect(asFragment()).toMatchSnapshot();\n    // const dashboardLink = expect(await waitForElement(() => getByText('Poseidon OS status:')));\n    // fireEvent.click(dashboardLink);\n  });\n\n//   it(\"should adjust the dropdown position\", async () => {\n//     renderComponent();\n//     const { getByText, asFragment } = wrapper;\n//     window.innerWidth = 100\n//     window.innerHeight = 200\n//     window.dispatchEvent(new Event('resize'));\n//     expect(asFragment()).toMatchSnapshot();\n//     const dashboardLink = expect(await waitForElement(() => getByText('Poseidon OS status:')));\n//     fireEvent.click(dashboardLink);\n//   });\n});"]}