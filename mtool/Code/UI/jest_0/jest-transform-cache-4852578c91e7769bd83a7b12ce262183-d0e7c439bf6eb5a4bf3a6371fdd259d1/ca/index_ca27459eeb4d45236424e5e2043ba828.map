{"version":3,"sources":["index.js"],"names":["styles","alertTypesOuterGrid","border","maxWidth","overflowY","overflowX","minHeight","maxHeight","background","alertTypesInnerGrid","alertTypesHeader","backgroundColor","color","paddingLeft","paddingTop","fontSize","height","AlertTypes","props","classes","alertClusterList","map","cluster","i","_id","name","selectAlertCluster","alertSubCluster","subcluster","j","selectAlertSubCluster","root","alertTypes","type","selected","alertTypeSelected","withStyles"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Alert Management Component for selecting Alert Types\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport React from 'react';\nimport TreeView from '@material-ui/lab/TreeView';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport TreeItem from \"@material-ui/lab/TreeItem\";\nimport { FormControlLabel, Checkbox, FormGroup, Grid, Typography, withStyles } from '@material-ui/core';\nimport './AlertTypes.css';\n\nconst styles = (() => {\n  return ({\n    alertTypesOuterGrid: {\n      border: '1px solid gray',\n      maxWidth: '100%',\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      minHeight: '130px',\n      maxHeight: '130px',\n      background: '#fff'\n    },\n    alertTypesInnerGrid: {\n      maxWidth: '100%',\n    },\n    alertTypesHeader: {\n      backgroundColor: '#788595',\n      color: 'white',\n      paddingLeft: '5px',\n      paddingTop: '3px',\n      fontSize: '14px',\n      height: '25px',\n    }\n  })\n});\nconst AlertTypes = props => {\n  const { classes } = props;\n  return (\n    <Grid sm={6} xs={12} data-testid=\"AlertsTypesTag\" item container>\n      <Grid xs={12} item className={classes.alertTypesOuterGrid}>\n        <Typography className={classes.alertTypesHeader} variant=\"h6\">Alert Types</Typography>\n        <Grid sm={6} xs={12} item className={classes.alertTypesInnerGrid}>\n          {props.alertClusterList\n            ? props.alertClusterList.map((cluster, i) => {\n              return (\n                <TreeView\n                  key={cluster._id}\n                  defaultCollapseIcon={<ExpandMoreIcon />}\n                  defaultExpandIcon={<ChevronRightIcon />}\n                  data-testid=\"ClusterTag\"\n                >\n                  <TreeItem nodeId={cluster.name} label={cluster.name}\n                    role=\"treeitem\"\n                    onClick={() => {\n                      props.selectAlertCluster(cluster, i)\n                    }\n                    }\n                  >\n                    {cluster.alertSubCluster\n                      ? cluster.alertSubCluster.map((subcluster, j) => {\n                        return (\n                          <TreeItem key={subcluster.name} nodeId={subcluster.name} label={subcluster.name} role=\"subtreeitem\" onClick={() => {\n                            props.selectAlertSubCluster(cluster.name, subcluster, i);\n                          }}\n                          >\n                            <FormGroup row={false} root={classes.root}>\n                              {subcluster.alertTypes.map(type => {\n                                return (\n                                  <FormControlLabel\n                                    key={type.type}\n                                    control={<Checkbox checked={!(!type.selected)} onChange={() => props.alertTypeSelected(type, i, j)} />}\n                                    label={type.type}\n                                    data-testid = \"alertTypesCheckbox\" \n                                    role=\"formControl\"\n                                    labelPlacement=\"end\"\n                                  />\n\n                                );\n\n                              })}\n                            </FormGroup>\n                          </TreeItem>\n                        );\n                      }) : null}\n                  </TreeItem>\n                </TreeView>\n              );\n            })\n            : null}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(AlertTypes);\n"]}