{"version":3,"sources":["performanceSaga.js"],"names":["extractValues","data","length","push","value","time","Date","now","fetchInputPowerVariation","action","response","call","axios","get","payload","result","message","put","actionCreators","res","error","cancelled","fetchCpuUsage","values","forEach","r","mean_usage_user","fetchReadBandwidth","level","fetchVolReadBandwidth","fetchWriteBandwidth","fetchVolWriteBandwidth","fetchReadIops","fetchVolReadIops","fetchWriteIops","fetchVolWriteIops","fetchLatency","fetchVolLatency","performanceWatcher","takeEvery","actionTypes","SAGA_FETCH_CPU_USAGE","SAGA_FETCH_READ_BANDWIDTH","SAGA_FETCH_WRITE_BANDWIDTH","SAGA_FETCH_READ_IOPS","SAGA_FETCH_WRITE_IOPS","SAGA_FETCH_LATENCY","SAGA_FETCH_INPUT_POWER_VARIATION"],"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <Contains Generator Functions for Performance component> *\n@NAME : performanceSaga.js\n@AUTHORS: Aswin K K \n@Version : 1.0 *\n@REVISION HISTORY\n[27/08/2019] [Aswin K K] : Prototyping..........////////////////////\n*/\n\nimport axios from \"axios\";\nimport { call, takeEvery, put, cancelled } from \"redux-saga/effects\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as actionCreators from \"../store/actions/exportActionCreators\";\n\nfunction extractValues(data) {\n  if (data.length === 0) {\n    data.push({\n      value: 0,\n      time: new Date()\n    });\n    data.push({\n        value: 0,\n        time: new Date(Date.now() - 10000)\n    });\n  }\n  return data;\n}\n\n// function* fetchDiskUsed(action) {\n//     try {\n//         const response = yield call([axios, axios.get], `/api/v1.0/disk_used_percent/${action.payload.time}/array`);\n\n//         const result = response.data;\n//         if (result && !result.message) {\n//             const values = [];\n//             result.forEach((r) => {\n//                 if (r.used_percent !== null) {\n//                     values.push({\n//                         value: r.used_percent,\n//                         time: r.time\n//                     })\n//                 }\n//             });\n//             yield put(actionCreators.fetchDiskUsed(result));\n//         } else {\n//             yield put(actionCreators.fetchDiskUsed([]));\n//         }\n//     }\n//     catch (error) {\n//         yield put(actionCreators.fetchDiskUsed([]));\n//     }\n//     finally {\n//         if (yield cancelled()) {\n//             yield put(actionCreators.fetchDiskUsed([]));\n//         }\n//     }\n// }\n\n// function* fetchDiskWrite(action) {\n//     try {\n//         const response = yield call([axios, axios.get], `/api/v1.0/disk_write_mbps/${action.payload.time}/array`);\n\n//         const result = response.data;\n//         if (result && !result.message) {\n//             const values = [];\n//             result.forEach((r) => {\n//                 if (r.write_megabytes_per_second !== null) {\n//                     values.push({\n//                         value: r.write_megabytes_per_second,\n//                         time: r.time\n//                     })\n//                 }\n//             });\n//             yield put(actionCreators.fetchDiskWrite(values));\n//         } else {\n//             yield put(actionCreators.fetchDiskWrite([]));\n//         }\n//     }\n//     catch (error) {\n//         yield put(actionCreators.fetchDiskWrite([]));\n//     }\n//     finally {\n//         if (yield cancelled()) {\n//             yield put(actionCreators.fetchDiskWrite([]));\n//         }\n//     }\n// }\n\nexport function* fetchInputPowerVariation(action) {\n    try {\n      const response = yield call(\n        [axios, axios.get],\n        `/api/v1.0/get_input_power_variation/${action.payload.time}`\n      );\n      const result = response.data;\n      if (result && !result.message) {\n        yield put(actionCreators.fetchInputPowerVariation(extractValues(result.res)));\n      } else {\n        yield put(actionCreators.fetchInputPowerVariation([]));\n      }\n    } catch (error) {\n      yield put(actionCreators.fetchInputPowerVariation([]));\n    } finally {\n      if (yield cancelled()) {\n        yield put(actionCreators.fetchInputPowerVariation([]));\n      }\n    }\n  }\n\nexport function* fetchCpuUsage(action) {\n  // console.log(\"fetchCpuUsage\")\n  try {\n    const response = yield call(\n      [axios, axios.get],\n      `/api/v1.0/usage_user/${action.payload.time}`\n    );\n    const result = response.data;\n    if (result && !result.message) {\n      const values = [];\n      result.forEach(r => {\n        if (r.mean_usage_user !== null) {\n          values.push({\n            value: r.mean_usage_user,\n            time: r.time\n          });\n        }\n      });\n      yield put(actionCreators.fetchCpuUsage(values));\n    } else {\n      yield put(actionCreators.fetchCpuUsage([]));\n    }\n  } catch (error) {\n    yield put(actionCreators.fetchCpuUsage([]));\n  } finally {\n    if (yield cancelled()) {\n      yield put(actionCreators.fetchCpuUsage([]));\n    }\n  }\n}\n\nexport function* fetchReadBandwidth(action) {\n  try {\n    const response = yield call(\n      [axios, axios.get],\n      `/api/v1.0/bw_read/${action.payload.time}/${action.payload.level}`\n    );\n\n        const result = response.data;\n        if (result && !result.message) {\n            if (action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadBandwidth(extractValues(result.res)));\n            } else {\n                yield put(actionCreators.fetchVolReadBandwidth({values: extractValues(result.res), ...action.payload}));\n            }\n        } else if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadBandwidth([]));\n            } else {\n                yield put(actionCreators.fetchVolReadBandwidth({values: [], ...action.payload}));\n            }\n    }\n    catch (error) {\n        if(action.payload.level === \"array\") {\n            yield put(actionCreators.fetchReadBandwidth([]));\n        } else {\n            yield put(actionCreators.fetchVolReadBandwidth({values: [], ...action.payload}));\n        }\n    }\n    finally {\n        if (yield cancelled()) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadBandwidth([]));\n            } else {\n                yield put(actionCreators.fetchVolReadBandwidth({values: [], ...action.payload}));\n            }\n        }\n    }\n}\n\nfunction* fetchWriteBandwidth(action) {\n    try {\n        const response = yield call([axios, axios.get], `/api/v1.0/bw_write/${action.payload.time}/${action.payload.level}`);\n\n        const result = response.data;\n        if (result && !result.message) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteBandwidth(extractValues(result.res)));\n            } else {\n                yield put(actionCreators.fetchVolWriteBandwidth({values: extractValues(result.res), ...action.payload}));\n            }\n        } else if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteBandwidth([]));\n            } else {\n                yield put(actionCreators.fetchVolWriteBandwidth({values: [], ...action.payload}))\n            }\n    }\n    catch (error) {\n        if(action.payload.level === \"array\") {\n            yield put(actionCreators.fetchWriteBandwidth([]));\n        } else {\n            yield put(actionCreators.fetchVolWriteBandwidth({values: [], ...action.payload}))\n        }\n    }\n    finally {\n        // console.log(\"finally\")\n        if (yield cancelled()) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteBandwidth([]));\n            } else {\n                yield put(actionCreators.fetchVolWriteBandwidth({values: [], ...action.payload}))\n            }\n        }\n    }\n}\n\nexport function* fetchReadIops(action) {\n  try {\n    const response = yield call(\n      [axios, axios.get],\n      `/api/v1.0/iops_read/${action.payload.time}/${action.payload.level}`\n    );\n\n        const result = response.data;\n        if (result && !result.message) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadIops(extractValues(result.res)));\n            } else {\n                yield put(actionCreators.fetchVolReadIops({values: extractValues(result.res), ...action.payload}));\n            }\n        } else if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadIops([]));\n            } else {\n                yield put(actionCreators.fetchVolReadIops({values: [], ...action.payload}))\n            }\n    }\n    catch (error) {\n        if(action.payload.level === \"array\") {\n            yield put(actionCreators.fetchReadIops([]));\n        } else {\n            yield put(actionCreators.fetchVolReadIops({values: [], ...action.payload}))\n        }\n    }\n    finally {\n        if (yield cancelled()) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadIops([]));\n            } else {\n                yield put(actionCreators.fetchVolReadIops({values: [], ...action.payload}))\n            }\n        }\n    }\n}\n\nexport function* fetchWriteIops(action) {\n  try {\n    const response = yield call(\n      [axios, axios.get],\n      `/api/v1.0/iops_write/${action.payload.time}/${action.payload.level}`\n    );\n\n        const result = response.data;\n        if (result && !result.message) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteIops(extractValues(result.res)));\n            } else {\n                yield put(actionCreators.fetchVolWriteIops({values: extractValues(result.res), ...action.payload}));\n            }\n        } else if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteIops([]));\n            } else {\n                yield put(actionCreators.fetchVolWriteIops({values: [], ...action.payload}))\n            }\n    }\n    catch (error) {\n        if(action.payload.level === \"array\") {\n            yield put(actionCreators.fetchWriteIops([]));\n        } else {\n            yield put(actionCreators.fetchVolWriteIops({values: [], ...action.payload}))\n        }\n    }\n    finally {\n        if (yield cancelled()) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteIops([]));\n            } else {\n                yield put(actionCreators.fetchVolWriteIops({values: [], ...action.payload}))\n            }\n        }\n    }\n}\n\n\nexport function* fetchLatency(action) {\n    try {\n      const response = yield call(\n        [axios, axios.get],\n        `/api/v1.0/latency/${action.payload.time}/${action.payload.level}`\n      );\n  \n          const result = response.data;\n          if (result && !result.message) {\n              if(action.payload.level === \"array\") {\n                  yield put(actionCreators.fetchLatency(extractValues(result.res)));\n              } else {\n                  yield put(actionCreators.fetchVolLatency({values: extractValues(result.res), ...action.payload}));\n              }\n          } else if(action.payload.level === \"array\") {\n                  yield put(actionCreators.fetchLatency([]));\n              } else {\n                  yield put(actionCreators.fetchVolLatency({values: [], ...action.payload}))\n              }\n      }\n      catch (error) {\n          if(action.payload.level === \"array\") {\n              yield put(actionCreators.fetchLatency([]));\n          } else {\n              yield put(actionCreators.fetchVolLatency({values: [], ...action.payload}))\n          }\n      }\n      finally {\n          if (yield cancelled()) {\n              if(action.payload.level === \"array\") {\n                  yield put(actionCreators.fetchLatency([]));\n              } else {\n                  yield put(actionCreators.fetchVolLatency({values: [], ...action.payload}))\n              }\n          }\n      }\n  }\n  \n\nexport default function* performanceWatcher() {\n  // yield takeEvery(actionTypes.SAGA_FETCH_DISK_USED, fetchDiskUsed);\n  // yield takeEvery(actionTypes.SAGA_FETCH_DISK_WRITE, fetchDiskWrite);\n  yield takeEvery(actionTypes.SAGA_FETCH_CPU_USAGE, fetchCpuUsage);\n  yield takeEvery(actionTypes.SAGA_FETCH_READ_BANDWIDTH, fetchReadBandwidth);\n  yield takeEvery(actionTypes.SAGA_FETCH_WRITE_BANDWIDTH, fetchWriteBandwidth);\n  yield takeEvery(actionTypes.SAGA_FETCH_READ_IOPS, fetchReadIops);\n  yield takeEvery(actionTypes.SAGA_FETCH_WRITE_IOPS, fetchWriteIops);\n  yield takeEvery(actionTypes.SAGA_FETCH_LATENCY, fetchLatency);\n  yield takeEvery(actionTypes.SAGA_FETCH_INPUT_POWER_VARIATION, fetchInputPowerVariation);\n}\n"]}