c3a654554caac8a99ca9b41992336efd
/* istanbul ignore next */
"use strict";

var cov_2c0tkvvb3l = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/headerLanguageReducer.js";
  var hash = "128c74160eae712ed5fa5e1f1d29963b3c39f235";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/headerLanguageReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "1": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 46,
          column: 1
        }
      },
      "2": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "3": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 42,
          column: 14
        }
      },
      "4": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 36,
            column: 31
          }
        },
        loc: {
          start: {
            line: 36,
            column: 65
          },
          end: {
            line: 46,
            column: 1
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 36,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 40
          },
          end: {
            line: 36,
            column: 52
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 42,
            column: 14
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 44,
            column: 25
          }
        }],
        line: 37
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "128c74160eae712ed5fa5e1f1d29963b3c39f235"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.initialState = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_2c0tkvvb3l.s[0]++, {
  lang: "en"
});

/* istanbul ignore next */
exports.initialState = initialState;
cov_2c0tkvvb3l.s[1]++;

const headerLanguageReducer = (state =
/* istanbul ignore next */
(cov_2c0tkvvb3l.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_2c0tkvvb3l.f[0]++;
  cov_2c0tkvvb3l.s[2]++;

  switch (action.type) {
    case actionTypes.CHANGE_LANGUAGE:
      /* istanbul ignore next */
      cov_2c0tkvvb3l.b[1][0]++;
      cov_2c0tkvvb3l.s[3]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          lang: action.val
        })
      );

    default:
      /* istanbul ignore next */
      cov_2c0tkvvb3l.b[1][1]++;
      cov_2c0tkvvb3l.s[4]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = headerLanguageReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlckxhbmd1YWdlUmVkdWNlci5qcyJdLCJuYW1lcyI6WyJpbml0aWFsU3RhdGUiLCJsYW5nIiwiaGVhZGVyTGFuZ3VhZ2VSZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiYWN0aW9uVHlwZXMiLCJDSEFOR0VfTEFOR1VBR0UiLCJ2YWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUE2QkE7QUFBQTtBQUFBOzs7Ozs7QUFFTyxNQUFNQSxZQUFZO0FBQUE7QUFBQSx3QkFBRztBQUN4QkMsRUFBQUEsSUFBSSxFQUFFO0FBRGtCLENBQUgsQ0FBbEI7Ozs7OztBQUlQLE1BQU1DLHFCQUFxQixHQUFHLENBQUVDLEtBQUs7QUFBQTtBQUFBLDJCQUFHSCxZQUFILENBQVAsRUFBd0JJLE1BQXhCLEtBQW1DO0FBQUE7QUFBQTtBQUFBOztBQUM3RCxVQUFTQSxNQUFNLENBQUNDLElBQWhCO0FBQ0ksU0FBS0MsV0FBVyxDQUFDQyxlQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUNJO0FBQUE7QUFBQSwwQkFDT0osS0FEUDtBQUVJRixVQUFBQSxJQUFJLEVBQUVHLE1BQU0sQ0FBQ0k7QUFGakI7QUFBQTs7QUFJSjtBQUFBO0FBQUE7QUFBQTtBQUNJLGFBQU9MLEtBQVA7QUFQUjtBQVNILENBVkQ7OztlQVllRCxxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgQ09QWVJJR0hUIChjKSAyMDE5IFNBTVNVTkcgRUxFQ1RST05JQ1MgQ08uLCBMVEQuICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgIEFMTCBSSUdIVFMgUkVTRVJWRUQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCB0byBsaWNlbnNlZXMgb2YgU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gICAgICAgIC9cbi8gICBwcm9kdWN0cyB0byB1c2Ugb3IgYWJzdHJhY3QgdGhpcyBjb21wdXRlciBwcm9ncmFtIGZvciB0aGUgc29sZSBwdXJwb3NlIG9mICAgICAgICAgL1xuLyAgIGltcGxlbWVudGluZyBhIHByb2R1Y3QgYmFzZWQgb24gU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gcHJvZHVjdHMuICAgICAgICAgICAvXG4vICAgTm8gb3RoZXIgcmlnaHRzIHRvIHJlcHJvZHVjZSwgdXNlLCBvciBkaXNzZW1pbmF0ZSB0aGlzIGNvbXB1dGVyIHByb2dyYW0sICAgICAgICAgIC9cbi8gICB3aGV0aGVyIGluIHBhcnQgb3IgaW4gd2hvbGUsIGFyZSBncmFudGVkLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyBcbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIG1ha2VzIG5vIHJlcHJlc2VudGF0aW9uIG9yIHdhcnJhbnRpZXMgd2l0aCAgICAgICAgICAvXG4vICAgcmVzcGVjdCB0byB0aGUgcGVyZm9ybWFuY2Ugb2YgdGhpcyBjb21wdXRlciBwcm9ncmFtLCBhbmQgc3BlY2lmaWNhbGx5IGRpc2NsYWltcyAgIC9cbi8gICBhbnkgcmVzcG9uc2liaWxpdHkgZm9yIGFueSBkYW1hZ2VzLCBzcGVjaWFsIG9yIGNvbnNlcXVlbnRpYWwsIGNvbm5lY3RlZCAgICAgICAgICAgL1xuLyAgIHdpdGggdGhlIHVzZSBvZiB0aGlzIHByb2dyYW0uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuXG5cbkRFU0NSSVBUSU9OOiA8Q29udGFpbnMgcmVkdWNlciBmdW5jdGlvbiBmb3IgQXV0aGVudGljYXRpb24gQ29udGFpbmVyPiAqXG5ATkFNRSA6IGhlYWRlckxhbmd1YWdlUmVkdWNlci5qc1xuQEFVVEhPUlM6IFBhbGFrIEthcG9vciBcbkBWZXJzaW9uIDogMS4wICpcbkBSRVZJU0lPTiBISVNUT1JZXG5bMDcvMDgvMjAxOV0gW1BhbGFrXSA6IFByb3RvdHlwaW5nLi4uLi4uLi4uLi8vLy8vLy8vLy8vLy8vLy8vLy8vXG4qL1xuXG5cblxuaW1wb3J0ICogYXMgYWN0aW9uVHlwZXMgZnJvbSBcIi4uL2FjdGlvbnMvYWN0aW9uVHlwZXNcIlxuXG5leHBvcnQgY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICAgIGxhbmc6IFwiZW5cIlxufTtcblxuY29uc3QgaGVhZGVyTGFuZ3VhZ2VSZWR1Y2VyID0gKCBzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uICk9PiB7XG4gICAgc3dpdGNoICggYWN0aW9uLnR5cGUgKSB7XG4gICAgICAgIGNhc2UgYWN0aW9uVHlwZXMuQ0hBTkdFX0xBTkdVQUdFOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgICAgICBsYW5nOiBhY3Rpb24udmFsXG4gICAgICAgICAgICB9O1xuICAgICAgICBkZWZhdWx0OiBcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBoZWFkZXJMYW5ndWFnZVJlZHVjZXI7Il19