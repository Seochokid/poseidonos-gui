d3552fa24c17d2c3e244943b7f2a381b
/* istanbul ignore next */
"use strict";

var cov_fidgz449q = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/hardwareOverviewReducer.js";
  var hash = "6b5129ec494c4bce62f74b78b952eb1e15b3d2d2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/hardwareOverviewReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "1": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "2": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "3": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 56,
          column: 14
        }
      },
      "4": {
        start: {
          line: 58,
          column: 30
        },
        end: {
          line: 58,
          column: 32
        }
      },
      "5": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 62,
          column: 58
        }
      },
      "6": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 40
        }
      },
      "7": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 58
        }
      },
      "8": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "9": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 73,
          column: 14
        }
      },
      "10": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 78,
          column: 14
        }
      },
      "11": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 44,
            column: 32
          },
          end: {
            line: 44,
            column: 33
          }
        },
        loc: {
          start: {
            line: 44,
            column: 66
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 41
          },
          end: {
            line: 44,
            column: 53
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 56,
            column: 14
          }
        }, {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 68,
            column: 14
          }
        }, {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 73,
            column: 14
          }
        }, {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 78,
            column: 14
          }
        }, {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 80,
            column: 25
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 62,
            column: 58
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 62,
            column: 58
          }
        }, {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 62,
            column: 58
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "6b5129ec494c4bce62f74b78b952eb1e15b3d2d2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_fidgz449q.s[0]++, {
  chassis_front_list: [],
  chassis_rear_list: [],
  model: '',
  manufacturer: '',
  servermac: '',
  serverip: '',
  firmwareversion: '',
  serialno: '',
  hostname: '',
  powerconsumption: 'Refreshing',
  powercap: 'Refreshing',
  powerstatus: 'Refreshing'
});

/* istanbul ignore next */
cov_fidgz449q.s[1]++;

const hardwareOverviewReducer = (state =
/* istanbul ignore next */
(cov_fidgz449q.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_fidgz449q.f[0]++;
  cov_fidgz449q.s[2]++;

  switch (action.type) {
    case actionTypes.HARDWARE_OVERVIEW_FETCH_SERVER_INFORMATION:
      /* istanbul ignore next */
      cov_fidgz449q.b[1][0]++;
      cov_fidgz449q.s[3]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          model: action.serverinfo.model,
          manufacturer: action.serverinfo.manufacturer,
          servermac: action.serverinfo.mac,
          serverip: action.serverinfo.ip,
          firmwareversion: action.serverinfo.firmwareversion,
          serialno: action.serverinfo.serialno,
          hostname: action.serverinfo.host
        })
      );

    case actionTypes.HARDWARE_OVERVIEW_FETCH_POWER_INFORMATION:
      /* istanbul ignore next */
      cov_fidgz449q.b[1][1]++;
      let powerstatus =
      /* istanbul ignore next */
      (cov_fidgz449q.s[4]++, '');

      /* istanbul ignore next */
      cov_fidgz449q.s[5]++;

      if (action.powerinfo.powerstatus === "On") {
        /* istanbul ignore next */
        cov_fidgz449q.b[2][0]++;
        cov_fidgz449q.s[6]++;
        powerstatus = 'Power On';
      } else {
        /* istanbul ignore next */
        cov_fidgz449q.b[2][1]++;
        cov_fidgz449q.s[7]++;
        powerstatus = action.powerinfo.powerstatus;
      }

      /* istanbul ignore next */
      cov_fidgz449q.s[8]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          powerconsumption: action.powerinfo.powerconsumption,
          powercap: action.powerinfo.powercap,
          powerstatus
        })
      );

    case actionTypes.HARDWARE_OVERVIEW_FETCH_CHASSIS_FRONT_INFORMATION:
      /* istanbul ignore next */
      cov_fidgz449q.b[1][2]++;
      cov_fidgz449q.s[9]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          chassis_front_list: action.frontinfo
        })
      );

    case actionTypes.HARDWARE_OVERVIEW_FETCH_CHASSIS_REAR_INFORMATION:
      /* istanbul ignore next */
      cov_fidgz449q.b[1][3]++;
      cov_fidgz449q.s[10]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          chassis_rear_list: action.rearinfo.rear_info
        })
      );

    default:
      /* istanbul ignore next */
      cov_fidgz449q.b[1][4]++;
      cov_fidgz449q.s[11]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = hardwareOverviewReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,