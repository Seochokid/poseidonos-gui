{"version":3,"sources":["BMCAuthenticationSaga.js"],"names":["bmc_login","action","response","call","axios","post","payload","data","localStorage","setItem","put","actionCreators","BMCSetIsLoggedIn","history","push","error","BMCSetLoginFailed","BMCAuthenticationWatcher","takeEvery","actionTypes","SAGA_BMC_LOGIN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIO,UAAUA,SAAV,CAAoBC,MAApB,EAA4B;AAAA;AAAA;AAAA;;AACjC,MAAI;AACF,UAAMC,QAAQ;AAAA;AAAA,4BAAG,MAAM;AAAA;AAAA;AAAAC;AAAAA;AAAAA;AAAAA,YACrB;AAACC;AAAAA;AAAAA;AAAAA,aAAD;AAAQA;AAAAA;AAAAA;AAAAA,cAAMC,IAAd,CADqB,EAErB,sBAFqB,EAGrBJ,MAAM,CAACK,OAHc;AAAN,KAAH,CAAd;;AADE;AAAA;;AAMF,QAAIJ,QAAQ,CAACK,IAAb,EAAmB;AAAA;AAAA;AAAA;AAChBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,IAArC,EADgB,CAEhB;AACA;;AAHgB;AAAA;AAIf,YAAM;AAAA;AAAA;AAAAC;AAAAA;AAAAA;AAAAA,aAAIC,cAAc,CAACC,gBAAf,EAAJ;AAAN;;AAJe;AAAA;AAKfX,MAAAA,MAAM,CAACY,OAAP,CAAeC,IAAf,CAAoB,oBAApB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAOC,GAbH,CAaI,OAAOC,KAAP,EAAc;AAAA;AAAA;AACZ,UAAM;AAAA;AAAA;AAAAL;AAAAA;AAAAA;AAAAA,WAAIC,cAAc,CAACK,iBAAf,EAAJ;AAAN;;AADY;AAAA;AAEZR,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAArC;AACL;AACF;;AAGM,UAAUQ,wBAAV,GAAqC;AAAA;AAAA;AAAA;AAC1C,QAAM;AAAA;AAAA;AAAAC;AAAAA;AAAAA;AAAAA,eAAUC,WAAW,CAACC,cAAtB,EAAsCpB,SAAtC;AAAN;AAED","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: <Contains Generator Functions for BMC Authentication container> *\n@NAME : BMCAuthenticationSaga.js\n@AUTHORS: Jay Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[21/02/2020] [Jay] : Prototyping..........////////////////////\n*/\n\nimport axios from 'axios';\nimport { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actionTypes from '../store/actions/actionTypes';\nimport * as actionCreators from '../store/actions/exportActionCreators';\n\n\n\nexport function* bmc_login(action) {\n  try {\n    const response = yield call(\n      [axios, axios.post],\n      '/api/v1.0/bmc_login/',\n      action.payload\n    );\n    if (response.data) {\n       localStorage.setItem('BMC_LoggedIn', true);\n       // localStorage.setItem('userid', response.data.username);\n       // localStorage.setItem('token', response.data.token);\n        yield put(actionCreators.BMCSetIsLoggedIn());\n        action.history.push('/Hardware/Overview');\n      }\n    } catch (error) {\n        yield put(actionCreators.BMCSetLoginFailed());\n        localStorage.setItem('BMC_LoggedIn', false);\n  }\n}\n\n\nexport function* BMCAuthenticationWatcher() {\n  yield takeEvery(actionTypes.SAGA_BMC_LOGIN, bmc_login);\n  \n}\n"]}