{"version":3,"sources":["serviceWorker.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","checkValidServiceWorker","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","process","env","NODE_ENV","publicUrl","URL","PUBLIC_URL","href","origin","addEventListener"],"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <File description> *\n@NAME : serviceWorker.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else if (config && config.onSuccess) {\n                config.onSuccess(registration);\n            }\n          }\n        };\n      };\n    })\n    .catch(() => {\n      // console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // console.log(\n      //  'No internet connection found. App is running in offline mode.'\n      // );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // console.log(\n          //  'This web app is being served cache-first by a service ' +\n          //    'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          // );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"]}