b4f938c77f5f0497ef217fee1629467e
/* istanbul ignore next */
"use strict";

var cov_2oc5jewkv5 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/serviceWorker.js";
  var hash = "bcdb6391d062c0a65a188f17ea39e36e55537bb2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/serviceWorker.js",
    statementMap: {
      "0": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 47,
          column: 1
        }
      },
      "1": {
        start: {
          line: 50,
          column: 2
        },
        end: {
          line: 74,
          column: 7
        }
      },
      "2": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 70,
          column: 8
        }
      },
      "3": {
        start: {
          line: 54,
          column: 33
        },
        end: {
          line: 54,
          column: 56
        }
      },
      "4": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "5": {
        start: {
          line: 56,
          column: 10
        },
        end: {
          line: 56,
          column: 17
        }
      },
      "6": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "7": {
        start: {
          line: 59,
          column: 10
        },
        end: {
          line: 68,
          column: 11
        }
      },
      "8": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "9": {
        start: {
          line: 62,
          column: 14
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "10": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "11": {
        start: {
          line: 65,
          column: 19
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "12": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 47
        }
      },
      "13": {
        start: {
          line: 79,
          column: 2
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "14": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 82,
          column: 62
        }
      },
      "15": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 96,
          column: 7
        }
      },
      "16": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "17": {
        start: {
          line: 89,
          column: 10
        },
        end: {
          line: 91,
          column: 13
        }
      },
      "18": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 37
        }
      },
      "19": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 39
        }
      },
      "20": {
        start: {
          line: 106,
          column: 2
        },
        end: {
          line: 136,
          column: 3
        }
      },
      "21": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 108,
          column: 75
        }
      },
      "22": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "23": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "24": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 135,
          column: 7
        }
      },
      "25": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 65
        }
      },
      "26": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 134,
          column: 7
        }
      },
      "27": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 47
        }
      },
      "28": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 130,
          column: 11
        }
      },
      "29": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 39
        }
      },
      "30": {
        start: {
          line: 140,
          column: 2
        },
        end: {
          line: 144,
          column: 3
        }
      },
      "31": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 143,
          column: 7
        }
      },
      "32": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 142,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "registerValidSW",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 24
          }
        },
        loc: {
          start: {
            line: 49,
            column: 40
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 49
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 52,
            column: 10
          },
          end: {
            line: 52,
            column: 11
          }
        },
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 52
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 53,
            column: 35
          },
          end: {
            line: 53,
            column: 36
          }
        },
        loc: {
          start: {
            line: 53,
            column: 41
          },
          end: {
            line: 70,
            column: 7
          }
        },
        line: 53
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 41
          },
          end: {
            line: 58,
            column: 42
          }
        },
        loc: {
          start: {
            line: 58,
            column: 47
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 58
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 72,
            column: 11
          },
          end: {
            line: 72,
            column: 12
          }
        },
        loc: {
          start: {
            line: 72,
            column: 17
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 72
      },
      "5": {
        name: "checkValidServiceWorker",
        decl: {
          start: {
            line: 77,
            column: 9
          },
          end: {
            line: 77,
            column: 32
          }
        },
        loc: {
          start: {
            line: 77,
            column: 48
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 77
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 80,
            column: 10
          },
          end: {
            line: 80,
            column: 11
          }
        },
        loc: {
          start: {
            line: 80,
            column: 22
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 80
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 88,
            column: 43
          },
          end: {
            line: 88,
            column: 44
          }
        },
        loc: {
          start: {
            line: 88,
            column: 59
          },
          end: {
            line: 92,
            column: 9
          }
        },
        line: 88
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 42
          }
        },
        loc: {
          start: {
            line: 89,
            column: 47
          },
          end: {
            line: 91,
            column: 11
          }
        },
        line: 89
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 98,
            column: 11
          },
          end: {
            line: 98,
            column: 12
          }
        },
        loc: {
          start: {
            line: 98,
            column: 17
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 98
      },
      "10": {
        name: "register",
        decl: {
          start: {
            line: 105,
            column: 16
          },
          end: {
            line: 105,
            column: 24
          }
        },
        loc: {
          start: {
            line: 105,
            column: 33
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 105
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 116,
            column: 37
          }
        },
        loc: {
          start: {
            line: 116,
            column: 42
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 116
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 125,
            column: 43
          },
          end: {
            line: 125,
            column: 44
          }
        },
        loc: {
          start: {
            line: 125,
            column: 49
          },
          end: {
            line: 130,
            column: 9
          }
        },
        line: 125
      },
      "13": {
        name: "unregister",
        decl: {
          start: {
            line: 139,
            column: 16
          },
          end: {
            line: 139,
            column: 26
          }
        },
        loc: {
          start: {
            line: 139,
            column: 29
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 139
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 141,
            column: 39
          },
          end: {
            line: 141,
            column: 40
          }
        },
        loc: {
          start: {
            line: 141,
            column: 55
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 141
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 40,
            column: 42
          }
        }, {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 40
          }
        }, {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 10
          },
          end: {
            line: 68,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 10
          },
          end: {
            line: 68,
            column: 11
          }
        }, {
          start: {
            line: 59,
            column: 10
          },
          end: {
            line: 68,
            column: 11
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }],
        line: 60
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 14
          },
          end: {
            line: 64,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 14
          },
          end: {
            line: 64,
            column: 15
          }
        }, {
          start: {
            line: 62,
            column: 14
          },
          end: {
            line: 64,
            column: 15
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 62,
            column: 18
          },
          end: {
            line: 62,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 18
          },
          end: {
            line: 62,
            column: 24
          }
        }, {
          start: {
            line: 62,
            column: 28
          },
          end: {
            line: 62,
            column: 43
          }
        }],
        line: 62
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 67,
            column: 13
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 65,
            column: 23
          },
          end: {
            line: 65,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 23
          },
          end: {
            line: 65,
            column: 29
          }
        }, {
          start: {
            line: 65,
            column: 33
          },
          end: {
            line: 65,
            column: 49
          }
        }],
        line: 65
      },
      "8": {
        loc: {
          start: {
            line: 83,
            column: 6
          },
          end: {
            line: 96,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 6
          },
          end: {
            line: 96,
            column: 7
          }
        }, {
          start: {
            line: 83,
            column: 6
          },
          end: {
            line: 96,
            column: 7
          }
        }],
        line: 83
      },
      "9": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 85,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 84,
            column: 31
          }
        }, {
          start: {
            line: 85,
            column: 9
          },
          end: {
            line: 85,
            column: 28
          }
        }, {
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 85,
            column: 72
          }
        }],
        line: 84
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        }, {
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        }],
        line: 106
      },
      "11": {
        loc: {
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 106,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 6
          },
          end: {
            line: 106,
            column: 43
          }
        }, {
          start: {
            line: 106,
            column: 47
          },
          end: {
            line: 106,
            column: 75
          }
        }],
        line: 106
      },
      "12": {
        loc: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        }, {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        }],
        line: 109
      },
      "13": {
        loc: {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 134,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 134,
            column: 7
          }
        }, {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 134,
            column: 7
          }
        }],
        line: 119
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        }, {
          start: {
            line: 140,
            column: 2
          },
          end: {
            line: 144,
            column: 3
          }
        }],
        line: 140
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "bcdb6391d062c0a65a188f17ea39e36e55537bb2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.register = register;
exports.unregister = unregister;

/* -------------------------------------------------------------------------------------/
                                                                                    /
/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /
/                          ALL RIGHTS RESERVED                                        /
/                                                                                     /
/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /
/   products to use or abstract this computer program for the sole purpose of         /
/   implementing a product based on Samsung Electronics Co., Ltd. products.           /
/   No other rights to reproduce, use, or disseminate this computer program,          /
/   whether in part or in whole, are granted.                                         / 
/                                                                                     /
/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /
/   respect to the performance of this computer program, and specifically disclaims   /
/   any responsibility for any damages, special or consequential, connected           /
/   with the use of this program.                                                     /
/                                                                                     /
/-------------------------------------------------------------------------------------/


DESCRIPTION: <File description> *
@NAME : serviceWorker.js
@AUTHORS: Jay Hitesh Sanghavi 
@Version : 1.0 *
@REVISION HISTORY
[03/06/2019] [Jay] : Prototyping..........////////////////////
*/
// This optional code is used to register a service worker.
// register() is not called by default.
// This lets the app load faster on subsequent visits in production, and gives
// it offline capabilities. However, it also means that developers (and users)
// will only see deployed updates on subsequent visits to a page, after all the
// existing tabs open on the page have been closed, since previously cached
// resources are updated in the background.
// To learn more about the benefits of this model and instructions on how to
// opt-in, read http://bit.ly/CRA-PWA
const isLocalhost =
/* istanbul ignore next */
(cov_2oc5jewkv5.s[0]++, Boolean(
/* istanbul ignore next */
(cov_2oc5jewkv5.b[0][0]++, window.location.hostname === 'localhost') ||
/* istanbul ignore next */
(cov_2oc5jewkv5.b[0][1]++, // [::1] is the IPv6 localhost address.
window.location.hostname === '[::1]') ||
/* istanbul ignore next */
(cov_2oc5jewkv5.b[0][2]++, // 127.0.0.1/8 is considered localhost for IPv4.
window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))));

function registerValidSW(swUrl, config) {
  /* istanbul ignore next */
  cov_2oc5jewkv5.f[0]++;
  cov_2oc5jewkv5.s[1]++;
  navigator.serviceWorker.register(swUrl).then(registration => {
    /* istanbul ignore next */
    cov_2oc5jewkv5.f[1]++;
    cov_2oc5jewkv5.s[2]++;

    registration.onupdatefound = () => {
      /* istanbul ignore next */
      cov_2oc5jewkv5.f[2]++;
      const installingWorker =
      /* istanbul ignore next */
      (cov_2oc5jewkv5.s[3]++, registration.installing);

      /* istanbul ignore next */
      cov_2oc5jewkv5.s[4]++;

      if (installingWorker === null) {
        /* istanbul ignore next */
        cov_2oc5jewkv5.b[1][0]++;
        cov_2oc5jewkv5.s[5]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_2oc5jewkv5.b[1][1]++;
      }

      cov_2oc5jewkv5.s[6]++;

      installingWorker.onstatechange = () => {
        /* istanbul ignore next */
        cov_2oc5jewkv5.f[3]++;
        cov_2oc5jewkv5.s[7]++;

        if (installingWorker.state === 'installed') {
          /* istanbul ignore next */
          cov_2oc5jewkv5.b[2][0]++;
          cov_2oc5jewkv5.s[8]++;

          if (navigator.serviceWorker.controller) {
            /* istanbul ignore next */
            cov_2oc5jewkv5.b[3][0]++;
            cov_2oc5jewkv5.s[9]++;

            // Execute callback
            if (
            /* istanbul ignore next */
            (cov_2oc5jewkv5.b[5][0]++, config) &&
            /* istanbul ignore next */
            (cov_2oc5jewkv5.b[5][1]++, config.onUpdate)) {
              /* istanbul ignore next */
              cov_2oc5jewkv5.b[4][0]++;
              cov_2oc5jewkv5.s[10]++;
              config.onUpdate(registration);
            } else
            /* istanbul ignore next */
            {
              cov_2oc5jewkv5.b[4][1]++;
            }
          } else {
            /* istanbul ignore next */
            cov_2oc5jewkv5.b[3][1]++;
            cov_2oc5jewkv5.s[11]++;

            if (
            /* istanbul ignore next */
            (cov_2oc5jewkv5.b[7][0]++, config) &&
            /* istanbul ignore next */
            (cov_2oc5jewkv5.b[7][1]++, config.onSuccess)) {
              /* istanbul ignore next */
              cov_2oc5jewkv5.b[6][0]++;
              cov_2oc5jewkv5.s[12]++;
              config.onSuccess(registration);
            } else
            /* istanbul ignore next */
            {
              cov_2oc5jewkv5.b[6][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_2oc5jewkv5.b[2][1]++;
        }
      };
    };
  }).catch(() => {// console.error('Error during service worker registration:', error);

    /* istanbul ignore next */
    cov_2oc5jewkv5.f[4]++;
  });
}

function checkValidServiceWorker(swUrl, config) {
  /* istanbul ignore next */
  cov_2oc5jewkv5.f[5]++;
  cov_2oc5jewkv5.s[13]++;
  // Check if the service worker can be found. If it can't reload the page.
  fetch(swUrl).then(response => {
    /* istanbul ignore next */
    cov_2oc5jewkv5.f[6]++;
    // Ensure service worker exists, and that we really are getting a JS file.
    const contentType =
    /* istanbul ignore next */
    (cov_2oc5jewkv5.s[14]++, response.headers.get('content-type'));

    /* istanbul ignore next */
    cov_2oc5jewkv5.s[15]++;

    if (
    /* istanbul ignore next */
    (cov_2oc5jewkv5.b[9][0]++, response.status === 404) ||
    /* istanbul ignore next */
    (cov_2oc5jewkv5.b[9][1]++, contentType != null) &&
    /* istanbul ignore next */
    (cov_2oc5jewkv5.b[9][2]++, contentType.indexOf('javascript') === -1)) {
      /* istanbul ignore next */
      cov_2oc5jewkv5.b[8][0]++;
      cov_2oc5jewkv5.s[16]++;
      // No service worker found. Probably a different app. Reload the page.
      navigator.serviceWorker.ready.then(registration => {
        /* istanbul ignore next */
        cov_2oc5jewkv5.f[7]++;
        cov_2oc5jewkv5.s[17]++;
        registration.unregister().then(() => {
          /* istanbul ignore next */
          cov_2oc5jewkv5.f[8]++;
          cov_2oc5jewkv5.s[18]++;
          window.location.reload();
        });
      });
    } else {
      /* istanbul ignore next */
      cov_2oc5jewkv5.b[8][1]++;
      cov_2oc5jewkv5.s[19]++;
      // Service worker found. Proceed as normal.
      registerValidSW(swUrl, config);
    }
  }).catch(() => {// console.log(
    //  'No internet connection found. App is running in offline mode.'
    // );

    /* istanbul ignore next */
    cov_2oc5jewkv5.f[9]++;
  });
}

function register(config) {
  /* istanbul ignore next */
  cov_2oc5jewkv5.f[10]++;
  cov_2oc5jewkv5.s[20]++;

  if (
  /* istanbul ignore next */
  (cov_2oc5jewkv5.b[11][0]++, process.env.NODE_ENV === 'production') &&
  /* istanbul ignore next */
  (cov_2oc5jewkv5.b[11][1]++, 'serviceWorker' in navigator)) {
    /* istanbul ignore next */
    cov_2oc5jewkv5.b[10][0]++;
    // The URL constructor is available in all browsers that support SW.
    const publicUrl =
    /* istanbul ignore next */
    (cov_2oc5jewkv5.s[21]++, new URL(process.env.PUBLIC_URL, window.location.href));

    /* istanbul ignore next */
    cov_2oc5jewkv5.s[22]++;

    if (publicUrl.origin !== window.location.origin) {
      /* istanbul ignore next */
      cov_2oc5jewkv5.b[12][0]++;
      cov_2oc5jewkv5.s[23]++;
      // Our service worker won't work if PUBLIC_URL is on a different origin
      // from what our page is served on. This might happen if a CDN is used to
      // serve assets; see https://github.com/facebook/create-react-app/issues/2374
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2oc5jewkv5.b[12][1]++;
    }

    cov_2oc5jewkv5.s[24]++;
    window.addEventListener('load', () => {
      /* istanbul ignore next */
      cov_2oc5jewkv5.f[11]++;
      const swUrl =
      /* istanbul ignore next */
      (cov_2oc5jewkv5.s[25]++, `${process.env.PUBLIC_URL}/service-worker.js`);

      /* istanbul ignore next */
      cov_2oc5jewkv5.s[26]++;

      if (isLocalhost) {
        /* istanbul ignore next */
        cov_2oc5jewkv5.b[13][0]++;
        cov_2oc5jewkv5.s[27]++;
        // This is running on localhost. Let's check if a service worker still exists or not.
        checkValidServiceWorker(swUrl, config); // Add some additional logging to localhost, pointing developers to the
        // service worker/PWA documentation.

        /* istanbul ignore next */
        cov_2oc5jewkv5.s[28]++;
        navigator.serviceWorker.ready.then(() => {// console.log(
          //  'This web app is being served cache-first by a service ' +
          //    'worker. To learn more, visit http://bit.ly/CRA-PWA'
          // );

          /* istanbul ignore next */
          cov_2oc5jewkv5.f[12]++;
        });
      } else {
        /* istanbul ignore next */
        cov_2oc5jewkv5.b[13][1]++;
        cov_2oc5jewkv5.s[29]++;
        // Is not localhost. Just register service worker
        registerValidSW(swUrl, config);
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_2oc5jewkv5.b[10][1]++;
  }
}

function unregister() {
  /* istanbul ignore next */
  cov_2oc5jewkv5.f[13]++;
  cov_2oc5jewkv5.s[30]++;

  if ('serviceWorker' in navigator) {
    /* istanbul ignore next */
    cov_2oc5jewkv5.b[14][0]++;
    cov_2oc5jewkv5.s[31]++;
    navigator.serviceWorker.ready.then(registration => {
      /* istanbul ignore next */
      cov_2oc5jewkv5.f[14]++;
      cov_2oc5jewkv5.s[32]++;
      registration.unregister();
    });
  } else
  /* istanbul ignore next */
  {
    cov_2oc5jewkv5.b[14][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,