{"version":3,"sources":["logManagementSaga.js"],"names":["getIbofOsLogs","response","axios","get","Date","now","headers","Accept","localStorage","getItem","result","data","logList","forEach","log","push","actionCreators","error","setLiveLogsDb","action","post","payload","setLiveLogs","getLiveLogsDb","logManagementWatcher","actionTypes","SAGA_GET_IBOFOS_LOGS","SAGA_SET_LIVE_LOGS_DB","SAGA_GET_LIVE_LOGS_DB"],"mappings":";;;;;;;;;;;;;;;;AA0BA;;AACA;;AACA;;AACA;;;;;;AAEO,UAAUA,aAAV,GAA0B;AAC/B,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAM,mBAAK,CAACC,cAAD,EAAQA,eAAMC,GAAd,CAAL,EAA0B,kCAAiCC,IAAI,CAACC,GAAL,EAAW,EAAtE,EAAyE;AAC9FC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHb;AADqF,KAAzE,CAAvB;AAQA,UAAMC,MAAM,GAAGT,QAAQ,CAACU,IAAxB;;AACA,QAAID,MAAJ,EAAY;AACV,YAAME,OAAO,GAAG,EAAhB;AACAF,MAAAA,MAAM,CAACG,OAAP,CAAeC,GAAG,IAAI;AACpBF,QAAAA,OAAO,CAACG,IAAR,mBACKD,GADL;AAGD,OAJD;AAKA,YAAM,kBAAIE,cAAc,CAAChB,aAAf,CAA6BY,OAA7B,CAAJ,CAAN;AACD;AACF,GAnBD,CAmBE,OAAOK,KAAP,EAAc,CACd;AACD;AACF;;AAEM,UAAUC,aAAV,CAAwBC,MAAxB,EAAgC;AAErC,MAAI;AACD,UAAM,mBACL,CAACjB,cAAD,EAAQA,eAAMkB,IAAd,CADK,EAEL,0BAFK,EAGL;AAAC,kBAAWD,MAAM,CAACE;AAAnB,KAHK,EAGwB;AAC3Bf,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHb;AADkB,KAHxB,CAAN;AAWD,UAAM,kBAAIO,cAAc,CAACM,WAAf,CAA2BH,MAAM,CAACE,OAAlC,CAAJ,CAAN;AACD,GAbD,CAaE,OAAOJ,KAAP,EAAc;AACd,UAAM,kBAAID,cAAc,CAACM,WAAf,CAA2BH,MAAM,CAACE,OAAlC,CAAJ,CAAN;AACD;AACF;;AAEM,UAAUE,aAAV,GAA0B;AAC/B,MAAI;AACF,UAAMtB,QAAQ,GAAG,MAAM,mBAAK,CAACC,cAAD,EAAQA,eAAMC,GAAd,CAAL,EAA0B,+BAA8BC,IAAI,CAACC,GAAL,EAAW,EAAnE,EAAsE;AAC3FC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHb;AADkF,KAAtE,CAAvB;AAQA,UAAMC,MAAM,GAAGT,QAAQ,CAACU,IAAxB;;AACA,QAAID,MAAJ,EAAY;AACV,YAAM,kBAAIM,cAAc,CAACM,WAAf,CAA2BZ,MAA3B,CAAJ,CAAN;AACD;AACF,GAbD,CAaE,OAAOO,KAAP,EAAc,CACb;AACF;AACF;;AAIM,UAAUO,oBAAV,GAAiC;AACpC,QAAM,wBAAUC,WAAW,CAACC,oBAAtB,EAA4C1B,aAA5C,CAAN;AACA,QAAM,wBAAUyB,WAAW,CAACE,qBAAtB,EAA6CT,aAA7C,CAAN;AACA,QAAM,wBAAUO,WAAW,CAACG,qBAAtB,EAA6CL,aAA7C,CAAN;AACD","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: <Contains Generator Functions for Configuration container> *\n@NAME : logManagementSaga.js\n@AUTHORS: Palak Kapoor \n@Version : 1.0 *\n@REVISION HISTORY\n[08/22/2019] [Palak] : Prototyping..........////////////////////\n*/\n\nimport axios from 'axios';\nimport { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actionTypes from '../store/actions/actionTypes';\nimport * as actionCreators from '../store/actions/exportActionCreators';\n\nexport function* getIbofOsLogs() {\n  try {\n    const response = yield call([axios, axios.get], `/api/v1.0/get_Ibof_OS_Logs/?ts=${Date.now()}`, {\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'x-access-token': localStorage.getItem('token'),\n      }\n  });\n\n    const result = response.data;\n    if (result) {\n      const logList = [];\n      result.forEach(log => {\n        logList.push({\n          ...log,\n        });\n      });\n      yield put(actionCreators.getIbofOsLogs(logList));\n    }\n  } catch (error) {\n    //  console.log(error);\n  }\n}\n\nexport function* setLiveLogsDb(action) {\n  \n  try {\n     yield call(\n      [axios, axios.post],\n      '/api/v1.0/set_live_logs/',\n      {\"liveLogs\":action.payload}, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem('token'),\n        }\n    }\n    );\n    yield put(actionCreators.setLiveLogs(action.payload));\n  } catch (error) {\n    yield put(actionCreators.setLiveLogs(action.payload));\n  }\n}\n\nexport function* getLiveLogsDb() {\n  try {\n    const response = yield call([axios, axios.get], `/api/v1.0/get_live_logs/?ts=${Date.now()}`, {\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'x-access-token': localStorage.getItem('token'),\n      }\n  });\n\n    const result = response.data;\n    if (result) {\n      yield put(actionCreators.setLiveLogs(result));\n    }\n  } catch (error) {\n     // console.log(error);\n  }\n}\n\n\n\nexport function* logManagementWatcher() {\n    yield takeEvery(actionTypes.SAGA_GET_IBOFOS_LOGS, getIbofOsLogs);\n    yield takeEvery(actionTypes.SAGA_SET_LIVE_LOGS_DB, setLiveLogsDb);\n    yield takeEvery(actionTypes.SAGA_GET_LIVE_LOGS_DB, getLiveLogsDb);\n  }\n  \n"]}