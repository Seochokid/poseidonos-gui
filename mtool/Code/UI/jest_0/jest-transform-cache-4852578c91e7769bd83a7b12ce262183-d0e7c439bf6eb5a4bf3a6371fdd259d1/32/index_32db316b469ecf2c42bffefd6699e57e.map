{"version":3,"sources":["index.js"],"names":["styles","theme","dashboardContainer","display","container","flexWrap","width","boxSizing","marginTop","spacing","padding","breakpoints","down","content","flexGrow","paddingTop","paddingLeft","paddingRight","statsContainer","margin","volumeStats","border","height","toolbar","customTheme","titleContainer","volumeStatsPaper","pageHeader","page","title","cardHeader","card","header","Volume","Component","constructor","props","state","mobileOpen","deleteVolumes","bind","fetchVolumes","createArray","createVolume","deleteArray","alertConfirm","fetchDevices","fetchStorageInfo","fetchMaxVolumeCount","handleDrawerToggle","componentDidMount","setState","volume","Create_Volume","name","volume_name","size","volume_size","description","volume_description","unit","volume_units","arrayname","maxbw","maxiops","count","volume_count","suffix","volume_suffix","stop_on_error","stop_on_error_checkbox","mount_vol","Get_Volumes","Get_Array_Size","Get_Max_Volume_Count","volumes","ids","forEach","push","Delete_Volumes","Get_Devices","history","array","Create_Array","Delete_Array","Close_Alert","render","volumeFilledStyle","arraySize","totalVolSize","backgroundColor","float","overflowY","alignItems","justifyContent","volumeFreeStyle","color","classes","PageTheme","spaced","arrayExists","RAIDLevel","ssds","corrupted","storagedisks","sparedisks","metadiskpath","writebufferdisks","diskDetails","Get_Disk_Details","Detach_Disk","Attach_Disk","Add_Spare_Disk","Remove_Spare_Disk","metadisks","maxVolumeCount","length","legendContainer","child","Edit_Volume","Change_Volume_Field","Update_Volume","loading","loadText","alertTitle","errorMsg","alertOpen","alertType","errorCode","mapStateToProps","storageReducer","slots","mapDispatchToProps","dispatch","payload","type","actionTypes","SAGA_FETCH_DEVICE_INFO","SAGA_SAVE_VOLUME","SAGA_FETCH_ARRAY_SIZE","SAGA_FETCH_VOLUMES","SAGA_DELETE_VOLUMES","STORAGE_CLOSE_ALERT","SAGA_CREATE_ARRAY","SAGA_FETCH_DEVICE_DETAILS","EDIT_VOLUME","CHANGE_VOLUME_FIELD","SAGA_UPDATE_VOLUME","SAGA_DETACH_DISK","SAGA_ATTACH_DISK","SAGA_ADD_SPARE_DISK","SAGA_REMOVE_SPARE_DISK","SAGA_FETCH_MAX_VOLUME_COUNT"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <File description> *\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[12/06/2019] [Aswin] : Total Volume size shown. Error message on status code from iBOF\n[05/05/2020] [Palak] : Multi-Volume Creation\n*/\nimport React, { Component } from 'react';\nimport { Box, Grid, Typography, Paper } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { connect } from 'react-redux';\nimport 'react-dropdown/style.css';\nimport 'react-table/react-table.css';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport ArrayCreate from '../../components/ArrayManagement/ArrayCreate';\nimport ArrayShow from '../../components/ArrayManagement/ArrayShow';\nimport CreateVolume from '../../components/VolumeManagement/CreateVolume';\nimport VolumeList from '../../components/VolumeManagement/VolumeList';\nimport MToolLoader from '../../components/MToolLoader';\nimport AlertDialog from '../../components/Dialog';\nimport './Volume.css';\nimport { customTheme, PageTheme } from '../../theme';\nimport Legend from '../../components/Legend';\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport bytesToTB from '../../utils/bytes-to-tb';\n\nconst styles = (theme) => ({\n  dashboardContainer: {\n    display: 'flex'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    boxSizing: 'border-box',\n    marginTop: theme.spacing(3),\n    padding: theme.spacing(0, 3),\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(0, 1),\n      marginTop: theme.spacing(1)\n    }\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingTop: \"10px\",\n    paddingLeft: \"35px\",\n    paddingRight: \"24px\",\n    width: '100%',\n    boxSizing: 'border-box'\n  },\n  statsContainer: {\n    margin: theme.spacing(1, 0, 2)\n  },\n  volumeStats: {\n    width: '100%',\n    border: '0px solid gray',\n    height: 50\n  },\n  toolbar: customTheme.toolbar,\n  titleContainer: {\n    marginTop: theme.spacing(1)\n  },\n  volumeStatsPaper: {\n    height: 330,\n    [theme.breakpoints.down('xs')]: {\n      height: 170\n    }\n  },\n  pageHeader: customTheme.page.title,\n  cardHeader: customTheme.card.header,\n  card: {\n    marginTop: theme.spacing(1)\n  }\n});\n\nclass Volume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobileOpen: false\n    };\n    this.deleteVolumes = this.deleteVolumes.bind(this);\n    this.fetchVolumes = this.fetchVolumes.bind(this);\n    this.createArray = this.createArray.bind(this);\n    this.createVolume = this.createVolume.bind(this);\n    this.deleteArray = this.deleteArray.bind(this);\n    this.alertConfirm = this.alertConfirm.bind(this);\n    this.fetchDevices = this.fetchDevices.bind(this);\n    this.fetchStorageInfo = this.fetchStorageInfo.bind(this);\n    this.fetchMaxVolumeCount = this.fetchMaxVolumeCount.bind(this);\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchDevices();\n    this.fetchStorageInfo();\n    this.fetchMaxVolumeCount();\n  }\n\n  handleDrawerToggle() {\n    this.setState({\n      mobileOpen: !this.state.mobileOpen\n    });\n  }\n\n  createVolume(volume) {\n    this.props.Create_Volume({\n      name: volume.volume_name,\n      size: volume.volume_size,\n      description: volume.volume_description,\n      unit: volume.volume_units,\n      arrayname: \"\",\n      maxbw: volume.maxbw,\n      maxiops: volume.maxiops,\n      count: volume.volume_count,\n      suffix: volume.volume_suffix,\n      stop_on_error: volume.stop_on_error_checkbox,\n      mount_vol: volume.mount_vol,\n    });\n  }\n\n  fetchVolumes() {\n    this.props.Get_Volumes();\n  }\n\n  fetchStorageInfo() {\n    this.props.Get_Array_Size();\n  }\n\n  fetchMaxVolumeCount() {\n    this.props.Get_Max_Volume_Count();\n  }\n\n  deleteVolumes(volumes) {\n    const ids = [];\n    volumes.forEach(volume => {\n      ids.push(volume.name);\n    });\n    this.props.Delete_Volumes({ volumes: ids });\n  }\n\n  fetchDevices() {\n    this.props.Get_Devices(this.props.history);\n  }\n\n  createArray(array) {\n    this.props.Create_Array(array);\n  }\n\n  deleteArray() {\n    this.props.Delete_Array({ arrayname: \"\" });\n  }\n\n  alertConfirm() {\n    this.props.Close_Alert()\n  }\n\n  render() {\n    const volumeFilledStyle = {\n      width: `${this.props.arraySize !== 0 ?\n        (100 * (this.props.totalVolSize * 1024 * 1024 * 1024 * 1024)) /\n        (this.props.arraySize) : 0}%`,\n      height: '100%',\n      backgroundColor: 'rgba(51, 158, 255,0.6)',\n      float: 'left',\n      overflowY: 'hidden',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    };\n    const volumeFreeStyle = {\n      width: `${this.props.arraySize !== 0 ? 100 -\n        (100 * (this.props.totalVolSize * 1024 * 1024 * 1024 * 1024)) /\n        (this.props.arraySize) : 100}%`,\n      height: '100%',\n      color: 'white',\n      backgroundColor: 'rgba(0, 186, 0, 0.6)',\n      float: 'left',\n      overflowY: 'hidden',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    };\n    const { classes } = this.props;\n\n    return (\n      <ThemeProvider theme={PageTheme}>\n        <Box display=\"flex\">\n          <Header toggleDrawer={this.handleDrawerToggle} />\n          <Sidebar mobileOpen={this.state.mobileOpen} toggleDrawer={this.handleDrawerToggle} />\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Grid container spacing={3}>\n              <Grid container spacing={3} className={classes.titleContainer}>\n                <Grid xs={12} item>\n                  <Typography className={classes.pageHeader} variant=\"h6\">\n                    Storage Management\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container xs={12} spacing={1} className={classes.card}>\n                <Grid item xs={12}>\n                  <Paper spacing={3} className={classes.spaced}>\n                    <Grid container justify=\"space-between\">\n                      <Grid item xs={12}>\n                        <Typography className={classes.cardHeader} data-testid=\"title\">\n                          Array Management\n                        </Typography>\n                      </Grid>\n                      {this.props.arrayExists ? (\n                        <ArrayShow\n                          RAIDLevel={this.props.RAIDLevel}\n                          slots={this.props.ssds}\n                          corrupted={this.props.corrupted}\n                          storagedisks={this.props.storagedisks}\n                          sparedisks={this.props.sparedisks}\n                          metadiskpath={this.props.metadiskpath}\n                          writebufferdisks={this.props.writebufferdisks}\n                          deleteArray={this.deleteArray}\n                          diskDetails={this.props.diskDetails}\n                          getDiskDetails={this.props.Get_Disk_Details}\n                          detachDisk={this.props.Detach_Disk}\n                          attachDisk={this.props.Attach_Disk}\n                          addSpareDisk={this.props.Add_Spare_Disk}\n                          removeSpareDisk={this.props.Remove_Spare_Disk}\n                        />\n                      ) : (\n                          <ArrayCreate\n                            createArray={this.createArray}\n                            disks={this.props.ssds}\n                            data-testid=\"arraycreate\"\n                            metadisks={this.props.metadisks}\n                            diskDetails={this.props.diskDetails}\n                            getDiskDetails={this.props.Get_Disk_Details}\n                          />\n                        )}\n                    </Grid>\n                  </Paper>\n                </Grid>\n              </Grid>\n              {this.props.arrayExists ? (\n                <React.Fragment>\n                  <Grid container xs={12} spacing={1} className={classes.card}>\n                    <Grid item xs={12} md={6} className={classes.spaced}>\n                      <CreateVolume data-testid=\"createvolume\" createVolume={this.createVolume} maxVolumeCount={this.props.maxVolumeCount} volCount={this.props.volumes.length} />\n                    </Grid>\n\n                    <Grid item xs={12} md={6}>\n                      <Paper className={classes.volumeStatsPaper}>\n                        <Grid item xs={12}>\n                          <Typography className={classes.cardHeader}>\n                            Volume Statistics\n                          </Typography>\n                        </Grid>\n                        <div className={classes.container}>\n                          <Grid item xs={12}>\n                            <Typography variant=\"span\" color=\"secondary\">\n                              Number of volumes: {this.props.volumes.length}\n                            </Typography>\n                          </Grid>\n                          <Grid item xs={12} className={classes.statsContainer}>\n                            <Box className={classes.volumeStats}>\n                              <div style={volumeFilledStyle}>\n                                <Typography variant=\"span\">\n                                  {bytesToTB(this.props.totalVolSize * 1024 * 1024 * 1024 * 1024)}\n                                </Typography>\n                              </div>\n                              <div style={volumeFreeStyle}>\n                                <Typography variant=\"span\">\n                                  {bytesToTB(this.props.arraySize -\n                                    this.props.totalVolSize * 1024 * 1024 * 1024 * 1024)}\n                                </Typography>\n                              </div>\n                            </Box>\n                            <Grid item container xs={12} wrap=\"wrap\" className={classes.legendContainer}>\n                              <Legend\n                                bgColor=\"rgba(51, 158, 255,0.6)\"\n                                title={`\n                          Used Space :\n                          ${bytesToTB(\n                                  this.props.totalVolSize * 1024 * 1024 * 1024 * 1024\n                                )}\n                        `}\n                              />\n                              <Legend\n                                bgColor=\"rgba(0, 186, 0, 0.6)\"\n                                title={`\n                          Available for Volume Creation :\n                          ${bytesToTB(\n                                  this.props.arraySize -\n                                  this.props.totalVolSize * 1024 * 1024 * 1024 * 1024\n                                )}\n                        `}\n                              />\n                            </Grid>\n                          </Grid>\n                        </div>\n                      </Paper>\n                    </Grid>\n                  </Grid>\n\n                  <Grid container xs={12} spacing={1} className={classes.card}>\n                    <Grid item xs={12}>\n                      <VolumeList\n                        ref={this.child}\n                        volumeFetch={this.fetchVolumes}\n                        volumes={this.props.volumes}\n                        deleteVolumes={this.deleteVolumes}\n                        editVolume={this.props.Edit_Volume}\n                        changeField={this.props.Change_Volume_Field}\n                        fetchVolumes={this.fetchVolumes}\n                        saveVolume={this.props.Update_Volume}\n                      />\n                    </Grid>\n                  </Grid>\n                </React.Fragment>\n              ) : null}\n              {this.props.loading ? (\n                <MToolLoader text={this.props.loadText} />\n              ) : null}\n              <AlertDialog\n                title={this.props.alertTitle}\n                description={this.props.errorMsg}\n                open={this.props.alertOpen}\n                type={this.props.alertType}\n                onConfirm={this.alertConfirm}\n                handleClose={this.alertConfirm}\n                errCode={this.props.errorCode}\n              />\n            </Grid>\n          </main>\n        </Box>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ssds: state.storageReducer.ssds,\n    metadisks: state.storageReducer.metadisks,\n    volumes: state.storageReducer.volumes,\n    loading: state.storageReducer.loading,\n    alertOpen: state.storageReducer.alertOpen,\n    alertType: state.storageReducer.alertType,\n    alertTitle: state.storageReducer.alertTitle,\n    errorMsg: state.storageReducer.errorMsg,\n    errorCode: state.storageReducer.errorCode,\n    arraySize: state.storageReducer.arraySize,\n    maxVolumeCount: state.storageReducer.maxVolumeCount,\n    totalVolSize: state.storageReducer.totalVolSize,\n    storagedisks: state.storageReducer.storagedisks,\n    sparedisks: state.storageReducer.sparedisks,\n    writebufferdisks: state.storageReducer.writebufferdisks,\n    metadiskpath: state.storageReducer.metadiskpath,\n    slots: state.storageReducer.slots,\n    arrayExists: state.storageReducer.arrayExists,\n    RAIDLevel: state.storageReducer.RAIDLevel,\n    diskDetails: state.storageReducer.diskDetails,\n    loadText: state.storageReducer.loadText\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    Get_Devices: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_DEVICE_INFO, payload }),\n    Create_Volume: (payload) => dispatch({ type: actionTypes.SAGA_SAVE_VOLUME, payload }),\n    Get_Array_Size: () => dispatch({ type: actionTypes.SAGA_FETCH_ARRAY_SIZE }),\n    // To be used when Delete Array functionalitiy is implemented by Poseidon OS\n    // Delete_Array: (payload) => dispatch({type: actionTypes.SAGA_DELETE_ARRAY, payload}),\n    Get_Volumes: () => dispatch({ type: actionTypes.SAGA_FETCH_VOLUMES }),\n    Delete_Volumes: (payload) => dispatch({ type: actionTypes.SAGA_DELETE_VOLUMES, payload }),\n    Close_Alert: () => dispatch({ type: actionTypes.STORAGE_CLOSE_ALERT }),\n    Create_Array: (payload) => dispatch({ type: actionTypes.SAGA_CREATE_ARRAY, payload }),\n    Get_Disk_Details: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_DEVICE_DETAILS, payload }),\n    Edit_Volume: (payload) => dispatch({ type: actionTypes.EDIT_VOLUME, payload }),\n    Change_Volume_Field: (payload) => dispatch({ type: actionTypes.CHANGE_VOLUME_FIELD, payload }),\n    Update_Volume: (payload) => dispatch({ type: actionTypes.SAGA_UPDATE_VOLUME, payload }),\n    Detach_Disk: (payload) => dispatch({ type: actionTypes.SAGA_DETACH_DISK, payload }),\n    Attach_Disk: (payload) => dispatch({ type: actionTypes.SAGA_ATTACH_DISK, payload }),\n    Add_Spare_Disk: (payload) => dispatch({ type: actionTypes.SAGA_ADD_SPARE_DISK, payload }),\n    Remove_Spare_Disk: (payload) => dispatch({ type: actionTypes.SAGA_REMOVE_SPARE_DISK, payload }),\n    Get_Max_Volume_Count: () => dispatch({ type: actionTypes.SAGA_FETCH_MAX_VOLUME_COUNT }),\n  };\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(Volume));\n"]}