b036efb360c7fc241707268f2fab5c78
"use strict";

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactRedux = require("react-redux");

var _styles = require("@material-ui/core/styles");

var _Paper = _interopRequireDefault(require("@material-ui/core/Paper"));

var _Grid = _interopRequireDefault(require("@material-ui/core/Grid"));

var _Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var actionTypes = _interopRequireWildcard(require("../../../store/actions/actionTypes"));

var _Ok14x = _interopRequireDefault(require("../../../assets/images/Ok14x14.png"));

var _NotOk14x = _interopRequireDefault(require("../../../assets/images/Not-Ok14x14.png"));

var _Refresh14x14A = _interopRequireDefault(require("../../../assets/images/Refresh-14x14A.png"));

var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/HealthComponents/ServiceStatus/index.js";

const styles = theme => ({
  root: {
    flexGrow: 1
  },
  overviewPaper: {
    width: '100%'
  },
  serviceRootGrid: {},
  serviceParentGrid: {
    marginTop: theme.spacing(0.5),
    maxWidth: '100%',
    flexBasis: '100%'
  },
  serviceOuterGrid: {
    border: '1px solid gray',
    maxWidth: '100%',
    flexBasis: '100%',
    overflowY: 'auto',
    overflowX: 'hidden',
    minHeight: '75px',
    maxHeight: '100px',
    background: '#fff',
    marginTop: theme.spacing(2)
  },
  hardwareOuterGrid: {
    border: '1px solid gray',
    maxWidth: '100%',
    flexBasis: '100%',
    overflowY: 'auto',
    overflowX: 'hidden',
    minHeight: '100px',
    maxHeight: '100px',
    background: '#fff',
    marginTop: theme.spacing(2)
  },
  serviceRowContainer: {
    maxWidth: '100%',
    flexBasis: '100%'
  },
  serviceInnerGrid: {
    maxWidth: '50%',
    flexBasis: '50%',
    marginTop: theme.spacing(2)
  },
  hardwareInnerGrid: {
    maxWidth: '33%',
    flexBasis: '33%',
    marginTop: theme.spacing(2)
  },
  serviceHeader: {
    backgroundColor: '#788595',
    color: 'white',
    paddingLeft: '5px',
    fontSize: '14px',
    height: '24px'
  },
  img: {
    marginLeft: theme.spacing(1),
    marginRight: theme.spacing(1)
  }
});

class ServiceStatus extends _react.Component {
  constructor(props) {
    super(props);
  }

  componentDidMount() {
    this.props.fetchSoftwareDetails();
    this.props.fetchHardwareDetails();
    this.props.fetchNetworkDetails();
  }

  render() {
    const classes = this.props.classes;
    return _react.default.createElement(_Paper.default, {
      className: classes.overviewPaper,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 116
      },
      __self: this
    }, _react.default.createElement(_Grid.default, {
      item: true,
      container: true,
      spacing: 3,
      className: classes.serviceRootGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 117
      },
      __self: this
    }, _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      container: true,
      className: classes.serviceParentGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 118
      },
      __self: this
    }, _react.default.createElement(_Grid.default, {
      xs: 12,
      item: true,
      className: classes.serviceOuterGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 119
      },
      __self: this
    }, _react.default.createElement(_Typography.default, {
      className: classes.serviceHeader,
      variant: "h6",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 120
      },
      __self: this
    }, "Software "), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      container: true,
      className: classes.serviceRowContainer,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 121
      },
      __self: this
    }, _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.serviceInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 122
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.software_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.software_health.length === 0 ? _Refresh14x14A.default : this.props.software_health && this.props.software_health[0] && this.props.software_health[0].mgmt_service === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 123
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 124
      },
      __self: this
    }, "Mgmt Service")), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.serviceInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 126
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.software_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.software_health.length === 0 ? _Refresh14x14A.default : this.props.software_health && this.props.software_health[0] && this.props.software_health[0].data_service === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 127
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 128
      },
      __self: this
    }, "Data Services")))), _react.default.createElement(_Grid.default, {
      xs: 12,
      item: true,
      className: classes.hardwareOuterGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 134
      },
      __self: this
    }, _react.default.createElement(_Typography.default, {
      className: classes.serviceHeader,
      variant: "h6",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 135
      },
      __self: this
    }, "Hardware "), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      container: true,
      className: classes.serviceRowContainer,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 136
      },
      __self: this
    }, _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.hardwareInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 137
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.hardware_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.hardware_health.length === 0 ? _Refresh14x14A.default : this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].power === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 138
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 139
      },
      __self: this
    }, "Power Supplies")), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.hardwareInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 141
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.hardware_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.hardware_health.length === 0 ? _Refresh14x14A.default : this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].fans === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 142
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 143
      },
      __self: this
    }, "Fans")), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.hardwareInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 145
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.hardware_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.hardware_health.length === 0 ? _Refresh14x14A.default : this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].temperature === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 146
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 147
      },
      __self: this
    }, "Temperature Sensors")), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.hardwareInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 149
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.hardware_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.hardware_health.length === 0 ? _Refresh14x14A.default : this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].cpu === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 150
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 151
      },
      __self: this
    }, "CPU")), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.hardwareInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 153
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.hardware_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.hardware_health.length === 0 ? _Refresh14x14A.default : this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].memory === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 154
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 155
      },
      __self: this
    }, "Memory")))), _react.default.createElement(_Grid.default, {
      xs: 12,
      item: true,
      className: classes.serviceOuterGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 161
      },
      __self: this
    }, _react.default.createElement(_Typography.default, {
      className: classes.serviceHeader,
      variant: "h6",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 162
      },
      __self: this
    }, "Network "), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      container: true,
      className: classes.serviceRowContainer,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 163
      },
      __self: this
    }, _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.hardwareInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 164
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.network_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.network_health.length === 0 ? _Refresh14x14A.default : this.props.network_health && this.props.network_health[0] && this.props.network_health[0].mgmt_network === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 165
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 166
      },
      __self: this
    }, "Management Network")), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.hardwareInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 168
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.network_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.network_health.length === 0 ? _Refresh14x14A.default : this.props.network_health && this.props.network_health[0] && this.props.network_health[0].client_network === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 169
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 170
      },
      __self: this
    }, "Client Network")), _react.default.createElement(_Grid.default, {
      sm: 6,
      xs: 12,
      item: true,
      className: classes.hardwareInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 172
      },
      __self: this
    }, _react.default.createElement("img", {
      title: this.props.network_health.length === 0 ? "Refreshing.." : "Health Status",
      src: this.props.network_health.length === 0 ? _Refresh14x14A.default : this.props.network_health && this.props.network_health[0] && this.props.network_health[0].storage_fabric === "OK" ? _Ok14x.default : _NotOk14x.default,
      className: classes.img,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 173
      },
      __self: this
    }), _react.default.createElement("label", {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 174
      },
      __self: this
    }, "Storage Fabric 1")))))));
  }

}

const mapStateToProps = state => {
  return {
    software_health: state.hardwareHealthReducer.software_health,
    hardware_health: state.hardwareHealthReducer.hardware_health,
    network_health: state.hardwareHealthReducer.network_health
  };
};

const mapDispatchToProps = dispatch => {
  return {
    fetchSoftwareDetails: () => dispatch({
      type: actionTypes.SAGA_HARDWARE_HEALTH_FETCH_SOFTWARE_DETAILS
    }),
    fetchHardwareDetails: () => dispatch({
      type: actionTypes.SAGA_HARDWARE_HEALTH_FETCH_HARDWARE_DETAILS
    }),
    fetchNetworkDetails: () => dispatch({
      type: actionTypes.SAGA_HARDWARE_HEALTH_FETCH_NETWORK_DETAILS
    })
  };
};

var _default = (0, _styles.withStyles)(styles)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ServiceStatus));

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,