98c51702f57059a792964832b8ff8a0c
"use strict";

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _MuiThemeProvider = _interopRequireDefault(require("@material-ui/core/styles/MuiThemeProvider"));

var _styles = require("@material-ui/core/styles");

var _core = require("@material-ui/core");

var _reactRouterDom = require("react-router-dom");

var _reactRedux = require("react-redux");

var _theme = _interopRequireDefault(require("../../../theme"));

var _PowerSensor = _interopRequireDefault(require("../../../components/SensorComponents/PowerSensor"));

var _FanSensor = _interopRequireDefault(require("../../../components/SensorComponents/FanSensor"));

var _TemperatureSensor = _interopRequireDefault(require("../../../components/SensorComponents/TemperatureSensor"));

var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/containers/Hardware/Sensors/index.js";

const styles = theme => ({
  configurationContainer: {
    display: 'flex'
  },
  appBar: {
    marginTop: theme.spacing(1),
    border: '1px solid gray'
  },
  selectedTab: {
    color: 'rgb(33, 34, 37)',
    borderBottom: `2px solid ${'rgb(33, 34, 37)'}`,
    fontWeight: 600
  }
});

class Sensors extends _react.Component {
  constructor(props) {
    super(props);
    this.handleTabChange = this.handleTabChange.bind(this);
    this.state = {
      value: 0
    };
  }

  componentDidMount() {}

  handleTabChange(event, newValue) {
    if (newValue === 'Power') {
      this.componentDidMount();
    }

    this.props.history.push(`/Hardware/Sensors/${newValue}`);
  }

  render() {
    const classes = this.props.classes;
    return _react.default.createElement(_MuiThemeProvider.default, {
      theme: _theme.default,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 76
      },
      __self: this
    }, _react.default.createElement(_core.AppBar, {
      position: "static",
      color: "default",
      className: classes.appBar,
      "data-testid": "Sensors_Component",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 77
      },
      __self: this
    }, _react.default.createElement(_core.Tabs, {
      value: this.state.value,
      onChange: this.handleTabChange,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 78
      },
      __self: this
    }, _react.default.createElement(_core.Tab, {
      "data-testid": "Sensors_Power",
      label: "Power",
      key: "Power",
      value: "Power",
      className: window.location.href.indexOf('Power') > 0 ? classes.selectedTab : null,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 82
      },
      __self: this
    }), _react.default.createElement(_core.Tab, {
      "data-testid": "Sensors_Fan",
      label: "Fan",
      key: "Fan",
      value: "Fan",
      className: window.location.href.indexOf('Fan') > 0 ? classes.selectedTab : null,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 83
      },
      __self: this
    }), _react.default.createElement(_core.Tab, {
      "data-testid": "Sensors_Temperature",
      label: "Temperature",
      key: "Temperature",
      value: "Temperature",
      className: window.location.href.indexOf('Temperature') > 0 ? classes.selectedTab : null,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 84
      },
      __self: this
    }))), _react.default.createElement(_reactRouterDom.Switch, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 87
      },
      __self: this
    }, _react.default.createElement(_reactRouterDom.Route, {
      exact: true,
      path: "/Hardware/Sensors/Power",
      component: _PowerSensor.default,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 88
      },
      __self: this
    }), _react.default.createElement(_reactRouterDom.Route, {
      exact: true,
      path: "/Hardware/Sensors/Fan",
      component: _FanSensor.default,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 89
      },
      __self: this
    }), _react.default.createElement(_reactRouterDom.Route, {
      exact: true,
      path: "/Hardware/Sensors/Temperature",
      component: _TemperatureSensor.default,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 90
      },
      __self: this
    })));
  }

}

const mapStateToProps = state => {
  return {};
};

const mapDispatchToProps = dispatch => {
  return {};
};

var _default = (0, _styles.withStyles)(styles)((0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _reactRouterDom.withRouter)(Sensors)));

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,