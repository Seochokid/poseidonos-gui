{"version":3,"sources":["index.js"],"names":["styles","theme","root","display","flexWrap","width","padding","spacing","breakpoints","down","tooltip","backgroundColor","opacity","color","maxWidth","fontSize","typography","pxToRem","border","fontWeight","fontWeightMedium","formControl","margin","minWidth","gridList","transform","flexGrow","gridTile","justifyContent","alignItems","position","flexDirection","height","gridTileDisabled","diskGridContainer","overflowX","diskContainer","overflow","palette","background","paper","legendButtonGrid","marginBottom","legendContainer","buttonContainer","marginTop","button","lineHeight","legendItem","inputGrid","storagedisk","cursor","writebufferdisk","sparedisk","freedisk","partOfArray","notSelectedShow","corrupted","detachBtn","bottom","diskNo","defaultDiskDetails","DevicePath","SerialNumber","Model","PhysicalSize","UsedBytes","Firmware","critical_warning","temperature","avail_spare","spare_thresh","precent_used","data_units_read","data_units_written","critical_comp_time","warning_temp_time","percent_used","findDisk","diskName","d","deviceName","ArrayShow","Component","constructor","props","state","open","diskDetails","popupOpen","messageDescription","messageOpen","messageTitle","selectedSlot","onConfirm","handleClick","bind","handleClose","showPopup","closePopup","deleteArray","getDiskDetails","attachDisk","detachDisk","addSpareDisk","removeSpareDisk","name","event","preventDefault","setState","slot","render","classes","freeSlots","slots","i","length","push","getClass","disk","storagedisks","find","sparedisks","PageTheme","RAIDLevel","id","metadiskpath","map","index","size","textAlign"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <File description> *\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[12/06/2019] [Aswin] : Default disk details set to NA\n*/\n\n/* eslint-disable no-nested-ternary */\n\nimport React, { Component } from 'react';\nimport 'react-dropdown/style.css';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport {\n  Button,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  GridList,\n  Typography,\n  MenuItem,\n} from '@material-ui/core';\nimport formatBytes from '../../../utils/format-bytes';\nimport AlertDialog from '../../Dialog';\nimport DiskDetails from '../../DiskDetails';\nimport '../ArrayCreate/ArrayCreate.css';\nimport { PageTheme } from '../../../theme';\nimport Legend from '../../Legend';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    padding: theme.spacing(0, 3),\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(0, 1)\n    }\n  },\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    opacity: 1,\n    color: 'rgba(0, 0, 0, 1)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n    '& b': {\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n  },\n  formControl: {\n    margin: theme.spacing(0.5, 2),\n    minWidth: 170,\n    [theme.breakpoints.down('xs')]: {\n      margin: theme.spacing(1, 0)\n    }\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n    flexGrow: 1,\n    padding: theme.spacing(1, 0)\n  },\n  gridTile: {\n    width: 200,\n    minWidth: 35,\n    border: '2px solid lightgray',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    flexDirection: 'column',\n    '&>div': {\n      height: 'auto'\n    }\n  },\n  gridTileDisabled: {\n    backgroundColor: '#e2e1e1'\n  },\n  diskGridContainer: {\n    width: '100%',\n    overflowX: 'auto',\n    [theme.breakpoints.down('xs')]: {\n      width: 'calc(100% - 32px)'\n    }\n  },\n  diskContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 0, 2),\n    minWidth: 800\n  },\n  legendButtonGrid: {\n    marginBottom: theme.spacing(1)\n  },\n  legendContainer: {\n    padding: theme.spacing(0, 2)\n  },\n  buttonContainer: {\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 2),\n    marginTop: theme.spacing(0.5),\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'center'\n    }\n  },\n  button: {\n    height: '1.8rem',\n    lineHeight: '0px'\n  },\n  legendItem: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(0.5)\n  },\n  inputGrid: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  storagedisk: {\n    backgroundColor: 'rgb(236,219,87)',\n    cursor: 'default'\n  },\n  writebufferdisk: {\n    backgroundColor: 'rgb(232,114,114)',\n    cursor: 'default'\n  },\n  sparedisk: {\n    backgroundColor: '#339EFF',\n    cursor: 'default'\n  },\n  freedisk: {\n    backgroundColor: 'rgb(137,163,196)',\n    cursor: 'default'\n  },\n  partOfArray: {\n    backgroundColor: 'rgb(236, 219, 87)'\n  },\n  notSelectedShow: {\n    backgroundColor: 'rgb(137, 163, 196)'\n  },\n  corrupted: {\n    backgroundColor: 'rgb(232, 114, 114)'\n  },\n  detachBtn: {\n    bottom: '-3px',\n    width: '80%',\n    position: 'absolute',\n    fontSize: '0.6rem'\n  },\n  diskNo: {\n    position: 'absolute'\n  }\n});\n\nconst defaultDiskDetails = {\n  DevicePath: 'NA',\n  SerialNumber: 'NA',\n  Model: 'NA',\n  PhysicalSize: 'NA',\n  UsedBytes: 'NA',\n  Firmware: 'NA',\n  critical_warning: 'NA',\n  temperature: 'NA',\n  avail_spare: 'NA',\n  spare_thresh: 'NA',\n  precent_used: 'NA',\n  data_units_read: 'NA',\n  data_units_written: 'NA',\n  critical_comp_time: 'NA',\n  warning_temp_time: 'NA',\n  percent_used: 'NA',\n};\n\n\nconst findDisk = (diskName) => {\n  return d => {\n    return d.deviceName === diskName;\n  };\n}\n\nclass ArrayShow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      diskDetails: { ...defaultDiskDetails },\n      popupOpen: false,\n      messageDescription: '',\n      messageOpen: '',\n      messageTitle: '',\n      selectedSlot: null,\n      onConfirm: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.showPopup = this.showPopup.bind(this);\n    this.closePopup = this.closePopup.bind(this);\n    this.deleteArray = this.deleteArray.bind(this);\n    this.getDiskDetails = this.getDiskDetails.bind(this);\n    this.attachDisk = this.attachDisk.bind(this);\n    this.detachDisk = this.detachDisk.bind(this);\n    this.addSpareDisk = this.addSpareDisk.bind(this);\n    this.removeSpareDisk = this.removeSpareDisk.bind(this);\n  }\n\n  getDiskDetails(name) {\n    this.props.getDiskDetails({ name });\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    this.setState({\n      open: true,\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      open: false,\n      popupOpen: false,\n      messageOpen: false,\n      diskDetails: { ...defaultDiskDetails },\n    });\n  }\n\n  showPopup(name) {\n    this.getDiskDetails(name);\n    this.setState({\n      ...this.state,\n      popupOpen: true,\n    });\n  }\n\n  closePopup() {\n    this.setState({\n      ...this.state,\n      popupOpen: false,\n    });\n  }\n\n  deleteArray() {\n    this.setState({\n      open: false,\n    });\n    this.props.deleteArray();\n  }\n\n  attachDisk(slot) {\n    this.setState({\n      selectedSlot: slot,\n      messageOpen: true,\n      messageDescription: 'Are you sure you want to Attach Disk?',\n      messageTitle: 'Attach Disk',\n      onConfirm: () => {\n        this.props.attachDisk(this.state.selectedSlot);\n        this.setState({\n          messageOpen: false\n        });\n      }\n    })\n  }\n\n  addSpareDisk(slot) {\n    this.setState({\n      selectedSlot: slot,\n      messageOpen: true,\n      messageDescription: 'Are you sure you want to Add the Disk?',\n      messageTitle: 'Add Spare Disk',\n      onConfirm: () => {\n        this.props.addSpareDisk(this.state.selectedSlot);\n        this.setState({\n          messageOpen: false\n        });\n      }\n    })\n  }\n\n  detachDisk(slot) {\n    this.setState({\n      selectedSlot: slot,\n      messageOpen: true,\n      messageDescription: 'Are you sure you want to Detach Disk?',\n      messageTitle: 'Detach Disk',\n      onConfirm: () => {\n        this.props.detachDisk(this.state.selectedSlot);\n        this.setState({\n          messageOpen: false\n        });\n      }\n    })\n  }\n\n  removeSpareDisk(slot) {\n    this.setState({\n      selectedSlot: slot,\n      messageOpen: true,\n      messageDescription: 'Are you sure you want to Remove the Disk?',\n      messageTitle: 'Remove Spare Disk',\n      onConfirm: () => {\n        this.props.removeSpareDisk(this.state.selectedSlot);\n        this.setState({\n          messageOpen: false\n        });\n      }\n    })\n  }\n\n  render() {\n    const { classes } = this.props;\n    const freeSlots = [];\n    if (this.props.slots) {\n      for (let i = this.props.slots.length; i < 32; i += 1) {\n        freeSlots.push(\n          <Grid className={`${classes.gridTile} ${classes.gridTileDisabled}`}>\n            <Typography color=\"secondary\" className={classes.diskNo}>{i + 1}</Typography>\n          </Grid>\n        );\n      }\n    }\n    const getClass = (disk) => {\n      if (this.props.storagedisks.find(findDisk(disk.name))) {\n        return classes.storagedisk;\n      }\n      // Required only if Buffer disks can be one of the Nvme disk\n      // if (this.props.writebufferdisks.find(findDisk(disk.name))) {\n      //   return classes.writebufferdisk;\n      // }\n      if (this.props.sparedisks.find(findDisk(disk.name))) {\n        return classes.sparedisk;\n      }\n      return classes.freedisk;\n    }\n    return (\n      <ThemeProvider theme={PageTheme}>\n        <form className={classes.root} data-testid=\"arrayshow\">\n          <Grid item xs={12} sm={6} className={classes.inputGrid}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"raid\">Fault tolerance Level</InputLabel>\n              <Select\n                value={this.props.RAIDLevel}\n                inputProps={{\n                  name: 'Fault Tolerance Type',\n                  id: 'raid',\n                }}\n                disabled\n              >\n                <MenuItem value={this.props.RAIDLevel}>RAID {this.props.RAIDLevel}</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6} className={classes.inputGrid}>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"writebuffer\">Write Buffer Path</InputLabel>\n              <Select\n                value={this.props.metadiskpath[0].deviceName}\n                inputProps={{\n                  name: 'Write Buffer Path',\n                  id: 'writebuffer',\n                }}\n                disabled\n              >\n                <MenuItem value={this.props.metadiskpath[0].deviceName}>{this.props.metadiskpath[0].deviceName}</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          <div className={classes.diskGridContainer}>\n            <Grid container className={classes.diskContainer}>\n              <GridList cellHeight={110} className={classes.gridList} cols={32}>\n                {this.props.slots\n                  ? this.props.slots.map((slot, index) => {\n                    return (\n                      <Tooltip\n                        classes={{\n                          tooltip: classes.tooltip,\n                        }}\n                        title={(\n                          <React.Fragment>\n                            <div>\n                              Name:\n                            {slot.name}\n                            </div>\n                            <div>\n                              Size:\n                            {formatBytes(slot.size * 4 * 1024)}\n                            </div>\n                            <div\n                              onClick={() => this.showPopup(slot.name)}\n                              aria-hidden=\"true\"\n\t\t\t      style={{\n                                cursor: 'pointer',\n                                textAlign: 'right',\n                                margin: '10px',\n                              }}\n                            >\n                              <u>More Details</u>\n                            </div>\n                          </React.Fragment>\n                        )}\n                        interactive\n                      >\n                        <Grid\n                          className={`${classes.gridTile} ${getClass(slot)}`}\n                          id={index}\n                          data-testid={`diskshow-${index}`}\n                        >\n                          <Typography color=\"secondary\" className={classes.diskNo}>{index + 1}</Typography>\n                          {(getClass(slot) === classes.freedisk) ? (\n                              <Button\n                                className={classes.detachBtn}\n                                data-testid={`attachdisk-${index}`}\n                                onClick={() => this.addSpareDisk(slot)}\n                              >\n\t\t\t\t  Add Spare Disk\n                              </Button>\n\t\t\t    ) : (\n                              (getClass(slot) === classes.sparedisk) ? (\n                                <Button\n                                  className={classes.detachBtn}\n                                  data-testid={`detachdisk-${index}`}\n                                  onClick={() => this.removeSpareDisk(slot)}\n                                >\n\t\t\t\t      Remove Spare Disk\n                                </Button>\n\t\t\t       ) : null\n\t\t\t     )\n                          }\n\n\n                          {/* {(getClass(slot) === classes.freedisk) ? (\n                        <Button\n                          className={classes.detachBtn}\n                          data-testid={`attachdisk-${index}`}\n                          onClick={() => this.attachDisk(slot)}\n                        >Attach</Button>\n                      ) : (\n                        <Button\n                          className={classes.detachBtn}\n                          data-testid={`detachdisk-${index}`}\n                          onClick={() => this.detachDisk(slot)}\n                        >Detach</Button>\n                      )} */}\n                        </Grid>\n                      </Tooltip>\n                    );\n                  })\n                  : null}\n                {freeSlots}\n              </GridList>\n            </Grid>\n          </div>\n          <Grid container xs={12} className={classes.legendButtonGrid}>\n            <Grid item container sm={8} xs={12} wrap=\"wrap\" className={classes.legendContainer}>\n              <Legend bgColor=\"rgba(236, 219, 87,0.6)\" title=\"Storage disk\" />\n              <Legend bgColor=\"rgba(51, 158, 255, 0.6)\" title=\"Spare disk\" />\n              <Legend bgColor=\"rgba(137, 163, 196, 0.6)\" title=\"Not Selected\" />\n              <Legend bgColor=\"rgba(226, 225, 225, 0.6)\" title=\"Empty Slot\" />\n            </Grid>\n            <Grid item container sm={4} xs={12} className={classes.buttonContainer}>\n              <Button\n                onClick={this.handleClick}\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n              >\n                Delete Array\n              </Button>\n            </Grid>\n          </Grid>\n          <AlertDialog\n            title=\"Delete Array\"\n            description=\"Are you sure you want to delete?\"\n            open={this.state.open}\n            handleClose={this.handleClose}\n            onConfirm={this.deleteArray}\n          />\n          <AlertDialog\n            title={this.state.messageTitle}\n            description={this.state.messageDescription}\n            open={this.state.messageOpen}\n            handleClose={this.handleClose}\n            onConfirm={this.state.onConfirm}\n          />\n          <DiskDetails\n            title=\"Disk Details\"\n            details={this.props.diskDetails}\n            open={this.state.popupOpen}\n            onConfirm={this.closePopup}\n            note_msg=\"Note: Currently SPDK NVME cli cannot retrieve disk details while iBoF is running. Details will be displayed at a later stage.\"\n          />\n        </form>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(ArrayShow);\n"]}