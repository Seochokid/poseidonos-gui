8d11b5ac129c293bcb4e8b9b3f74e8ac
/* istanbul ignore next */
"use strict";

var cov_2n7ejev969 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/hardwareHealthActions.js";
  var hash = "63ea6fbf7fbf33110cd21f9d1f68637d2afc0e39";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/hardwareHealthActions.js",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 36
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "1": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "2": {
        start: {
          line: 36,
          column: 36
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "3": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 40,
          column: 6
        }
      },
      "4": {
        start: {
          line: 43,
          column: 35
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "5": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 47,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 36
          },
          end: {
            line: 29,
            column: 37
          }
        },
        loc: {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 36
          },
          end: {
            line: 36,
            column: 37
          }
        },
        loc: {
          start: {
            line: 36,
            column: 50
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 35
          },
          end: {
            line: 43,
            column: 36
          }
        },
        loc: {
          start: {
            line: 43,
            column: 49
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 43
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "63ea6fbf7fbf33110cd21f9d1f68637d2afc0e39"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchNetworkDetails = exports.fetchHardwareDetails = exports.fetchSoftwareDetails = void 0;

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("./actionTypes"));

/* istanbul ignore next */
cov_2n7ejev969.s[0]++;

const fetchSoftwareDetails = serverinfo => {
  /* istanbul ignore next */
  cov_2n7ejev969.f[0]++;
  cov_2n7ejev969.s[1]++;
  return {
    type: actionTypes.HARDWARE_HEALTH_FETCH_SOFTWARE_DETAILS,
    serverinfo
  };
};

/* istanbul ignore next */
exports.fetchSoftwareDetails = fetchSoftwareDetails;
cov_2n7ejev969.s[2]++;

const fetchHardwareDetails = serverinfo => {
  /* istanbul ignore next */
  cov_2n7ejev969.f[1]++;
  cov_2n7ejev969.s[3]++;
  return {
    type: actionTypes.HARDWARE_HEALTH_FETCH_HARDWARE_DETAILS,
    serverinfo
  };
};

/* istanbul ignore next */
exports.fetchHardwareDetails = fetchHardwareDetails;
cov_2n7ejev969.s[4]++;

const fetchNetworkDetails = serverinfo => {
  /* istanbul ignore next */
  cov_2n7ejev969.f[2]++;
  cov_2n7ejev969.s[5]++;
  return {
    type: actionTypes.HARDWARE_HEALTH_FETCH_NETWORK_DETAILS,
    serverinfo
  };
};

/* istanbul ignore next */
exports.fetchNetworkDetails = fetchNetworkDetails;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhcmR3YXJlSGVhbHRoQWN0aW9ucy5qcyJdLCJuYW1lcyI6WyJmZXRjaFNvZnR3YXJlRGV0YWlscyIsInNlcnZlcmluZm8iLCJ0eXBlIiwiYWN0aW9uVHlwZXMiLCJIQVJEV0FSRV9IRUFMVEhfRkVUQ0hfU09GVFdBUkVfREVUQUlMUyIsImZldGNoSGFyZHdhcmVEZXRhaWxzIiwiSEFSRFdBUkVfSEVBTFRIX0ZFVENIX0hBUkRXQVJFX0RFVEFJTFMiLCJmZXRjaE5ldHdvcmtEZXRhaWxzIiwiSEFSRFdBUkVfSEVBTFRIX0ZFVENIX05FVFdPUktfREVUQUlMUyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBO0FBQUE7QUFBQTs7Ozs7QUFFTyxNQUFNQSxvQkFBb0IsR0FBR0MsVUFBVSxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQzlDLFNBQU87QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxXQUFXLENBQUNDLHNDQURmO0FBRUhILElBQUFBO0FBRkcsR0FBUDtBQUlILENBTE07Ozs7OztBQU9BLE1BQU1JLG9CQUFvQixHQUFHSixVQUFVLElBQUk7QUFBQTtBQUFBO0FBQUE7QUFDOUMsU0FBTztBQUNIQyxJQUFBQSxJQUFJLEVBQUVDLFdBQVcsQ0FBQ0csc0NBRGY7QUFFSEwsSUFBQUE7QUFGRyxHQUFQO0FBSUgsQ0FMTTs7Ozs7O0FBT0EsTUFBTU0sbUJBQW1CLEdBQUdOLFVBQVUsSUFBSTtBQUFBO0FBQUE7QUFBQTtBQUM3QyxTQUFPO0FBQ0hDLElBQUFBLElBQUksRUFBRUMsV0FBVyxDQUFDSyxxQ0FEZjtBQUVIUCxJQUFBQTtBQUZHLEdBQVA7QUFJSCxDQUxNIiwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICBDT1BZUklHSFQgKGMpIDIwMTkgU0FNU1VORyBFTEVDVFJPTklDUyBDTy4sIExURC4gICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgQUxMIFJJR0hUUyBSRVNFUlZFRCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkIHRvIGxpY2Vuc2VlcyBvZiBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiAgICAgICAgL1xuLyAgIHByb2R1Y3RzIHRvIHVzZSBvciBhYnN0cmFjdCB0aGlzIGNvbXB1dGVyIHByb2dyYW0gZm9yIHRoZSBzb2xlIHB1cnBvc2Ugb2YgICAgICAgICAvXG4vICAgaW1wbGVtZW50aW5nIGEgcHJvZHVjdCBiYXNlZCBvbiBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBwcm9kdWN0cy4gICAgICAgICAgIC9cbi8gICBObyBvdGhlciByaWdodHMgdG8gcmVwcm9kdWNlLCB1c2UsIG9yIGRpc3NlbWluYXRlIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgICAgICAgICAgL1xuLyAgIHdoZXRoZXIgaW4gcGFydCBvciBpbiB3aG9sZSwgYXJlIGdyYW50ZWQuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvIFxuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gbWFrZXMgbm8gcmVwcmVzZW50YXRpb24gb3Igd2FycmFudGllcyB3aXRoICAgICAgICAgIC9cbi8gICByZXNwZWN0IHRvIHRoZSBwZXJmb3JtYW5jZSBvZiB0aGlzIGNvbXB1dGVyIHByb2dyYW0sIGFuZCBzcGVjaWZpY2FsbHkgZGlzY2xhaW1zICAgL1xuLyAgIGFueSByZXNwb25zaWJpbGl0eSBmb3IgYW55IGRhbWFnZXMsIHNwZWNpYWwgb3IgY29uc2VxdWVudGlhbCwgY29ubmVjdGVkICAgICAgICAgICAvXG4vICAgd2l0aCB0aGUgdXNlIG9mIHRoaXMgcHJvZ3JhbS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vXG5cbkRFU0NSSVBUSU9OOiA8Q29udGFpbnMgYWN0aW9ucyBmb3IgaGFyZHdhcmUgY29udGFpbmVyPiAqXG5ATkFNRSA6IGhhcmR3YXJlSGVhbHRoQWN0aW9ucy5qc1xuQEFVVEhPUlM6IEpheSBTYW5naGF2aSBcbkBWZXJzaW9uIDogMS4wICpcbkBSRVZJU0lPTiBISVNUT1JZXG5bMDMvMTEvMjAxOV0gW0pheV0gOiBQcm90b3R5cGluZy4uLi4uLi4uLi4vLy8vLy8vLy8vLy8vLy8vLy8vL1xuKi9cblxuaW1wb3J0ICogYXMgYWN0aW9uVHlwZXMgZnJvbSAnLi9hY3Rpb25UeXBlcyc7XG5cbmV4cG9ydCBjb25zdCBmZXRjaFNvZnR3YXJlRGV0YWlscyA9IHNlcnZlcmluZm8gPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IGFjdGlvblR5cGVzLkhBUkRXQVJFX0hFQUxUSF9GRVRDSF9TT0ZUV0FSRV9ERVRBSUxTLFxuICAgICAgICBzZXJ2ZXJpbmZvLFxuICAgIH07XG59O1xuXG5leHBvcnQgY29uc3QgZmV0Y2hIYXJkd2FyZURldGFpbHMgPSBzZXJ2ZXJpbmZvID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBhY3Rpb25UeXBlcy5IQVJEV0FSRV9IRUFMVEhfRkVUQ0hfSEFSRFdBUkVfREVUQUlMUyxcbiAgICAgICAgc2VydmVyaW5mbyxcbiAgICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGZldGNoTmV0d29ya0RldGFpbHMgPSBzZXJ2ZXJpbmZvID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBhY3Rpb25UeXBlcy5IQVJEV0FSRV9IRUFMVEhfRkVUQ0hfTkVUV09SS19ERVRBSUxTLFxuICAgICAgICBzZXJ2ZXJpbmZvLFxuICAgIH07XG59O1xuIl19