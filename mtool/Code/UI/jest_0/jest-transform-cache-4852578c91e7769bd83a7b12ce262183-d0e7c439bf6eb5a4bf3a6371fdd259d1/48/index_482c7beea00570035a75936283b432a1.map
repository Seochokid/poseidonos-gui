{"version":3,"sources":["index.js"],"names":["styles","theme","AlertManagementContainer","display","content","flexGrow","paddingTop","spacing","width","boxSizing","toolbar","mixins","AlertManagement","Component","constructor","props","toggleAlertStatus","bind","selectalerts","editalerts","deletealerts","updateAlerts","cancelChange","selectAllalerts","selectAlertCluster","selectAlertSubCluster","alertTypeSelected","onHandleChange","onHandleDropdownChange","addAlerts","openAlert","handleAlertClose","triggerCommand","handleDrawerToggle","updateAlertsState","state","conditions","selectedAlertSubCluster","radiolist","name","id","radioindex","alertName","alertType","alertRadioButton","alertCondition","alertRange","description","alertClusterName","mobileOpen","componentDidMount","fetchAlertsInfo","fetchAlertsTypeInfo","event","setState","target","value","i","alerts","edit","checked","forEach","alert","push","selected","alertsData","newalerts","updateAlertsInfo","ids","length","openAlertBox","alertOpen","istypealert","alerttype","alerttitle","alertdescription","data","deleteAlertsInfo","cluster","clusterName","alertSubCluster","type","j","setAlertsInfo","status","active","toggleAlertsInfo","regex","isValid","test","alertClusters","map","subcluster","alertTypes","cip","subClusterName","addNewAlert","alertField","alertCluster","addNewAlertsInfo","operationType","addDeleteSend","render","classes","PageTheme","alertOpen_alertTable","alertboxtitle_alertTable","alertboxdescription_alertTable","mapStateToProps","alertManagementReducer","mapDispatchToProps","dispatch","updatedAlerts","actionCreators","alertParam","actionTypes","SAGA_ALERT_MANAGEMENT_FETCH_ALERTS","SAGA_ALERT_MANAGEMENT_FETCH_ALERTS_TYPE","newAlerts","SAGA_ALERT_MANAGEMENT_UPDATE_ALERTS","deleteAlerts","SAGA_ALERT_MANAGEMENT_DELETE_ALERTS","toggleAlerts","SAGA_ALERT_MANAGEMENT_TOGGLE_ALERTS","SAGA_ALERT_MANAGEMENT_ADD_NEW_ALERTS"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Alert Management Container for rendering Alert Management Page\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from '@material-ui/core/styles';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { PageTheme } from '../../../theme';\nimport AlertTable from '../../../components/AlertManagementComponents/AlertTable';\nimport AddNewAlerts from '../../../components/AlertManagementComponents/AddNewAlerts';\nimport './Alert-Management.css';\nimport * as actionTypes from \"../../../store/actions/actionTypes\";\nimport * as actionCreators from \"../../../store/actions/exportActionCreators\";\nimport AlertFields from '../../../components/AlertManagementComponents/AlertFields';\nimport AlertTypes from '../../../components/AlertManagementComponents/AlertTypes';\nimport AlertDialog from '../../../components/Dialog';\n\nconst styles = (theme) => {\n  return ({\n    AlertManagementContainer: {\n      display: 'flex'\n    },\n    content: {\n      flexGrow: 1,\n      paddingTop: theme.spacing(2),\n      width: '100%',\n      boxSizing: 'border-box'\n    },\n    toolbar: theme.mixins.toolbar,\n  })\n};\n\n\nclass AlertManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleAlertStatus = this.toggleAlertStatus.bind(this);\n    this.selectalerts = this.selectalerts.bind(this);\n    this.editalerts = this.editalerts.bind(this);\n    this.deletealerts = this.deletealerts.bind(this);\n    this.updateAlerts = this.updateAlerts.bind(this);\n    this.cancelChange = this.cancelChange.bind(this);\n    this.selectAllalerts = this.selectAllalerts.bind(this);\n    // this.onconditionchange = this.onconditionchange.bind(this);\n    this.selectAlertCluster = this.selectAlertCluster.bind(this);\n    this.selectAlertSubCluster = this.selectAlertSubCluster.bind(this);\n    this.alertTypeSelected = this.alertTypeSelected.bind(this);\n    this.onHandleChange = this.onHandleChange.bind(this);\n    this.onHandleDropdownChange = this.onHandleDropdownChange.bind(this);\n    this.addAlerts = this.addAlerts.bind(this);\n    this.openAlert = this.openAlert.bind(this);\n    this.handleAlertClose = this.handleAlertClose.bind(this);\n    this.triggerCommand = this.triggerCommand.bind(this);\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\n    this.updateAlertsState = this.updateAlertsState.bind(this);\n    this.state = {\n      conditions: [\n        'Greater Than',\n        'Less Than',\n        'Equal To',\n        'Not Equal To',\n        'Equal To Or Greater',\n        'Equal To Or Less Than',\n      ], // For Alert Table and Add New Alerts\n      // , 'Inside Range', 'Outside Range'  - TBD\n      selectedAlertSubCluster: null, // For Alert Types\n      radiolist: [\n        // For Alert Fields\n        [\n          {\n            name: 'cpu-usage',\n            id: '1',\n          },\n          {\n            name: 'cpu-affinity',\n            id: '2',\n          },\n          {\n            name: 'cpu-state',\n            id: '3',\n          },\n          {\n            name: 'cpu-processor-usage',\n            id: '4',\n          },\n          {\n            name: 'cpu-threads',\n            id: '5',\n          },\n          {\n            name: 'cpu-memory',\n            id: '6',\n          },\n          {\n            name: 'cpu-utilization',\n            id: '7',\n          },\n          {\n            name: 'cpu-affinity2',\n            id: '8',\n          },\n        ],\n        [\n          {\n            name: 'array-name',\n            id: '1',\n          },\n          {\n            name: 'array-time',\n            id: '2',\n          },\n        ],\n      ],\n      radioindex: 0,\n      alertName: '',\n      alertType: '',\n      alertRadioButton: '', // For Alert Fields\n      alertCondition: 'Greater Than', // For Add New Alerts\n      alertRange: '', // For Add New Alerts\n      description: '', // For Add New Alerts\n      alertClusterName: '', // For Add New Alerts,\n\n      mobileOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAlertsInfo();\n    this.props.fetchAlertsTypeInfo();\n  }\n\n  onHandleDropdownChange(event) {\n    this.setState({\n      alertCondition: event.target.value,\n    });\n  }\n\n  onHandleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  // Edit Alert Condition, Alert Range and Description\n  editalerts(i) {\n    const alerts = [...this.props.alerts];\n    alerts[i].edit = !alerts[i].edit;\n    this.setState({\n      ...this.state,\n      alerts,\n    });\n  }\n\n  // Select all Alerts from the table\n  selectAllalerts(event) {\n    const { checked } = event.target;\n    const alerts = [];\n    this.props.alerts.forEach(alert => {\n      alerts.push({\n        ...alert,\n        selected: checked,\n      });\n    });\n    this.setState({\n      ...this.state,\n      alerts,\n    });\n  }\n\n  updateAlertsState(alertsData) {\n    this.setState({\n      ...this.state,\n      alerts: alertsData\n    });\n  }\n\n  // update existing alerts with change in fields\n  updateAlerts(alerts) {\n    const newalerts = {\n      ...alerts,\n    };\n    this.props.updateAlertsInfo(newalerts);\n  }\n\n  // Cancel all the changes made\n  cancelChange(i) {\n    const alerts = [...this.props.alerts];\n    alerts[i].edit = !alerts[i].edit;\n    this.setState({\n      ...this.state,\n      alerts,\n    });\n  }\n\n  // Delete selected alerts from backend\n  deletealerts() {\n    const ids = [];\n    this.props.alerts.forEach(alerts => {\n      if (alerts.selected) ids.push(alerts.alertName);\n    });\n    if (ids.length <= 0) {\n      this.props.openAlertBox({\n        alertOpen: true,\n        istypealert: true,\n        alerttype: 'alert',\n        alerttitle: 'Delete Alert',\n        alertdescription: 'Please select an alert to delete',\n      });\n      return;\n    }\n    const data = {\n      ids,\n    };\n    this.props.deleteAlertsInfo(data);\n    this.handleAlertClose();\n  }\n\n  // API for selecting a alert cluster\n  selectAlertCluster(cluster, i) {\n    this.setState({\n      ...this.state,\n      alertClusterName: cluster.name,\n      radioindex: i,\n    });\n  }\n\n  // API for selecting a alert sub cluster\n  selectAlertSubCluster(clusterName, alertSubCluster, i) {\n    this.setState({\n      ...this.state,\n      selectedAlertSubCluster: alertSubCluster,\n      alertClusterName: clusterName,\n      radioindex: i,\n    });\n  }\n\n  // API for selecting a particular alert type\n  alertTypeSelected(type, i, j) {\n    this.setState({\n      ...this.state,\n      radioindex: i,\n      alertType: type.type,\n    });\n    this.props.setAlertsInfo({ type, i, j });\n  }\n\n  // Select Alerts from Table\n  selectalerts(event, i) {\n    const alerts = [...this.props.alerts];\n    alerts[i].selected = event.target.checked;\n    this.setState({\n      ...this.state,\n      alerts,\n    });\n  }\n\n  // API to toggle alert name... Dont delete from the Mongo DB\n  toggleAlertStatus(i) {\n    const alert = {\n      alertName: this.props.alerts[i].alertName,\n      status: !this.props.alerts[i].active,\n    };\n    this.props.toggleAlertsInfo(alert);\n  }\n\n  // Add new alerts in DB\n  addAlerts() {\n    // if (this.state.alertCondition == \"Inside Range\" || this.state.alertCondition == \"Outside Range\")\n    //     var regex = /^[0-9-]+$/\n    // else\n    const regex = /\\b(0?[1-9]|[1-9][0-9]|100)\\b/; // /^[0-9]+$/\n    // Validate TextBox value against the Regex.\n    const isValid = regex.test(this.state.alertRange);\n    if (!isValid) {\n      this.props.openAlertBox({\n        alertOpen: true,\n        istypealert: true,\n        alerttype: 'alert',\n        alerttitle: 'Add Alert',\n        alertdescription: 'Please specify a valid input',\n      });\n      return;\n    }\n    if (\n      this.state.alertName === '' ||\n      this.state.alertRadioButton === '' ||\n      this.state.alertCondition === '' ||\n      this.state.alertRange === '' ||\n      this.state.alertType === ''\n    ) {\n      // alert(\"Please specify a valid input\");\n      this.props.openAlertBox({\n        alertOpen: true,\n        istypealert: true,\n        alerttype: 'alert',\n        // alerttitle:\"Input Error\",\n        alerttitle: 'Add Alert',\n        alertdescription: 'Please specify a valid input',\n      });\n      return;\n    }\n    let alertType = '';\n    this.props.alertClusters.map(cluster => {\n      return {\n        ...cluster,\n        alertSubCluster: cluster.alertSubCluster.map((subcluster) => {\n          return {\n            ...subcluster,\n            alertTypes: subcluster.alertTypes.forEach(cip => {\n              if (cip.selected === true) {\n                if (alertType === '') alertType = cip.type;\n                else alertType = `${alertType}|${cip.type}`;\n              }\n            }),\n          };\n        }),\n      };\n    });\n    this.setState({\n      ...this.state,\n      alertType,\n    });\n\tlet subClusterName= this.state.selectedAlertSubCluster.name;\n\tif (subClusterName === \"cpu \")\n\t  subClusterName = \"cpu\"\n    const addNewAlert = {\n      alertName: this.state.alertName,\n      alertField: this.state.alertRadioButton,\n      alertCluster: this.state.alertClusterName,\n      alertSubCluster: subClusterName,\n      alertType: this.state.alertType,\n      alertCondition: this.state.alertCondition, // For Add New Alerts\n      alertRange: this.state.alertRange, // For Add New Alerts\n      description: this.state.description, // For Add New Alerts\n    };\n    this.props.addNewAlertsInfo(addNewAlert);\n    this.setState({\n      alertName: '',\n      alertField: '',\n      alertRadioButton: '', // For Alert Fields\n      alertCondition: 'Greater Than', // For Add New Alerts\n      alertRange: '', // For Add New Alerts\n      description: '', // For Add New Alerts\n    });\n    this.handleAlertClose();\n  }\n\n  openAlert(operationType) {\n    this.props.openAlertBox({\n      alertOpen: true,\n      addDeleteSend: operationType,\n      alerttype: 'delete',\n      istypealert: false,\n      alerttitle: `${operationType} Alert`,\n      alertdescription: `Are you sure you want to ${operationType} the alert?`,\n    }\n    );\n  }\n\n  handleAlertClose() {\n    this.props.openAlertBox({\n      alertOpen: false\n    });\n  }\n\n  triggerCommand() {\n    if (this.props.addDeleteSend === 'Delete') {\n      this.deletealerts();\n    } else if (this.props.addDeleteSend === 'Add') {\n      this.addAlerts();\n    }\n  }\n\n  handleDrawerToggle() {\n    this.setState({\n      mobileOpen: !this.state.mobileOpen\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <ThemeProvider theme={PageTheme}>\n        <div className={classes.AlertManagementContainer} data-testid=\"alertManagementTag\">\n          {/* <Header toggleDrawer={this.handleDrawerToggle} /> */}\n          {/* <Sidebar mobileOpen={this.state.mobileOpen} toggleDrawer={this.handleDrawerToggle} /> */}\n          <main className={classes.content}>\n            {/* <div className={classes.toolbar} /> */}\n            <Grid container spacing={3}>\n              <AlertTable\n                selectalerts={this.selectalerts}\n                togglealertstatus={this.toggleAlertStatus}\n                editalerts={this.editalerts}\n                cancelChange={this.cancelChange}\n                saveChange={this.updateAlerts}\n                updateAlertsState={this.updateAlertsState}\n                deletealerts={this.deletealerts}\n                selectAllalerts={this.selectAllalerts}\n                alerts={this.props.alerts}\n                dropdownCondition={this.state.conditions}\n                alertOpen={this.state.alertOpen_alertTable}\n                alerttitle={this.state.alertboxtitle_alertTable}\n                alertdescription={this.state.alertboxdescription_alertTable}\n                triggerCommand={this.triggerCommand}\n                openAlert={this.openAlert}\n              />\n              <Grid item container spacing={3}>\n                <AlertTypes\n                  selectAlertCluster={this.selectAlertCluster}\n                  selectAlertSubCluster={this.selectAlertSubCluster}\n                  alertClusterList={this.props.alertClusters}\n                  selectedAlertSubCluster={this.state.selectedAlertSubCluster}\n                  alertTypeSelected={this.alertTypeSelected}\n                />\n\n                <AlertFields\n                  radiolist={this.state.radiolist}\n                  alertClusterList={this.props.alertClusters}\n                  alertRadioButton={this.state.alertRadioButton}\n                  onHandleChange={this.onHandleChange}\n                  radioindex={this.state.radioindex}\n                  alertClusterName={this.state.alertClusterName}\n                  selectedAlertSubCluster={this.state.selectedAlertSubCluster}\n                  alertType={this.state.alertType}\n                />\n              </Grid>\n              <Grid item container>\n                <AddNewAlerts\n                  dropdownCondition={this.state.conditions}\n                  onHandleChange={this.onHandleChange}\n                  alertName={this.state.alertName}\n                  alertCondition={this.state.alertCondition}\n                  onHandleDropdownChange={this.onHandleDropdownChange}\n                  alertRadioButton={this.state.alertRadioButton}\n                  alertRange={this.state.alertRange}\n                  description={this.state.description}\n                  // addAlerts={this.addAlerts}\n                  openAlert={this.openAlert}\n                />\n              </Grid>\n              <AlertDialog\n                title={this.props.alerttitle}\n                description={this.props.alertdescription}\n                open={this.props.alertOpen}\n                type={this.props.alerttype}\n                handleClose={this.handleAlertClose}\n                onConfirm={this.triggerCommand}\n              />\n            </Grid>\n          </main>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    alerts: state.alertManagementReducer.alerts,\n    alertClusters: state.alertManagementReducer.alertClusters,\n    alertOpen:state.alertManagementReducer.alertOpen,\n    addDeleteSend: state.alertManagementReducer.addDeleteSend,\n    alerttype: state.alertManagementReducer.alerttype,\n    istypealert: state.alertManagementReducer.istypealert,\n    alerttitle: state.alertManagementReducer.alerttitle,\n    alertdescription: state.alertManagementReducer.alertdescription,\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAlertsInfo: (updatedAlerts) => dispatch(actionCreators.setAlertsInfo(updatedAlerts)),\n    openAlertBox: (alertParam) => dispatch(actionCreators.openAlertBox(alertParam)),\n    fetchAlertsInfo: () => dispatch({ type: actionTypes.SAGA_ALERT_MANAGEMENT_FETCH_ALERTS }),\n    fetchAlertsTypeInfo: () => dispatch({ type: actionTypes.SAGA_ALERT_MANAGEMENT_FETCH_ALERTS_TYPE }),\n    updateAlertsInfo: (newAlerts) => dispatch({ type: actionTypes.SAGA_ALERT_MANAGEMENT_UPDATE_ALERTS, newAlerts, }),\n    deleteAlertsInfo: (deleteAlerts) => dispatch({ type: actionTypes.SAGA_ALERT_MANAGEMENT_DELETE_ALERTS, deleteAlerts, }),\n    toggleAlertsInfo: (toggleAlerts) => dispatch({ type: actionTypes.SAGA_ALERT_MANAGEMENT_TOGGLE_ALERTS, toggleAlerts, }),\n    addNewAlertsInfo: (addNewAlert) => dispatch({ type: actionTypes.SAGA_ALERT_MANAGEMENT_ADD_NEW_ALERTS, addNewAlert, }),\n  };\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(((AlertManagement))));\n"]}