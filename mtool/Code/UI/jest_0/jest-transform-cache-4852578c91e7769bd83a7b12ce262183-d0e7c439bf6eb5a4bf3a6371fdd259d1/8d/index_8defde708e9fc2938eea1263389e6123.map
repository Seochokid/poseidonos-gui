{"version":3,"sources":["index.js"],"names":["style","height","width","float","styles","theme","content","flexGrow","padding","spacing","paddingLeft","paddingRight","paddingTop","toolbar","customTheme","pageHeader","page","title","titleContainer","marginTop","selectLabel","margin","wrapper","operationContainer","breakpoints","down","display","justifyContent","noVols","READ_BANDWIDTH","WRITE_BANDWIDTH","READ_IOPS","WRITE_IOPS","LATENCY","Performance","Component","constructor","props","timeChanged","bind","fetchDetails","levelChanged","volumeChanged","measurementChanged","setChartWidth","handleDrawerToggle","interval","state","chartwidth","mobileOpen","intervalTime","level","volume","chartContent","maxIops","maxBw","maxLatency","vols","selectedMeasurement","componentDidMount","fetchVolumeNames","fetchPowerSensorInfo","setInterval","window","addEventListener","componentWillUnmount","clearInterval","removeEventListener","Reset_State","setTimeout","chart","document","getElementById","clientWidth","setState","fetchCpuUsage","t","Get_Cpu_Usage","time","fetchInputPower","fetchReadBandwidth","i","length","Get_Read_Bandwidth","includes","fetchWriteBandwidth","Get_Write_Bandwidth","fetchWriteIOPS","Get_Write_IOPS","fetchReadIOPS","Get_Read_IOPS","fetchLatency","Get_Latency","event","target","value","volumes","push","id","Get_Volumes","vol","maxiops","maxbw","render","timeIntervals","measurements","label","classes","PageTheme","name","r","volumeRef","map","measurement","power_sensor_info","power","PowerInputWatts","power_usage","loaded","yLabel","Name","readBandwidth","writeBandwidth","readIOPS","writeIOPS","latency","cpuUsage","mapStateToProps","performanceReducer","diskWrite","diskUsed","storageReducer","hardwareSensorReducer","mapDispatchToProps","dispatch","payload","type","actionTypes","SAGA_FETCH_CPU_USAGE","SAGA_FETCH_READ_BANDWIDTH","SAGA_FETCH_WRITE_BANDWIDTH","SAGA_FETCH_READ_IOPS","SAGA_FETCH_WRITE_IOPS","SAGA_FETCH_LATENCY","SAGA_FETCH_INPUT_POWER_VARIATION","SAGA_FETCH_VOLUMES","RESET_PERF_STATE","SAGA_HARDWARE_SENSORS_FETCH_POWER_SENSOR_INFORMATION","withStyles","connect"],"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <File description> *\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[12/06/2019] [Aswin] : Bandwidth changed to KB/s. Description and style changes\n*/\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { Grid, Typography, Box, FormControl, Select, MenuItem, Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport Chart from '../../components/Chart';\nimport './Performance.css';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport { customTheme, PageTheme } from '../../theme';\nimport * as actionTypes from \"../../store/actions/actionTypes\";\n\nconst style = {\n  height: '300px',\n  width: '100%',\n  float: 'left',\n};\n\nconst styles = (theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingLeft: \"35px\",\n    paddingRight: \"35px\",\n    paddingTop: \"10px\"\n  },\n  toolbar: customTheme.toolbar,\n  pageHeader: customTheme.page.title,\n  titleContainer: {\n    marginTop: theme.spacing(1)\n  },\n  selectLabel: {\n    margin: theme.spacing(0, 1)\n  },\n  wrapper: {\n    marginTop: theme.spacing(1)\n  },\n  operationContainer: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  noVols: {\n    marginTop: theme.spacing(4)\n  }\n});\n\nconst READ_BANDWIDTH = 'read_bw';\nconst WRITE_BANDWIDTH = 'write_bw';\nconst READ_IOPS = 'read_iops';\nconst WRITE_IOPS = 'write_iops';\nconst LATENCY = 'latency';\n\nclass Performance extends Component {\n  constructor(props) {\n    super(props);\n    this.timeChanged = this.timeChanged.bind(this);\n    this.fetchDetails = this.fetchDetails.bind(this);\n    this.levelChanged = this.levelChanged.bind(this);\n    this.volumeChanged = this.volumeChanged.bind(this);\n    this.measurementChanged = this.measurementChanged.bind(this);\n    this.setChartWidth = this.setChartWidth.bind(this);\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\n    this.interval = null;\n    this.state = {\n      chartwidth: 300,\n      mobileOpen: false,\n      intervalTime: '1m',\n      level: 'array',\n      volume: '',\n      chartContent: ['array'],\n      maxIops: null,\n      maxBw: null,\n      maxLatency:null,\n      vols: [],\n      selectedMeasurement: [READ_BANDWIDTH]\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDetails();\n    this.fetchVolumeNames();\n    this.props.fetchPowerSensorInfo();\n    this.interval = setInterval(() => {\n      this.fetchDetails();\n    }, 2000);\n    this.setChartWidth();\n    window.addEventListener(\"resize\", this.setChartWidth);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    window.removeEventListener(\"resize\", this.setChartWidth);\n    this.props.Reset_State();\n  }\n\n  setChartWidth() {\n    setTimeout(() => {\n      const chart = document.getElementById(\n        'graph-grid-1'\n      );\n      const chartwidth = chart ? chart.clientWidth : 500;\n      this.setState({\n        ...this.state,\n        chartwidth,\n      });\n    }, 100);\n  }\n\n  handleDrawerToggle() {\n    this.setState({\n      mobileOpen: !this.state.mobileOpen\n    });\n  }\n\n  // fetchDiskUsed(t) {\n  //   this.props.Get_Disk_Used({time: t});\n  // }\n\n  // fetchDiskWrite(t) {\n  //   this.props.Get_Disk_Write({time: t});\n  // }\n\n  fetchCpuUsage(t) {\n    this.props.Get_Cpu_Usage({ time: t });\n  }\n\n  fetchInputPower(t) {\n    this.props.fetchInputPower({ time: t });\n  }\n\n  fetchReadBandwidth(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Read_Bandwidth({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(READ_BANDWIDTH))\n        this.props.Get_Read_Bandwidth({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  fetchWriteBandwidth(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Write_Bandwidth({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(WRITE_BANDWIDTH))\n        this.props.Get_Write_Bandwidth({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  fetchWriteIOPS(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Write_IOPS({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(WRITE_IOPS))\n        this.props.Get_Write_IOPS({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  fetchReadIOPS(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Read_IOPS({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(READ_IOPS))\n        this.props.Get_Read_IOPS({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  \n  fetchLatency(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Latency({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(LATENCY))\n        this.props.Get_Latency({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  fetchDetails() {\n    if (this.state.level === 'system') {\n      this.fetchCpuUsage(this.state.intervalTime);\n    }\n    else if (this.state.level === 'power')\n      this.fetchInputPower(this.state.intervalTime);\n    else {\n      this.fetchReadIOPS(this.state.intervalTime);\n      this.fetchWriteIOPS(this.state.intervalTime);\n      this.fetchReadBandwidth(this.state.intervalTime);\n      this.fetchWriteBandwidth(this.state.intervalTime);\n      this.fetchLatency(this.state.intervalTime);\n    }\n  }\n\n  timeChanged(event) {\n    this.setState({\n      ...this.state,\n      intervalTime: event.target.value,\n    });\n    setTimeout(() => {\n      this.fetchDetails();\n    });\n  }\n\n  levelChanged(event) {\n    if (event.target.value === 'array') {\n      this.setState({\n        ...this.state,\n        level: 'array',\n        chartContent: ['array'],\n        maxIops: null,\n        maxBw: null,\n        maxLatency: null,\n      });\n      setTimeout(() => {\n        this.fetchDetails();\n      });\n    } else if (event.target.value === 'volume') {\n      const vols = []; const chartContent = [];\n      for (let i = 0; i < this.props.volumes.length; i += 1 ) {\n        chartContent.push(this.props.volumes[i].id);\n        vols.push(this.props.volumes[i]);\n      }\n      this.setState({\n        ...this.state,\n        chartContent,\n        level: event.target.value,\n        volume: 'all-volumes',\n        vols\n      });\n      setTimeout(() => {\n        this.fetchDetails();\n      });\n      this.fetchVolumeNames();\n    } else if (event.target.value === 'system') {\n      this.setState({\n        ...this.state,\n        level: 'system',\n      });\n      setTimeout(() => {\n        this.fetchDetails();\n      });\n    }\n    else if (event.target.value === 'power') {\n      this.setState({\n        ...this.state,\n        level: 'power',\n      });\n      setTimeout(() => {\n        this.fetchDetails();\n      });\n      this.props.fetchPowerSensorInfo();\n    }\n  }\n\n  fetchVolumeNames() {\n    this.props.Get_Volumes();\n  }\n\n  measurementChanged(event) {\n    this.setState({\n      ...this.state,\n      selectedMeasurement: [event.target.value]\n    });\n    this.props.Reset_State();\n  }\n\n  volumeChanged(event) {\n    let vol; const chartContent = []; const vols = [];\n    if (event.target.value === 'all-volumes') {\n      for (let i = 0; i < this.props.volumes.length; i += 1 ) {\n        chartContent.push(this.props.volumes[i].id);\n        vols.push(this.props.volumes[i]);\n      }\n      this.setState({\n        ...this.state,\n        chartContent,\n        volume: event.target.value,\n        vols\n      });\n    } else {\n      for (let i = 0; i < this.props.volumes.length; i += 1 ) {\n        if (event.target.value === this.props.volumes[i].id) {\n          vol = this.props.volumes[i];\n        }\n      }\n      this.setState({\n        ...this.state,\n        chartContent: [event.target.value],\n        volume: event.target.value,\n        maxIops: vol.maxiops,\n        maxBw: vol.maxbw,\n        maxLatency: vol.maxLatency,\n        vols: [vol]\n      });\n    }\n    this.props.Reset_State();\n    setTimeout(() => {\n      this.fetchDetails();\n    });\n  }\n\n  render() {\n    const timeIntervals = [\n      [\"1m\", \"Last 1m\"],\n      [\"5m\", \"Last 5m\"],\n      [\"15m\", \"Last 15m\"],\n      [\"1h\", \"Last 1h\"],\n      [\"6h\", \"Last 6h\"],\n      [\"12h\", \"Last 12h\"],\n      [\"24h\", \"Last 24h\"],\n      [\"7d\", \"Last 7d\"],\n      [\"30d\", \"Last 30d\"]\n    ];\n    const measurements = [{\n      label: \"Read Bandwidth\",\n      value: READ_BANDWIDTH\n    }, {\n      label: \"Write Bandwidth\",\n      value: WRITE_BANDWIDTH\n    }, {\n      label: \"Read IOPS\",\n      value: READ_IOPS\n    }, {\n      label: \"Write IOPS\",\n      value: WRITE_IOPS\n    },\n    {\n      label: \"Latency\",\n      value: LATENCY\n    }];\n\n    const { classes } = this.props;\n    return (\n      <ThemeProvider theme={PageTheme}>\n        <Box display=\"flex\">\n          <Header toggleDrawer={this.handleDrawerToggle} />\n          <Sidebar mobileOpen={this.state.mobileOpen} toggleDrawer={this.handleDrawerToggle} />\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Grid container spacing={3}>\n              <Grid container spacing={3} className={classes.titleContainer}>\n                <Grid sm={6} xs={12} item>\n                  <Typography className={classes.pageHeader} variant=\"h6\">Performance</Typography>\n                </Grid>\n                <Grid sm={6} xs={12} item container direction=\"row\" alignItems=\"center\" justify=\"flex-end\" className={classes.operationContainer}>\n                  <Typography className={classes.selectLabel}>Level:</Typography>\n                  <FormControl>\n                    <Select\n                      testId=\"level\"\n                      value={this.state.level}\n                      onChange={this.levelChanged}\n                      inputProps={{\n                        name: 'Level',\n                        id: 'level',\n                        'data-testid': \"levelInput\",\n                      }}\n                      SelectDisplayProps={{\n                        'data-testid': 'levelSelect'\n                      }}\n                    >\n                      <MenuItem value=\"array\">\n                        <Typography color=\"secondary\" data-testid=\"arrayMenuItem\">Array</Typography>\n                      </MenuItem>\n                      <MenuItem value=\"volume\">\n                        <Typography color=\"secondary\" data-testid=\"volumeMenuItem\">Volume</Typography>\n                      </MenuItem>\n                      <MenuItem value=\"system\">\n                        <Typography color=\"secondary\" data-testid=\"systemMenuItem\">System</Typography>\n                      </MenuItem>\n                      {/* <MenuItem value=\"power\">\n                        <Typography color=\"secondary\" data-testid=\"powerMenuItem\">Power</Typography>\n                      </MenuItem> */}\n                    </Select>\n                  </FormControl>\n                  {(this.state.level === 'volume') ? (\n                    <React.Fragment>\n                      <Typography className={classes.selectLabel}>Volume:</Typography>\n                      <FormControl>\n                        <Select\n                          value={this.state.volume}\n                          onChange={this.volumeChanged}\n                          inputProps={{\n                            name: 'Volume',\n                            id: 'volume',\n                            'data-testid': \"volumeInput\",\n                          }}\n                          SelectDisplayProps={{\n                            'data-testid': 'volumeSelect'\n                          }}\n                          id=\"volume\"\n                          ref={(r) => {\n                            this.volumeRef = r\n                          }}\n                          disabled={this.props.volumes &&\n                            this.props.volumes.length < 1}\n                        >\n                          {/* {console.log(\"ref\",this.volumeRef)} */}\n                          <MenuItem value=\"all-volumes\" data-testid=\"all-volume\">\n                            <Typography color=\"secondary\">\n                              All Volumes\n                            </Typography>\n                          </MenuItem>\n                          {this.props.volumes.map((volume) => (\n                            <MenuItem value={volume.id} data-testid={volume.name}>\n                              <Typography color=\"secondary\">\n                                {volume.name}\n                              </Typography>\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </React.Fragment>\n                  ) : null}\n                  {(this.state.level === 'volume') && (this.state.volume === 'all-volumes') ? (\n                    <React.Fragment>\n                      <Typography className={classes.selectLabel}>Measurement:</Typography>\n                      <Select\n                        value={this.state.selectedMeasurement[0]}\n                        onChange={this.measurementChanged}\n                        inputProps={{\n                          name: 'Time',\n                          id: 'time',\n                          'data-testid': \"timeInput\"\n                        }}\n                      >\n                        {measurements.map((measurement) => (\n                          <MenuItem key={measurement.value} value={measurement.value} data-testid={measurement.value}>\n                            <Typography color=\"secondary\">\n                              {measurement.label}\n                            </Typography>\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </React.Fragment>\n                  ) : null}\n                  <Typography className={classes.selectLabel}>Time:</Typography>\n                  <FormControl>\n                    <Select\n                      value={this.state.intervalTime}\n                      onChange={this.timeChanged}\n                      inputProps={{\n                        name: 'Time',\n                        id: 'time',\n                        'data-testid': \"timeInput\"\n                      }}\n                      SelectDisplayProps={{\n                        'data-testid': 'intervalSelect'\n                      }}\n                    >\n                      {timeIntervals.map((t) => (\n                        <MenuItem key={t[0]} value={t[0]} data-testid={t[0]}>\n                          <Typography color=\"secondary\">\n                            {t[1]}\n                          </Typography>\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n              {this.state.level === \"power\" ? (\n                this.props.power_sensor_info.map((power) => (\n                  power.PowerInputWatts ? (\n                    <React.Fragment>\n                      {this.props.power_usage ? (\n                        <Grid item xs={12} md={6} id=\"graph-grid-1\">\n                          <Chart\n                            id=\"chart-5\"\n                            columns={this.props.power_usage}\n                            loaded={this.props.power_usage.loaded}\n                            yLabel={this.props.power_usage.yLabel}\n                            chartName={power.Name}// {\"PSU \"+itr + \"- Voltage\"}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            style={style}\n                          />\n                        </Grid>\n                      ):null}\n                    </React.Fragment>\n                  ) : null))) : null}\n              {this.state.level === 'array' ? (\n                <Grid container spacing={1} className={classes.wrapper}>\n                  <Grid item xs={12} md={6} id=\"graph-grid-1\">\n                    <Chart\n                      id=\"chart-1\"\n                      columns={this.props.readBandwidth}\n                      loaded={this.props.readBandwidth.loaded}\n                      yLabel={this.props.readBandwidth.yLabel}\n                      chartName={this.props.readBandwidth.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxBw}\n                      style={style}\n                      datatestid=\"readBandwidth\"\n                      scatterId=\"readBandwidthScatter\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-2\"\n                      columns={this.props.writeBandwidth}\n                      loaded={this.props.writeBandwidth.loaded}\n                      yLabel={this.props.writeBandwidth.yLabel}\n                      chartName={this.props.writeBandwidth.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxBw}\n                      style={style}\n                      datatestid=\"writeBandwidth\"\n                      scatterId=\"writeBandwidthScatter\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-3\"\n                      columns={this.props.readIOPS}\n                      loaded={this.props.readIOPS.loaded}\n                      yLabel={this.props.readIOPS.yLabel}\n                      chartName={this.props.readIOPS.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxIops}\n                      style={style}\n                      datatestid=\"readIOPS\"\n                      scatterId=\"readIOPSScatter\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-4\"\n                      columns={this.props.writeIOPS}\n                      loaded={this.props.writeIOPS.loaded}\n                      yLabel={this.props.writeIOPS.yLabel}\n                      chartName={this.props.writeIOPS.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxIops}\n                      style={style}\n                      datatestid=\"writeIOPS\"\n                      scatterId=\"writeIOPSScatter\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-5\"\n                      columns={this.props.latency}\n                      loaded={this.props.latency.loaded}\n                      yLabel={this.props.latency.yLabel}\n                      chartName={this.props.latency.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxLatency}\n                      style={style}\n                      datatestid=\"latency\"\n                      scatterId=\"latencyScatter\"\n                    />\n                  </Grid>\n                </Grid>\n              ) : null}\n              {this.state.level === \"system\" ? (\n                <Grid container spacing={1} className={classes.wrapper}>\n                  <Grid item xs={12} md={6} id=\"graph-grid-1\">\n                    <Chart\n                      id=\"chart-5\"\n                      columns={this.props.cpuUsage}\n                      loaded={this.props.cpuUsage.loaded}\n                      yLabel={this.props.cpuUsage.yLabel}\n                      chartName={this.props.cpuUsage.name}\n                      width={this.state.chartwidth}\n                      maxValue={100}\n                      interval={this.state.intervalTime}\n                      style={style}\n                    />\n                  </Grid>\n\n                  {/* <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-7\"\n                      columns={this.props.diskUsed}\n                      loaded={this.props.diskUsed.loaded}\n                      yLabel={this.props.diskUsed.yLabel}\n                      chartName={this.props.diskUsed.name}\n                      width={this.state.chartwidth}\n                      maxValue={100}\n                      interval={this.state.intervalTime}\n                      style={style}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-8\"\n                      columns={this.props.diskWrite}\n                      loaded={this.props.diskWrite.loaded}\n                      yLabel={this.props.diskWrite.yLabel}\n                      chartName={this.props.diskWrite.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      style={style}\n                    />\n                  </Grid> */}\n                </Grid>\n              ) : null}\n              {this.state.level === \"volume\" ? (\n                this.state.chartContent.map((content) => (\n                  this.props.vols[content] ? (\n                    <React.Fragment>\n                      {this.props.vols[content].readBandwidth ? (\n                        <Grid item xs={12} md={6} id=\"graph-grid-1\">\n                          <Chart\n                            id=\"chart-1\"\n                            columns={this.props.vols[content].readBandwidth}\n                            loaded={this.props.vols[content].readBandwidth.loaded}\n                            yLabel={this.props.vols[content].readBandwidth.yLabel}\n                            chartName={this.props.vols[content].readBandwidth.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].readBandwidth.maxbw}\n                            style={style}\n                            datatestid=\"readBandwidth\"\n                            scatterId=\"readBandwidthScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n\n                      {this.props.vols[content].writeBandwidth ? (\n                        <Grid item xs={12} md={6}>\n                          <Chart\n                            id=\"chart-2\"\n                            columns={this.props.vols[content].writeBandwidth}\n                            loaded={this.props.vols[content].writeBandwidth.loaded}\n                            yLabel={this.props.vols[content].writeBandwidth.yLabel}\n                            chartName={this.props.vols[content].writeBandwidth.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].writeBandwidth.maxbw}\n                            style={style}\n                            datatestid=\"writeBandwidth\"\n                            scatterId=\"writeBandwidthScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n                      {this.props.vols[content].readIOPS ? (\n                        <Grid item xs={12} md={6}>\n                          <Chart\n                            id=\"chart-3\"\n                            columns={this.props.vols[content].readIOPS}\n                            loaded={this.props.vols[content].readIOPS.loaded}\n                            yLabel={this.props.vols[content].readIOPS.yLabel}\n                            chartName={this.props.vols[content].readIOPS.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].readIOPS.maxiops}\n                            style={style}\n                            datatestid=\"readIOPS\"\n                            scatterId=\"readIOPSScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n                      {this.props.vols[content].writeIOPS ? (\n                        <Grid item xs={12} md={6}>\n                          <Chart\n                            id=\"chart-4\"\n                            columns={this.props.vols[content].writeIOPS}\n                            loaded={this.props.vols[content].writeIOPS.loaded}\n                            yLabel={this.props.vols[content].writeIOPS.yLabel}\n                            chartName={this.props.vols[content].writeIOPS.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].writeIOPS.maxiops}\n                            style={style}\n                            datatestid=\"writeIOPS\"\n                            scatterId=\"writeIOPSScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n\n                      {this.props.vols[content].latency ? (\n                        <Grid item xs={12} md={6}>\n                          <Chart\n                            id=\"chart-5\"\n                            columns={this.props.vols[content].latency}\n                            loaded={this.props.vols[content].latency.loaded}\n                            yLabel={this.props.vols[content].latency.yLabel}\n                            chartName={this.props.vols[content].latency.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].latency.maxLatency}\n                            style={style}\n                            datatestid=\"latency\"\n                            scatterId=\"latencyScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n\n                    </React.Fragment>\n                  ) : null\n                ))\n              ) : null}\n              {this.state.level === \"volume\" && this.state.chartContent.length === 0 ? (\n                <Container className={classes.noVols}>\n                  <Typography variant=\"h1\" align=\"center\">No Volumes Created</Typography>\n                </Container>\n              ) : null}\n            </Grid>\n          </main>\n        </Box>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cpuUsage: state.performanceReducer.cpuUsage,\n    diskWrite: state.performanceReducer.diskWrite,\n    diskUsed: state.performanceReducer.diskUsed,\n    readIOPS: state.performanceReducer.readIOPS,\n    writeIOPS: state.performanceReducer.writeIOPS,\n    readBandwidth: state.performanceReducer.readBandwidth,\n    power_usage: state.performanceReducer.power_usage,\n    vols: state.performanceReducer.vols,\n    writeBandwidth: state.performanceReducer.writeBandwidth,\n    latency: state.performanceReducer.latency,\n    volumes: state.storageReducer.volumes,\n    power_sensor_info: state.hardwareSensorReducer.power_sensor_info,\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    Get_Cpu_Usage: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_CPU_USAGE, payload }),\n    Get_Read_Bandwidth: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_READ_BANDWIDTH, payload }),\n    Get_Write_Bandwidth: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_WRITE_BANDWIDTH, payload }),\n    Get_Read_IOPS: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_READ_IOPS, payload }),\n    Get_Write_IOPS: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_WRITE_IOPS, payload }),\n    Get_Latency: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_LATENCY, payload }),\n    fetchInputPower: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_INPUT_POWER_VARIATION,payload }),\n    Get_Volumes: () => dispatch({ type: actionTypes.SAGA_FETCH_VOLUMES }),\n    Reset_State: () => dispatch({ type: actionTypes.RESET_PERF_STATE }),\n    fetchPowerSensorInfo: () => dispatch({ type: actionTypes.SAGA_HARDWARE_SENSORS_FETCH_POWER_SENSOR_INFORMATION, }),\n  }\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(Performance));\n"]}