071099084821c76f0e10cf9703bd9f3b
/* istanbul ignore next */
"use strict";

var cov_29jgknmgwd = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/performanceActions.js";
  var hash = "334d6852f300551228daa08ac24364f8a786d2de";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/performanceActions.js",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "1": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "2": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "3": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "4": {
        start: {
          line: 43,
          column: 29
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "5": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "6": {
        start: {
          line: 50,
          column: 34
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "7": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "8": {
        start: {
          line: 57,
          column: 35
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "9": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "10": {
        start: {
          line: 64,
          column: 29
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "11": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "12": {
        start: {
          line: 71,
          column: 30
        },
        end: {
          line: 76,
          column: 1
        }
      },
      "13": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "14": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 83,
          column: 1
        }
      },
      "15": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "16": {
        start: {
          line: 85,
          column: 40
        },
        end: {
          line: 90,
          column: 1
        }
      },
      "17": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "18": {
        start: {
          line: 92,
          column: 37
        },
        end: {
          line: 101,
          column: 1
        }
      },
      "19": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "20": {
        start: {
          line: 103,
          column: 38
        },
        end: {
          line: 112,
          column: 1
        }
      },
      "21": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "22": {
        start: {
          line: 114,
          column: 32
        },
        end: {
          line: 123,
          column: 1
        }
      },
      "23": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "24": {
        start: {
          line: 125,
          column: 33
        },
        end: {
          line: 134,
          column: 1
        }
      },
      "25": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "26": {
        start: {
          line: 136,
          column: 31
        },
        end: {
          line: 145,
          column: 1
        }
      },
      "27": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 30
          }
        },
        loc: {
          start: {
            line: 29,
            column: 43
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 36,
            column: 31
          }
        },
        loc: {
          start: {
            line: 36,
            column: 45
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 43,
            column: 30
          }
        },
        loc: {
          start: {
            line: 43,
            column: 43
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 50,
            column: 35
          }
        },
        loc: {
          start: {
            line: 50,
            column: 42
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 57,
            column: 35
          },
          end: {
            line: 57,
            column: 36
          }
        },
        loc: {
          start: {
            line: 57,
            column: 43
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 64,
            column: 29
          },
          end: {
            line: 64,
            column: 30
          }
        },
        loc: {
          start: {
            line: 64,
            column: 39
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 64
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 71,
            column: 31
          }
        },
        loc: {
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 71
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 29
          }
        },
        loc: {
          start: {
            line: 78,
            column: 41
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 78
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 85,
            column: 40
          },
          end: {
            line: 85,
            column: 41
          }
        },
        loc: {
          start: {
            line: 85,
            column: 51
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 85
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 92,
            column: 37
          },
          end: {
            line: 92,
            column: 38
          }
        },
        loc: {
          start: {
            line: 92,
            column: 50
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 92
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 103,
            column: 38
          },
          end: {
            line: 103,
            column: 39
          }
        },
        loc: {
          start: {
            line: 103,
            column: 51
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 103
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 114,
            column: 32
          },
          end: {
            line: 114,
            column: 33
          }
        },
        loc: {
          start: {
            line: 114,
            column: 45
          },
          end: {
            line: 123,
            column: 1
          }
        },
        line: 114
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 125,
            column: 33
          },
          end: {
            line: 125,
            column: 34
          }
        },
        loc: {
          start: {
            line: 125,
            column: 46
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 125
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 136,
            column: 31
          },
          end: {
            line: 136,
            column: 32
          }
        },
        loc: {
          start: {
            line: 136,
            column: 44
          },
          end: {
            line: 145,
            column: 1
          }
        },
        line: 136
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "334d6852f300551228daa08ac24364f8a786d2de"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchVolLatency = exports.fetchVolWriteIops = exports.fetchVolReadIops = exports.fetchVolWriteBandwidth = exports.fetchVolReadBandwidth = exports.fetchInputPowerVariation = exports.fetchLatency = exports.fetchWriteIops = exports.fetchReadIops = exports.fetchWriteBandwidth = exports.fetchReadBandwidth = exports.fetchCpuUsage = exports.fetchDiskWrite = exports.fetchDiskUsed = void 0;

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("./actionTypes"));

/* istanbul ignore next */
cov_29jgknmgwd.s[0]++;

const fetchDiskUsed = diskUsed => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[0]++;
  cov_29jgknmgwd.s[1]++;
  return {
    type: actionTypes.FETCH_DISK_USED,
    diskUsed
  };
};

/* istanbul ignore next */
exports.fetchDiskUsed = fetchDiskUsed;
cov_29jgknmgwd.s[2]++;

const fetchDiskWrite = diskWrite => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[1]++;
  cov_29jgknmgwd.s[3]++;
  return {
    type: actionTypes.FETCH_DISK_WRITE,
    diskWrite
  };
};

/* istanbul ignore next */
exports.fetchDiskWrite = fetchDiskWrite;
cov_29jgknmgwd.s[4]++;

const fetchCpuUsage = cpuUsage => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[2]++;
  cov_29jgknmgwd.s[5]++;
  return {
    type: actionTypes.FETCH_CPU_USAGE,
    cpuUsage
  };
};

/* istanbul ignore next */
exports.fetchCpuUsage = fetchCpuUsage;
cov_29jgknmgwd.s[6]++;

const fetchReadBandwidth = bw => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[3]++;
  cov_29jgknmgwd.s[7]++;
  return {
    type: actionTypes.FETCH_READ_BANDWIDTH,
    bw
  };
};

/* istanbul ignore next */
exports.fetchReadBandwidth = fetchReadBandwidth;
cov_29jgknmgwd.s[8]++;

const fetchWriteBandwidth = bw => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[4]++;
  cov_29jgknmgwd.s[9]++;
  return {
    type: actionTypes.FETCH_WRITE_BANDWIDTH,
    bw
  };
};

/* istanbul ignore next */
exports.fetchWriteBandwidth = fetchWriteBandwidth;
cov_29jgknmgwd.s[10]++;

const fetchReadIops = iops => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[5]++;
  cov_29jgknmgwd.s[11]++;
  return {
    type: actionTypes.FETCH_READ_IOPS,
    iops
  };
};

/* istanbul ignore next */
exports.fetchReadIops = fetchReadIops;
cov_29jgknmgwd.s[12]++;

const fetchWriteIops = iops => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[6]++;
  cov_29jgknmgwd.s[13]++;
  return {
    type: actionTypes.FETCH_WRITE_IOPS,
    iops
  };
};

/* istanbul ignore next */
exports.fetchWriteIops = fetchWriteIops;
cov_29jgknmgwd.s[14]++;

const fetchLatency = latency => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[7]++;
  cov_29jgknmgwd.s[15]++;
  return {
    type: actionTypes.FETCH_LATENCY,
    latency
  };
};

/* istanbul ignore next */
exports.fetchLatency = fetchLatency;
cov_29jgknmgwd.s[16]++;

const fetchInputPowerVariation = watts => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[8]++;
  cov_29jgknmgwd.s[17]++;
  return {
    type: actionTypes.FETCH_INPUT_POWER_VARIATION,
    watts
  };
};

/* istanbul ignore next */
exports.fetchInputPowerVariation = fetchInputPowerVariation;
cov_29jgknmgwd.s[18]++;

const fetchVolReadBandwidth = payload => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[9]++;
  cov_29jgknmgwd.s[19]++;
  return {
    type: actionTypes.FETCH_VOL_READ_BW,
    bw: payload.values,
    level: payload.level,
    name: payload.name,
    maxiops: payload.maxiops,
    maxbw: payload.maxbw
  };
};

/* istanbul ignore next */
exports.fetchVolReadBandwidth = fetchVolReadBandwidth;
cov_29jgknmgwd.s[20]++;

const fetchVolWriteBandwidth = payload => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[10]++;
  cov_29jgknmgwd.s[21]++;
  return {
    type: actionTypes.FETCH_VOL_WRITE_BW,
    bw: payload.values,
    level: payload.level,
    name: payload.name,
    maxiops: payload.maxiops,
    maxbw: payload.maxbw
  };
};

/* istanbul ignore next */
exports.fetchVolWriteBandwidth = fetchVolWriteBandwidth;
cov_29jgknmgwd.s[22]++;

const fetchVolReadIops = payload => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[11]++;
  cov_29jgknmgwd.s[23]++;
  return {
    type: actionTypes.FETCH_VOL_READ_IOPS,
    iops: payload.values,
    level: payload.level,
    name: payload.name,
    maxiops: payload.maxiops,
    maxbw: payload.maxiops
  };
};

/* istanbul ignore next */
exports.fetchVolReadIops = fetchVolReadIops;
cov_29jgknmgwd.s[24]++;

const fetchVolWriteIops = payload => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[12]++;
  cov_29jgknmgwd.s[25]++;
  return {
    type: actionTypes.FETCH_VOL_WRITE_IOPS,
    iops: payload.values,
    level: payload.level,
    name: payload.name,
    maxiops: payload.maxiops,
    maxbw: payload.maxiops
  };
};

/* istanbul ignore next */
exports.fetchVolWriteIops = fetchVolWriteIops;
cov_29jgknmgwd.s[26]++;

const fetchVolLatency = payload => {
  /* istanbul ignore next */
  cov_29jgknmgwd.f[13]++;
  cov_29jgknmgwd.s[27]++;
  return {
    type: actionTypes.FETCH_VOL_LATENCY,
    latency: payload.values,
    level: payload.level,
    name: payload.name,
    maxiops: payload.maxiops,
    maxbw: payload.maxiops
  };
};

/* istanbul ignore next */
exports.fetchVolLatency = fetchVolLatency;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,