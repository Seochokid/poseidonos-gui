fc7ccc51a9836a19e3d6b6be3ff065ec
/* istanbul ignore next */
"use strict";

var cov_9axqni8wc = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/alertManagementReducer.js";
  var hash = "abd1fbb5d9565690c5bb09bca2ad723e2b3b83ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/alertManagementReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "1": {
        start: {
          line: 100,
          column: 31
        },
        end: {
          line: 228,
          column: 1
        }
      },
      "2": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 227,
          column: 5
        }
      },
      "3": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 107,
          column: 17
        }
      },
      "4": {
        start: {
          line: 111,
          column: 39
        },
        end: {
          line: 111,
          column: 59
        }
      },
      "5": {
        start: {
          line: 112,
          column: 31
        },
        end: {
          line: 112,
          column: 32
        }
      },
      "6": {
        start: {
          line: 113,
          column: 31
        },
        end: {
          line: 113,
          column: 32
        }
      },
      "7": {
        start: {
          line: 114,
          column: 38
        },
        end: {
          line: 140,
          column: 18
        }
      },
      "8": {
        start: {
          line: 115,
          column: 20
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "9": {
        start: {
          line: 118,
          column: 28
        },
        end: {
          line: 137,
          column: 30
        }
      },
      "10": {
        start: {
          line: 121,
          column: 36
        },
        end: {
          line: 126,
          column: 37
        }
      },
      "11": {
        start: {
          line: 122,
          column: 40
        },
        end: {
          line: 125,
          column: 42
        }
      },
      "12": {
        start: {
          line: 127,
          column: 36
        },
        end: {
          line: 131,
          column: 37
        }
      },
      "13": {
        start: {
          line: 128,
          column: 40
        },
        end: {
          line: 130,
          column: 42
        }
      },
      "14": {
        start: {
          line: 132,
          column: 36
        },
        end: {
          line: 135,
          column: 38
        }
      },
      "15": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 144,
          column: 18
        }
      },
      "16": {
        start: {
          line: 148,
          column: 31
        },
        end: {
          line: 148,
          column: 33
        }
      },
      "17": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 155,
          column: 19
        }
      },
      "18": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 154,
          column: 23
        }
      },
      "19": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 159,
          column: 18
        }
      },
      "20": {
        start: {
          line: 164,
          column: 40
        },
        end: {
          line: 164,
          column: 42
        }
      },
      "21": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 219,
          column: 17
        }
      },
      "22": {
        start: {
          line: 165,
          column: 29
        },
        end: {
          line: 165,
          column: 30
        }
      },
      "23": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 190,
          column: 22
        }
      },
      "24": {
        start: {
          line: 167,
          column: 24
        },
        end: {
          line: 171,
          column: 26
        }
      },
      "25": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 188,
          column: 25
        }
      },
      "26": {
        start: {
          line: 173,
          column: 36
        },
        end: {
          line: 173,
          column: 37
        }
      },
      "27": {
        start: {
          line: 177,
          column: 28
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "28": {
        start: {
          line: 178,
          column: 32
        },
        end: {
          line: 180,
          column: 86
        }
      },
      "29": {
        start: {
          line: 180,
          column: 65
        },
        end: {
          line: 180,
          column: 84
        }
      },
      "30": {
        start: {
          line: 181,
          column: 32
        },
        end: {
          line: 185,
          column: 87
        }
      },
      "31": {
        start: {
          line: 185,
          column: 60
        },
        end: {
          line: 185,
          column: 85
        }
      },
      "32": {
        start: {
          line: 186,
          column: 32
        },
        end: {
          line: 186,
          column: 86
        }
      },
      "33": {
        start: {
          line: 189,
          column: 24
        },
        end: {
          line: 189,
          column: 67
        }
      },
      "34": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 223,
          column: 18
        }
      },
      "35": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 100,
            column: 31
          },
          end: {
            line: 100,
            column: 32
          }
        },
        loc: {
          start: {
            line: 100,
            column: 65
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 100
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 114,
            column: 62
          },
          end: {
            line: 114,
            column: 63
          }
        },
        loc: {
          start: {
            line: 114,
            column: 81
          },
          end: {
            line: 140,
            column: 17
          }
        },
        line: 114
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 117,
            column: 69
          },
          end: {
            line: 117,
            column: 70
          }
        },
        loc: {
          start: {
            line: 117,
            column: 94
          },
          end: {
            line: 138,
            column: 25
          }
        },
        line: 117
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 120,
            column: 70
          },
          end: {
            line: 120,
            column: 71
          }
        },
        loc: {
          start: {
            line: 120,
            column: 77
          },
          end: {
            line: 136,
            column: 33
          }
        },
        line: 120
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 149,
            column: 38
          },
          end: {
            line: 149,
            column: 39
          }
        },
        loc: {
          start: {
            line: 149,
            column: 47
          },
          end: {
            line: 155,
            column: 17
          }
        },
        line: 149
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 180,
            column: 57
          },
          end: {
            line: 180,
            column: 58
          }
        },
        loc: {
          start: {
            line: 180,
            column: 65
          },
          end: {
            line: 180,
            column: 84
          }
        },
        line: 180
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 185,
            column: 52
          },
          end: {
            line: 185,
            column: 53
          }
        },
        loc: {
          start: {
            line: 185,
            column: 60
          },
          end: {
            line: 185,
            column: 85
          }
        },
        line: 185
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 100,
            column: 32
          },
          end: {
            line: 100,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 100,
            column: 40
          },
          end: {
            line: 100,
            column: 52
          }
        }],
        line: 100
      },
      "1": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 227,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: 109,
            column: 8
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 226,
            column: 25
          }
        }],
        line: 101
      },
      "2": {
        loc: {
          start: {
            line: 121,
            column: 36
          },
          end: {
            line: 126,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 36
          },
          end: {
            line: 126,
            column: 37
          }
        }, {
          start: {
            line: 121,
            column: 36
          },
          end: {
            line: 126,
            column: 37
          }
        }],
        line: 121
      },
      "3": {
        loc: {
          start: {
            line: 121,
            column: 40
          },
          end: {
            line: 121,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 40
          },
          end: {
            line: 121,
            column: 62
          }
        }, {
          start: {
            line: 121,
            column: 66
          },
          end: {
            line: 121,
            column: 81
          }
        }, {
          start: {
            line: 121,
            column: 85
          },
          end: {
            line: 121,
            column: 103
          }
        }],
        line: 121
      },
      "4": {
        loc: {
          start: {
            line: 127,
            column: 36
          },
          end: {
            line: 131,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 36
          },
          end: {
            line: 131,
            column: 37
          }
        }, {
          start: {
            line: 127,
            column: 36
          },
          end: {
            line: 131,
            column: 37
          }
        }],
        line: 127
      },
      "5": {
        loc: {
          start: {
            line: 127,
            column: 40
          },
          end: {
            line: 127,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 40
          },
          end: {
            line: 127,
            column: 61
          }
        }, {
          start: {
            line: 127,
            column: 65
          },
          end: {
            line: 127,
            column: 80
          }
        }, {
          start: {
            line: 127,
            column: 84
          },
          end: {
            line: 127,
            column: 102
          }
        }],
        line: 127
      },
      "6": {
        loc: {
          start: {
            line: 166,
            column: 20
          },
          end: {
            line: 190,
            column: 22
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 20
          },
          end: {
            line: 190,
            column: 22
          }
        }, {
          start: {
            line: 166,
            column: 20
          },
          end: {
            line: 190,
            column: 22
          }
        }],
        line: 166
      },
      "7": {
        loc: {
          start: {
            line: 177,
            column: 28
          },
          end: {
            line: 187,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 28
          },
          end: {
            line: 187,
            column: 29
          }
        }, {
          start: {
            line: 177,
            column: 28
          },
          end: {
            line: 187,
            column: 29
          }
        }],
        line: 177
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "abd1fbb5d9565690c5bb09bca2ad723e2b3b83ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_9axqni8wc.s[0]++, {
  selected: false,
  edit: false,
  alerts: [],
  // For Alert Table
  alertClusters: [{
    // For Alert Types
    _id: '1',
    name: 'CPU',
    alertSubCluster: [{
      _id: '1',
      name: 'cpu-host',
      alertTypes: [{
        type: 'cpu-idle'
      }, {
        type: 'cpu-idle2'
      }, {
        type: 'cpu-affinity'
      }]
    }, {
      _id: '2',
      name: 'cpu-host2',
      alertTypes: [{
        type: 'cpu-idle'
      }, {
        type: 'cpu-affinity'
      }, {
        type: 'cpu-time'
      }]
    }],
    alertFields: ["usage_idle", "usage_system"]
  }, {
    _id: '2',
    name: 'Array',
    alertSubCluster: [{
      name: 'array-disk0',
      alertTypes: [{
        type: 'array-name'
      }, {
        type: 'array-size'
      }]
    }]
  }],
  istypealert: false,
  alerttype: '',
  alertOpen: false,
  addDeleteSend: '',
  alerttitle: '',
  alertdescription: ''
});

/* istanbul ignore next */
cov_9axqni8wc.s[1]++;

const alertManagementReducer = (state =
/* istanbul ignore next */
(cov_9axqni8wc.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_9axqni8wc.f[0]++;
  cov_9axqni8wc.s[2]++;

  switch (action.type) {
    case actionTypes.ALERT_MANAGEMENT_OPEN_ALERT_BOX:
      /* istanbul ignore next */
      cov_9axqni8wc.b[1][0]++;
      {
        /* istanbul ignore next */
        cov_9axqni8wc.s[3]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {}, action.alertParam)
        );
      }

    case actionTypes.ALERT_MANAGEMENT_SET_ALERTS:
      /* istanbul ignore next */
      cov_9axqni8wc.b[1][1]++;
      {
        /* istanbul ignore next */
        const _ref = (cov_9axqni8wc.s[4]++, action.updatedAlerts),
              type = _ref.type,
              i = _ref.i,
              j = _ref.j;

        const value1 =
        /* istanbul ignore next */
        (cov_9axqni8wc.s[5]++, i);
        const value2 =
        /* istanbul ignore next */
        (cov_9axqni8wc.s[6]++, j);
        const alertClusters =
        /* istanbul ignore next */
        (cov_9axqni8wc.s[7]++, state.alertClusters.map((cluster, Citr) => {
          /* istanbul ignore next */
          cov_9axqni8wc.f[1]++;
          cov_9axqni8wc.s[8]++;
          return (
            /* istanbul ignore next */
            _objectSpread({}, cluster, {
              alertSubCluster: cluster.alertSubCluster.map((subcluster, subCitr) => {
                /* istanbul ignore next */
                cov_9axqni8wc.f[2]++;
                cov_9axqni8wc.s[9]++;
                return (
                  /* istanbul ignore next */
                  _objectSpread({}, subcluster, {
                    alertTypes: subcluster.alertTypes.map(cip => {
                      /* istanbul ignore next */
                      cov_9axqni8wc.f[3]++;
                      cov_9axqni8wc.s[10]++;

                      if (
                      /* istanbul ignore next */
                      (cov_9axqni8wc.b[3][0]++, type.type === cip.type) &&
                      /* istanbul ignore next */
                      (cov_9axqni8wc.b[3][1]++, Citr === value1) &&
                      /* istanbul ignore next */
                      (cov_9axqni8wc.b[3][2]++, subCitr === value2)) {
                        /* istanbul ignore next */
                        cov_9axqni8wc.b[2][0]++;
                        cov_9axqni8wc.s[11]++;
                        return (
                          /* istanbul ignore next */
                          _objectSpread({}, cip, {
                            selected: !cip.selected
                          })
                        );
                      } else
                      /* istanbul ignore next */
                      {
                        cov_9axqni8wc.b[2][1]++;
                      }

                      cov_9axqni8wc.s[12]++;

                      if (
                      /* istanbul ignore next */
                      (cov_9axqni8wc.b[5][0]++, cip.selected === true) &&
                      /* istanbul ignore next */
                      (cov_9axqni8wc.b[5][1]++, value1 === Citr) &&
                      /* istanbul ignore next */
                      (cov_9axqni8wc.b[5][2]++, subCitr === value2)) {
                        /* istanbul ignore next */
                        cov_9axqni8wc.b[4][0]++;
                        cov_9axqni8wc.s[13]++;
                        return (
                          /* istanbul ignore next */
                          _objectSpread({}, cip)
                        );
                      } else
                      /* istanbul ignore next */
                      {
                        cov_9axqni8wc.b[4][1]++;
                      }

                      cov_9axqni8wc.s[14]++;
                      return (
                        /* istanbul ignore next */
                        _objectSpread({}, cip, {
                          selected: false
                        })
                      );
                    })
                  })
                );
              })
            })
          );
        }));

        /* istanbul ignore next */
        cov_9axqni8wc.s[15]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            alertClusters
          })
        );
      }

    case actionTypes.ALERT_MANAGEMENT_FETCH_ALERTS:
      /* istanbul ignore next */
      cov_9axqni8wc.b[1][2]++;
      {
        const alerts =
        /* istanbul ignore next */
        (cov_9axqni8wc.s[16]++, []);

        /* istanbul ignore next */
        cov_9axqni8wc.s[17]++;
        action.alerts.forEach(alert => {
          /* istanbul ignore next */
          cov_9axqni8wc.f[4]++;
          cov_9axqni8wc.s[18]++;
          alerts.push(
          /* istanbul ignore next */
          _objectSpread({}, alert, {
            selected: false,
            edit: false
          }));
        });

        /* istanbul ignore next */
        cov_9axqni8wc.s[19]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            alerts
          })
        );
      }

    case actionTypes.ALERT_MANAGEMENT_FETCH_ALERTS_TYPE:
      /* istanbul ignore next */
      cov_9axqni8wc.b[1][3]++;
      {
        const alertTypesArray =
        /* istanbul ignore next */
        (cov_9axqni8wc.s[20]++, []);

        /* istanbul ignore next */
        cov_9axqni8wc.s[21]++;

        for (let i =
        /* istanbul ignore next */
        (cov_9axqni8wc.s[22]++, 0); i < action.alertTypes.length; i += 1) {
          /* istanbul ignore next */
          cov_9axqni8wc.s[23]++;

          if (action.alertTypes[i].name === 'cpu') {
            /* istanbul ignore next */
            cov_9axqni8wc.b[6][0]++;
            cov_9axqni8wc.s[24]++;
            action.alertTypes[i].alertFields = [// 'usage_idle',
            'usage_user'];

            /* istanbul ignore next */
            cov_9axqni8wc.s[25]++;

            for (let j =
            /* istanbul ignore next */
            (cov_9axqni8wc.s[26]++, 0); j < action.alertTypes[i].alertSubCluster.length; j += 1) {
              /* istanbul ignore next */
              cov_9axqni8wc.s[27]++;

              if (action.alertTypes[i].alertSubCluster[j].name === 'cpu') {
                /* istanbul ignore next */
                cov_9axqni8wc.b[7][0]++;
                cov_9axqni8wc.s[28]++;
                action.alertTypes[i].alertSubCluster = action.alertTypes[i].alertSubCluster.filter(item => {
                  /* istanbul ignore next */
                  cov_9axqni8wc.f[5]++;
                  cov_9axqni8wc.s[29]++;
                  return item.name === 'cpu';
                });

                /* istanbul ignore next */
                cov_9axqni8wc.s[30]++;
                action.alertTypes[i].alertSubCluster[j].alertTypes = action.alertTypes[i].alertSubCluster[j].alertTypes.filter(item => {
                  /* istanbul ignore next */
                  cov_9axqni8wc.f[6]++;
                  cov_9axqni8wc.s[31]++;
                  return item.type === 'cpu-total';
                });

                /* istanbul ignore next */
                cov_9axqni8wc.s[32]++;
                action.alertTypes[i].alertSubCluster[j].name = 'cpu ';
              } else
              /* istanbul ignore next */
              {
                cov_9axqni8wc.b[7][1]++;
              }
            }

            /* istanbul ignore next */
            cov_9axqni8wc.s[33]++;
            alertTypesArray.push(action.alertTypes[i]);
          } else
          /* istanbul ignore next */
          {
            cov_9axqni8wc.b[6][1]++;
          } // else if (action.alertTypes[i].name === 'disk') {
          //     for (
          //         let j = 0;
          //         j < action.alertTypes[i].alertSubCluster.length;
          //         j += 1
          //     ) {
          //         if (action.alertTypes[i].alertSubCluster[j].name !== 'device') {
          //             action.alertTypes[i].alertSubCluster = action.alertTypes[
          //                 i
          //             ].alertSubCluster.filter(item => item.name === 'device');
          //         } else {
          //             action.alertTypes[i].alertSubCluster[
          //                 j
          //             ].alertTypes = action.alertTypes[i].alertSubCluster[
          //                 j
          //             ].alertTypes.slice(0, 1);
          //             action.alertTypes[i].alertSubCluster[j].alertTypes.map(
          //                 (item) => {
          //                     const resItem = { ...item }
          //                     resItem.type = 'NA';
          //                     return resItem;
          //                 }
          //             );
          //         }
          //     }
          //     action.alertTypes[i].alertFields = ['NA'];
          //     alertTypesArray.push(action.alertTypes[i]);
          // }

        }

        /* istanbul ignore next */
        cov_9axqni8wc.s[34]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            alertClusters: alertTypesArray
          })
        );
      }

    default:
      /* istanbul ignore next */
      cov_9axqni8wc.b[1][4]++;
      cov_9axqni8wc.s[35]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = alertManagementReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,