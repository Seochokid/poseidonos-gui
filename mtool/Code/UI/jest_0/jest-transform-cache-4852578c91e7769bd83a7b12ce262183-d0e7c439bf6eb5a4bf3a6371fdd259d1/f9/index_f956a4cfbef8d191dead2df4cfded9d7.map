{"version":3,"sources":["index.js"],"names":["formTheme","createMuiTheme","customTheme","typography","fontSize","overrides","MuiInput","underline","borderBottom","styles","theme","root","flexGrow","serverOuterGrid","maxWidth","minHeight","overflowY","overflowX","justifyContent","background","serverInfoHeader","textAlign","color","borderRadius","width","marginLeft","lineHeight","overviewPaper","serverCard","backgroundColor","maxHeight","flexBasis","SpecifyServerCard","boxShadow","textField","spacing","marginRight","ServerInformation","Component","constructor","props","componentDidMount","fetchServerInfo","render","classes","event","target","select","model","readOnly","input","manufacturer","autoFocus","servermac","serverip","firmwareversion","serialno","mapStateToProps","state","hardwareOverviewReducer","hostname","mapDispatchToProps","dispatch","type","actionTypes","SAGA_HARDWARE_OVERVIEW_FETCH_SERVER_INFORMATION","withStyles","connect"],"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: Overview Page Server Component\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi\n@Version : 1.0 \n@REVISION HISTORY\n[03/11/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { customTheme } from '../../../theme';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n\nconst formTheme = createMuiTheme({\n  ...customTheme,\n  typography: {\n      fontSize: '12px'\n  },\n  overrides: {\n    MuiInput: {\n      // Name of the styleSheet\n      underline: {\n        '&:hover:not($disabled):before': {\n          borderBottom: '1px solid rgba(0, 0, 0, 0.42)',\n        },\n        '&:after': {\n            borderBottom: 0\n        }\n      },\n    },\n  },\n});\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    serverOuterGrid: {\n        maxWidth: '100%',\n        minHeight: '140px',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        justifyContent: 'left',\n        background: '#fff'\n    },\n    serverInfoHeader: {\n        textAlign: 'left',\n        color: 'rgba(255, 255, 255, 0.87)',\n        fontSize: '14px',\n        borderRadius: '0px',\n        width: '100%',\n        marginLeft: '10px',\n        lineHeight: '1.5',\n    },\n    overviewPaper: {\n        width: '100%',\n    },\n\n    serverCard: {\n        backgroundColor: '#788595',\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '24px',\n        flexBasis: '100%'\n    },\n\n    SpecifyServerCard: {\n        borderRadius: '0px',\n        boxShadow: 'none',\n    },\n    textField: {\n        color: \"black\",\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 230,\n    },\n\n});\n\nclass ServerInformation extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.fetchServerInfo();\n    }\n  \n    render() {\n        const { classes } = this.props;\n        return (\n            <Card className={classes.SpecifyServerCard}>\n                <Grid container className={classes.serverOuterGrid}>\n                        <ThemeProvider theme={formTheme}>\n                    <Grid className={classes.serverCard}>\n                        <Typography className={classes.serverInfoHeader}>\n                            Server Information\n                        </Typography>\n                    </Grid>\n                    <TextField\n                    onFocus={event => {\n        event.target.select()\n      }}\n                        className={classes.textField}\n                        id=\"standard-required\"\n                        margin=\"none\"\n                        value={this.props.model ===\"\" ? \"NA\": this.props.model}\n                        label=\"Model\"\n                        // disabled\n                         InputProps={{\n                            readOnly: true,\n                             classes: {\n                            input: classes.textField\n                         }\n                    }}\n                    />\n\n\n                    <TextField className={classes.textField}\n                    onFocus={event => {\n        event.target.select()\n      }}\n                        id=\"standard-required\"\n                        margin=\"none\"\n                        // disabled\n                        value={this.props.manufacturer ===\"\"? \"NA\": this.props.manufacturer}\n                        label=\"Manufacturer\"\n                         InputProps={{\n                             readOnly: true,\n                             autoFocus :false,\n                             classes: {\n                            input: classes.textField\n                         }\n                    }}\n                    />\n                    <TextField className={classes.textField}\n                    onFocus={event => {\n        event.target.select()\n      }}\n                        id=\"standard-required\"\n                        margin=\"none\"\n                        value={this.props.servermac ===\"\"?\"NA\":this.props.servermac}\n                        label=\"BMC MAC Address\"\n                        // disabled\n                         InputProps={{\n                             readOnly: true,\n                             classes: {\n                            input: classes.textField\n                         }\n                    }}\n                    />\n                    <TextField className={classes.textField}\n                    onFocus={event => {\n        event.target.select()\n      }}\n                        id=\"standard-required\"\n                        margin=\"none\"\n                        value={this.props.serverip === \"\" ? \"NA\":this.props.serverip}\n                        // disabled\n                        label=\"BMC IP Address\"\n                         InputProps={{\n                            readOnly: true,\n                             classes: {\n                            input: classes.textField\n                         }\n                    }}\n                    />\n                    <TextField className={classes.textField}\n                    onFocus={event => {\n        event.target.select()\n      }}\n                        id=\"standard-required\"\n                        margin=\"none\"\n                        value={this.props.firmwareversion===\"\" ?\"NA\": this.props.firmwareversion}\n                        label=\"BMC Firmware Version\"\n                        // disabled\n                         InputProps={{\n                             readOnly: true,\n                             classes: {\n                            input: classes.textField\n                         }\n                    }}\n                    />\n                    <TextField className={classes.textField}\n                    onFocus={event => {\n        event.target.select()\n      }}\n                        id=\"standard-required\"\n                        margin=\"none\"\n                        value={this.props.serialno===\"\" ? \"NA\": this.props.serialno}\n                        label=\"Serial Number\"\n                       // disabled\n                         InputProps={{\n                             readOnly: true,\n                             classes: {\n                            input: classes.textField\n                         }\n                    }}\n                    />\n                        </ThemeProvider>\n                </Grid>\n            </Card>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        model:  state.hardwareOverviewReducer.model,\n        manufacturer: state.hardwareOverviewReducer.manufacturer,\n        servermac: state.hardwareOverviewReducer.servermac,\n        serverip: state.hardwareOverviewReducer.serverip,\n        firmwareversion: state.hardwareOverviewReducer.firmwareversion,\n        serialno: state.hardwareOverviewReducer.serialno,\n        hostname: state.hardwareOverviewReducer.hostname,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchServerInfo: () => dispatch({ type: actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_SERVER_INFORMATION }),\n    };\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(((ServerInformation))));"]}