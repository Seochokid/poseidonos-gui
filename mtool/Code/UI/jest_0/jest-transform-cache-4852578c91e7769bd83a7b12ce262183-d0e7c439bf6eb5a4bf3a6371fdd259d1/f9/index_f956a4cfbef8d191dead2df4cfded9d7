b97cdd2b70104757fb6a93559ea024ed
/* istanbul ignore next */
"use strict";

var cov_tystp13tv = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/OverviewComponents/ServerInformation/index.js";
  var hash = "ada492163329993b3cb504de1585c6ec7a43a4a9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/OverviewComponents/ServerInformation/index.js",
    statementMap: {
      "0": {
        start: {
          line: 38,
          column: 18
        },
        end: {
          line: 56,
          column: 2
        }
      },
      "1": {
        start: {
          line: 58,
          column: 15
        },
        end: {
          line: 102,
          column: 2
        }
      },
      "2": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 102,
          column: 1
        }
      },
      "3": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 21
        }
      },
      "4": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 37
        }
      },
      "5": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 114,
          column: 38
        }
      },
      "6": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 227,
          column: 10
        }
      },
      "7": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 29
        }
      },
      "8": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 29
        }
      },
      "9": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 29
        }
      },
      "10": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 29
        }
      },
      "11": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "12": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 29
        }
      },
      "13": {
        start: {
          line: 231,
          column: 24
        },
        end: {
          line: 241,
          column: 1
        }
      },
      "14": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 240,
          column: 6
        }
      },
      "15": {
        start: {
          line: 243,
          column: 27
        },
        end: {
          line: 247,
          column: 1
        }
      },
      "16": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 246,
          column: 6
        }
      },
      "17": {
        start: {
          line: 245,
          column: 31
        },
        end: {
          line: 245,
          column: 110
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 58,
            column: 16
          }
        },
        loc: {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 58
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 23
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 105
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 24
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 109
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        loc: {
          start: {
            line: 113,
            column: 13
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 113
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 125,
            column: 29
          },
          end: {
            line: 125,
            column: 30
          }
        },
        loc: {
          start: {
            line: 125,
            column: 38
          },
          end: {
            line: 127,
            column: 7
          }
        },
        line: 125
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 144,
            column: 29
          },
          end: {
            line: 144,
            column: 30
          }
        },
        loc: {
          start: {
            line: 144,
            column: 38
          },
          end: {
            line: 146,
            column: 7
          }
        },
        line: 144
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 161,
            column: 29
          },
          end: {
            line: 161,
            column: 30
          }
        },
        loc: {
          start: {
            line: 161,
            column: 38
          },
          end: {
            line: 163,
            column: 7
          }
        },
        line: 161
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 177,
            column: 29
          },
          end: {
            line: 177,
            column: 30
          }
        },
        loc: {
          start: {
            line: 177,
            column: 38
          },
          end: {
            line: 179,
            column: 7
          }
        },
        line: 177
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 193,
            column: 29
          },
          end: {
            line: 193,
            column: 30
          }
        },
        loc: {
          start: {
            line: 193,
            column: 38
          },
          end: {
            line: 195,
            column: 7
          }
        },
        line: 193
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 209,
            column: 29
          },
          end: {
            line: 209,
            column: 30
          }
        },
        loc: {
          start: {
            line: 209,
            column: 38
          },
          end: {
            line: 211,
            column: 7
          }
        },
        line: 209
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 231,
            column: 24
          },
          end: {
            line: 231,
            column: 25
          }
        },
        loc: {
          start: {
            line: 231,
            column: 33
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 231
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 243,
            column: 27
          },
          end: {
            line: 243,
            column: 28
          }
        },
        loc: {
          start: {
            line: 243,
            column: 39
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 243
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 245,
            column: 25
          },
          end: {
            line: 245,
            column: 26
          }
        },
        loc: {
          start: {
            line: 245,
            column: 31
          },
          end: {
            line: 245,
            column: 110
          }
        },
        line: 245
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 131,
            column: 31
          },
          end: {
            line: 131,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 56
          },
          end: {
            line: 131,
            column: 60
          }
        }, {
          start: {
            line: 131,
            column: 62
          },
          end: {
            line: 131,
            column: 78
          }
        }],
        line: 131
      },
      "1": {
        loc: {
          start: {
            line: 150,
            column: 31
          },
          end: {
            line: 150,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 150,
            column: 62
          },
          end: {
            line: 150,
            column: 66
          }
        }, {
          start: {
            line: 150,
            column: 68
          },
          end: {
            line: 150,
            column: 91
          }
        }],
        line: 150
      },
      "2": {
        loc: {
          start: {
            line: 166,
            column: 31
          },
          end: {
            line: 166,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 58
          },
          end: {
            line: 166,
            column: 62
          }
        }, {
          start: {
            line: 166,
            column: 63
          },
          end: {
            line: 166,
            column: 83
          }
        }],
        line: 166
      },
      "3": {
        loc: {
          start: {
            line: 182,
            column: 31
          },
          end: {
            line: 182,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 60
          },
          end: {
            line: 182,
            column: 64
          }
        }, {
          start: {
            line: 182,
            column: 65
          },
          end: {
            line: 182,
            column: 84
          }
        }],
        line: 182
      },
      "4": {
        loc: {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 64
          },
          end: {
            line: 198,
            column: 68
          }
        }, {
          start: {
            line: 198,
            column: 70
          },
          end: {
            line: 198,
            column: 96
          }
        }],
        line: 198
      },
      "5": {
        loc: {
          start: {
            line: 214,
            column: 31
          },
          end: {
            line: 214,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 58
          },
          end: {
            line: 214,
            column: 62
          }
        }, {
          start: {
            line: 214,
            column: 64
          },
          end: {
            line: 214,
            column: 83
          }
        }],
        line: 214
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "ada492163329993b3cb504de1585c6ec7a43a4a9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));

var
/* istanbul ignore next */
_reactRedux = require("react-redux");

var
/* istanbul ignore next */
_styles = require("@material-ui/core/styles");

var
/* istanbul ignore next */
_Grid = _interopRequireDefault(require("@material-ui/core/Grid"));

var
/* istanbul ignore next */
_TextField = _interopRequireDefault(require("@material-ui/core/TextField"));

var
/* istanbul ignore next */
_Card = _interopRequireDefault(require("@material-ui/core/Card"));

var
/* istanbul ignore next */
_Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var
/* istanbul ignore next */
_MuiThemeProvider = _interopRequireDefault(require("@material-ui/core/styles/MuiThemeProvider"));

var
/* istanbul ignore next */
_core = require("@material-ui/core");

var
/* istanbul ignore next */
_theme = require("../../../theme");

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../../../store/actions/actionTypes"));

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/OverviewComponents/ServerInformation/index.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const formTheme =
/* istanbul ignore next */
(cov_tystp13tv.s[0]++,
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_core.
/* istanbul ignore next */
createMuiTheme)(
/* istanbul ignore next */
_objectSpread({},
/* istanbul ignore next */
_theme.
/* istanbul ignore next */
customTheme, {
  typography: {
    fontSize: '12px'
  },
  overrides: {
    MuiInput: {
      // Name of the styleSheet
      underline: {
        '&:hover:not($disabled):before': {
          borderBottom: '1px solid rgba(0, 0, 0, 0.42)'
        },
        '&:after': {
          borderBottom: 0
        }
      }
    }
  }
})));

/* istanbul ignore next */
cov_tystp13tv.s[1]++;

const styles = theme => {
  /* istanbul ignore next */
  cov_tystp13tv.f[0]++;
  cov_tystp13tv.s[2]++;
  return {
    root: {
      flexGrow: 1
    },
    serverOuterGrid: {
      maxWidth: '100%',
      minHeight: '140px',
      overflowY: 'auto',
      overflowX: 'hidden',
      justifyContent: 'left',
      background: '#fff'
    },
    serverInfoHeader: {
      textAlign: 'left',
      color: 'rgba(255, 255, 255, 0.87)',
      fontSize: '14px',
      borderRadius: '0px',
      width: '100%',
      marginLeft: '10px',
      lineHeight: '1.5'
    },
    overviewPaper: {
      width: '100%'
    },
    serverCard: {
      backgroundColor: '#788595',
      justifyContent: 'center',
      maxWidth: '100%',
      maxHeight: '24px',
      flexBasis: '100%'
    },
    SpecifyServerCard: {
      borderRadius: '0px',
      boxShadow: 'none'
    },
    textField: {
      color: "black",
      marginLeft: theme.spacing(1),
      marginRight: theme.spacing(1),
      width: 230
    }
  };
};

class ServerInformation extends
/* istanbul ignore next */
_react.
/* istanbul ignore next */
Component {
  constructor(props) {
    /* istanbul ignore next */
    cov_tystp13tv.f[1]++;
    cov_tystp13tv.s[3]++;
    super(props);
  }

  componentDidMount() {
    /* istanbul ignore next */
    cov_tystp13tv.f[2]++;
    cov_tystp13tv.s[4]++;
    this.props.fetchServerInfo();
  }

  render() {
    /* istanbul ignore next */
    cov_tystp13tv.f[3]++;

    const _ref = (cov_tystp13tv.s[5]++, this.props),
          classes = _ref.classes;

    /* istanbul ignore next */
    cov_tystp13tv.s[6]++;
    return (
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Card.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        className: classes.SpecifyServerCard,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 116
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        container:
        /* istanbul ignore next */
        true,
        className: classes.serverOuterGrid,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 117
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _MuiThemeProvider.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        theme: formTheme,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 118
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        className: classes.serverCard,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 119
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Typography.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        className: classes.serverInfoHeader,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 120
        },
        __self: this
      },
      /* istanbul ignore next */
      "Server Information")),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _TextField.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        onFocus: event => {
          /* istanbul ignore next */
          cov_tystp13tv.f[4]++;
          cov_tystp13tv.s[7]++;
          event.target.select();
        },
        className: classes.textField,
        id: "standard-required",
        margin: "none",
        value: this.props.model === "" ?
        /* istanbul ignore next */
        (cov_tystp13tv.b[0][0]++, "NA") :
        /* istanbul ignore next */
        (cov_tystp13tv.b[0][1]++, this.props.model),
        label: "Model" // disabled
        ,
        InputProps: {
          readOnly: true,
          classes: {
            input: classes.textField
          }
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 124
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _TextField.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        className: classes.textField,
        onFocus: event => {
          /* istanbul ignore next */
          cov_tystp13tv.f[5]++;
          cov_tystp13tv.s[8]++;
          event.target.select();
        },
        id: "standard-required",
        margin: "none" // disabled
        ,
        value: this.props.manufacturer === "" ?
        /* istanbul ignore next */
        (cov_tystp13tv.b[1][0]++, "NA") :
        /* istanbul ignore next */
        (cov_tystp13tv.b[1][1]++, this.props.manufacturer),
        label: "Manufacturer",
        InputProps: {
          readOnly: true,
          autoFocus: false,
          classes: {
            input: classes.textField
          }
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 143
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _TextField.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        className: classes.textField,
        onFocus: event => {
          /* istanbul ignore next */
          cov_tystp13tv.f[6]++;
          cov_tystp13tv.s[9]++;
          event.target.select();
        },
        id: "standard-required",
        margin: "none",
        value: this.props.servermac === "" ?
        /* istanbul ignore next */
        (cov_tystp13tv.b[2][0]++, "NA") :
        /* istanbul ignore next */
        (cov_tystp13tv.b[2][1]++, this.props.servermac),
        label: "BMC MAC Address" // disabled
        ,
        InputProps: {
          readOnly: true,
          classes: {
            input: classes.textField
          }
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 160
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _TextField.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        className: classes.textField,
        onFocus: event => {
          /* istanbul ignore next */
          cov_tystp13tv.f[7]++;
          cov_tystp13tv.s[10]++;
          event.target.select();
        },
        id: "standard-required",
        margin: "none",
        value: this.props.serverip === "" ?
        /* istanbul ignore next */
        (cov_tystp13tv.b[3][0]++, "NA") :
        /* istanbul ignore next */
        (cov_tystp13tv.b[3][1]++, this.props.serverip) // disabled
        ,
        label: "BMC IP Address",
        InputProps: {
          readOnly: true,
          classes: {
            input: classes.textField
          }
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 176
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _TextField.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        className: classes.textField,
        onFocus: event => {
          /* istanbul ignore next */
          cov_tystp13tv.f[8]++;
          cov_tystp13tv.s[11]++;
          event.target.select();
        },
        id: "standard-required",
        margin: "none",
        value: this.props.firmwareversion === "" ?
        /* istanbul ignore next */
        (cov_tystp13tv.b[4][0]++, "NA") :
        /* istanbul ignore next */
        (cov_tystp13tv.b[4][1]++, this.props.firmwareversion),
        label: "BMC Firmware Version" // disabled
        ,
        InputProps: {
          readOnly: true,
          classes: {
            input: classes.textField
          }
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 192
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _TextField.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        className: classes.textField,
        onFocus: event => {
          /* istanbul ignore next */
          cov_tystp13tv.f[9]++;
          cov_tystp13tv.s[12]++;
          event.target.select();
        },
        id: "standard-required",
        margin: "none",
        value: this.props.serialno === "" ?
        /* istanbul ignore next */
        (cov_tystp13tv.b[5][0]++, "NA") :
        /* istanbul ignore next */
        (cov_tystp13tv.b[5][1]++, this.props.serialno),
        label: "Serial Number" // disabled
        ,
        InputProps: {
          readOnly: true,
          classes: {
            input: classes.textField
          }
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 208
        },
        __self: this
      }))))
    );
  }

}

/* istanbul ignore next */
cov_tystp13tv.s[13]++;

const mapStateToProps = state => {
  /* istanbul ignore next */
  cov_tystp13tv.f[10]++;
  cov_tystp13tv.s[14]++;
  return {
    model: state.hardwareOverviewReducer.model,
    manufacturer: state.hardwareOverviewReducer.manufacturer,
    servermac: state.hardwareOverviewReducer.servermac,
    serverip: state.hardwareOverviewReducer.serverip,
    firmwareversion: state.hardwareOverviewReducer.firmwareversion,
    serialno: state.hardwareOverviewReducer.serialno,
    hostname: state.hardwareOverviewReducer.hostname
  };
};

/* istanbul ignore next */
cov_tystp13tv.s[15]++;

const mapDispatchToProps = dispatch => {
  /* istanbul ignore next */
  cov_tystp13tv.f[11]++;
  cov_tystp13tv.s[16]++;
  return {
    fetchServerInfo: () => {
      /* istanbul ignore next */
      cov_tystp13tv.f[12]++;
      cov_tystp13tv.s[17]++;
      return dispatch({
        type: actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_SERVER_INFORMATION
      });
    }
  };
};

/* istanbul ignore next */
var _default =
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
withStyles)(styles)(
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_reactRedux.
/* istanbul ignore next */
connect)(mapStateToProps, mapDispatchToProps)(ServerInformation));

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,