{"version":3,"sources":["authenticationSaga.js"],"names":["login","action","localStorage","setItem","response","axios","post","payload","data","username","token","actionCreators","setIsLoggedIn","history","push","error","setLoginFailed","authenticationWatcher","actionTypes","SAGA_LOGIN"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAIO,UAAUA,KAAV,CAAgBC,MAAhB,EAAwB;AAC7B,MAAI;AACFC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAArC,EADE,CAC2C;;AAC7C,UAAMC,QAAQ,GAAG,MAAM,mBACrB,CAACC,cAAD,EAAQA,eAAMC,IAAd,CADqB,EAErB,kBAFqB,EAGrBL,MAAM,CAACM,OAHc,CAAvB;;AAKA,QAAIH,QAAQ,CAACI,IAAb,EAAmB;AACfN,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;AACAD,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,QAAQ,CAACI,IAAT,CAAcC,QAA7C;AACAP,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,QAAQ,CAACI,IAAT,CAAcE,KAA5C;AACA,YAAM,kBAAIC,cAAc,CAACC,aAAf,EAAJ,CAAN;AACAX,MAAAA,MAAM,CAACY,OAAP,CAAeC,IAAf,CAAoB,YAApB;AACD;AACF,GAdH,CAcI,OAAOC,KAAP,EAAc;AACZ,UAAM,kBAAIJ,cAAc,CAACK,cAAf,EAAJ,CAAN;AACAd,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,KAAnC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAArC;AACL;AACF;;AAGM,UAAUc,qBAAV,GAAkC;AACvC,QAAM,wBAAUC,WAAW,CAACC,UAAtB,EAAkCnB,KAAlC,CAAN;AAED","sourcesContent":["import axios from 'axios';\nimport { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actionTypes from '../store/actions/actionTypes';\nimport * as actionCreators from '../store/actions/exportActionCreators';\n\n\n\nexport function* login(action) {\n  try {\n    localStorage.setItem('BMC_LoggedIn', false); // Set bmc_isLoggedIn false once the user logs in again\n    const response = yield call(\n      [axios, axios.post],\n      '/api/v1.0/login/',\n      action.payload\n    );  \n    if (response.data) {\n        localStorage.setItem('isLoggedIn', true);\n        localStorage.setItem('userid', response.data.username);\n        localStorage.setItem('token', response.data.token);\n        yield put(actionCreators.setIsLoggedIn());\n        action.history.push('/dashboard');\n      }\n    } catch (error) {\n        yield put(actionCreators.setLoginFailed());\n        localStorage.setItem('isLoggedIn', false);\n        localStorage.setItem('BMC_LoggedIn', false);\n  }\n}\n\n\nexport function* authenticationWatcher() {\n  yield takeEvery(actionTypes.SAGA_LOGIN, login);\n  \n}\n"]}