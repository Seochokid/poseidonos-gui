{"version":3,"sources":["alertManagementSaga.js"],"names":["fetchAlertsInfo","response","axios","get","headers","Accept","localStorage","getItem","result","data","actionCreators","error","fetchAlertsTypeInfo","alert_types","fetchAlertsType","alertManagementContainerWatcher","actionTypes","SAGA_ALERT_MANAGEMENT_FETCH_ALERTS","SAGA_ALERT_MANAGEMENT_FETCH_ALERTS_TYPE"],"mappings":";;;;;;;;;;;;;AA0BA;;AACA;;AACA;;AACA;;AA7BA;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BO,UAAUA,eAAV,GAA4B;AAC/B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAM,mBAAK,CAACC,cAAD,EAAQA,eAAMC,GAAd,CAAL,EAAyB,uBAAzB,EAAkD;AACrEC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHb;AAD4D,KAAlD,CAAvB;AAOA,UAAMC,MAAM,GAAGP,QAAQ,CAACQ,IAAxB;;AACA,QAAID,MAAJ,EAAY;AACR,YAAM,kBAAIE,cAAc,CAACV,eAAf,CAA+BQ,MAA/B,CAAJ,CAAN;AACH,KAFD,MAGK,MAAM,kBAAIE,cAAc,CAACV,eAAf,CAA+B,EAA/B,CAAJ,CAAN;AACR,GAbD,CAcA,OAAOW,KAAP,EAAc;AACX,UAAM,kBAAID,cAAc,CAACV,eAAf,CAA+B,EAA/B,CAAJ,CAAN;AACF,GAhBD,SAiBQ;AACJ,QAAG,MAAM,yBAAT,EACA;AACI,YAAM,kBAAIU,cAAc,CAACV,eAAf,CAA+B,EAA/B,CAAJ,CAAN;AACH;AACJ;AACJ;;AAEM,UAAUY,mBAAV,GAAgC;AACnC,MAAI;AACA,UAAMX,QAAQ,GAAG,MAAM,mBAAK,CAACC,cAAD,EAAQA,eAAMC,GAAd,CAAL,EAAyB,4BAAzB,EAAsD;AAACC,MAAAA,OAAO,EAAE;AACnFC,QAAAA,MAAM,EAAE,kBAD2E;AAEnF,wBAAgB,kBAFmE;AAGnF,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHiE;AAAV,KAAtD,CAAvB;AAKA,UAAMC,MAAM,GAAGP,QAAQ,CAACQ,IAAxB;;AACA,QAAID,MAAM,CAACK,WAAX,EAAwB;AACpB,YAAM,kBAAIH,cAAc,CAACI,eAAf,CAA+BN,MAAM,CAACK,WAAtC,CAAJ,CAAN;AACH;AACJ,GAVD,CAWA,OAAOF,KAAP,EAAc;AACV;AACH;AACJ;;AAGM,UAAUI,+BAAV,GAA4C;AAC/C,QAAM,wBAAUC,WAAW,CAACC,kCAAtB,EAA0DjB,eAA1D,CAAN;AACA,QAAM,wBAAUgB,WAAW,CAACE,uCAAtB,EAA+DN,mBAA/D,CAAN;AACH","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <Contains Generator Functions for Alert Management container> *\n@NAME : alertManagementSaga.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport axios from 'axios';\nimport { call, takeEvery, put,cancelled } from 'redux-saga/effects';\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as actionCreators from \"../store/actions/exportActionCreators\";\n\nexport function* fetchAlertsInfo() {\n    try {\n        const response = yield call([axios, axios.get], '/api/v1.0/get_alerts/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchAlertsInfo(result));\n        }\n        else yield put(actionCreators.fetchAlertsInfo([]));\n    }\n    catch (error) {\n       yield put(actionCreators.fetchAlertsInfo([]));\n    }\n    finally {\n        if(yield cancelled())\n        {\n            yield put(actionCreators.fetchAlertsInfo([]));\n        }\n    }\n}\n\nexport function* fetchAlertsTypeInfo() {\n    try {\n        const response = yield call([axios, axios.get], \"/api/v1.0/get_alert_types/\",{headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem('token'),\n          }});\n        const result = response.data;\n        if (result.alert_types) {\n            yield put(actionCreators.fetchAlertsType(result.alert_types));\n        }\n    }\n    catch (error) {\n        ;\n    }\n}\n\n\nexport function* alertManagementContainerWatcher() {\n    yield takeEvery(actionTypes.SAGA_ALERT_MANAGEMENT_FETCH_ALERTS, fetchAlertsInfo);\n    yield takeEvery(actionTypes.SAGA_ALERT_MANAGEMENT_FETCH_ALERTS_TYPE, fetchAlertsTypeInfo);\n}\n"]}