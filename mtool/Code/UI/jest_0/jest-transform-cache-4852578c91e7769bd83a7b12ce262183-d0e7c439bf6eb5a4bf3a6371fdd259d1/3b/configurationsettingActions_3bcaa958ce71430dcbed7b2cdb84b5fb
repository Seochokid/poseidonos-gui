9eebdc6ab86211c663c7bcfb86fdee8a
/* istanbul ignore next */
"use strict";

var cov_716eg6sng = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/configurationsettingActions.js";
  var hash = "d5cb09b5f25610291a94be8731dad175fa5a0962";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/configurationsettingActions.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 37
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "1": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "2": {
        start: {
          line: 37,
          column: 31
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "3": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 41,
          column: 4
        }
      },
      "4": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "5": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 48,
          column: 4
        }
      },
      "6": {
        start: {
          line: 51,
          column: 30
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "7": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 55,
          column: 4
        }
      },
      "8": {
        start: {
          line: 58,
          column: 32
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "9": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 62,
          column: 4
        }
      },
      "10": {
        start: {
          line: 65,
          column: 29
        },
        end: {
          line: 70,
          column: 1
        }
      },
      "11": {
        start: {
          line: 66,
          column: 2
        },
        end: {
          line: 69,
          column: 4
        }
      },
      "12": {
        start: {
          line: 72,
          column: 42
        },
        end: {
          line: 76,
          column: 1
        }
      },
      "13": {
        start: {
          line: 73,
          column: 2
        },
        end: {
          line: 75,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 37
          },
          end: {
            line: 30,
            column: 38
          }
        },
        loc: {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 32
          }
        },
        loc: {
          start: {
            line: 37,
            column: 47
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 27
          },
          end: {
            line: 44,
            column: 28
          }
        },
        loc: {
          start: {
            line: 44,
            column: 38
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 51,
            column: 30
          },
          end: {
            line: 51,
            column: 31
          }
        },
        loc: {
          start: {
            line: 51,
            column: 43
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 51
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 33
          }
        },
        loc: {
          start: {
            line: 58,
            column: 43
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 65,
            column: 30
          }
        },
        loc: {
          start: {
            line: 65,
            column: 40
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 72,
            column: 42
          },
          end: {
            line: 72,
            column: 43
          }
        },
        loc: {
          start: {
            line: 72,
            column: 48
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 72
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "d5cb09b5f25610291a94be8731dad175fa5a0962"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deleteConfiguredSmtpServer = exports.setSmtpServer = exports.changeSmtpServer = exports.fetchEmailList = exports.setAlertBox = exports.changeEmailList = exports.setIbofOSTimeInterval = void 0;

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("./actionTypes"));

/* istanbul ignore next */
cov_716eg6sng.s[0]++;

const setIbofOSTimeInterval = timeinterval => {
  /* istanbul ignore next */
  cov_716eg6sng.f[0]++;
  cov_716eg6sng.s[1]++;
  return {
    type: actionTypes.SET_IBOFOS_TIME_INTERVAL,
    timeinterval
  };
};

/* istanbul ignore next */
exports.setIbofOSTimeInterval = setIbofOSTimeInterval;
cov_716eg6sng.s[2]++;

const changeEmailList = newemaillist => {
  /* istanbul ignore next */
  cov_716eg6sng.f[1]++;
  cov_716eg6sng.s[3]++;
  return {
    type: actionTypes.CHANGE_EMAIL_LIST,
    val: newemaillist
  };
};

/* istanbul ignore next */
exports.changeEmailList = changeEmailList;
cov_716eg6sng.s[4]++;

const setAlertBox = payload => {
  /* istanbul ignore next */
  cov_716eg6sng.f[2]++;
  cov_716eg6sng.s[5]++;
  return {
    type: actionTypes.SET_ALERT_BOX,
    payload
  };
};

/* istanbul ignore next */
exports.setAlertBox = setAlertBox;
cov_716eg6sng.s[6]++;

const fetchEmailList = emaillist => {
  /* istanbul ignore next */
  cov_716eg6sng.f[3]++;
  cov_716eg6sng.s[7]++;
  return {
    type: actionTypes.FETCH_EMAIL_LIST,
    emaillist
  };
};

/* istanbul ignore next */
exports.fetchEmailList = fetchEmailList;
cov_716eg6sng.s[8]++;

const changeSmtpServer = payload => {
  /* istanbul ignore next */
  cov_716eg6sng.f[4]++;
  cov_716eg6sng.s[9]++;
  return {
    type: actionTypes.CHANGE_SMTP_SERVER,
    payload
  };
};

/* istanbul ignore next */
exports.changeSmtpServer = changeSmtpServer;
cov_716eg6sng.s[10]++;

const setSmtpServer = payload => {
  /* istanbul ignore next */
  cov_716eg6sng.f[5]++;
  cov_716eg6sng.s[11]++;
  return {
    type: actionTypes.SET_SMTP_SERVER,
    payload
  };
};

/* istanbul ignore next */
exports.setSmtpServer = setSmtpServer;
cov_716eg6sng.s[12]++;

const deleteConfiguredSmtpServer = () => {
  /* istanbul ignore next */
  cov_716eg6sng.f[6]++;
  cov_716eg6sng.s[13]++;
  return {
    type: actionTypes.DELETE_CONFIGURED_SMTP_SERVER
  };
};

/* istanbul ignore next */
exports.deleteConfiguredSmtpServer = deleteConfiguredSmtpServer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZ3VyYXRpb25zZXR0aW5nQWN0aW9ucy5qcyJdLCJuYW1lcyI6WyJzZXRJYm9mT1NUaW1lSW50ZXJ2YWwiLCJ0aW1laW50ZXJ2YWwiLCJ0eXBlIiwiYWN0aW9uVHlwZXMiLCJTRVRfSUJPRk9TX1RJTUVfSU5URVJWQUwiLCJjaGFuZ2VFbWFpbExpc3QiLCJuZXdlbWFpbGxpc3QiLCJDSEFOR0VfRU1BSUxfTElTVCIsInZhbCIsInNldEFsZXJ0Qm94IiwicGF5bG9hZCIsIlNFVF9BTEVSVF9CT1giLCJmZXRjaEVtYWlsTGlzdCIsImVtYWlsbGlzdCIsIkZFVENIX0VNQUlMX0xJU1QiLCJjaGFuZ2VTbXRwU2VydmVyIiwiQ0hBTkdFX1NNVFBfU0VSVkVSIiwic2V0U210cFNlcnZlciIsIlNFVF9TTVRQX1NFUlZFUiIsImRlbGV0ZUNvbmZpZ3VyZWRTbXRwU2VydmVyIiwiREVMRVRFX0NPTkZJR1VSRURfU01UUF9TRVJWRVIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkJBO0FBQUE7QUFBQTs7Ozs7QUFFTyxNQUFNQSxxQkFBcUIsR0FBR0MsWUFBWSxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQ25ELFNBQU87QUFDTEMsSUFBQUEsSUFBSSxFQUFFQyxXQUFXLENBQUNDLHdCQURiO0FBRUxILElBQUFBO0FBRkssR0FBUDtBQUlELENBTE07Ozs7OztBQU9BLE1BQU1JLGVBQWUsR0FBR0MsWUFBWSxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQzdDLFNBQU87QUFDTEosSUFBQUEsSUFBSSxFQUFFQyxXQUFXLENBQUNJLGlCQURiO0FBRUxDLElBQUFBLEdBQUcsRUFBRUY7QUFGQSxHQUFQO0FBSUQsQ0FMTTs7Ozs7O0FBT0EsTUFBTUcsV0FBVyxHQUFHQyxPQUFPLElBQUk7QUFBQTtBQUFBO0FBQUE7QUFDcEMsU0FBTztBQUNMUixJQUFBQSxJQUFJLEVBQUVDLFdBQVcsQ0FBQ1EsYUFEYjtBQUVMRCxJQUFBQTtBQUZLLEdBQVA7QUFJRCxDQUxNOzs7Ozs7QUFPQSxNQUFNRSxjQUFjLEdBQUdDLFNBQVMsSUFBSTtBQUFBO0FBQUE7QUFBQTtBQUN6QyxTQUFPO0FBQ0xYLElBQUFBLElBQUksRUFBRUMsV0FBVyxDQUFDVyxnQkFEYjtBQUVMRCxJQUFBQTtBQUZLLEdBQVA7QUFJRCxDQUxNOzs7Ozs7QUFPQSxNQUFNRSxnQkFBZ0IsR0FBR0wsT0FBTyxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQ3pDLFNBQU87QUFDTFIsSUFBQUEsSUFBSSxFQUFFQyxXQUFXLENBQUNhLGtCQURiO0FBRUxOLElBQUFBO0FBRkssR0FBUDtBQUlELENBTE07Ozs7OztBQU9BLE1BQU1PLGFBQWEsR0FBR1AsT0FBTyxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQ3RDLFNBQU87QUFDTFIsSUFBQUEsSUFBSSxFQUFFQyxXQUFXLENBQUNlLGVBRGI7QUFFTFIsSUFBQUE7QUFGSyxHQUFQO0FBSUQsQ0FMTTs7Ozs7O0FBT0EsTUFBTVMsMEJBQTBCLEdBQUcsTUFBTTtBQUFBO0FBQUE7QUFBQTtBQUM5QyxTQUFPO0FBQ0xqQixJQUFBQSxJQUFJLEVBQUVDLFdBQVcsQ0FBQ2lCO0FBRGIsR0FBUDtBQUdELENBSk0iLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgIENPUFlSSUdIVCAoYykgMjAxOSBTQU1TVU5HIEVMRUNUUk9OSUNTIENPLiwgTFRELiAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICBBTEwgUklHSFRTIFJFU0VSVkVEICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQgdG8gbGljZW5zZWVzIG9mIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuICAgICAgICAvXG4vICAgcHJvZHVjdHMgdG8gdXNlIG9yIGFic3RyYWN0IHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiAgICAgICAgIC9cbi8gICBpbXBsZW1lbnRpbmcgYSBwcm9kdWN0IGJhc2VkIG9uIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIHByb2R1Y3RzLiAgICAgICAgICAgL1xuLyAgIE5vIG90aGVyIHJpZ2h0cyB0byByZXByb2R1Y2UsIHVzZSwgb3IgZGlzc2VtaW5hdGUgdGhpcyBjb21wdXRlciBwcm9ncmFtLCAgICAgICAgICAvXG4vICAgd2hldGhlciBpbiBwYXJ0IG9yIGluIHdob2xlLCBhcmUgZ3JhbnRlZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8gXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBtYWtlcyBubyByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50aWVzIHdpdGggICAgICAgICAgL1xuLyAgIHJlc3BlY3QgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgYW5kIHNwZWNpZmljYWxseSBkaXNjbGFpbXMgICAvXG4vICAgYW55IHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgZGFtYWdlcywgc3BlY2lhbCBvciBjb25zZXF1ZW50aWFsLCBjb25uZWN0ZWQgICAgICAgICAgIC9cbi8gICB3aXRoIHRoZSB1c2Ugb2YgdGhpcyBwcm9ncmFtLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cblxuXG5ERVNDUklQVElPTjogPENvbnRhaW5zIHB1cmUgYWN0aW9ucyBmb3IgQ29uZmlndXJhdGlvbiBQYWdlPiAqXG5ATkFNRSA6IGNvbmZpZ3VyYXRpb25zZXR0aW5nQWN0aW9ucy5qc1xuQEFVVEhPUlM6IFBhbGFrIEthcG9vclxuQFZlcnNpb24gOiAxLjAgKlxuQFJFVklTSU9OIEhJU1RPUllcblswOC8yMi8yMDE5XSBbUGFsYWtdIDogUHJvdG90eXBpbmcuLi4uLi4uLi4uLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiovXG5cbmltcG9ydCAqIGFzIGFjdGlvblR5cGVzIGZyb20gJy4vYWN0aW9uVHlwZXMnO1xuXG5leHBvcnQgY29uc3Qgc2V0SWJvZk9TVGltZUludGVydmFsID0gdGltZWludGVydmFsID0+IHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBhY3Rpb25UeXBlcy5TRVRfSUJPRk9TX1RJTUVfSU5URVJWQUwsXG4gICAgdGltZWludGVydmFsLFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGNoYW5nZUVtYWlsTGlzdCA9IG5ld2VtYWlsbGlzdCA9PiB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogYWN0aW9uVHlwZXMuQ0hBTkdFX0VNQUlMX0xJU1QsXG4gICAgdmFsOiBuZXdlbWFpbGxpc3QsXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3Qgc2V0QWxlcnRCb3ggPSBwYXlsb2FkID0+IHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBhY3Rpb25UeXBlcy5TRVRfQUxFUlRfQk9YLFxuICAgIHBheWxvYWQsXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZmV0Y2hFbWFpbExpc3QgPSBlbWFpbGxpc3QgPT4ge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IGFjdGlvblR5cGVzLkZFVENIX0VNQUlMX0xJU1QsXG4gICAgZW1haWxsaXN0LFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGNoYW5nZVNtdHBTZXJ2ZXIgPSBwYXlsb2FkID0+IHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBhY3Rpb25UeXBlcy5DSEFOR0VfU01UUF9TRVJWRVIsXG4gICAgcGF5bG9hZCxcbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCBzZXRTbXRwU2VydmVyID0gcGF5bG9hZCA9PiB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogYWN0aW9uVHlwZXMuU0VUX1NNVFBfU0VSVkVSLFxuICAgIHBheWxvYWQsXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlQ29uZmlndXJlZFNtdHBTZXJ2ZXIgPSAoKSA9PiB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogYWN0aW9uVHlwZXMuREVMRVRFX0NPTkZJR1VSRURfU01UUF9TRVJWRVIsXG4gIH07XG59O1xuIl19