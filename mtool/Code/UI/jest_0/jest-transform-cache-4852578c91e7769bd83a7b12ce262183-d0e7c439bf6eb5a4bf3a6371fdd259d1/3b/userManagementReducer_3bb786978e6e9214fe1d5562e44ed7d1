aa521674cdafafeda2a457affb6a575c
/* istanbul ignore next */
"use strict";

var cov_2ah8mgx4uk = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/userManagementReducer.js";
  var hash = "b1c0ee30420c6d166c7380499f168acd58d99708";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/userManagementReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "1": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "2": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "3": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "4": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 48,
          column: 19
        }
      },
      "5": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 47,
          column: 23
        }
      },
      "6": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 52,
          column: 18
        }
      },
      "7": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 37,
            column: 31
          }
        },
        loc: {
          start: {
            line: 37,
            column: 64
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 37
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 42,
            column: 38
          }
        },
        loc: {
          start: {
            line: 42,
            column: 45
          },
          end: {
            line: 48,
            column: 17
          }
        },
        line: 42
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 37,
            column: 51
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 55,
            column: 25
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "b1c0ee30420c6d166c7380499f168acd58d99708"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_2ah8mgx4uk.s[0]++, {
  selected: false,
  edit: false,
  users: [] // For User Table

});

/* istanbul ignore next */
cov_2ah8mgx4uk.s[1]++;

const userManagementReducer = (state =
/* istanbul ignore next */
(cov_2ah8mgx4uk.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_2ah8mgx4uk.f[0]++;
  cov_2ah8mgx4uk.s[2]++;

  switch (action.type) {
    case actionTypes.USER_MANAGEMENT_FETCH_USERS:
      /* istanbul ignore next */
      cov_2ah8mgx4uk.b[1][0]++;
      {
        const users =
        /* istanbul ignore next */
        (cov_2ah8mgx4uk.s[3]++, []);

        /* istanbul ignore next */
        cov_2ah8mgx4uk.s[4]++;
        action.users.forEach(user => {
          /* istanbul ignore next */
          cov_2ah8mgx4uk.f[1]++;
          cov_2ah8mgx4uk.s[5]++;
          users.push(
          /* istanbul ignore next */
          _objectSpread({}, user, {
            selected: false,
            edit: false
          }));
        });

        /* istanbul ignore next */
        cov_2ah8mgx4uk.s[6]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            users
          })
        );
      }

    default:
      /* istanbul ignore next */
      cov_2ah8mgx4uk.b[1][1]++;
      cov_2ah8mgx4uk.s[7]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = userManagementReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJNYW5hZ2VtZW50UmVkdWNlci5qcyJdLCJuYW1lcyI6WyJpbml0aWFsU3RhdGUiLCJzZWxlY3RlZCIsImVkaXQiLCJ1c2VycyIsInVzZXJNYW5hZ2VtZW50UmVkdWNlciIsInN0YXRlIiwiYWN0aW9uIiwidHlwZSIsImFjdGlvblR5cGVzIiwiVVNFUl9NQU5BR0VNRU5UX0ZFVENIX1VTRVJTIiwiZm9yRWFjaCIsInVzZXIiLCJwdXNoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQTtBQUFBO0FBQUE7Ozs7OztBQUVBLE1BQU1BLFlBQVk7QUFBQTtBQUFBLHdCQUFHO0FBQ2pCQyxFQUFBQSxRQUFRLEVBQUUsS0FETztBQUVqQkMsRUFBQUEsSUFBSSxFQUFFLEtBRlc7QUFHakJDLEVBQUFBLEtBQUssRUFBRSxFQUhVLENBR047O0FBSE0sQ0FBSCxDQUFsQjs7Ozs7QUFPQSxNQUFNQyxxQkFBcUIsR0FBRyxDQUFDQyxLQUFLO0FBQUE7QUFBQSwyQkFBR0wsWUFBSCxDQUFOLEVBQXVCTSxNQUF2QixLQUFrQztBQUFBO0FBQUE7QUFBQTs7QUFDNUQsVUFBUUEsTUFBTSxDQUFDQyxJQUFmO0FBQ0ksU0FBS0MsV0FBVyxDQUFDQywyQkFBakI7QUFBQTtBQUFBO0FBQ0k7QUFDSSxjQUFNTixLQUFLO0FBQUE7QUFBQSxnQ0FBRyxFQUFILENBQVg7O0FBREo7QUFBQTtBQUVJRyxRQUFBQSxNQUFNLENBQUNILEtBQVAsQ0FBYU8sT0FBYixDQUFxQkMsSUFBSSxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQ3pCUixVQUFBQSxLQUFLLENBQUNTLElBQU47QUFBQTtBQUFBLDRCQUNPRCxJQURQO0FBRUlWLFlBQUFBLFFBQVEsRUFBRSxLQUZkO0FBR0lDLFlBQUFBLElBQUksRUFBRTtBQUhWO0FBS0gsU0FORDs7QUFGSjtBQUFBO0FBU0k7QUFBQTtBQUFBLDRCQUNPRyxLQURQO0FBRUlGLFlBQUFBO0FBRko7QUFBQTtBQUlIOztBQUNMO0FBQUE7QUFBQTtBQUFBO0FBQ0ksYUFBT0UsS0FBUDtBQWpCUjtBQW1CSCxDQXBCRDs7O2VBc0JlRCxxQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgQ09QWVJJR0hUIChjKSAyMDE5IFNBTVNVTkcgRUxFQ1RST05JQ1MgQ08uLCBMVEQuICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgIEFMTCBSSUdIVFMgUkVTRVJWRUQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCB0byBsaWNlbnNlZXMgb2YgU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gICAgICAgIC9cbi8gICBwcm9kdWN0cyB0byB1c2Ugb3IgYWJzdHJhY3QgdGhpcyBjb21wdXRlciBwcm9ncmFtIGZvciB0aGUgc29sZSBwdXJwb3NlIG9mICAgICAgICAgL1xuLyAgIGltcGxlbWVudGluZyBhIHByb2R1Y3QgYmFzZWQgb24gU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gcHJvZHVjdHMuICAgICAgICAgICAvXG4vICAgTm8gb3RoZXIgcmlnaHRzIHRvIHJlcHJvZHVjZSwgdXNlLCBvciBkaXNzZW1pbmF0ZSB0aGlzIGNvbXB1dGVyIHByb2dyYW0sICAgICAgICAgIC9cbi8gICB3aGV0aGVyIGluIHBhcnQgb3IgaW4gd2hvbGUsIGFyZSBncmFudGVkLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyBcbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIG1ha2VzIG5vIHJlcHJlc2VudGF0aW9uIG9yIHdhcnJhbnRpZXMgd2l0aCAgICAgICAgICAvXG4vICAgcmVzcGVjdCB0byB0aGUgcGVyZm9ybWFuY2Ugb2YgdGhpcyBjb21wdXRlciBwcm9ncmFtLCBhbmQgc3BlY2lmaWNhbGx5IGRpc2NsYWltcyAgIC9cbi8gICBhbnkgcmVzcG9uc2liaWxpdHkgZm9yIGFueSBkYW1hZ2VzLCBzcGVjaWFsIG9yIGNvbnNlcXVlbnRpYWwsIGNvbm5lY3RlZCAgICAgICAgICAgL1xuLyAgIHdpdGggdGhlIHVzZSBvZiB0aGlzIHByb2dyYW0uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuXG5cbkRFU0NSSVBUSU9OOiA8Q29udGFpbnMgcmVkdWNlciBmdW5jdGlvbiBmb3IgVXNlciBNYW5hZ2VtZW50IENvbnRhaW5lcj4gKlxuQE5BTUUgOiB1c2VyTWFuYWdlbWVudFJlZHVjZXIuanNcbkBBVVRIT1JTOiBKYXkgSGl0ZXNoIFNhbmdoYXZpIFxuQFZlcnNpb24gOiAxLjAgKlxuQFJFVklTSU9OIEhJU1RPUllcblswMy8wNi8yMDE5XSBbSmF5XSA6IFByb3RvdHlwaW5nLi4uLi4uLi4uLi8vLy8vLy8vLy8vLy8vLy8vLy8vXG4qL1xuXG5pbXBvcnQgKiBhcyBhY3Rpb25UeXBlcyBmcm9tIFwiLi4vYWN0aW9ucy9hY3Rpb25UeXBlc1wiXG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgZWRpdDogZmFsc2UsXG4gICAgdXNlcnM6IFtdLCAvLyBGb3IgVXNlciBUYWJsZVxufVxuXG5cbmNvbnN0IHVzZXJNYW5hZ2VtZW50UmVkdWNlciA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIGFjdGlvblR5cGVzLlVTRVJfTUFOQUdFTUVOVF9GRVRDSF9VU0VSUzpcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1c2VycyA9IFtdO1xuICAgICAgICAgICAgICAgIGFjdGlvbi51c2Vycy5mb3JFYWNoKHVzZXIgPT4ge1xuICAgICAgICAgICAgICAgICAgICB1c2Vycy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLnVzZXIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgICAgICAgICAgIHVzZXJzLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlck1hbmFnZW1lbnRSZWR1Y2VyOyJdfQ==