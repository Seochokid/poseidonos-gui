67373b7937a62d221c12bbc402dcc523
/* istanbul ignore next */
"use strict";

var cov_1ixj7ib2fc = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/Dialog/index.js";
  var hash = "70749b5fc59a277809529aacdd69e1d2e8f89d0b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/Dialog/index.js",
    statementMap: {
      "0": {
        start: {
          line: 41,
          column: 15
        },
        end: {
          line: 84,
          column: 2
        }
      },
      "1": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 84,
          column: 1
        }
      },
      "2": {
        start: {
          line: 86,
          column: 20
        },
        end: {
          line: 101,
          column: 2
        }
      },
      "3": {
        start: {
          line: 87,
          column: 41
        },
        end: {
          line: 87,
          column: 46
        }
      },
      "4": {
        start: {
          line: 88,
          column: 2
        },
        end: {
          line: 100,
          column: 4
        }
      },
      "5": {
        start: {
          line: 114,
          column: 24
        },
        end: {
          line: 114,
          column: 34
        }
      },
      "6": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 148,
          column: 7
        }
      },
      "7": {
        start: {
          line: 149,
          column: 22
        },
        end: {
          line: 155,
          column: 7
        }
      },
      "8": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 151,
          column: 27
        }
      },
      "9": {
        start: {
          line: 151,
          column: 10
        },
        end: {
          line: 151,
          column: 27
        }
      },
      "10": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 153,
          column: 26
        }
      },
      "11": {
        start: {
          line: 153,
          column: 10
        },
        end: {
          line: 153,
          column: 26
        }
      },
      "12": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 26
        }
      },
      "13": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 239,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 41,
            column: 15
          },
          end: {
            line: 41,
            column: 16
          }
        },
        loc: {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 41
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 86,
            column: 39
          },
          end: {
            line: 86,
            column: 40
          }
        },
        loc: {
          start: {
            line: 86,
            column: 48
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 86
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 113,
            column: 2
          },
          end: {
            line: 113,
            column: 3
          }
        },
        loc: {
          start: {
            line: 113,
            column: 11
          },
          end: {
            line: 240,
            column: 3
          }
        },
        line: 113
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 149,
            column: 22
          },
          end: {
            line: 149,
            column: 23
          }
        },
        loc: {
          start: {
            line: 149,
            column: 32
          },
          end: {
            line: 155,
            column: 7
          }
        },
        line: 149
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 148,
            column: 7
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 135,
            column: 24
          }
        }, {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 147,
            column: 24
          }
        }],
        line: 116
      },
      "1": {
        loc: {
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 116,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 116,
            column: 33
          }
        }, {
          start: {
            line: 116,
            column: 37
          },
          end: {
            line: 116,
            column: 63
          }
        }],
        line: 116
      },
      "2": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 151,
            column: 27
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 151,
            column: 27
          }
        }, {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 151,
            column: 27
          }
        }],
        line: 150
      },
      "3": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 153,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 153,
            column: 26
          }
        }, {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 153,
            column: 26
          }
        }],
        line: 152
      },
      "4": {
        loc: {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 165,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 34
          },
          end: {
            line: 165,
            column: 49
          }
        }, {
          start: {
            line: 165,
            column: 52
          },
          end: {
            line: 165,
            column: 57
          }
        }],
        line: 165
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "70749b5fc59a277809529aacdd69e1d2e8f89d0b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var
/* istanbul ignore next */
_react = _interopRequireDefault(require("react"));

var
/* istanbul ignore next */
_Dialog = _interopRequireDefault(require("@material-ui/core/Dialog"));

var
/* istanbul ignore next */
_DialogActions = _interopRequireDefault(require("@material-ui/core/DialogActions"));

var
/* istanbul ignore next */
_DialogContent = _interopRequireDefault(require("@material-ui/core/DialogContent"));

var
/* istanbul ignore next */
_DialogContentText = _interopRequireDefault(require("@material-ui/core/DialogContentText"));

var
/* istanbul ignore next */
_styles = require("@material-ui/core/styles");

var
/* istanbul ignore next */
_DialogTitle = _interopRequireDefault(require("@material-ui/core/DialogTitle"));

var
/* istanbul ignore next */
_IconButton = _interopRequireDefault(require("@material-ui/core/IconButton"));

var
/* istanbul ignore next */
_Typography = _interopRequireDefault(require("@material-ui/core/Typography"));

var
/* istanbul ignore next */
_Button = _interopRequireDefault(require("@material-ui/core/Button"));

var
/* istanbul ignore next */
_DeleteICON = _interopRequireDefault(require("../../assets/images/Delete-ICON.png"));

var
/* istanbul ignore next */
_ERRORICON = _interopRequireDefault(require("../../assets/images/ERROR-ICON.png"));

var
/* istanbul ignore next */
_INFOICON = _interopRequireDefault(require("../../assets/images/INFO-ICON.png"));

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/Dialog/index.js";
cov_1ixj7ib2fc.s[0]++;

const styles = theme => {
  /* istanbul ignore next */
  cov_1ixj7ib2fc.f[0]++;
  cov_1ixj7ib2fc.s[1]++;
  return {
    title: {
      // backgroundColor: '#18355f',
      backgroundColor: '#424850',
      color: theme.palette.common.white,
      padding: '5px'
    },
    dialogContent: {
      display: 'flex',
      alignItems: 'center'
    },
    submit: {
      // background: '#007bff',
      height: '1.8rem',
      fontSize: '12px',
      textTransform: 'none',
      minWidth: '0px',
      width: '60px'
    },
    closeButton: {
      position: 'absolute',
      right: theme.spacing(),
      top: '0px',
      color: theme.palette.grey[500]
    },
    buttonStyle: {
      height: '22px',
      background: '#1a4d91',
      padding: '2px 16px',
      textAlign: 'center',
      cursor: 'pointer',
      color: 'white',
      margin: '0 5px',
      border: 'none',
      display: 'flex',
      justifyContent: 'center',
      align: 'center'
    },
    actions: {
      margin: '0 20px 20px 20px',
      justifyContent: 'center'
    }
  };
};

const DialogTitle =
/* istanbul ignore next */
(cov_1ixj7ib2fc.s[2]++,
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
withStyles)(styles)(props => {
  /* istanbul ignore next */
  cov_1ixj7ib2fc.f[1]++;

  const _ref = (cov_1ixj7ib2fc.s[3]++, props),
        children = _ref.children,
        classes = _ref.classes,
        onClose = _ref.onClose;

  /* istanbul ignore next */
  cov_1ixj7ib2fc.s[4]++;
  return (
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _DialogTitle.
    /* istanbul ignore next */
    default,
    /* istanbul ignore next */
    {
      disableTypography:
      /* istanbul ignore next */
      true,
      className: classes.title,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 89
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _Typography.
    /* istanbul ignore next */
    default,
    /* istanbul ignore next */
    {
      variant: "h6",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 90
      },
      __self: void 0
    }, children),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _IconButton.
    /* istanbul ignore next */
    default,
    /* istanbul ignore next */
    {
      /* istanbul ignore next */
      "aria-label": "Close",
      className: classes.closeButton,
      onClick: onClose,

      /* istanbul ignore next */
      "data-testid": "alertCloseButton",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 91
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "span",
    /* istanbul ignore next */
    {
      style: {
        fontSize: '14px',
        color: '#fff'
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 97
      },
      __self: void 0
    },
    /* istanbul ignore next */
    "x")))
  );
}));

class AlertDialog extends
/* istanbul ignore next */
(
/* istanbul ignore next */
_react.
/* istanbul ignore next */
default.Component) {
  // handleClickOpen = () => {
  //   this.setState({ open: true });
  // };
  // handleClose = () => {
  //   this.setState({ open: false });
  // };
  render() {
    /* istanbul ignore next */
    cov_1ixj7ib2fc.f[2]++;

    const _ref2 = (cov_1ixj7ib2fc.s[5]++, this.props),
          classes = _ref2.classes;

    const actions =
    /* istanbul ignore next */
    (cov_1ixj7ib2fc.s[6]++,
    /* istanbul ignore next */
    (cov_1ixj7ib2fc.b[1][0]++, this.props.type !== 'alert') &&
    /* istanbul ignore next */
    (cov_1ixj7ib2fc.b[1][1]++, this.props.type !== 'info') ?
    /* istanbul ignore next */
    (cov_1ixj7ib2fc.b[0][0]++,
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _DialogActions.
    /* istanbul ignore next */
    default,
    /* istanbul ignore next */
    {
      className: classes.actions,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 117
      },
      __self: this
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _Button.
    /* istanbul ignore next */
    default,
    /* istanbul ignore next */
    {
      color: "primary",
      variant: "contained",
      onClick: this.props.handleClose,
      className: classes.submit,
      autoFocus:
      /* istanbul ignore next */
      true,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 118
      },
      __self: this
    },
    /* istanbul ignore next */
    "No"),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _Button.
    /* istanbul ignore next */
    default,
    /* istanbul ignore next */
    {
      color: "primary",
      variant: "contained",
      onClick: this.props.onConfirm,
      className: classes.submit,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 127
      },
      __self: this
    },
    /* istanbul ignore next */
    "Yes"))) :
    /* istanbul ignore next */
    (cov_1ixj7ib2fc.b[0][1]++,
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _DialogActions.
    /* istanbul ignore next */
    default,
    /* istanbul ignore next */
    {
      className: classes.actions,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 137
      },
      __self: this
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _Button.
    /* istanbul ignore next */
    default,
    /* istanbul ignore next */
    {
      color: "primary",
      variant: "contained",
      onClick: this.props.handleClose,
      className: classes.submit,
      autoFocus:
      /* istanbul ignore next */
      true,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 138
      },
      __self: this
    },
    /* istanbul ignore next */
    "OK"))));

    /* istanbul ignore next */
    cov_1ixj7ib2fc.s[7]++;

    const getIcon = type => {
      /* istanbul ignore next */
      cov_1ixj7ib2fc.f[3]++;
      cov_1ixj7ib2fc.s[8]++;

      if (type === 'alert') {
        /* istanbul ignore next */
        cov_1ixj7ib2fc.b[2][0]++;
        cov_1ixj7ib2fc.s[9]++;
        return (
          /* istanbul ignore next */
          _ERRORICON.
          /* istanbul ignore next */
          default
        );
      } else
      /* istanbul ignore next */
      {
        cov_1ixj7ib2fc.b[2][1]++;
      }

      cov_1ixj7ib2fc.s[10]++;

      if (type === 'info') {
        /* istanbul ignore next */
        cov_1ixj7ib2fc.b[3][0]++;
        cov_1ixj7ib2fc.s[11]++;
        return (
          /* istanbul ignore next */
          _INFOICON.
          /* istanbul ignore next */
          default
        );
      } else
      /* istanbul ignore next */
      {
        cov_1ixj7ib2fc.b[3][1]++;
      }

      cov_1ixj7ib2fc.s[12]++;
      return (
        /* istanbul ignore next */
        _DeleteICON.
        /* istanbul ignore next */
        default
      );
    };

    /* istanbul ignore next */
    cov_1ixj7ib2fc.s[13]++;
    return (
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 157
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Dialog.
      /* istanbul ignore next */
      default // minWidth="xs"
      ,
      /* istanbul ignore next */
      {
        maxWidth: "xs" // fullWidth="false"
        ,
        open: this.props.open ?
        /* istanbul ignore next */
        (cov_1ixj7ib2fc.b[4][0]++, this.props.open) :
        /* istanbul ignore next */
        (cov_1ixj7ib2fc.b[4][1]++, false),
        onClose: this.props.handleClose,

        /* istanbul ignore next */
        "aria-labelledby": "alert-dialog-title",

        /* istanbul ignore next */
        "aria-describedby": "alert-dialog-description",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 161
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(DialogTitle,
      /* istanbul ignore next */
      {
        onClose: this.props.handleClose,
        id: "alert-dialog-title",
        className: classes.title,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 170
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      "span",
      /* istanbul ignore next */
      {
        style: {
          display: 'flex',
          padding: '3px',
          paddingLeft: '10px',
          color: '#fff',
          fontSize: '14px',
          fontWeight: 500,
          alignItems: 'center'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 175
        },
        __self: this
      }, this.props.title)),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _DialogContent.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 189
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _DialogContentText.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        id: "alert-dialog-description",
        className: classes.dialogContent,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 190
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      "span",
      /* istanbul ignore next */
      {
        style: {
          padding: '35px 1px 0px 30px',
          color: '#000',
          fontSize: '12px',
          display: 'inline-block'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 194
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      "img",
      /* istanbul ignore next */
      {
        style: {
          height: '20px',
          marginRight: '7px'
        },
        alt: "icon",
        src: getIcon(this.props.type),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 202
        },
        __self: this
      })),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      "span",
      /* istanbul ignore next */
      {
        style: {
          padding: '35px 30px 0px 0px',
          color: '#000',
          fontSize: '12px',
          display: 'block'
        },

        /* istanbul ignore next */
        "data-testid": "alertDescription",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 210
        },
        __self: this
      }, this.props.description)),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      "p",
      /* istanbul ignore next */
      {
        style: {
          color: '#000',
          fontSize: '12px',
          padding: '0px 0px 0px 61px',
          display: 'block',
          marginTop: '0px'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 222
        },
        __self: this
      }, this.props.errCode)), actions))
    );
  }

}

/* istanbul ignore next */
var _default =
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
withStyles)(styles)(AlertDialog);

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,