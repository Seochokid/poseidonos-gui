{"version":3,"sources":["index.test.js"],"names":["jest","unmock","describe","select_input","select_save","select_delete","select_switch_tag","select_input_child","wrapper","store","history","alerts","alertClusterList","alertFields","radioindex","alertClusterName","selectedAlertSubCluster","alertType","beforeEach","sagaMiddleware","composeEnhancers","window","REDUX_DEVTOOLS_EXTENSION_COMPOSE","compose","rootReducers","alertManagementReducer","headerReducer","headerLanguageReducer","configurationsettingReducer","run","rootSaga","route","initialEntries","i18n","afterEach","cleanup","it","mock","MockAdapter","axios","response","onGet","reply","data","test","setTimeout","getByLabelText","queryAllByText","getByTitle","getAllByTestId","getAllByTitle","getByTestId","getByText","getAllByText","asFragment","fireEvent","click","spy","spyOn","mockReturnValue","Promise","resolve","expect","toBeCalled","input","querySelector","onPost","alertName","status","change","target","checked","value","getAllByRole","getByRole","alert_input","yesBtn","tree_input","subtreeItem","formControl","keyDown","key","keyCode","charCode","dropdown_input","value_input","button_input","field_input","toMatchSnapshot"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Alert Management Container Test File\n@NAME : index.test.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport React from 'react';\nimport { Router } from 'react-router-dom';\nimport { I18nextProvider } from \"react-i18next\";\nimport { combineReducers, createStore, applyMiddleware, compose } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport MockAdapter from 'axios-mock-adapter'\nimport { act } from 'react-dom/test-utils'\nimport { Provider } from 'react-redux'\nimport axios from 'axios'\nimport { createMemoryHistory } from 'history';\nimport { render, fireEvent, cleanup, waitForElement } from '@testing-library/react';\nimport AlertManagement from './index';\nimport headerReducer from \"../../../store/reducers/headerReducer\"\nimport headerLanguageReducer from \"../../../store/reducers/headerLanguageReducer\"\nimport alertManagementReducer from \"../../../store/reducers/alertManagementReducer\"\nimport configurationsettingReducer from \"../../../store/reducers/configurationsettingReducer\"\nimport rootSaga from \"../../../sagas/indexSaga\"\nimport i18n from \"../../../i18n\";\n\njest.unmock('axios');\n\ndescribe(\"Alert Management\", () => {\n  let select_input;\n  let select_save;\n  let select_delete;\n  let select_switch_tag;\n  let select_input_child;\n  let wrapper;\n  let store;\n  let history;\n  let alerts = [{ \"_id\": { \"$oid\": \"5d5e67b7f082d4c68c98f58b\" }, \"alertName\": \"NewAlert\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"device\", \"alertType\": \"cpu-total\", \"alertCondition\": null, \"alertField\": \"usage_system\", \"description\": \"last\", \"alertRange\": \"109\", \"active\": true },]\n  let alertClusterList = [{ alertFields: ['usage_idle', 'usage_system', 'NA'] }];\n  const radioindex = 0;\n  const alertClusterName = \"Random\";\n  const selectedAlertSubCluster = 'Random';\n  const alertType = 'Random';\n\n  beforeEach(() => {\n    const sagaMiddleware = createSagaMiddleware();\n    const composeEnhancers = window.REDUX_DEVTOOLS_EXTENSION_COMPOSE || compose;\n\n    const rootReducers = combineReducers({\n      alertManagementReducer,\n      headerReducer,\n      headerLanguageReducer,\n      configurationsettingReducer\n    });\n    store = createStore(rootReducers, composeEnhancers(applyMiddleware(sagaMiddleware)))\n\n    sagaMiddleware.run(rootSaga);\n    const route = '/';\n    history = createMemoryHistory({ initialEntries: [route] })\n    wrapper = render(\n      <Router history={history}>\n        <I18nextProvider i18n={i18n}>\n          <Provider store={store}>\n            <AlertManagement alerts={alerts} />\n          </Provider>\n        </I18nextProvider>\n      </Router>\n    );\n  });\n  afterEach(cleanup);\n\n  it('renders alert management saga', async () => {\n    const mock = new MockAdapter(axios);\n    let response = mock.onGet('/api/v1.0/get_alerts/').reply(200, null);\n    response = mock.onGet('/api/v1.0/get_alert_types/').reply(200, null);\n  });\n\n  it('renders alert management saga', async () => {\n    const mock = new MockAdapter(axios);\n    let response = mock.onGet('/api/v1.0/get_alerts/').reply(401, null);\n    response = mock.onGet('/api/v1.0/get_alert_types/').reply(401, null);\n  });\n\n  it('renders alert management saga', async () => {\n    const mock = new MockAdapter(axios);\n    let data = [{ \"_id\": { \"$oid\": \"5d5e67b7f082d4c68c98f58b\" }, \"alertName\": \"NewAlert\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"device\", \"alertType\": \"cpu-total\", \"alertCondition\": \"Greater Than\", \"alertField\": \"usage_system\", \"description\": \"last\", \"alertRange\": \"109\", \"active\": true }, { \"_id\": { \"$oid\": \"5d660a4bd4bf85b0c852ed03\" }, \"alertName\": \"ThisisAwesome\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"cpu \", \"alertType\": \"cpu-total\", \"alertCondition\": \"Equal To\", \"alertField\": \"usage_user\", \"description\": \"Hmmm\", \"alertRange\": \"93\", \"active\": true }, { \"_id\": { \"$oid\": \"5d666e0bd4bf85b0c852ed05\" }, \"alertName\": \"Alert1\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"cpu \", \"alertType\": \"cpu-total\", \"alertCondition\": \"Equal To Or Greater\", \"alertField\": \"usage_user\", \"description\": \"Yayyy\", \"alertRange\": \"34\", \"active\": true }];\n    let response = mock.onGet('/api/v1.0/get_alerts/').reply(200, data);\n    data = {\n      \"alert_types\": [\n        {\n          \"_id\": 1,\n          \"alertFields\": [\n            \"lat_data_0_id\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_aid\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_cnt_miss_low\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_cnt_miss_up\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_cnt_sample\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_low_qt\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_max\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_mean\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_min\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_phase\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_qos_2nine\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_qos_3nine\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_qos_4nine\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_std\",\n            \"lat_data_0_tid_arr_0_aid_arr_0_up_qt\",\n            \"lat_data_0_tid_arr_0_tid\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_aid\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_cnt_miss_low\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_cnt_miss_up\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_cnt_sample\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_low_qt\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_max\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_mean\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_min\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_phase\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_qos_2nine\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_qos_3nine\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_qos_4nine\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_std\",\n            \"lat_data_0_tid_arr_1_aid_arr_0_up_qt\",\n            \"lat_data_0_tid_arr_1_tid\",\n            \"perf_data_0_id\",\n            \"perf_data_0_tid_arr_0_tid\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_aid\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_bw_read\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_bw_total\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_bw_write\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_128kb\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_16kb\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_1kb\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_256kb\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_2kb\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_32kb\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_4kb\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_512b\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_64kb\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_8kb\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_big\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_cnt_no_align\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_iops_read\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_iops_total\",\n            \"perf_data_0_tid_arr_1_aid_arr_0_iops_write\",\n            \"perf_data_0_tid_arr_1_tid\",\n            \"streaming_interval\"\n          ],\n          \"alertSubCluster\": [\n            {\n              \"_id\": 1,\n              \"alertTypes\": [\n                {\n                  \"type\": \"2030045418\"\n                }\n              ],\n              \"name\": \"host\"\n            },\n            {\n              \"_id\": 2,\n              \"alertTypes\": [\n                {\n                  \"type\": \"/home/dinesh/ibof_devel_1206/ibofos/air_result.json\"\n                }\n              ],\n              \"name\": \"path\"\n            }\n          ],\n          \"name\": \"air\"\n        },\n        {\n          \"_id\": 2,\n          \"alertFields\": [\n            \"usage_guest\",\n            \"usage_guest_nice\",\n            \"usage_idle\",\n            \"usage_iowait\",\n            \"usage_irq\",\n            \"usage_nice\",\n            \"usage_softirq\",\n            \"usage_steal\",\n            \"usage_system\",\n            \"usage_user\"\n          ],\n          \"alertSubCluster\": [\n            {\n              \"_id\": 1,\n              \"alertTypes\": [\n                {\n                  \"type\": \"cpu-total\"\n                },\n                {\n                  \"type\": \"cpu0\"\n                },\n                {\n                  \"type\": \"cpu1\"\n                },\n                {\n                  \"type\": \"cpu10\"\n                },\n                {\n                  \"type\": \"cpu11\"\n                },\n                {\n                  \"type\": \"cpu12\"\n                },\n                {\n                  \"type\": \"cpu13\"\n                },\n                {\n                  \"type\": \"cpu14\"\n                },\n                {\n                  \"type\": \"cpu15\"\n                },\n                {\n                  \"type\": \"cpu16\"\n                },\n                {\n                  \"type\": \"cpu17\"\n                },\n                {\n                  \"type\": \"cpu18\"\n                },\n                {\n                  \"type\": \"cpu19\"\n                },\n                {\n                  \"type\": \"cpu2\"\n                },\n                {\n                  \"type\": \"cpu20\"\n                },\n                {\n                  \"type\": \"cpu21\"\n                },\n                {\n                  \"type\": \"cpu22\"\n                },\n                {\n                  \"type\": \"cpu23\"\n                },\n                {\n                  \"type\": \"cpu24\"\n                },\n                {\n                  \"type\": \"cpu25\"\n                },\n                {\n                  \"type\": \"cpu26\"\n                },\n                {\n                  \"type\": \"cpu27\"\n                },\n                {\n                  \"type\": \"cpu28\"\n                },\n                {\n                  \"type\": \"cpu29\"\n                },\n                {\n                  \"type\": \"cpu3\"\n                },\n                {\n                  \"type\": \"cpu30\"\n                },\n                {\n                  \"type\": \"cpu31\"\n                },\n                {\n                  \"type\": \"cpu32\"\n                },\n                {\n                  \"type\": \"cpu33\"\n                },\n                {\n                  \"type\": \"cpu34\"\n                },\n                {\n                  \"type\": \"cpu35\"\n                },\n                {\n                  \"type\": \"cpu36\"\n                },\n                {\n                  \"type\": \"cpu37\"\n                },\n                {\n                  \"type\": \"cpu38\"\n                },\n                {\n                  \"type\": \"cpu39\"\n                },\n                {\n                  \"type\": \"cpu4\"\n                },\n                {\n                  \"type\": \"cpu40\"\n                },\n                {\n                  \"type\": \"cpu41\"\n                },\n                {\n                  \"type\": \"cpu42\"\n                },\n                {\n                  \"type\": \"cpu43\"\n                },\n                {\n                  \"type\": \"cpu44\"\n                },\n                {\n                  \"type\": \"cpu45\"\n                },\n                {\n                  \"type\": \"cpu46\"\n                },\n                {\n                  \"type\": \"cpu47\"\n                },\n                {\n                  \"type\": \"cpu5\"\n                },\n                {\n                  \"type\": \"cpu6\"\n                },\n                {\n                  \"type\": \"cpu7\"\n                },\n                {\n                  \"type\": \"cpu8\"\n                },\n                {\n                  \"type\": \"cpu9\"\n                }\n              ],\n              \"name\": \"cpu\"\n            },\n            {\n              \"_id\": 2,\n              \"alertTypes\": [\n                {\n                  \"type\": \"2030045418\"\n                }\n              ],\n              \"name\": \"host\"\n            }\n          ],\n          \"name\": \"cpu\"\n        },\n        {\n          \"_id\": 3,\n          \"alertFields\": [\n            \"free\",\n            \"inodes_free\",\n            \"inodes_total\",\n            \"inodes_used\",\n            \"total\",\n            \"used\",\n            \"used_percent\"\n          ],\n          \"alertSubCluster\": [\n            {\n              \"_id\": 1,\n              \"alertTypes\": [\n                {\n                  \"type\": \"sdb1\"\n                },\n                {\n                  \"type\": \"sdb2\"\n                },\n                {\n                  \"type\": \"sdb5\"\n                }\n              ],\n              \"name\": \"device\"\n            },\n            {\n              \"_id\": 2,\n              \"alertTypes\": [\n                {\n                  \"type\": \"ext4\"\n                }\n              ],\n              \"name\": \"fstype\"\n            },\n            {\n              \"_id\": 3,\n              \"alertTypes\": [\n                {\n                  \"type\": \"2030045418\"\n                }\n              ],\n              \"name\": \"host\"\n            },\n            {\n              \"_id\": 4,\n              \"alertTypes\": [\n                {\n                  \"type\": \"rw\"\n                }\n              ],\n              \"name\": \"mode\"\n            },\n            {\n              \"_id\": 5,\n              \"alertTypes\": [\n                {\n                  \"type\": \"/\"\n                },\n                {\n                  \"type\": \"/home\"\n                },\n                {\n                  \"type\": \"/usr\"\n                }\n              ],\n              \"name\": \"path\"\n            }\n          ],\n          \"name\": \"disk\"\n        },\n        {\n          \"_id\": 4,\n          \"alertFields\": [\n            \"io_time\",\n            \"iops_in_progress\",\n            \"read_bytes\",\n            \"read_time\",\n            \"reads\",\n            \"weighted_io_time\",\n            \"write_bytes\",\n            \"write_time\",\n            \"writes\"\n          ],\n          \"alertSubCluster\": [\n            {\n              \"_id\": 1,\n              \"alertTypes\": [\n                {\n                  \"type\": \"2030045418\"\n                }\n              ],\n              \"name\": \"host\"\n            },\n            {\n              \"_id\": 2,\n              \"alertTypes\": [\n                {\n                  \"type\": \"loop0\"\n                },\n                {\n                  \"type\": \"loop1\"\n                },\n                {\n                  \"type\": \"loop2\"\n                },\n                {\n                  \"type\": \"nvme0n1\"\n                },\n                {\n                  \"type\": \"nvme1n1\"\n                },\n                {\n                  \"type\": \"nvme2n1\"\n                },\n                {\n                  \"type\": \"nvme3n1\"\n                },\n                {\n                  \"type\": \"sda\"\n                },\n                {\n                  \"type\": \"sda1\"\n                },\n                {\n                  \"type\": \"sda2\"\n                },\n                {\n                  \"type\": \"sdb\"\n                },\n                {\n                  \"type\": \"sdb1\"\n                },\n                {\n                  \"type\": \"sdb2\"\n                },\n                {\n                  \"type\": \"sdb3\"\n                },\n                {\n                  \"type\": \"sdb5\"\n                }\n              ],\n              \"name\": \"name\"\n            }\n          ],\n          \"name\": \"diskio\"\n        },\n        {\n          \"_id\": 5,\n          \"alertFields\": [\n            \"boot_time\",\n            \"context_switches\",\n            \"entropy_avail\",\n            \"interrupts\",\n            \"processes_forked\"\n          ],\n          \"alertSubCluster\": [\n            {\n              \"_id\": 1,\n              \"alertTypes\": [\n                {\n                  \"type\": \"2030045418\"\n                }\n              ],\n              \"name\": \"host\"\n            }\n          ],\n          \"name\": \"kernel\"\n        },\n        {\n          \"_id\": 6,\n          \"alertFields\": [\n            \"active\",\n            \"available\",\n            \"available_percent\",\n            \"buffered\",\n            \"cached\",\n            \"commit_limit\",\n            \"committed_as\",\n            \"dirty\",\n            \"free\",\n            \"high_free\",\n            \"high_total\",\n            \"huge_page_size\",\n            \"huge_pages_free\",\n            \"huge_pages_total\",\n            \"inactive\",\n            \"low_free\",\n            \"low_total\",\n            \"mapped\",\n            \"page_tables\",\n            \"shared\",\n            \"slab\",\n            \"swap_cached\",\n            \"swap_free\",\n            \"swap_total\",\n            \"total\",\n            \"used\",\n            \"used_percent\",\n            \"vmalloc_chunk\",\n            \"vmalloc_total\",\n            \"vmalloc_used\",\n            \"wired\",\n            \"write_back\",\n            \"write_back_tmp\"\n          ],\n          \"alertSubCluster\": [\n            {\n              \"_id\": 1,\n              \"alertTypes\": [\n                {\n                  \"type\": \"2030045418\"\n                }\n              ],\n              \"name\": \"host\"\n            }\n          ],\n          \"name\": \"mem\"\n        },\n        {\n          \"_id\": 7,\n          \"alertFields\": [\n            \"blocked\",\n            \"dead\",\n            \"idle\",\n            \"paging\",\n            \"running\",\n            \"sleeping\",\n            \"stopped\",\n            \"total\",\n            \"total_threads\",\n            \"unknown\",\n            \"zombies\"\n          ],\n          \"alertSubCluster\": [\n            {\n              \"_id\": 1,\n              \"alertTypes\": [\n                {\n                  \"type\": \"2030045418\"\n                }\n              ],\n              \"name\": \"host\"\n            }\n          ],\n          \"name\": \"processes\"\n        },\n        {\n          \"_id\": 8,\n          \"alertFields\": [\n            \"free\",\n            \"in\",\n            \"out\",\n            \"total\",\n            \"used\",\n            \"used_percent\"\n          ],\n          \"alertSubCluster\": [\n            {\n              \"_id\": 1,\n              \"alertTypes\": [\n                {\n                  \"type\": \"2030045418\"\n                }\n              ],\n              \"name\": \"host\"\n            }\n          ],\n          \"name\": \"swap\"\n        },\n        {\n          \"_id\": 9,\n          \"alertFields\": [\n            \"load1\",\n            \"load15\",\n            \"load5\",\n            \"n_cpus\",\n            \"n_users\",\n            \"uptime\",\n            \"uptime_format\"\n          ],\n          \"alertSubCluster\": [\n            {\n              \"_id\": 1,\n              \"alertTypes\": [\n                {\n                  \"type\": \"2030045418\"\n                }\n              ],\n              \"name\": \"host\"\n            }\n          ],\n          \"name\": \"system\"\n        }\n      ]\n    }\n\n    response = mock.onGet('/api/v1.0/get_alert_types/').reply(200, data);\n  });\n\n\n  test('renders alert table component', async () => {\n    const mock = new MockAdapter(axios);\n    jest.setTimeout(30000);\n\n    const { getByLabelText, queryAllByText, getByTitle, getAllByTestId, getAllByTitle, getByTestId, getByText, getAllByText, asFragment } = wrapper;\n\n    getByTestId(\"AlertsTableTag\");\n    await act(async () => {\n      select_input = await waitForElement(() => getAllByTitle('Edit')[0]);\n      fireEvent.click(select_input);\n\n      select_input = await waitForElement(() => getAllByTestId(\"SelectEditTag\")[0]);\n      fireEvent.click(select_input);\n\n      // select_input = await waitForElement(() => getAllByTestId(\"SelectEditMenuItemTag\")[0]);\n      // fireEvent.click(select_input);\n\n      // select_input = await waitForElement(() => getAllByTestId(\"SelectEditMenuItemTag\")[0]);\n      // fireEvent.change(select_input, { target: { value: \"Less Than\" } });\n      let spy = jest.spyOn(axios, \"post\").mockReturnValue(200);\n\n      fireEvent.click(getAllByTitle('Save')[0]);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      expect(spy).toBeCalled();//toHave('/api/v1.0/update_alerts/', { \"_id\":{\"$oid\":\"5d5e67b7f082d4c68c98f58b\"},\"alertName\": \"NewAlert\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"device\", \"alertType\": \"cpu-total\", \"alertCondition\": \"Greater Than\", \"alertField\": \"usage_system\", \"description\": \"last\", \"alertRange\": \"109\", \"active\": true, \"selected\": false, \"edit\": false },{\"headers\": {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\", \"x-access-token\": null}});\n\n      select_input = await waitForElement(() => getAllByTitle('Edit')[0]);\n      fireEvent.click(select_input);\n\n      select_input_child = await waitForElement(() => getAllByTestId(\"SelectEditTag\")[0]);\n      fireEvent.click(select_input_child);\n      spy = jest.spyOn(axios, \"post\").mockReturnValue(200);\n\n      fireEvent.click(getAllByTitle('Save')[0]);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      expect(spy).toBeCalled();//toHave('/api/v1.0/update_alerts/', { \"_id\":{\"$oid\":\"5d5e67b7f082d4c68c98f58b\"},\"alertName\": \"NewAlert\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"device\", \"alertType\": \"cpu-total\", \"alertCondition\": \"Greater Than\", \"alertField\": \"usage_system\", \"description\": \"last\", \"alertRange\": \"109\", \"active\": true, \"selected\": false, \"edit\": false },{\"headers\": {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\", \"x-access-token\": null}});\n\n      select_delete = await waitForElement(() => getAllByTitle('Delete')[0]);\n      fireEvent.click(select_delete);\n\n      spy = jest.spyOn(axios, \"post\").mockReturnValue(200);\n      //mock.onPost().reply(200);\n      fireEvent.click(getAllByTitle('Save')[0]);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      expect(spy).toBeCalled();//toHave('/api/v1.0/update_alerts/', { \"_id\":{\"$oid\":\"5d5e67b7f082d4c68c98f58b\"},\"alertName\": \"NewAlert\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"device\", \"alertType\": \"cpu-total\", \"alertCondition\": \"Greater Than\", \"alertField\": \"usage_system\", \"description\": \"last\", \"alertRange\": \"109\", \"active\": true, \"selected\": false, \"edit\": false },{\"headers\": {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\", \"x-access-token\": null}});\n\n      fireEvent.click(getAllByTitle('Edit')[0]);\n      spy = jest.spyOn(axios, \"post\");\n\n      fireEvent.click(getAllByTitle('Save')[0]);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      expect(spy).toBeCalled();\n    });\n\n    const input = getByTestId(\"AlertsTableTag\").querySelector('button')\n    fireEvent.click(input);\n\n    fireEvent.click(getAllByTestId(\"SwitchTag\")[0].querySelector('input'));\n    mock.onPost('/api/v1.0/toggle_alert_status/', { alertName: \"ThisisAwesome\", status: false }).reply({ \"status\": 200 });\n    fireEvent.change(getAllByTestId(\"SwitchTag\")[0].querySelector('input'), { target: { checked: true, value: \"Samsung rocks #/\" } });\n    mock.onPost().reply({ \"status\": 200 });\n    select_save = getAllByTitle('Save')[0];\n    select_switch_tag = getAllByTestId(\"SwitchTag\")[0];\n    await act(async () => {\n      fireEvent.click(select_input);\n      //let spy = jest.spyOn(axios, \"post\");\n      mock.onPost('/api/v1.0/update_alerts/').reply({ \"status\": 200 });\n      fireEvent.click(select_save);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      //expect(spy).toBeCalled();\n    });\n  });\n\n  test('renders alert table component status 200', async () => {\n    let mock = new MockAdapter(axios);\n    jest.setTimeout(30000);\n    const { getByLabelText, queryAllByText, getByTitle, getAllByTestId, getAllByTitle, getByTestId, getByText, getAllByText, asFragment } = wrapper;\n    //getByTestId(\"AlertManagementTag\");\n    getByTestId(\"AlertsTableTag\");\n    await act(async () => {\n      //select_input = await waitForElement(() => getAllByTitle('Edit')[0]);\n      fireEvent.click(select_input);\n\n      // select_input = await waitForElement(() => getAllByTestId(\"SelectEditTag\")[0]);\n      // fireEvent.click(select_input);\n\n      // select_input = await waitForElement(() => getAllByTestId(\"SelectEditMenuItemTag\")[0]);\n      // fireEvent.click(select_input);\n\n      // select_input = await waitForElement(() => getAllByTestId(\"SelectEditMenuItemTag\")[0]);\n      // fireEvent.change(select_input, { target: { value: \"Less Than\" } });\n      let spy = jest.spyOn(axios, \"post\");\n      mock.onPost().reply(200);\n      fireEvent.click(select_save);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      expect(spy).toBeCalled();//toHave('/api/v1.0/update_alerts/', { \"_id\":{\"$oid\":\"5d5e67b7f082d4c68c98f58b\"},\"alertName\": \"NewAlert\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"device\", \"alertType\": \"cpu-total\", \"alertCondition\": \"Greater Than\", \"alertField\": \"usage_system\", \"description\": \"last\", \"alertRange\": \"109\", \"active\": true, \"selected\": false, \"edit\": false },{\"headers\": {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\", \"x-access-token\": null}});\n\n      //select_input = await waitForElement(() => getAllByTitle('Edit')[0]);\n      fireEvent.click(select_input);\n\n      //let select_input_child = await waitForElement(() => getAllByTestId(\"SelectEditTag\")[0]);\n      fireEvent.click(select_input_child);\n      spy = jest.spyOn(axios, \"post\");\n\n      fireEvent.click(select_save);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      expect(spy).toBeCalled();//toHave('/api/v1.0/update_alerts/', { \"_id\":{\"$oid\":\"5d5e67b7f082d4c68c98f58b\"},\"alertName\": \"NewAlert\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"device\", \"alertType\": \"cpu-total\", \"alertCondition\": \"Greater Than\", \"alertField\": \"usage_system\", \"description\": \"last\", \"alertRange\": \"109\", \"active\": true, \"selected\": false, \"edit\": false },{\"headers\": {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\", \"x-access-token\": null}});\n\n      //select_delete = await waitForElement(() => getAllByTitle('Delete')[0]);\n      fireEvent.click(select_delete);\n\n      spy = jest.spyOn(axios, \"post\");\n      mock.onPost().reply(200);\n      fireEvent.click(select_save);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      expect(spy).toBeCalled();//toHave('/api/v1.0/update_alerts/', { \"_id\":{\"$oid\":\"5d5e67b7f082d4c68c98f58b\"},\"alertName\": \"NewAlert\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"device\", \"alertType\": \"cpu-total\", \"alertCondition\": \"Greater Than\", \"alertField\": \"usage_system\", \"description\": \"last\", \"alertRange\": \"109\", \"active\": true, \"selected\": false, \"edit\": false },{\"headers\": {\"Accept\": \"application/json\", \"Content-Type\": \"application/json\", \"x-access-token\": null}});\n\n      fireEvent.click(select_input);\n      spy = jest.spyOn(axios, \"post\");\n\n      fireEvent.click(select_save);\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      expect(spy).toBeCalled();\n    });\n\n    const input = getByTestId(\"AlertsTableTag\").querySelector('button')\n    fireEvent.click(input);\n\n    fireEvent.click(select_switch_tag.querySelector('input'));\n    mock.onPost('/api/v1.0/toggle_alert_status/', { alertName: \"ThisisAwesome\", status: false }).reply(200);\n    fireEvent.change(select_switch_tag.querySelector('input'), { target: { checked: true, value: \"Samsung rocks #/\" } });\n    mock.onPost().reply(200);\n\n  });\n\n  \n  test('renders alert types component', async () => {\n    let mock = new MockAdapter(axios);\n    jest.setTimeout(30000);\n\n    const { getByLabelText, queryAllByText, getAllByTestId, getAllByRole, getByRole, getByTestId, getByText, getAllByText, asFragment } = wrapper;\n    getByTestId(\"AlertsTypesTag\");\n    getAllByTestId(\"ClusterTag\")[0];\n    let alert_input;\n    let spy;\n    let yesBtn;\n    await act(async () => {\n      //const tree_input =  await waitForElement(() => getAllByRole(\"treeitem\")[0]);\n      const tree_input = await waitForElement(() => getAllByRole(\"treeitem\")[0].querySelector('div'));\n      fireEvent.click(tree_input);\n      const subtreeItem = await waitForElement(() => getAllByRole(\"subtreeitem\")[0].querySelector('div'));\n      fireEvent.click(subtreeItem);\n      const formControl = await waitForElement(() => getAllByTestId(\"alertTypesCheckbox\")[0]);\n      fireEvent.click(formControl);\n      fireEvent.change(formControl, { target: { checked: true } });\n\n\n      // let { getByLabelText, queryAllByText, getAllByTestId, getAllByRole, getByRole, getByTestId, getByText, getAllByText, asFragment } = render(\n      //   <I18nextProvider i18n={i18n}>\n      //       <Provider store={store}>\n      //           <AlertFields alertClusterList={alertClusterList} radioindex={radioindex} alertClusterName={alertClusterName} selectedAlertSubCluster={selectedAlertSubCluster} alertType={alertType} />\n      //       </Provider>\n      //   </I18nextProvider>);\n      //await waitForElement(() => getByLabelText(/usage_idle/i));\n      // const input =  await waitForElement(() => getByRole(/radiogroup/i));\n      const input = await waitForElement(() => getAllByTestId(/alertFieldRadioTag/i)[0]);\n      fireEvent.click(input);\n\n      alert_input = await waitForElement(() => getByLabelText(/Alert Name/i));\n      fireEvent.click(alert_input);\n      fireEvent.change(alert_input, { target: { value: \"Alert\" } });\n      fireEvent.keyDown(alert_input, { key: 'Enter', keyCode: 13, charCode: 13 });\n\n\n      let dropdown_input = await waitForElement(() => getAllByTestId(\"selectAddNewAlertsTag\")[0]);\n      fireEvent.click(dropdown_input);\n\n      // let dropdown_element = await waitForElement(() => getAllByTestId(\"selectMenuItemAddNewAlertsTag\")[0]);\n      // fireEvent.click(dropdown_element);\n\n      // fireEvent.change(dropdown_element, { target: { value: \"Less Than\" } });\n\n      //let value_input = await waitForElement(() => getByLabelText(/Value/i));\n      let value_input = await waitForElement(() => getByTestId(/Alert_Range_TextField/i));\n      fireEvent.click(value_input);\n      fireEvent.change(value_input, { target: { value: \"60\" } });\n      fireEvent.keyDown(value_input, { key: 'Enter', keyCode: 13, charCode: 13 });\n\n      let button_input = await waitForElement(() => getAllByTestId('ButtonTag')[0].querySelector('button'));\n      spy = jest.spyOn(axios, \"post\");\n      mock.onPost('/api/v1.0/add_alert/').reply(200);\n      fireEvent.click(button_input);\n      yesBtn = await waitForElement(() => getByText('Yes'));\n      spy = jest.spyOn(axios, \"post\");\n      mock.onPost('/api/v1.0/add_alert/').reply(200);\n      fireEvent.click(yesBtn);\n      expect(spy).toBeCalled();\n\n    });\n\n    fireEvent.click(getByTestId(\"AlertsTypesTag\").querySelector('ul'));\n\n  });\n\n\n\n  test('renders add new alert component status 200', async () => {\n    let mock = new MockAdapter(axios);\n    jest.setTimeout(30000);\n    const { getByLabelText, queryAllByText, getByTitle, getAllByTestId, getAllByTitle, getByTestId, getByText, getAllByText, asFragment } = wrapper;\n    getAllByTestId(\"addNewAlertsTag\")[0];\n    let alert_input;\n    let spy;\n    let yesBtn;\n    await act(async () => {\n      alert_input = await waitForElement(() => getByLabelText(/Alert Name/i));\n      fireEvent.click(alert_input);\n      fireEvent.change(alert_input, { target: { value: \"Alert\" } });\n      fireEvent.keyDown(alert_input, { key: 'Enter', keyCode: 13, charCode: 13 });\n      // alert_input = await waitForElement(() => getAllByTestId('ButtonTag')[0].querySelector('button'));\n      // fireEvent.click(alert_input);\n      // yesBtn = await waitForElement(() => getByText('Yes'));\n      // spy = jest.spyOn(axios, \"post\");\n      // mock.onPost('/api/v1.0/add_alert/').reply(200);\n      // fireEvent.click(yesBtn);\n      // expect(spy).toBeCalled();\n\n      // alert_input = await waitForElement(() => getByLabelText(/Alert Name/i));\n      // fireEvent.click(alert_input);\n      // fireEvent.change(alert_input, { target: { value: \"AlertName\" } });\n      // fireEvent.keyDown(alert_input, { key: 'Enter', keyCode: 13, charCode: 13 });\n\n      // alert_input = await waitForElement(() => getAllByTestId(\"alertFieldRadioTag\")[0]);\n      // fireEvent.click(alert_input);\n\n      let field_input = await waitForElement(() => getByLabelText(/Alert Field/i));\n      fireEvent.click(field_input);\n      fireEvent.change(field_input, { target: { value: \"Usage_system\" } });\n\n      let dropdown_input = await waitForElement(() => getAllByTestId(\"selectAddNewAlertsTag\")[0]);\n      fireEvent.click(dropdown_input);\n\n      // let dropdown_element = await waitForElement(() => getAllByTestId(\"selectMenuItemAddNewAlertsTag\")[0]);\n      // fireEvent.click(dropdown_element);\n\n      // //let dropdown_element2 = await waitForElement(() => getAllByTestId(\"selectMenuItemAddNewAlertsTag\")[0]);\n      // fireEvent.change(dropdown_element, { target: { value: \"Less Than\" } });\n\n      //let value_input = await waitForElement(() => getByLabelText(/Value/i));\n      let value_input = await waitForElement(() => getByTestId(/Alert_Range_TextField/i));\n      fireEvent.click(value_input);\n      fireEvent.change(value_input, { target: { value: \"60\" } });\n      fireEvent.keyDown(value_input, { key: 'Enter', keyCode: 13, charCode: 13 });\n\n      let button_input = await waitForElement(() => getAllByTestId('ButtonTag')[0].querySelector('button'));\n      spy = jest.spyOn(axios, \"post\");\n      mock.onPost('/api/v1.0/add_alert/').reply(200);\n      fireEvent.click(button_input);\n      yesBtn = await waitForElement(() => getByText('Yes'));\n      spy = jest.spyOn(axios, \"post\");\n      mock.onPost('/api/v1.0/add_alert/').reply(200);\n      fireEvent.click(yesBtn);\n      expect(spy).toBeCalled();\n    });\n  });\n\n  test('renders alert management container', () => {\n    const { getByTestId, asFragment } = wrapper;\n    expect(asFragment()).toMatchSnapshot();\n    getByTestId('alertManagementTag')\n  });\n\n\n});"]}