82484a70bbfc53b7fa275bc2d54610b8
/* istanbul ignore next */
"use strict";

var cov_1ovvdnowlj = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/AlertManagementComponents/AlertTable/index.js";
  var hash = "01f9dbd190851e0dacba4334dbca1b2a5fb82942";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/AlertManagementComponents/AlertTable/index.js",
    statementMap: {
      "0": {
        start: {
          line: 38,
          column: 15
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "1": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 56,
          column: 4
        }
      },
      "2": {
        start: {
          line: 59,
          column: 17
        },
        end: {
          line: 59,
          column: 19
        }
      },
      "3": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 17
        }
      },
      "4": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "5": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "6": {
        start: {
          line: 97,
          column: 14
        },
        end: {
          line: 107,
          column: 23
        }
      },
      "7": {
        start: {
          line: 105,
          column: 18
        },
        end: {
          line: 105,
          column: 129
        }
      },
      "8": {
        start: {
          line: 113,
          column: 14
        },
        end: {
          line: 134,
          column: 23
        }
      },
      "9": {
        start: {
          line: 116,
          column: 18
        },
        end: {
          line: 116,
          column: 54
        }
      },
      "10": {
        start: {
          line: 117,
          column: 18
        },
        end: {
          line: 117,
          column: 91
        }
      },
      "11": {
        start: {
          line: 118,
          column: 18
        },
        end: {
          line: 118,
          column: 66
        }
      },
      "12": {
        start: {
          line: 119,
          column: 18
        },
        end: {
          line: 119,
          column: 59
        }
      },
      "13": {
        start: {
          line: 120,
          column: 18
        },
        end: {
          line: 124,
          column: 21
        }
      },
      "14": {
        start: {
          line: 132,
          column: 18
        },
        end: {
          line: 132,
          column: 129
        }
      },
      "15": {
        start: {
          line: 154,
          column: 14
        },
        end: {
          line: 162,
          column: 16
        }
      },
      "16": {
        start: {
          line: 159,
          column: 32
        },
        end: {
          line: 159,
          column: 78
        }
      },
      "17": {
        start: {
          line: 174,
          column: 24
        },
        end: {
          line: 174,
          column: 34
        }
      },
      "18": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 249,
          column: 6
        }
      },
      "19": {
        start: {
          line: 183,
          column: 18
        },
        end: {
          line: 195,
          column: 20
        }
      },
      "20": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 194,
          column: 29
        }
      },
      "21": {
        start: {
          line: 185,
          column: 22
        },
        end: {
          line: 187,
          column: 82
        }
      },
      "22": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 72
        }
      },
      "23": {
        start: {
          line: 187,
          column: 27
        },
        end: {
          line: 187,
          column: 82
        }
      },
      "24": {
        start: {
          line: 188,
          column: 22
        },
        end: {
          line: 188,
          column: 53
        }
      },
      "25": {
        start: {
          line: 189,
          column: 22
        },
        end: {
          line: 192,
          column: 24
        }
      },
      "26": {
        start: {
          line: 193,
          column: 22
        },
        end: {
          line: 193,
          column: 32
        }
      },
      "27": {
        start: {
          line: 197,
          column: 18
        },
        end: {
          line: 206,
          column: 20
        }
      },
      "28": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 205,
          column: 29
        }
      },
      "29": {
        start: {
          line: 200,
          column: 38
        },
        end: {
          line: 200,
          column: 67
        }
      },
      "30": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 76
        }
      },
      "31": {
        start: {
          line: 202,
          column: 24
        },
        end: {
          line: 202,
          column: 50
        }
      },
      "32": {
        start: {
          line: 204,
          column: 22
        },
        end: {
          line: 204,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 38,
            column: 16
          }
        },
        loc: {
          start: {
            line: 38,
            column: 26
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 38
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 61,
            column: 3
          }
        },
        loc: {
          start: {
            line: 61,
            column: 21
          },
          end: {
            line: 171,
            column: 3
          }
        },
        line: 61
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 95,
            column: 18
          },
          end: {
            line: 95,
            column: 19
          }
        },
        loc: {
          start: {
            line: 97,
            column: 14
          },
          end: {
            line: 107,
            column: 23
          }
        },
        line: 97
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 104,
            column: 81
          },
          end: {
            line: 104,
            column: 82
          }
        },
        loc: {
          start: {
            line: 104,
            column: 96
          },
          end: {
            line: 106,
            column: 17
          }
        },
        line: 104
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 111,
            column: 25
          },
          end: {
            line: 111,
            column: 26
          }
        },
        loc: {
          start: {
            line: 113,
            column: 14
          },
          end: {
            line: 134,
            column: 23
          }
        },
        line: 113
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 115,
            column: 26
          },
          end: {
            line: 115,
            column: 27
          }
        },
        loc: {
          start: {
            line: 115,
            column: 37
          },
          end: {
            line: 125,
            column: 17
          }
        },
        line: 115
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 131,
            column: 81
          },
          end: {
            line: 131,
            column: 82
          }
        },
        loc: {
          start: {
            line: 131,
            column: 96
          },
          end: {
            line: 133,
            column: 17
          }
        },
        line: 131
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 152,
            column: 18
          },
          end: {
            line: 152,
            column: 19
          }
        },
        loc: {
          start: {
            line: 154,
            column: 14
          },
          end: {
            line: 162,
            column: 16
          }
        },
        line: 154
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 159,
            column: 27
          }
        },
        loc: {
          start: {
            line: 159,
            column: 32
          },
          end: {
            line: 159,
            column: 78
          }
        },
        line: 159
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 173,
            column: 2
          },
          end: {
            line: 173,
            column: 3
          }
        },
        loc: {
          start: {
            line: 173,
            column: 11
          },
          end: {
            line: 250,
            column: 3
          }
        },
        line: 173
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 182,
            column: 29
          },
          end: {
            line: 182,
            column: 30
          }
        },
        loc: {
          start: {
            line: 183,
            column: 18
          },
          end: {
            line: 195,
            column: 20
          }
        },
        line: 183
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 183,
            column: 30
          },
          end: {
            line: 183,
            column: 31
          }
        },
        loc: {
          start: {
            line: 183,
            column: 43
          },
          end: {
            line: 195,
            column: 19
          }
        },
        line: 183
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 184,
            column: 31
          },
          end: {
            line: 184,
            column: 32
          }
        },
        loc: {
          start: {
            line: 184,
            column: 37
          },
          end: {
            line: 194,
            column: 21
          }
        },
        line: 184
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 196,
            column: 29
          },
          end: {
            line: 196,
            column: 30
          }
        },
        loc: {
          start: {
            line: 197,
            column: 18
          },
          end: {
            line: 206,
            column: 20
          }
        },
        line: 197
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 197,
            column: 30
          },
          end: {
            line: 197,
            column: 31
          }
        },
        loc: {
          start: {
            line: 197,
            column: 43
          },
          end: {
            line: 206,
            column: 19
          }
        },
        line: 197
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 198,
            column: 31
          },
          end: {
            line: 198,
            column: 32
          }
        },
        loc: {
          start: {
            line: 198,
            column: 37
          },
          end: {
            line: 205,
            column: 21
          }
        },
        line: 198
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 100,
            column: 23
          },
          end: {
            line: 101,
            column: 158
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 140
          }
        }, {
          start: {
            line: 101,
            column: 144
          },
          end: {
            line: 101,
            column: 158
          }
        }],
        line: 100
      },
      "1": {
        loc: {
          start: {
            line: 100,
            column: 24
          },
          end: {
            line: 100,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 25
          },
          end: {
            line: 100,
            column: 32
          }
        }, {
          start: {
            line: 100,
            column: 38
          },
          end: {
            line: 100,
            column: 55
          }
        }, {
          start: {
            line: 100,
            column: 61
          },
          end: {
            line: 100,
            column: 90
          }
        }],
        line: 100
      },
      "2": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 69
          },
          end: {
            line: 101,
            column: 123
          }
        }, {
          start: {
            line: 101,
            column: 126
          },
          end: {
            line: 101,
            column: 140
          }
        }],
        line: 101
      },
      "3": {
        loc: {
          start: {
            line: 101,
            column: 5
          },
          end: {
            line: 101,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 5
          },
          end: {
            line: 101,
            column: 22
          }
        }, {
          start: {
            line: 101,
            column: 26
          },
          end: {
            line: 101,
            column: 65
          }
        }],
        line: 101
      },
      "4": {
        loc: {
          start: {
            line: 104,
            column: 17
          },
          end: {
            line: 106,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 48
          },
          end: {
            line: 106,
            column: 18
          }
        }, {
          start: {
            line: 106,
            column: 21
          },
          end: {
            line: 106,
            column: 25
          }
        }],
        line: 104
      },
      "5": {
        loc: {
          start: {
            line: 127,
            column: 23
          },
          end: {
            line: 128,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 18
          },
          end: {
            line: 128,
            column: 76
          }
        }, {
          start: {
            line: 128,
            column: 79
          },
          end: {
            line: 128,
            column: 84
          }
        }],
        line: 127
      },
      "6": {
        loc: {
          start: {
            line: 127,
            column: 24
          },
          end: {
            line: 127,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 25
          },
          end: {
            line: 127,
            column: 28
          }
        }, {
          start: {
            line: 127,
            column: 34
          },
          end: {
            line: 127,
            column: 45
          }
        }, {
          start: {
            line: 127,
            column: 51
          },
          end: {
            line: 127,
            column: 72
          }
        }, {
          start: {
            line: 127,
            column: 78
          },
          end: {
            line: 127,
            column: 111
          }
        }],
        line: 127
      },
      "7": {
        loc: {
          start: {
            line: 131,
            column: 17
          },
          end: {
            line: 133,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 48
          },
          end: {
            line: 133,
            column: 18
          }
        }, {
          start: {
            line: 133,
            column: 21
          },
          end: {
            line: 133,
            column: 25
          }
        }],
        line: 131
      },
      "8": {
        loc: {
          start: {
            line: 156,
            column: 27
          },
          end: {
            line: 156,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 27
          },
          end: {
            line: 156,
            column: 30
          }
        }, {
          start: {
            line: 156,
            column: 34
          },
          end: {
            line: 156,
            column: 47
          }
        }, {
          start: {
            line: 156,
            column: 51
          },
          end: {
            line: 156,
            column: 85
          }
        }],
        line: 156
      },
      "9": {
        loc: {
          start: {
            line: 185,
            column: 22
          },
          end: {
            line: 187,
            column: 82
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 22
          },
          end: {
            line: 187,
            column: 82
          }
        }, {
          start: {
            line: 185,
            column: 22
          },
          end: {
            line: 187,
            column: 82
          }
        }],
        line: 185
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "01f9dbd190851e0dacba4334dbca1b2a5fb82942"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));

var
/* istanbul ignore next */
_materialTable = _interopRequireDefault(require("material-table"));

var
/* istanbul ignore next */
_MuiThemeProvider = _interopRequireDefault(require("@material-ui/core/styles/MuiThemeProvider"));

var
/* istanbul ignore next */
_styles = require("@material-ui/core/styles");

var
/* istanbul ignore next */
_core = require("@material-ui/core");

var
/* istanbul ignore next */
_icons = require("@material-ui/icons");

var
/* istanbul ignore next */
_Delete = _interopRequireDefault(require("@material-ui/icons/Delete"));

var
/* istanbul ignore next */
_Dialog = _interopRequireDefault(require("../../Dialog"));

/* istanbul ignore next */
require("./AlertTable.css");

var
/* istanbul ignore next */
_theme = require("../../../theme");

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/AlertManagementComponents/AlertTable/index.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

cov_1ovvdnowlj.s[0]++;

const styles = theme => {
  /* istanbul ignore next */
  cov_1ovvdnowlj.f[0]++;
  cov_1ovvdnowlj.s[1]++;
  return {
    titleContainer: {
      marginTop: "-5px",
      maxWidth: '100%',
      flexBasis: '100%'
    },
    pageHeader: {
      textAlign: 'left',
      fontSize: '16px',
      fontWeight: 'bold',
      color: '#424850',
      marginBottom: theme.spacing(1)
    },
    tableContainer: {
      maxWidth: '100%',
      flexBasis: '100%'
    }
  };
};

let alertsData =
/* istanbul ignore next */
(cov_1ovvdnowlj.s[2]++, []);

class AlertTable extends
/* istanbul ignore next */
_react.
/* istanbul ignore next */
Component {
  constructor(props) {
    /* istanbul ignore next */
    cov_1ovvdnowlj.f[1]++;
    cov_1ovvdnowlj.s[3]++;
    super(props);

    /* istanbul ignore next */
    cov_1ovvdnowlj.s[4]++;
    this.theme =
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    createMuiTheme)({
      typography: {
        fontSize: 12,
        fontFamily: 'Arial'
      },
      palette: {
        primary: {
          main: '#4caf50'
        },
        secondary: {
          main: '#ff9100'
        }
      }
    });

    /* istanbul ignore next */
    cov_1ovvdnowlj.s[5]++;
    this.state = {
      alertConditionValue: "",
      columns: [{
        title: 'Alert Name',
        field: 'alertName',
        editable: 'never'
      }, {
        title: 'Alert Type',
        field: 'alertType',
        editable: 'never'
      }, {
        title: 'Alert Condition',
        field: 'alertCondition',
        render: rowData => {
          /* istanbul ignore next */
          cov_1ovvdnowlj.f[2]++;
          cov_1ovvdnowlj.s[6]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            _core.
            /* istanbul ignore next */
            Select,
            /* istanbul ignore next */
            {
              SelectDisplayProps: {
                'data-testid': "SelectEditTag"
              },
              disabled:
              /* istanbul ignore next */
              true,
              value:
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[1][0]++, rowData) &&
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[1][1]++, rowData.tableData) &&
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[1][2]++, rowData.tableData.id !== null) ?
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[0][0]++,
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[3][0]++, this.props.alerts) &&
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[3][1]++, this.props.alerts[rowData.tableData.id]) ?
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[2][0]++, this.props.alerts[rowData.tableData.id].alertCondition) :
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[2][1]++, 'This is NULL')) :
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[0][1]++, 'This is NULL'),
              __source: {
                fileName: _jsxFileName,
                lineNumber: 97
              },
              __self: this
            }, this.props.dropdownCondition ?
            /* istanbul ignore next */
            (cov_1ovvdnowlj.b[4][0]++, this.props.dropdownCondition.map(eachValue => {
              /* istanbul ignore next */
              cov_1ovvdnowlj.f[3]++;
              cov_1ovvdnowlj.s[7]++;
              return (
                /* istanbul ignore next */
                _react.default.createElement(
                /* istanbul ignore next */
                _core.
                /* istanbul ignore next */
                MenuItem,
                /* istanbul ignore next */
                {
                  key: eachValue,
                  value: eachValue,

                  /* istanbul ignore next */
                  "data-testid": "SelectEditMenuItemTag",
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 105
                  },
                  __self: this
                }, eachValue)
              );
            })) :
            /* istanbul ignore next */
            (cov_1ovvdnowlj.b[4][1]++, null))
          );
        },
        editComponent: row => {
          /* istanbul ignore next */
          cov_1ovvdnowlj.f[4]++;
          cov_1ovvdnowlj.s[8]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            _core.
            /* istanbul ignore next */
            Select,
            /* istanbul ignore next */
            {
              SelectDisplayProps: {
                'data-testid': "SelectEditTag"
              },
              onChange: event => {
                /* istanbul ignore next */
                cov_1ovvdnowlj.f[5]++;
                cov_1ovvdnowlj.s[9]++;
                alertsData = [...this.props.alerts];

                /* istanbul ignore next */
                cov_1ovvdnowlj.s[10]++;
                alertsData[row.rowData.tableData.id].alertCondition = event.target.value;

                /* istanbul ignore next */
                cov_1ovvdnowlj.s[11]++;
                row.rowData.alertCondition = event.target.value;

                /* istanbul ignore next */
                cov_1ovvdnowlj.s[12]++;
                this.props.updateAlertsState(alertsData);

                /* istanbul ignore next */
                cov_1ovvdnowlj.s[13]++;
                this.setState(
                /* istanbul ignore next */
                _objectSpread({}, this.state, {
                  rowid: row.rowData.tableData.id,
                  alertConditionValue: event.target.value
                }));
              },
              value:
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[6][0]++, row) &&
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[6][1]++, row.rowData) &&
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[6][2]++, row.rowData.tableData) &&
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[6][3]++, row.rowData.tableData.id !== null) ?
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[5][0]++, this.props.alerts[row.rowData.tableData.id].alertCondition) :
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[5][1]++, 'asd'),
              __source: {
                fileName: _jsxFileName,
                lineNumber: 113
              },
              __self: this
            }, this.props.dropdownCondition ?
            /* istanbul ignore next */
            (cov_1ovvdnowlj.b[7][0]++, this.props.dropdownCondition.map(eachValue => {
              /* istanbul ignore next */
              cov_1ovvdnowlj.f[6]++;
              cov_1ovvdnowlj.s[14]++;
              return (
                /* istanbul ignore next */
                _react.default.createElement(
                /* istanbul ignore next */
                _core.
                /* istanbul ignore next */
                MenuItem,
                /* istanbul ignore next */
                {
                  key: eachValue,
                  value: eachValue,

                  /* istanbul ignore next */
                  "data-testid": "SelectEditMenuItemTag",
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 132
                  },
                  __self: this
                }, eachValue)
              );
            })) :
            /* istanbul ignore next */
            (cov_1ovvdnowlj.b[7][1]++, null))
          );
        }
      }, {
        title: 'Alert Value',
        field: 'alertRange',
        type: 'numeric',
        headerStyle: {
          textAlign: 'left'
        },
        cellStyle: {
          textAlign: 'left'
        }
      }, {
        title: 'Active/Inactive',
        field: 'active',
        editable: 'never',
        render: row => {
          /* istanbul ignore next */
          cov_1ovvdnowlj.f[7]++;
          cov_1ovvdnowlj.s[15]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            _core.
            /* istanbul ignore next */
            Switch,
            /* istanbul ignore next */
            {
              /* istanbul ignore next */
              "data-testid": "SwitchTag",
              disabled:
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[8][0]++, row) &&
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[8][1]++, row.tableData) &&
              /* istanbul ignore next */
              (cov_1ovvdnowlj.b[8][2]++, row.tableData.editing === 'update'),
              size: "small",
              checked: row.active,
              onChange: () => {
                /* istanbul ignore next */
                cov_1ovvdnowlj.f[8]++;
                cov_1ovvdnowlj.s[16]++;
                return this.props.togglealertstatus(row.tableData.id);
              },
              color: "primary",
              inputProps: {
                'aria-label': 'primary checkbox'
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 154
              },
              __self: this
            })
          );
        }
      }, {
        title: 'Alert Description',
        field: 'description'
      }]
    };
  }

  render() {
    /* istanbul ignore next */
    cov_1ovvdnowlj.f[9]++;

    const _ref = (cov_1ovvdnowlj.s[17]++, this.props),
          classes = _ref.classes;

    /* istanbul ignore next */
    cov_1ovvdnowlj.s[18]++;
    return (
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        item:
        /* istanbul ignore next */
        true,

        /* istanbul ignore next */
        "data-testid": "AlertsTableTag",
        container:
        /* istanbul ignore next */
        true,
        sm: 6,
        xs: 12,
        className: classes.titleContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 176
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        className: classes.tableContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 177
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _MuiThemeProvider.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        theme: this.theme,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 178
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _materialTable.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        style: {
          flexBasis: '100%'
        },
        editable: {
          onRowUpdate: (newData, oldData) => {
            /* istanbul ignore next */
            cov_1ovvdnowlj.f[10]++;
            cov_1ovvdnowlj.s[19]++;
            return new Promise(resolve => {
              /* istanbul ignore next */
              cov_1ovvdnowlj.f[11]++;
              cov_1ovvdnowlj.s[20]++;
              setTimeout(() => {
                /* istanbul ignore next */
                cov_1ovvdnowlj.f[12]++;
                cov_1ovvdnowlj.s[21]++;

                if (this.state.alertConditionValue === "") {
                  /* istanbul ignore next */
                  cov_1ovvdnowlj.b[9][0]++;
                  cov_1ovvdnowlj.s[22]++;
                  newData.alertCondition = oldData.alertCondition;
                } else {
                  /* istanbul ignore next */
                  cov_1ovvdnowlj.b[9][1]++;
                  cov_1ovvdnowlj.s[23]++;
                  newData.alertCondition = this.state.alertConditionValue;
                }

                /* istanbul ignore next */
                cov_1ovvdnowlj.s[24]++;
                this.props.saveChange(newData);

                /* istanbul ignore next */
                cov_1ovvdnowlj.s[25]++;
                this.setState(
                /* istanbul ignore next */
                _objectSpread({}, this.state, {
                  alertConditionValue: ""
                }));

                /* istanbul ignore next */
                cov_1ovvdnowlj.s[26]++;
                resolve();
              }, 1000);
            });
          },
          onRowDelete: oldData => {
            /* istanbul ignore next */
            cov_1ovvdnowlj.f[13]++;
            cov_1ovvdnowlj.s[27]++;
            return new Promise(resolve => {
              /* istanbul ignore next */
              cov_1ovvdnowlj.f[14]++;
              cov_1ovvdnowlj.s[28]++;
              setTimeout(() => {
                /* istanbul ignore next */
                cov_1ovvdnowlj.f[15]++;
                {
                  const event =
                  /* istanbul ignore next */
                  (cov_1ovvdnowlj.s[29]++, {
                    target: {
                      checked: true
                    }
                  });

                  /* istanbul ignore next */
                  cov_1ovvdnowlj.s[30]++;
                  this.props.selectalerts(event, oldData.tableData.id);

                  /* istanbul ignore next */
                  cov_1ovvdnowlj.s[31]++;
                  this.props.deletealerts();
                }

                /* istanbul ignore next */
                cov_1ovvdnowlj.s[32]++;
                resolve();
              }, 1000);
            });
          }
        },
        icons: {
          Check:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          Check,
          FirstPage:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          FirstPage,
          LastPage:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          LastPage,
          NextPage:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          ChevronRight,
          PreviousPage:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          ChevronLeft,
          Search:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          Search,
          ThirdStateCheck:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          Remove,
          DetailPanel:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          ChevronRight,
          Export:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          SaveAlt,
          Filter:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          FilterList,
          Add:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          Add,
          Edit:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          Edit,
          Delete:
          /* istanbul ignore next */
          _Delete.
          /* istanbul ignore next */
          default,
          SortArrow:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          ArrowUpward,
          Clear:
          /* istanbul ignore next */
          _icons.
          /* istanbul ignore next */
          Clear
        },
        columns: this.state.columns,
        data: this.props.alerts,
        options: {
          headerStyle:
          /* istanbul ignore next */
          _theme.
          /* istanbul ignore next */
          customTheme.table.header,
          actionsColumnIndex: -1,
          selection: false,
          sorting: true,
          toolbar: false,
          maxBodyHeight: '200px'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 179
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Dialog.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        title: this.props.alerttitle,
        type: "",
        description: this.props.alertdescription,
        open: this.props.alertOpen,
        handleClose: this.props.handleAlertClose,
        onConfirm: this.props.triggerCommand,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 238
        },
        __self: this
      }))))
    );
  }

}

;

/* istanbul ignore next */
var _default =
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
withStyles)(styles)(AlertTable);

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,