{"version":3,"sources":["storageSaga.js"],"names":["fetchArraySize","response","call","axios","get","Date","now","headers","Accept","localStorage","getItem","status","data","put","actionCreators","arraySize","e","cancelled","fetchVolumeDetails","action","payload","addVolumeDetails","fetchVolumes","clearVolumes","i","Members","length","fetchStorageVolumes","volumes","totalVolSize","fetchArray","startStorageLoader","push","setNoArray","stopStorageLoader","fetchDevices","defaultResponse","devices","metadevices","alertDetails","errorMsg","alertType","alertTitle","result","code","showStorageAlert","errorCode","description","return","error","createVolume","count","post","toggleCreateVolumeButton","updateVolume","maxiops","maxbw","parseInt","name","fetchMaxVolumeCount","deleteArray","deleteVolumes","vol_name","createArray","attachDisk","addSpareDisk","detachDisk","removeSpareDisk","fetchDeviceDetails","defaultDiskDetails","DevicePath","SerialNumber","ModelNumber","PhysicalSize","UsedBytes","Firmware","critical_warning","temperature","avail_spare","spare_thresh","precent_used","data_units_read","data_units_written","critical_comp_time","warning_temp_time","percent_used","Device","smartStatus","storageWatcher","takeEvery","actionTypes","SAGA_FETCH_DEVICE_INFO","SAGA_SAVE_VOLUME","SAGA_FETCH_ARRAY_SIZE","SAGA_FETCH_ARRAY","SAGA_DELETE_ARRAY","SAGA_FETCH_VOLUMES","SAGA_DELETE_VOLUMES","SAGA_CREATE_ARRAY","SAGA_FETCH_DEVICE_DETAILS","SAGA_UPDATE_VOLUME","SAGA_ATTACH_DISK","SAGA_DETACH_DISK","SAGA_ADD_SPARE_DISK","SAGA_REMOVE_SPARE_DISK","SAGA_FETCH_MAX_VOLUME_COUNT"],"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <Contains Generator Functions for Storage Management component> *\n@NAME : storageSaga.js\n@AUTHORS: Aswin K K \n@Version : 1.0 *\n@REVISION HISTORY\n[21/08/2019] [Aswin K K] : Prototyping..........////////////////////\n*/\n\nimport axios from 'axios';\nimport { call, takeEvery, put, cancelled } from 'redux-saga/effects';\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as actionCreators from \"../store/actions/exportActionCreators\";\n\n\nfunction* fetchArraySize() {\n    try {\n        const response = yield call([axios, axios.get], `/api/v1.0/available_storage/?ts=${Date.now()}`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data) {\n            yield put(actionCreators.fetchArraySize(response.data[0].arraySize));\n        } else {\n            yield put(actionCreators.fetchArraySize(0));\n        }\n    } catch (e) {\n        yield put(actionCreators.fetchArraySize(0));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.fetchArraySize(0));\n        }\n    }\n}\n\n\nfunction* fetchVolumeDetails(action) {\n    try {\n        const response = yield call([axios, axios.get], action.payload, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n\n        if (response.status === 200) {\n            yield put(actionCreators.addVolumeDetails(response.data))\n        }\n    } catch(e) {\n        // console.log(e)\n    }\n}\n\nfunction* fetchVolumes() {\n    try {\n        yield put(actionCreators.clearVolumes())\n        const response = yield call([axios, axios.get], '/redfish/v1/StorageServices/1/Volumes', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            for(let i = 0; i < response.data.Members.length; i += 1) {\n                yield fetchVolumeDetails({payload: response.data.Members[i][\"@odata.id\"]})\n            }\n            yield fetchArraySize();\n        } else {\n            yield put(actionCreators.fetchStorageVolumes({ volumes: [], totalVolSize: 0 }));\n        }\n    } catch (e) {\n        yield put(actionCreators.fetchStorageVolumes({ volumes: [], totalVolSize: 0 }));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.fetchStorageVolumes({ volumes: [], totalVolSize: 0 }));\n        }\n    }\n}\n\nfunction* fetchArray(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Fetching Devices'));\n        const response = yield call([axios, axios.get], `/api/v1.0/get_arrays/?ts=${Date.now()}`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data && response.data.length > 0) {\n            yield put(actionCreators.fetchArray(response.data[0]));\n            yield fetchArraySize();\n        } else if (response.status === 401) {\n            action.payload.push(\"/login\");\n        } else {\n            yield put(actionCreators.setNoArray());\n        }\n    } catch (e) {\n        yield put(actionCreators.setNoArray());\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.setNoArray());\n        }\n        yield put(actionCreators.stopStorageLoader());\n        yield fetchVolumes();\n    }\n}\n\n\nfunction* fetchDevices() {\n    const defaultResponse = {\n        devices: [],\n        metadevices: []\n    }\n    const alertDetails = {\n        errorMsg: 'Unable to get devices!',\n        alertType: 'alert',\n        alertTitle: 'Fetch Devices'\n    };\n    try {\n        yield put(actionCreators.startStorageLoader('Fetching Devices'));\n        const response = yield call([axios, axios.get], '/api/v1.0/get_devices/', {\n            headers: {\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        const result = response.data;\n        if (response.status === 200 && response.data.result && response.data.result.status.code !== 0) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Fetch Devices',\n                errorMsg: 'Unable to get devices!',\n                errorCode: `Description: ${response.data.result && response.data.result.status ? `${response.data.result.status.description }, Error code:${ response.data.result.status.code}` : ''}`\n            }))\n        }\n        else if (result && typeof (result) !== \"string\" && result.return !== -1) {\n            yield put(actionCreators.fetchDevices(result));\n        }\n\n        else if (result.status === 401) {\n            // console.log('401 status');\n        } else {\n            yield put(actionCreators.showStorageAlert(alertDetails))\n            yield put(actionCreators.fetchDevices(defaultResponse));\n        }\n    } catch (error) {\n        yield put(actionCreators.showStorageAlert(alertDetails));\n        yield put(actionCreators.fetchDevices(defaultResponse));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert(alertDetails));\n            yield put(actionCreators.fetchDevices(defaultResponse));\n        }\n        yield fetchArray();\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\nfunction* createVolume(action) {\n    try {\n        // for multi-volume creation\n        if (action.payload.count < 2)\n            yield put(actionCreators.startStorageLoader('Creating Volume'));\n        const response = yield call([axios, axios.post], '/api/v1.0/save-volume/', {\n            ...action.payload\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (action.payload.count > 1) {\n            if (response.status === 200) {\n                yield put(actionCreators.toggleCreateVolumeButton(true));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    alertTitle: 'Create Volume',\n                    errorMsg: 'Volume(s) creation failed',\n                    errorCode: ``\n                }))\n            }\n        }\n        // for single volume creation\n        else if (response.status === 200) {\n                if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {\n                    yield put(actionCreators.showStorageAlert({\n                        alertType: 'info',\n                        alertTitle: 'Create Volume',\n                        errorMsg: 'Volume(s) created successfully',\n                        errorCode: '',\n                    }));\n                } else {\n                    yield put(actionCreators.showStorageAlert({\n                        alertType: 'alert',\n                        alertTitle: 'Create Volume',\n                        errorMsg: 'Volume(s) creation failed',\n                        errorCode: `Description: ${response.data.result && response.data.result.status ? `${response.data.result.status.description }, Error code:${ response.data.result.status.code}` : ''}`\n                    }))\n                }\n                yield fetchVolumes();\n            } else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    alertTitle: 'Create Volume',\n                    errorMsg: 'Volume(s) creation failed',\n                    errorCode: `Message from server: ${response.data ? response.data.result : ''}`\n                }))\n            }\n\n    } catch (error) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            alertTitle: 'Create Volume',\n            errorMsg: 'Volume(s) creation failed',\n            errorCode: ``\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Create Volume',\n                errorMsg: 'Volume(s) creation failed',\n                errorCode: ``\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n/* function* createVolume(action) {\n    let vol_successful = 0\n    try {\n        let count\n        let prefix = action.payload.name\n        \n        yield put(actionCreators.toggleCreateVolumeButton(true));\n\n        console.log(\"payloaddd\",action.payload)\n        for (count = 1; count <= action.payload.count; count++) {\n            if (action.payload.count != 1) {\n                action.payload.name = prefix + \"_\" + action.payload.suffix.toString()\n                action.payload.suffix++\n            }\n            const response = yield call([axios, axios.post], '/api/v1.0/save-volume/', {\n                ...action.payload\n            }, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'x-access-token': localStorage.getItem('token'),\n                }\n            })\n\n            if (response.status === 200) {\n                if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {\n                    vol_successful++\n                }\n            }\n            if (action.payload.stop_on_error === true) {\n                if (response.status === 200) {\n                    if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0))\n                        continue;\n                    else\n                        break;\n                }\n                else if (yield cancelled() || response.status !== 200) {\n                    break;\n                }\n            }\n        }\n    }\n    catch (error) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            alertTitle: 'Create Volume',\n            errorMsg: 'Volume(s) creation failed',\n            errorCode: ``\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Create Volume',\n                errorMsg: 'Volume(s) creation failed',\n                errorCode: ``\n            }))\n        }\n        else {\n            let alert_type = vol_successful === 0 ? 'alert' : 'info'\n            let error_msg\n            if(vol_successful == action.payload.count)\n            {\n                if(action.payload.count === 1)\n                    error_msg = 'Volume created successfully'\n                else\n                    error_msg = 'Status: ' + vol_successful + ' volumes created successfully'\n            }\n            else\n            {\n                if(action.payload.count === 1)\n                    error_msg = 'Volume creation failed'\n                else\n                    error_msg = 'Status: ' + vol_successful + \"/\" + action.payload.count + ' volume(s) created successfully'\n            }\n\n            yield put(actionCreators.showStorageAlert({\n                alertType: alert_type,\n                alertTitle: 'Create Volume',\n                errorMsg: error_msg,\n                errorCode: '',\n            }));\n        }\n        yield put(actionCreators.toggleCreateVolumeButton(false));\n        yield fetchVolumes();\n    }\n}\n*/\n\n// function* createVolume(action) {\n//     try {\n//         yield put(actionCreators.startStorageLoader('Creating Volume'));\n//         const response = yield call([axios, axios.post], '/api/v1.0/save-volume/', {\n//             ...action.payload\n//         }, {\n//             headers: {\n//                 Accept: 'application/json',\n//                 'Content-Type': 'application/json',\n//                 'x-access-token': localStorage.getItem('token'),\n//             }\n//         });\n//         if (response.status === 200) {\n//             if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {\n//                 yield put(actionCreators.showStorageAlert({\n//                     alertType: 'info',\n//                     alertTitle: 'Create Volume',\n//                     errorMsg: 'Volume(s) created successfully',\n//                     errorCode: '',\n//                 }));\n//             } else {\n//                 yield put(actionCreators.showStorageAlert({\n//                     alertType: 'alert',\n//                     alertTitle: 'Create Volume',\n//                     errorMsg: 'Volume(s) creation failed',\n//                     errorCode: `Message from server: ${response.data.result && response.data.result.status ? response.data.result.status.description : ''}`\n//                 }))\n//             }\n//             yield fetchVolumes();\n//         } else {\n//             yield put(actionCreators.showStorageAlert({\n//                 alertType: 'alert',\n//                 alertTitle: 'Create Volume',\n//                 errorMsg: 'Volume(s) creation failed',\n//                 errorCode: `Message from server: ${response.data ? response.data.result : ''}`\n//             }))\n//         }\n//     } catch (error) {\n//         yield put(actionCreators.showStorageAlert({\n//             alertType: 'alert',\n//             alertTitle: 'Create Volume',\n//             errorMsg: 'Volume(s) creation failed',\n//             errorCode: ``\n//         }))\n//     } finally {\n//         if (yield cancelled()) {\n//             yield put(actionCreators.showStorageAlert({\n//                 alertType: 'alert',\n//                 alertTitle: 'Create Volume',\n//                 errorMsg: 'Volume(s) creation failed',\n//                 errorCode: ``\n//             }))\n//         }\n//         yield put(actionCreators.stopStorageLoader());\n//     }\n\n// }\n\nfunction* updateVolume(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Updating Volume'));\n        if (action.payload.maxiops < 0 || action.payload.maxbw < 0 ||\n            (action.payload.maxiops > 0 && action.payload.maxiops < 10)) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Update Volume',\n                errorMsg: 'Please give valid values',\n                errorCode: ''\n            }));\n            return;\n        }\n        const data = {\n            maxiops: parseInt(action.payload.maxiops,10),\n            maxbw: parseInt(action.payload.maxbw,10),\n            name: action.payload.name\n        }\n        const response = yield call([axios, axios.put], '/api/v1.0/update-volume/', data, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'info',\n                    alertTitle: 'Update Volume',\n                    errorMsg: 'Volume Updated successfully',\n                    errorCode: '',\n                }));\n            } else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    alertTitle: 'Update Volume',\n                    errorMsg: 'Volume Updation failed',\n                    errorCode: `Description: ${response.data.result && response.data.result.status ? `${response.data.result.status.description }, Error code:${ response.data.result.status.code}` : ''}`\n\n                }))\n            }\n            yield fetchVolumes();\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Update Volume',\n                errorMsg: 'Volume Updation failed',\n                errorCode: `Message from server: ${response.data ? response.data.result : ''}`\n            }))\n        }\n    } catch (error) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            alertTitle: 'Update Volume',\n            errorMsg: 'Volume Updation failed',\n            errorCode: ``\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Update Volume',\n                errorMsg: 'Volume Updation failed',\n                errorCode: ``\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\nfunction* fetchMaxVolumeCount() {\n    try {\n        const response = yield call([axios, axios.get], `/api/v1.0/max_volume_count/?ts=${Date.now()}`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data) {\n            yield put(actionCreators.fetchMaxVolumeCount(response.data));\n        }\n    }\n    catch (e) {\n        yield put(actionCreators.fetchMaxVolumeCount(256));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.fetchMaxVolumeCount(256));\n        }\n    }\n}\n\n\nfunction* deleteArray(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Deleting Array'));\n        const response = yield call([axios, axios.post], '/api/v1.0/delete_array/', {\n            ...action.payload\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data && response.data.return !== -1) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'info',\n                alertTitle: 'Delete Array',\n                errorMsg: 'Array deleted successfully',\n                errorCode: '',\n            }))\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Array deletion failed',\n                alertType: 'alert',\n                alertTitle: 'Delete Array',\n                errorCode: `Message from server: ${response.data.result}`\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            errorMsg: 'Array deletion failed',\n            alertType: 'alert',\n            alertTitle: 'Delete Array',\n            errorCode: ''\n        }));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Array deletion failed',\n                alertType: 'alert',\n                alertTitle: 'Delete Array',\n                errorCode: ``\n            }));\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\nfunction* deleteVolumes(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Deleting Volume(s)'));\n        const response = yield call([axios, axios.post], '/api/v1.0/delete_volumes', action.payload, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data) {\n            if (response.data.return !== -1) {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'info',\n                    alertTitle: 'Delete Volume',\n                    errorMsg: 'Volume(s) deleted successfully',\n                    errorCode: '',\n                }));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    errorMsg: `Deletion failed for volume :  ${ response.data.vol_name}`,\n                    alertType: 'alert',\n                    alertTitle: 'Delete Volume',\n                    errorCode: `Description:${`${response.data.result.description }, Error Code:${ response.data.result.code}`}`,\n                }));\n            }\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Volume deletion failed',\n                alertType: 'alert',\n                alertTitle: 'Delete Volume',\n                errorCode: `Message from server:${response.data.result}`,\n            }));\n        }\n        yield fetchVolumes();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            errorMsg: 'Volume deletion failed',\n            alertType: 'alert',\n            alertTitle: 'Delete Volume',\n            errorCode: ''\n        }));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Volume deletion failed',\n                alertType: 'alert',\n                alertTitle: 'Delete Volume',\n                errorCode: ''\n            }));\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n\n}\n\nfunction* createArray(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Creating Array'));\n        const response = yield call([axios, axios.post], '/api/v1.0/create_arrays/', {\n            ...action.payload\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            if (response.data.return !== -1 && response.data.result.status.code === 0 ) {\n                yield put(actionCreators.showStorageAlert({\n                    errorMsg: 'Array created successfully',\n                    alertTitle: 'Create Array',\n                    alertType: 'info',\n                    errorCode: '',\n                }));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    errorMsg: 'Error in Array Creation',\n                    errorCode: `Description:${ response.data.result.status.description }, Error Code: ${ response.data.result.status.code}`,\n                    alertTitle: 'Create Array'\n                }));\n            }\n\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error in Array Creation',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Array Creation failed',\n                alertTitle: 'Create Array'\n            }));\n        }\n        yield fetchArray();\n        yield fetchMaxVolumeCount();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error in Array Creation',\n            errorCode: '',\n            alertTitle: 'Create Array'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error in Array Creation',\n                errorCode: '',\n                alertTitle: 'Create Array'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\nfunction* attachDisk(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Attaching Device'));\n        const response = yield call([axios, axios.post], '/api/v1.0/attach_device/', {\n            name: action.payload.name\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data.return !== -1) {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Device Attached successfully',\n                alertTitle: 'Attach Device',\n                alertType: 'info',\n                errorCode: '',\n            }));\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Attaching Device',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Device Attaching failed',\n                alertTitle: 'Device Attach'\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error in Attaching Device',\n            errorCode: '',\n            alertTitle: 'Attach Device'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error in Attaching Device',\n                errorCode: '',\n                alertTitle: 'Attach Device'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\nfunction* addSpareDisk(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Adding Spare Device'));\n        const response = yield call([axios, axios.post], '/api/v1.0/add_spare_device/', {\n            name: action.payload.name\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            if (response.data.return !== -1) {\n                yield put(actionCreators.showStorageAlert({\n                    errorMsg: 'Spare Device Added successfully',\n                    alertTitle: 'Add Spare Device',\n                    alertType: 'info',\n                    errorCode: '',\n                }));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    errorMsg: 'Error while Adding Spare Device',\n                    errorCode: `Description:${ response.data.result.description }, Error Code:${ response.data.result.code}`,\n                    alertTitle: 'Add Spare Device'\n                }));\n            }\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Adding Spare Device',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Adding Spare Device Failed',\n                alertTitle: 'Add Spare Device'\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error while Adding Spare Device',\n            errorCode: '',\n            alertTitle: 'Add Spare Device'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Adding Spare Device',\n                errorCode: '',\n                alertTitle: 'Add Spare Device'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\nfunction* detachDisk(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Detaching Device'));\n        const response = yield call([axios, axios.post], '/api/v1.0/detach_device/', {\n            name: action.payload.name\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data.return !== -1) {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Device Detached successfully',\n                alertTitle: 'Detach Device',\n                alertType: 'info',\n                errorCode: '',\n            }));\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Detaching Device',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Device Detaching failed',\n                alertTitle: 'Device Detach'\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error in Detaching Device',\n            errorCode: '',\n            alertTitle: 'Detach Device'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error in Detaching Device',\n                errorCode: '',\n                alertTitle: 'Detach Device'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\nfunction* removeSpareDisk(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Removing Spare Device'));\n        const response = yield call([axios, axios.post], '/api/v1.0/remove_spare_device/', {\n            name: action.payload.name\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            if (response.data.return !== -1) {\n                yield put(actionCreators.showStorageAlert({\n                    errorMsg: 'Spare Device Removed successfully',\n                    alertTitle: 'Remove Spare Device',\n                    alertType: 'info',\n                    errorCode: '',\n                }));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    errorMsg: 'Error while Removing Spare Device',\n                    errorCode: `Description:${ response.data.result.description }, Error Code:${ response.data.result.code}`,\n                    alertTitle: 'Remove Spare Device'\n                }));\n            }\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Removing Spare Device',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Removing Spare Device failed',\n                alertTitle: 'Remove Spare Device'\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error while Removing Spare Device',\n            errorCode: '',\n            alertTitle: 'Remove Spare Device'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Removing Spare Device',\n                errorCode: '',\n                alertTitle: 'Remove Spare Device'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\n\nfunction* fetchDeviceDetails(action) {\n    const defaultDiskDetails = {\n        DevicePath: 'NA',\n        SerialNumber: 'NA',\n        ModelNumber: 'NA',\n        PhysicalSize: 'NA',\n        UsedBytes: 'NA',\n        Firmware: 'NA',\n        critical_warning: 'NA',\n        temperature: 'NA',\n        avail_spare: 'NA',\n        spare_thresh: 'NA',\n        precent_used: 'NA',\n        data_units_read: 'NA',\n        data_units_written: 'NA',\n        critical_comp_time: 'NA',\n        warning_temp_time: 'NA',\n        percent_used: 'NA',\n    }\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/get_device_details/', action.payload, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data) {\n            yield put(actionCreators.fetchDeviceDetails({\n                ...response.data.Device,\n                ...response.data.smartStatus\n            }));\n        } else {\n            yield put(actionCreators.fetchDeviceDetails(defaultDiskDetails));\n        }\n    } catch (e) {\n        yield put(actionCreators.fetchDeviceDetails(defaultDiskDetails));\n    }\n\n\n}\n\nexport default function* storageWatcher() {\n    yield takeEvery(actionTypes.SAGA_FETCH_DEVICE_INFO, fetchDevices);\n    yield takeEvery(actionTypes.SAGA_SAVE_VOLUME, createVolume);\n    yield takeEvery(actionTypes.SAGA_FETCH_ARRAY_SIZE, fetchArraySize);\n    yield takeEvery(actionTypes.SAGA_FETCH_ARRAY, fetchArray);\n    yield takeEvery(actionTypes.SAGA_DELETE_ARRAY, deleteArray);\n    yield takeEvery(actionTypes.SAGA_FETCH_VOLUMES, fetchVolumes);\n    yield takeEvery(actionTypes.SAGA_DELETE_VOLUMES, deleteVolumes);\n    yield takeEvery(actionTypes.SAGA_CREATE_ARRAY, createArray);\n    yield takeEvery(actionTypes.SAGA_FETCH_DEVICE_DETAILS, fetchDeviceDetails);\n    yield takeEvery(actionTypes.SAGA_UPDATE_VOLUME, updateVolume);\n    yield takeEvery(actionTypes.SAGA_ATTACH_DISK, attachDisk);\n    yield takeEvery(actionTypes.SAGA_DETACH_DISK, detachDisk);\n    yield takeEvery(actionTypes.SAGA_ADD_SPARE_DISK, addSpareDisk);\n    yield takeEvery(actionTypes.SAGA_REMOVE_SPARE_DISK, removeSpareDisk);\n    yield takeEvery(actionTypes.SAGA_FETCH_MAX_VOLUME_COUNT, fetchMaxVolumeCount);\n}\n"]}