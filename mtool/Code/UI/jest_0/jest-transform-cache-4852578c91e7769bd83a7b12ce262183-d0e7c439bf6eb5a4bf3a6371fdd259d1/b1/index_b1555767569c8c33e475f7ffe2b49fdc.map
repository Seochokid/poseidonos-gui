{"version":3,"sources":["index.js"],"names":["style","height","width","float","styles","theme","content","flexGrow","padding","spacing","paddingLeft","paddingRight","paddingTop","toolbar","customTheme","pageHeader","page","title","titleContainer","marginTop","selectLabel","margin","wrapper","operationContainer","breakpoints","down","display","justifyContent","noVols","READ_BANDWIDTH","WRITE_BANDWIDTH","READ_IOPS","WRITE_IOPS","LATENCY","Performance","Component","constructor","props","timeChanged","bind","fetchDetails","levelChanged","volumeChanged","measurementChanged","setChartWidth","handleDrawerToggle","interval","state","chartwidth","mobileOpen","intervalTime","level","volume","chartContent","maxIops","maxBw","maxLatency","vols","selectedMeasurement","componentDidMount","fetchVolumeNames","fetchPowerSensorInfo","setInterval","window","addEventListener","componentWillUnmount","clearInterval","removeEventListener","Reset_State","setTimeout","chart","document","getElementById","clientWidth","setState","fetchCpuUsage","t","Get_Cpu_Usage","time","fetchInputPower","fetchReadBandwidth","i","length","Get_Read_Bandwidth","includes","fetchWriteBandwidth","Get_Write_Bandwidth","fetchWriteIOPS","Get_Write_IOPS","fetchReadIOPS","Get_Read_IOPS","fetchLatency","Get_Latency","event","target","value","volumes","push","id","Get_Volumes","vol","maxiops","maxbw","render","timeIntervals","measurements","label","classes","PageTheme","name","r","volumeRef","map","measurement","power_sensor_info","power","PowerInputWatts","power_usage","loaded","yLabel","Name","readBandwidth","writeBandwidth","readIOPS","writeIOPS","latency","cpuUsage","mapStateToProps","performanceReducer","diskWrite","diskUsed","storageReducer","hardwareSensorReducer","mapDispatchToProps","dispatch","payload","type","actionTypes","SAGA_FETCH_CPU_USAGE","SAGA_FETCH_READ_BANDWIDTH","SAGA_FETCH_WRITE_BANDWIDTH","SAGA_FETCH_READ_IOPS","SAGA_FETCH_WRITE_IOPS","SAGA_FETCH_LATENCY","SAGA_FETCH_INPUT_POWER_VARIATION","SAGA_FETCH_VOLUMES","RESET_PERF_STATE","SAGA_HARDWARE_SENSORS_FETCH_POWER_SENSOR_INFORMATION"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <File description> *\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[12/06/2019] [Aswin] : Bandwidth changed to KB/s. Description and style changes\n*/\nimport React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { Grid, Typography, Box, FormControl, Select, MenuItem, Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport Chart from '../../components/Chart';\nimport './Performance.css';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport { customTheme, PageTheme } from '../../theme';\nimport * as actionTypes from \"../../store/actions/actionTypes\";\n\nconst style = {\n  height: '300px',\n  width: '100%',\n  float: 'left',\n};\n\nconst styles = (theme) => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    paddingLeft: \"35px\",\n    paddingRight: \"35px\",\n    paddingTop: \"10px\"\n  },\n  toolbar: customTheme.toolbar,\n  pageHeader: customTheme.page.title,\n  titleContainer: {\n    marginTop: theme.spacing(1)\n  },\n  selectLabel: {\n    margin: theme.spacing(0, 1)\n  },\n  wrapper: {\n    marginTop: theme.spacing(1)\n  },\n  operationContainer: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  noVols: {\n    marginTop: theme.spacing(4)\n  }\n});\n\nconst READ_BANDWIDTH = 'read_bw';\nconst WRITE_BANDWIDTH = 'write_bw';\nconst READ_IOPS = 'read_iops';\nconst WRITE_IOPS = 'write_iops';\nconst LATENCY = 'latency';\n\nclass Performance extends Component {\n  constructor(props) {\n    super(props);\n    this.timeChanged = this.timeChanged.bind(this);\n    this.fetchDetails = this.fetchDetails.bind(this);\n    this.levelChanged = this.levelChanged.bind(this);\n    this.volumeChanged = this.volumeChanged.bind(this);\n    this.measurementChanged = this.measurementChanged.bind(this);\n    this.setChartWidth = this.setChartWidth.bind(this);\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\n    this.interval = null;\n    this.state = {\n      chartwidth: 300,\n      mobileOpen: false,\n      intervalTime: '1m',\n      level: 'array',\n      volume: '',\n      chartContent: ['array'],\n      maxIops: null,\n      maxBw: null,\n      maxLatency:null,\n      vols: [],\n      selectedMeasurement: [READ_BANDWIDTH]\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDetails();\n    this.fetchVolumeNames();\n    this.props.fetchPowerSensorInfo();\n    this.interval = setInterval(() => {\n      this.fetchDetails();\n    }, 2000);\n    this.setChartWidth();\n    window.addEventListener(\"resize\", this.setChartWidth);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    window.removeEventListener(\"resize\", this.setChartWidth);\n    this.props.Reset_State();\n  }\n\n  setChartWidth() {\n    setTimeout(() => {\n      const chart = document.getElementById(\n        'graph-grid-1'\n      );\n      const chartwidth = chart ? chart.clientWidth : 500;\n      this.setState({\n        ...this.state,\n        chartwidth,\n      });\n    }, 100);\n  }\n\n  handleDrawerToggle() {\n    this.setState({\n      mobileOpen: !this.state.mobileOpen\n    });\n  }\n\n  // fetchDiskUsed(t) {\n  //   this.props.Get_Disk_Used({time: t});\n  // }\n\n  // fetchDiskWrite(t) {\n  //   this.props.Get_Disk_Write({time: t});\n  // }\n\n  fetchCpuUsage(t) {\n    this.props.Get_Cpu_Usage({ time: t });\n  }\n\n  fetchInputPower(t) {\n    this.props.fetchInputPower({ time: t });\n  }\n\n  fetchReadBandwidth(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Read_Bandwidth({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(READ_BANDWIDTH))\n        this.props.Get_Read_Bandwidth({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  fetchWriteBandwidth(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Write_Bandwidth({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(WRITE_BANDWIDTH))\n        this.props.Get_Write_Bandwidth({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  fetchWriteIOPS(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Write_IOPS({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(WRITE_IOPS))\n        this.props.Get_Write_IOPS({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  fetchReadIOPS(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Read_IOPS({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(READ_IOPS))\n        this.props.Get_Read_IOPS({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  \n  fetchLatency(t) {\n    for (let i = 0; i < this.state.chartContent.length; i += 1 ) {\n      if (this.state.level === \"array\")\n        this.props.Get_Latency({ time: t, level: this.state.chartContent[i] });\n      else if (this.state.volume !== \"all-volumes\" || this.state.selectedMeasurement.includes(LATENCY))\n        this.props.Get_Latency({ time: t, level: this.state.chartContent[i], ...this.state.vols[i] });\n    }\n  }\n\n  fetchDetails() {\n    if (this.state.level === 'system') {\n      this.fetchCpuUsage(this.state.intervalTime);\n    }\n    else if (this.state.level === 'power')\n      this.fetchInputPower(this.state.intervalTime);\n    else {\n      this.fetchReadIOPS(this.state.intervalTime);\n      this.fetchWriteIOPS(this.state.intervalTime);\n      this.fetchReadBandwidth(this.state.intervalTime);\n      this.fetchWriteBandwidth(this.state.intervalTime);\n      this.fetchLatency(this.state.intervalTime);\n    }\n  }\n\n  timeChanged(event) {\n    this.setState({\n      ...this.state,\n      intervalTime: event.target.value,\n    });\n    setTimeout(() => {\n      this.fetchDetails();\n    });\n  }\n\n  levelChanged(event) {\n    if (event.target.value === 'array') {\n      this.setState({\n        ...this.state,\n        level: 'array',\n        chartContent: ['array'],\n        maxIops: null,\n        maxBw: null,\n        maxLatency: null,\n      });\n      setTimeout(() => {\n        this.fetchDetails();\n      });\n    } else if (event.target.value === 'volume') {\n      const vols = []; const chartContent = [];\n      for (let i = 0; i < this.props.volumes.length; i += 1 ) {\n        chartContent.push(this.props.volumes[i].id);\n        vols.push(this.props.volumes[i]);\n      }\n      this.setState({\n        ...this.state,\n        chartContent,\n        level: event.target.value,\n        volume: 'all-volumes',\n        vols\n      });\n      setTimeout(() => {\n        this.fetchDetails();\n      });\n      this.fetchVolumeNames();\n    } else if (event.target.value === 'system') {\n      this.setState({\n        ...this.state,\n        level: 'system',\n      });\n      setTimeout(() => {\n        this.fetchDetails();\n      });\n    }\n    else if (event.target.value === 'power') {\n      this.setState({\n        ...this.state,\n        level: 'power',\n      });\n      setTimeout(() => {\n        this.fetchDetails();\n      });\n      this.props.fetchPowerSensorInfo();\n    }\n  }\n\n  fetchVolumeNames() {\n    this.props.Get_Volumes();\n  }\n\n  measurementChanged(event) {\n    this.setState({\n      ...this.state,\n      selectedMeasurement: [event.target.value]\n    });\n    this.props.Reset_State();\n  }\n\n  volumeChanged(event) {\n    let vol; const chartContent = []; const vols = [];\n    if (event.target.value === 'all-volumes') {\n      for (let i = 0; i < this.props.volumes.length; i += 1 ) {\n        chartContent.push(this.props.volumes[i].id);\n        vols.push(this.props.volumes[i]);\n      }\n      this.setState({\n        ...this.state,\n        chartContent,\n        volume: event.target.value,\n        vols\n      });\n    } else {\n      for (let i = 0; i < this.props.volumes.length; i += 1 ) {\n        if (event.target.value === this.props.volumes[i].id) {\n          vol = this.props.volumes[i];\n        }\n      }\n      this.setState({\n        ...this.state,\n        chartContent: [event.target.value],\n        volume: event.target.value,\n        maxIops: vol.maxiops,\n        maxBw: vol.maxbw,\n        maxLatency: vol.maxLatency,\n        vols: [vol]\n      });\n    }\n    this.props.Reset_State();\n    setTimeout(() => {\n      this.fetchDetails();\n    });\n  }\n\n  render() {\n    const timeIntervals = [\n      [\"1m\", \"Last 1m\"],\n      [\"5m\", \"Last 5m\"],\n      [\"15m\", \"Last 15m\"],\n      [\"1h\", \"Last 1h\"],\n      [\"6h\", \"Last 6h\"],\n      [\"12h\", \"Last 12h\"],\n      [\"24h\", \"Last 24h\"],\n      [\"7d\", \"Last 7d\"],\n      [\"30d\", \"Last 30d\"]\n    ];\n    const measurements = [{\n      label: \"Read Bandwidth\",\n      value: READ_BANDWIDTH\n    }, {\n      label: \"Write Bandwidth\",\n      value: WRITE_BANDWIDTH\n    }, {\n      label: \"Read IOPS\",\n      value: READ_IOPS\n    }, {\n      label: \"Write IOPS\",\n      value: WRITE_IOPS\n    },\n    {\n      label: \"Latency\",\n      value: LATENCY\n    }];\n\n    const { classes } = this.props;\n    return (\n      <ThemeProvider theme={PageTheme}>\n        <Box display=\"flex\">\n          <Header toggleDrawer={this.handleDrawerToggle} />\n          <Sidebar mobileOpen={this.state.mobileOpen} toggleDrawer={this.handleDrawerToggle} />\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <Grid container spacing={3}>\n              <Grid container spacing={3} className={classes.titleContainer}>\n                <Grid sm={6} xs={12} item>\n                  <Typography className={classes.pageHeader} variant=\"h6\">Performance</Typography>\n                </Grid>\n                <Grid sm={6} xs={12} item container direction=\"row\" alignItems=\"center\" justify=\"flex-end\" className={classes.operationContainer}>\n                  <Typography className={classes.selectLabel}>Level:</Typography>\n                  <FormControl>\n                    <Select\n                      testId=\"level\"\n                      value={this.state.level}\n                      onChange={this.levelChanged}\n                      inputProps={{\n                        name: 'Level',\n                        id: 'level',\n                        'data-testid': \"levelInput\",\n                      }}\n                      SelectDisplayProps={{\n                        'data-testid': 'levelSelect'\n                      }}\n                    >\n                      <MenuItem value=\"array\">\n                        <Typography color=\"secondary\" data-testid=\"arrayMenuItem\">Array</Typography>\n                      </MenuItem>\n                      <MenuItem value=\"volume\">\n                        <Typography color=\"secondary\" data-testid=\"volumeMenuItem\">Volume</Typography>\n                      </MenuItem>\n                      <MenuItem value=\"system\">\n                        <Typography color=\"secondary\" data-testid=\"systemMenuItem\">System</Typography>\n                      </MenuItem>\n                      {/* <MenuItem value=\"power\">\n                        <Typography color=\"secondary\" data-testid=\"powerMenuItem\">Power</Typography>\n                      </MenuItem> */}\n                    </Select>\n                  </FormControl>\n                  {(this.state.level === 'volume') ? (\n                    <React.Fragment>\n                      <Typography className={classes.selectLabel}>Volume:</Typography>\n                      <FormControl>\n                        <Select\n                          value={this.state.volume}\n                          onChange={this.volumeChanged}\n                          inputProps={{\n                            name: 'Volume',\n                            id: 'volume',\n                            'data-testid': \"volumeInput\",\n                          }}\n                          SelectDisplayProps={{\n                            'data-testid': 'volumeSelect'\n                          }}\n                          id=\"volume\"\n                          ref={(r) => {\n                            this.volumeRef = r\n                          }}\n                          disabled={this.props.volumes &&\n                            this.props.volumes.length < 1}\n                        >\n                          {/* {console.log(\"ref\",this.volumeRef)} */}\n                          <MenuItem value=\"all-volumes\" data-testid=\"all-volume\">\n                            <Typography color=\"secondary\">\n                              All Volumes\n                            </Typography>\n                          </MenuItem>\n                          {this.props.volumes.map((volume) => (\n                            <MenuItem value={volume.id} data-testid={volume.name}>\n                              <Typography color=\"secondary\">\n                                {volume.name}\n                              </Typography>\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    </React.Fragment>\n                  ) : null}\n                  {(this.state.level === 'volume') && (this.state.volume === 'all-volumes') ? (\n                    <React.Fragment>\n                      <Typography className={classes.selectLabel}>Measurement:</Typography>\n                      <Select\n                        value={this.state.selectedMeasurement[0]}\n                        onChange={this.measurementChanged}\n                        inputProps={{\n                          name: 'Time',\n                          id: 'time',\n                          'data-testid': \"timeInput\"\n                        }}\n                      >\n                        {measurements.map((measurement) => (\n                          <MenuItem key={measurement.value} value={measurement.value} data-testid={measurement.value}>\n                            <Typography color=\"secondary\">\n                              {measurement.label}\n                            </Typography>\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </React.Fragment>\n                  ) : null}\n                  <Typography className={classes.selectLabel}>Time:</Typography>\n                  <FormControl>\n                    <Select\n                      value={this.state.intervalTime}\n                      onChange={this.timeChanged}\n                      inputProps={{\n                        name: 'Time',\n                        id: 'time',\n                        'data-testid': \"timeInput\"\n                      }}\n                      SelectDisplayProps={{\n                        'data-testid': 'intervalSelect'\n                      }}\n                    >\n                      {timeIntervals.map((t) => (\n                        <MenuItem key={t[0]} value={t[0]} data-testid={t[0]}>\n                          <Typography color=\"secondary\">\n                            {t[1]}\n                          </Typography>\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n              {this.state.level === \"power\" ? (\n                this.props.power_sensor_info.map((power) => (\n                  power.PowerInputWatts ? (\n                    <React.Fragment>\n                      {this.props.power_usage ? (\n                        <Grid item xs={12} md={6} id=\"graph-grid-1\">\n                          <Chart\n                            id=\"chart-5\"\n                            columns={this.props.power_usage}\n                            loaded={this.props.power_usage.loaded}\n                            yLabel={this.props.power_usage.yLabel}\n                            chartName={power.Name}// {\"PSU \"+itr + \"- Voltage\"}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            style={style}\n                          />\n                        </Grid>\n                      ):null}\n                    </React.Fragment>\n                  ) : null))) : null}\n              {this.state.level === 'array' ? (\n                <Grid container spacing={1} className={classes.wrapper}>\n                  <Grid item xs={12} md={6} id=\"graph-grid-1\">\n                    <Chart\n                      id=\"chart-1\"\n                      columns={this.props.readBandwidth}\n                      loaded={this.props.readBandwidth.loaded}\n                      yLabel={this.props.readBandwidth.yLabel}\n                      chartName={this.props.readBandwidth.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxBw}\n                      style={style}\n                      datatestid=\"readBandwidth\"\n                      scatterId=\"readBandwidthScatter\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-2\"\n                      columns={this.props.writeBandwidth}\n                      loaded={this.props.writeBandwidth.loaded}\n                      yLabel={this.props.writeBandwidth.yLabel}\n                      chartName={this.props.writeBandwidth.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxBw}\n                      style={style}\n                      datatestid=\"writeBandwidth\"\n                      scatterId=\"writeBandwidthScatter\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-3\"\n                      columns={this.props.readIOPS}\n                      loaded={this.props.readIOPS.loaded}\n                      yLabel={this.props.readIOPS.yLabel}\n                      chartName={this.props.readIOPS.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxIops}\n                      style={style}\n                      datatestid=\"readIOPS\"\n                      scatterId=\"readIOPSScatter\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-4\"\n                      columns={this.props.writeIOPS}\n                      loaded={this.props.writeIOPS.loaded}\n                      yLabel={this.props.writeIOPS.yLabel}\n                      chartName={this.props.writeIOPS.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxIops}\n                      style={style}\n                      datatestid=\"writeIOPS\"\n                      scatterId=\"writeIOPSScatter\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-5\"\n                      columns={this.props.latency}\n                      loaded={this.props.latency.loaded}\n                      yLabel={this.props.latency.yLabel}\n                      chartName={this.props.latency.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      constValue={this.state.maxLatency}\n                      style={style}\n                      datatestid=\"latency\"\n                      scatterId=\"latencyScatter\"\n                    />\n                  </Grid>\n                </Grid>\n              ) : null}\n              {this.state.level === \"system\" ? (\n                <Grid container spacing={1} className={classes.wrapper}>\n                  <Grid item xs={12} md={6} id=\"graph-grid-1\">\n                    <Chart\n                      id=\"chart-5\"\n                      columns={this.props.cpuUsage}\n                      loaded={this.props.cpuUsage.loaded}\n                      yLabel={this.props.cpuUsage.yLabel}\n                      chartName={this.props.cpuUsage.name}\n                      width={this.state.chartwidth}\n                      maxValue={100}\n                      interval={this.state.intervalTime}\n                      style={style}\n                    />\n                  </Grid>\n\n                  {/* <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-7\"\n                      columns={this.props.diskUsed}\n                      loaded={this.props.diskUsed.loaded}\n                      yLabel={this.props.diskUsed.yLabel}\n                      chartName={this.props.diskUsed.name}\n                      width={this.state.chartwidth}\n                      maxValue={100}\n                      interval={this.state.intervalTime}\n                      style={style}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Chart\n                      id=\"chart-8\"\n                      columns={this.props.diskWrite}\n                      loaded={this.props.diskWrite.loaded}\n                      yLabel={this.props.diskWrite.yLabel}\n                      chartName={this.props.diskWrite.name}\n                      width={this.state.chartwidth}\n                      interval={this.state.intervalTime}\n                      style={style}\n                    />\n                  </Grid> */}\n                </Grid>\n              ) : null}\n              {this.state.level === \"volume\" ? (\n                this.state.chartContent.map((content) => (\n                  this.props.vols[content] ? (\n                    <React.Fragment>\n                      {this.props.vols[content].readBandwidth ? (\n                        <Grid item xs={12} md={6} id=\"graph-grid-1\">\n                          <Chart\n                            id=\"chart-1\"\n                            columns={this.props.vols[content].readBandwidth}\n                            loaded={this.props.vols[content].readBandwidth.loaded}\n                            yLabel={this.props.vols[content].readBandwidth.yLabel}\n                            chartName={this.props.vols[content].readBandwidth.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].readBandwidth.maxbw}\n                            style={style}\n                            datatestid=\"readBandwidth\"\n                            scatterId=\"readBandwidthScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n\n                      {this.props.vols[content].writeBandwidth ? (\n                        <Grid item xs={12} md={6}>\n                          <Chart\n                            id=\"chart-2\"\n                            columns={this.props.vols[content].writeBandwidth}\n                            loaded={this.props.vols[content].writeBandwidth.loaded}\n                            yLabel={this.props.vols[content].writeBandwidth.yLabel}\n                            chartName={this.props.vols[content].writeBandwidth.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].writeBandwidth.maxbw}\n                            style={style}\n                            datatestid=\"writeBandwidth\"\n                            scatterId=\"writeBandwidthScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n                      {this.props.vols[content].readIOPS ? (\n                        <Grid item xs={12} md={6}>\n                          <Chart\n                            id=\"chart-3\"\n                            columns={this.props.vols[content].readIOPS}\n                            loaded={this.props.vols[content].readIOPS.loaded}\n                            yLabel={this.props.vols[content].readIOPS.yLabel}\n                            chartName={this.props.vols[content].readIOPS.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].readIOPS.maxiops}\n                            style={style}\n                            datatestid=\"readIOPS\"\n                            scatterId=\"readIOPSScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n                      {this.props.vols[content].writeIOPS ? (\n                        <Grid item xs={12} md={6}>\n                          <Chart\n                            id=\"chart-4\"\n                            columns={this.props.vols[content].writeIOPS}\n                            loaded={this.props.vols[content].writeIOPS.loaded}\n                            yLabel={this.props.vols[content].writeIOPS.yLabel}\n                            chartName={this.props.vols[content].writeIOPS.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].writeIOPS.maxiops}\n                            style={style}\n                            datatestid=\"writeIOPS\"\n                            scatterId=\"writeIOPSScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n\n                      {this.props.vols[content].latency ? (\n                        <Grid item xs={12} md={6}>\n                          <Chart\n                            id=\"chart-5\"\n                            columns={this.props.vols[content].latency}\n                            loaded={this.props.vols[content].latency.loaded}\n                            yLabel={this.props.vols[content].latency.yLabel}\n                            chartName={this.props.vols[content].latency.name}\n                            width={this.state.chartwidth}\n                            interval={this.state.intervalTime}\n                            constValue={this.props.vols[content].latency.maxLatency}\n                            style={style}\n                            datatestid=\"latency\"\n                            scatterId=\"latencyScatter\"\n                          />\n                        </Grid>\n                      ) : null}\n\n                    </React.Fragment>\n                  ) : null\n                ))\n              ) : null}\n              {this.state.level === \"volume\" && this.state.chartContent.length === 0 ? (\n                <Container className={classes.noVols}>\n                  <Typography variant=\"h1\" align=\"center\">No Volumes Created</Typography>\n                </Container>\n              ) : null}\n            </Grid>\n          </main>\n        </Box>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cpuUsage: state.performanceReducer.cpuUsage,\n    diskWrite: state.performanceReducer.diskWrite,\n    diskUsed: state.performanceReducer.diskUsed,\n    readIOPS: state.performanceReducer.readIOPS,\n    writeIOPS: state.performanceReducer.writeIOPS,\n    readBandwidth: state.performanceReducer.readBandwidth,\n    power_usage: state.performanceReducer.power_usage,\n    vols: state.performanceReducer.vols,\n    writeBandwidth: state.performanceReducer.writeBandwidth,\n    latency: state.performanceReducer.latency,\n    volumes: state.storageReducer.volumes,\n    power_sensor_info: state.hardwareSensorReducer.power_sensor_info,\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    Get_Cpu_Usage: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_CPU_USAGE, payload }),\n    Get_Read_Bandwidth: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_READ_BANDWIDTH, payload }),\n    Get_Write_Bandwidth: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_WRITE_BANDWIDTH, payload }),\n    Get_Read_IOPS: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_READ_IOPS, payload }),\n    Get_Write_IOPS: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_WRITE_IOPS, payload }),\n    Get_Latency: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_LATENCY, payload }),\n    fetchInputPower: (payload) => dispatch({ type: actionTypes.SAGA_FETCH_INPUT_POWER_VARIATION,payload }),\n    Get_Volumes: () => dispatch({ type: actionTypes.SAGA_FETCH_VOLUMES }),\n    Reset_State: () => dispatch({ type: actionTypes.RESET_PERF_STATE }),\n    fetchPowerSensorInfo: () => dispatch({ type: actionTypes.SAGA_HARDWARE_SENSORS_FETCH_POWER_SENSOR_INFORMATION, }),\n  }\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(Performance));\n"]}