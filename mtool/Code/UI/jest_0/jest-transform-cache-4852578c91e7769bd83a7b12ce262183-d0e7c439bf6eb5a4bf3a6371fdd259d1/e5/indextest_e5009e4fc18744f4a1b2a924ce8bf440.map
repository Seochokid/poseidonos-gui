{"version":3,"sources":["index.test.js"],"names":["jest","unmock","describe","wrapper","history","store","beforeEach","sagaMiddleware","rootReducers","headerReducer","hardwareOverviewReducer","hardwareHealthReducer","hardwareSensorReducer","hardwarePowerManagementReducer","waitLoaderReducer","configurationsettingReducer","alertManagementReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","run","rootSaga","route","initialEntries","renderComponent","chassis_front_list1","DevicePath","BuildDate","Manufacturer","PartNumber","SerialNumber","Model","PredictedMediaLifeLeftPercent","i18n","afterEach","cleanup","it","mock","MockAdapter","axios","asFragment","getByText","getByTestId","alertDescription","fireEvent","click","expect","toMatchSnapshot"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Hardware Container Test File\n@NAME : index.test.js\n@AUTHORS: Jay Sanghavi\n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport React from \"react\";\nimport {\n  render,\n  fireEvent,\n  cleanup,\n  waitForElement\n} from \"@testing-library/react\";\nimport { Provider } from \"react-redux\";\nimport { act } from \"react-dom/test-utils\";\nimport { I18nextProvider } from \"react-i18next\";\nimport axios from \"axios\";\nimport \"@testing-library/jest-dom/extend-expect\";\nimport MockAdapter from \"axios-mock-adapter\";\nimport { createMemoryHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../../../sagas/indexSaga\";\nimport headerReducer from \"../../../store/reducers/headerReducer\";\nimport hardwareOverviewReducer from \"../../../store/reducers/hardwareOverviewReducer\";\nimport hardwareHealthReducer from \"../../../store/reducers/hardwareHealthReducer\";\nimport hardwareSensorReducer from \"../../../store/reducers/hardwareSensorReducer\";\nimport hardwarePowerManagementReducer from \"../../../store/reducers/hardwarePowerManagementReducer\";\nimport waitLoaderReducer from \"../../../store/reducers/waitLoaderReducer\";\nimport configurationsettingReducer from \"../../../store/reducers/configurationsettingReducer\";\nimport alertManagementReducer from \"../../../store/reducers/alertManagementReducer\";\nimport i18n from \"../../../i18n\";\nimport Chassis from './index';\njest.unmock(\"axios\");\n\ndescribe(\"Chassis\", () => {\n  let wrapper;\n  let history;\n  let store;\n  // let mock;\n  beforeEach(() => {\n    const sagaMiddleware = createSagaMiddleware();\n    const rootReducers = combineReducers({\n      // headerLanguageReducer,\n      headerReducer,\n      hardwareOverviewReducer,\n      hardwareHealthReducer,\n      hardwareSensorReducer,\n      hardwarePowerManagementReducer,\n      waitLoaderReducer,\n      configurationsettingReducer,\n      alertManagementReducer\n    });\n    const composeEnhancers =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    store = createStore(\n      rootReducers,\n      composeEnhancers(applyMiddleware(sagaMiddleware))\n    );\n    sagaMiddleware.run(rootSaga);\n    const route = \"/Hardware/Overview\";\n    history = createMemoryHistory({ initialEntries: [route] });\n    // mock = new MockAdapter(axios);\n  });\n\n  const renderComponent = () => {\n      let chassis_front_list1 =[{ DevicePath: 'NA',\n      BuildDate: 'NA',\n      Manufacturer: 'NA',\n      PartNumber: 'NA',\n      SerialNumber: 'NA',\n      Model: 'NA',\n      PredictedMediaLifeLeftPercent:'NA'}]\n    wrapper = render(\n      <Router history={history}>\n        <I18nextProvider i18n={i18n}>\n          <Provider store={store}>\n            {\" \"}\n            <Chassis chassis_front_list={chassis_front_list1} />\n          </Provider>\n        </I18nextProvider>\n      </Router>\n    );\n  };\n\n  afterEach(cleanup);\n\n  it(\"matches snapshot\", async () => { \n    const mock = new MockAdapter(axios);\n    renderComponent();\n    const { asFragment, getByText, getByTestId} = wrapper;\n    const alertDescription = await waitForElement(() =>\n      getByTestId(\"Chassis_Component\")\n    );\n    fireEvent.click(getByTestId(\"ChassisDiskPopUp\"));\n      expect(asFragment()).toMatchSnapshot();\n    });\n});\n"]}