d053801c6823bd02dce74c0736326715
/* istanbul ignore next */
"use strict";

var cov_bvzonsujj = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/Chart/Tooltip/index.js";
  var hash = "f9d9b57dbe2c5754943b1f0ae6fe9ed938e4bfaf";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/Chart/Tooltip/index.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "1": {
        start: {
          line: 31,
          column: 2
        },
        end: {
          line: 48,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 16
          },
          end: {
            line: 30,
            column: 17
          }
        },
        loc: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 30
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "f9d9b57dbe2c5754943b1f0ae6fe9ed938e4bfaf"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var
/* istanbul ignore next */
_react = _interopRequireDefault(require("react"));

/* istanbul ignore next */
require("./Tooltip.css");

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/Chart/Tooltip/index.js";
cov_bvzonsujj.s[0]++;

const Tooltip = props => {
  /* istanbul ignore next */
  cov_bvzonsujj.f[0]++;
  cov_bvzonsujj.s[1]++;
  return (
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      className: "Tooltip",
      style: props.containerStyle,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 32
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "table",
    /* istanbul ignore next */
    {
      className: "Tooltip-table",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 33
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "tbody",
    /* istanbul ignore next */
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 34
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "tr",
    /* istanbul ignore next */
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 35
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "th",
    /* istanbul ignore next */
    {
      colSpan: "2",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 36
      },
      __self: void 0
    }, props.t)),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "tr",
    /* istanbul ignore next */
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "td",
    /* istanbul ignore next */
    {
      className: "name",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 39
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "span",
    /* istanbul ignore next */
    {
      style: {
        backgroundColor: 'rgb(31,119,180)'
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 40
      },
      __self: void 0
    }), props.label),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "td",
    /* istanbul ignore next */
    {
      className: "value",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 43
      },
      __self: void 0
    }, props.value)))))
  );
};

/* istanbul ignore next */
var _default = Tooltip;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlRvb2x0aXAiLCJwcm9wcyIsImNvbnRhaW5lclN0eWxlIiwidCIsImJhY2tncm91bmRDb2xvciIsImxhYmVsIiwidmFsdWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBO0FBQUE7QUFBQTs7QUFDQTtBQUFBOzs7Ozs7QUFFQSxNQUFNQSxPQUFPLEdBQUdDLEtBQUssSUFBSTtBQUFBO0FBQUE7QUFBQTtBQUN2QixTQUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUssTUFBQSxTQUFTLEVBQUMsU0FBZjtBQUF5QixNQUFBLEtBQUssRUFBRUEsS0FBSyxDQUFDQyxjQUF0QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFPLE1BQUEsU0FBUyxFQUFDLGVBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0U7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0U7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0U7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUksTUFBQSxPQUFPLEVBQUMsR0FBWjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxPQUFpQkQsS0FBSyxDQUFDRSxDQUF2QixDQURGLENBREY7QUFJRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDRTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBSSxNQUFBLFNBQVMsRUFBQyxNQUFkO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0U7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQU0sTUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsZUFBZSxFQUFFO0FBQW5CLE9BQWI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsTUFERixFQUVHSCxLQUFLLENBQUNJLEtBRlQsQ0FERjtBQUtFO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFJLE1BQUEsU0FBUyxFQUFDLE9BQWQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FBdUJKLEtBQUssQ0FBQ0ssS0FBN0IsQ0FMRixDQUpGLENBREYsQ0FERjtBQURGO0FBa0JELENBbkJEOzs7ZUFxQmVOLE8iLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgIENPUFlSSUdIVCAoYykgMjAxOSBTQU1TVU5HIEVMRUNUUk9OSUNTIENPLiwgTFRELiAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICBBTEwgUklHSFRTIFJFU0VSVkVEICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQgdG8gbGljZW5zZWVzIG9mIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuICAgICAgICAvXG4vICAgcHJvZHVjdHMgdG8gdXNlIG9yIGFic3RyYWN0IHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiAgICAgICAgIC9cbi8gICBpbXBsZW1lbnRpbmcgYSBwcm9kdWN0IGJhc2VkIG9uIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIHByb2R1Y3RzLiAgICAgICAgICAgL1xuLyAgIE5vIG90aGVyIHJpZ2h0cyB0byByZXByb2R1Y2UsIHVzZSwgb3IgZGlzc2VtaW5hdGUgdGhpcyBjb21wdXRlciBwcm9ncmFtLCAgICAgICAgICAvXG4vICAgd2hldGhlciBpbiBwYXJ0IG9yIGluIHdob2xlLCBhcmUgZ3JhbnRlZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8gXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBtYWtlcyBubyByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50aWVzIHdpdGggICAgICAgICAgL1xuLyAgIHJlc3BlY3QgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgYW5kIHNwZWNpZmljYWxseSBkaXNjbGFpbXMgICAvXG4vICAgYW55IHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgZGFtYWdlcywgc3BlY2lhbCBvciBjb25zZXF1ZW50aWFsLCBjb25uZWN0ZWQgICAgICAgICAgIC9cbi8gICB3aXRoIHRoZSB1c2Ugb2YgdGhpcyBwcm9ncmFtLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cblxuXG5ERVNDUklQVElPTjogPEZpbGUgZGVzY3JpcHRpb24+ICpcbkBOQU1FIDogaW5kZXguanNcbkBBVVRIT1JTOiBKYXkgSGl0ZXNoIFNhbmdoYXZpIFxuQFZlcnNpb24gOiAxLjAgKlxuQFJFVklTSU9OIEhJU1RPUllcblswMy8wNi8yMDE5XSBbSmF5XSA6IFByb3RvdHlwaW5nLi4uLi4uLi4uLi8vLy8vLy8vLy8vLy8vLy8vLy8vXG4qL1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9Ub29sdGlwLmNzcyc7XG5cbmNvbnN0IFRvb2x0aXAgPSBwcm9wcyA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJUb29sdGlwXCIgc3R5bGU9e3Byb3BzLmNvbnRhaW5lclN0eWxlfT5cbiAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJUb29sdGlwLXRhYmxlXCI+XG4gICAgICAgIDx0Ym9keT5cbiAgICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGggY29sU3Bhbj1cIjJcIj57cHJvcHMudH08L3RoPlxuICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgPHRyPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cIm5hbWVcIj5cbiAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9e3sgYmFja2dyb3VuZENvbG9yOiAncmdiKDMxLDExOSwxODApJyB9fSAvPlxuICAgICAgICAgICAgICB7cHJvcHMubGFiZWx9XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cInZhbHVlXCI+e3Byb3BzLnZhbHVlfTwvdGQ+XG4gICAgICAgICAgPC90cj5cbiAgICAgICAgPC90Ym9keT5cbiAgICAgIDwvdGFibGU+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBUb29sdGlwO1xuIl19