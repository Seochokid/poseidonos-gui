b3e399ffce7b3b1c2116f8c6582b35e1
/* istanbul ignore next */
"use strict";

var cov_20myme2lr = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/userManagementUserTableSaga.js";
  var hash = "ddedd7ed30cacb7553fcbcd7da55b9249c5f9571";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/userManagementUserTableSaga.js",
    statementMap: {
      "0": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "1": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "2": {
        start: {
          line: 42,
          column: 27
        },
        end: {
          line: 42,
          column: 35
        }
      },
      "3": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "4": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 35
        }
      },
      "5": {
        start: {
          line: 46,
          column: 13
        },
        end: {
          line: 52,
          column: 11
        }
      },
      "6": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 83,
          column: 5
        }
      },
      "7": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "8": {
        start: {
          line: 68,
          column: 27
        },
        end: {
          line: 68,
          column: 35
        }
      },
      "9": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 79,
          column: 35
        }
      },
      "10": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "11": {
        start: {
          line: 78,
          column: 13
        },
        end: {
          line: 79,
          column: 35
        }
      },
      "12": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 35
        }
      },
      "13": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "14": {
        start: {
          line: 89,
          column: 25
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "15": {
        start: {
          line: 96,
          column: 27
        },
        end: {
          line: 96,
          column: 35
        }
      },
      "16": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "17": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 35
        }
      },
      "18": {
        start: {
          line: 100,
          column: 13
        },
        end: {
          line: 106,
          column: 11
        }
      },
      "19": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 84
        }
      },
      "20": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 84
        }
      },
      "21": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 84
        }
      }
    },
    fnMap: {
      "0": {
        name: "updateUsersInfo",
        decl: {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 32
          }
        },
        loc: {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "deleteUsersInfo",
        decl: {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 32
          }
        },
        loc: {
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 84,
            column: 1
          }
        },
        line: 59
      },
      "2": {
        name: "toggleUsersInfo",
        decl: {
          start: {
            line: 87,
            column: 17
          },
          end: {
            line: 87,
            column: 32
          }
        },
        loc: {
          start: {
            line: 87,
            column: 41
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 87
      },
      "3": {
        name: "userManagementUserTableWatcher",
        decl: {
          start: {
            line: 113,
            column: 17
          },
          end: {
            line: 113,
            column: 47
          }
        },
        loc: {
          start: {
            line: 113,
            column: 50
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 113
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 52,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 52,
            column: 11
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 52,
            column: 11
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 79,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 79,
            column: 35
          }
        }, {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 79,
            column: 35
          }
        }],
        line: 69
      },
      "2": {
        loc: {
          start: {
            line: 78,
            column: 13
          },
          end: {
            line: 79,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 13
          },
          end: {
            line: 79,
            column: 35
          }
        }, {
          start: {
            line: 78,
            column: 13
          },
          end: {
            line: 79,
            column: 35
          }
        }],
        line: 78
      },
      "3": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 106,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 106,
            column: 11
          }
        }, {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 106,
            column: 11
          }
        }],
        line: 97
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "ddedd7ed30cacb7553fcbcd7da55b9249c5f9571"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateUsersInfo = updateUsersInfo;
exports.deleteUsersInfo = deleteUsersInfo;
exports.toggleUsersInfo = toggleUsersInfo;
exports.userManagementUserTableWatcher = userManagementUserTableWatcher;

var
/* istanbul ignore next */
_axios = _interopRequireDefault(require("axios"));

var
/* istanbul ignore next */
_effects = require("redux-saga/effects");

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../store/actions/actionTypes"));

var
/* istanbul ignore next */
actionCreators = _interopRequireWildcard(require("../store/actions/exportActionCreators"));

var
/* istanbul ignore next */
_userManagementSaga = require("./userManagementSaga");

function* updateUsersInfo(action) {
  /* istanbul ignore next */
  cov_20myme2lr.f[0]++;
  cov_20myme2lr.s[0]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_20myme2lr.s[1]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/update_user/', action.newUsers, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    const _ref = (cov_20myme2lr.s[2]++, response),
          status = _ref.status;

    /* istanbul ignore next */
    cov_20myme2lr.s[3]++;

    if (status === 200) {
      /* istanbul ignore next */
      cov_20myme2lr.b[0][0]++;
      cov_20myme2lr.s[4]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _userManagementSaga.
        /* istanbul ignore next */
        fetchUsersInfo)()
      );
    } else {
      /* istanbul ignore next */
      cov_20myme2lr.b[0][1]++;
      cov_20myme2lr.s[5]++;
      yield actionCreators.openAlertBox({
        alerttitle: 'Update User',
        alertOpen: true,
        alertdescription: 'User updation failed',
        alerttype: 'alert',
        istypealert: false
      });
    }
  } catch (error) {
    ;
  }
}

function* deleteUsersInfo(action) {
  /* istanbul ignore next */
  cov_20myme2lr.f[1]++;
  cov_20myme2lr.s[6]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_20myme2lr.s[7]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/delete_users/', action.deleteUsers, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    const _ref2 = (cov_20myme2lr.s[8]++, response),
          status = _ref2.status;

    /* istanbul ignore next */
    cov_20myme2lr.s[9]++;

    if (status !== 200) {
      /* istanbul ignore next */
      cov_20myme2lr.b[1][0]++;
      cov_20myme2lr.s[10]++;
      yield actionCreators.openAlertBox({
        alerttitle: 'Delete User',
        alertOpen: true,
        alertdescription: 'User deletion failed',
        alerttype: 'alert',
        istypealert: false
      });
    } else {
      /* istanbul ignore next */
      cov_20myme2lr.b[1][1]++;
      cov_20myme2lr.s[11]++;

      if (status === 200) {
        /* istanbul ignore next */
        cov_20myme2lr.b[2][0]++;
        cov_20myme2lr.s[12]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _userManagementSaga.
          /* istanbul ignore next */
          fetchUsersInfo)()
        );
      } else
      /* istanbul ignore next */
      {
        cov_20myme2lr.b[2][1]++;
      }
    }
  } catch (error) {
    ;
  }
}

function* toggleUsersInfo(action) {
  /* istanbul ignore next */
  cov_20myme2lr.f[2]++;
  cov_20myme2lr.s[13]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_20myme2lr.s[14]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/toggle_status/', action.toggleUsers, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    const _ref3 = (cov_20myme2lr.s[15]++, response),
          status = _ref3.status;

    /* istanbul ignore next */
    cov_20myme2lr.s[16]++;

    if (status === 200) {
      /* istanbul ignore next */
      cov_20myme2lr.b[3][0]++;
      cov_20myme2lr.s[17]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _userManagementSaga.
        /* istanbul ignore next */
        fetchUsersInfo)()
      );
    } else {
      /* istanbul ignore next */
      cov_20myme2lr.b[3][1]++;
      cov_20myme2lr.s[18]++;
      yield actionCreators.openAlertBox({
        alerttitle: 'Toggle User',
        alertOpen: true,
        alertdescription: 'Admin Cannot be Deactivated',
        alerttype: 'alert',
        istypealert: false
      });
    }
  } catch (error) {
    ;
  }
}

function* userManagementUserTableWatcher() {
  /* istanbul ignore next */
  cov_20myme2lr.f[3]++;
  cov_20myme2lr.s[19]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_USER_MANAGEMENT_UPDATE_USERS, updateUsersInfo)
  );

  /* istanbul ignore next */
  cov_20myme2lr.s[20]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_USER_MANAGEMENT_DELETE_USERS, deleteUsersInfo)
  );

  /* istanbul ignore next */
  cov_20myme2lr.s[21]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_USER_MANAGEMENT_TOGGLE_USERS, toggleUsersInfo)
  );
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJNYW5hZ2VtZW50VXNlclRhYmxlU2FnYS5qcyJdLCJuYW1lcyI6WyJ1cGRhdGVVc2Vyc0luZm8iLCJhY3Rpb24iLCJyZXNwb25zZSIsImNhbGwiLCJheGlvcyIsInBvc3QiLCJuZXdVc2VycyIsImhlYWRlcnMiLCJBY2NlcHQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic3RhdHVzIiwiZmV0Y2hVc2Vyc0luZm8iLCJhY3Rpb25DcmVhdG9ycyIsIm9wZW5BbGVydEJveCIsImFsZXJ0dGl0bGUiLCJhbGVydE9wZW4iLCJhbGVydGRlc2NyaXB0aW9uIiwiYWxlcnR0eXBlIiwiaXN0eXBlYWxlcnQiLCJlcnJvciIsImRlbGV0ZVVzZXJzSW5mbyIsImRlbGV0ZVVzZXJzIiwidG9nZ2xlVXNlcnNJbmZvIiwidG9nZ2xlVXNlcnMiLCJ1c2VyTWFuYWdlbWVudFVzZXJUYWJsZVdhdGNoZXIiLCJ0YWtlRXZlcnkiLCJhY3Rpb25UeXBlcyIsIlNBR0FfVVNFUl9NQU5BR0VNRU5UX1VQREFURV9VU0VSUyIsIlNBR0FfVVNFUl9NQU5BR0VNRU5UX0RFTEVURV9VU0VSUyIsIlNBR0FfVVNFUl9NQU5BR0VNRU5UX1RPR0dMRV9VU0VSUyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwQkE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTs7QUFFTyxVQUFVQSxlQUFWLENBQTBCQyxNQUExQixFQUFrQztBQUFBO0FBQUE7QUFBQTs7QUFDckMsTUFBSTtBQUNBLFVBQU1DLFFBQVE7QUFBQTtBQUFBLDJCQUFHLE1BQU07QUFBQTtBQUFBO0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBLFlBQUs7QUFBQ0M7QUFBQUE7QUFBQUE7QUFBQUEsYUFBRDtBQUFRQTtBQUFBQTtBQUFBQTtBQUFBQSxjQUFNQyxJQUFkLENBQUwsRUFBMEIsd0JBQTFCLEVBQW9ESixNQUFNLENBQUNLLFFBQTNELEVBQXFFO0FBQ3hGQyxRQUFBQSxPQUFPLEVBQUU7QUFDTEMsVUFBQUEsTUFBTSxFQUFFLGtCQURIO0FBRUwsMEJBQWdCLGtCQUZYO0FBR0wsNEJBQWtCQyxZQUFZLENBQUNDLE9BQWIsQ0FBcUIsT0FBckI7QUFIYjtBQUQrRSxPQUFyRTtBQUFOLEtBQUgsQ0FBZDs7QUFEQTtBQUFBLHdDQVFtQlIsUUFSbkI7QUFBQSxVQVFRUyxNQVJSLFFBUVFBLE1BUlI7O0FBQUE7QUFBQTs7QUFTQSxRQUFJQSxNQUFNLEtBQUssR0FBZixFQUFvQjtBQUFBO0FBQUE7QUFBQTtBQUNoQixZQUFNO0FBQUE7QUFBQTtBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFOO0FBQ0gsS0FGRCxNQUdLO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFBTUMsY0FBYyxDQUFDQyxZQUFmLENBQTRCO0FBQ25DQyxRQUFBQSxVQUFVLEVBQUUsYUFEdUI7QUFFbkNDLFFBQUFBLFNBQVMsRUFBRSxJQUZ3QjtBQUduQ0MsUUFBQUEsZ0JBQWdCLEVBQUUsc0JBSGlCO0FBSW5DQyxRQUFBQSxTQUFTLEVBQUUsT0FKd0I7QUFLbkNDLFFBQUFBLFdBQVcsRUFBRTtBQUxzQixPQUE1QixDQUFOO0FBTUY7QUFDTixHQW5CRCxDQW9CQSxPQUFPQyxLQUFQLEVBQWM7QUFDVjtBQUNIO0FBQ0o7O0FBRU0sVUFBVUMsZUFBVixDQUEwQnBCLE1BQTFCLEVBQWtDO0FBQUE7QUFBQTtBQUFBOztBQUNyQyxNQUFJO0FBQ0EsVUFBTUMsUUFBUTtBQUFBO0FBQUEsMkJBQUcsTUFBTTtBQUFBO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsWUFBSztBQUFDQztBQUFBQTtBQUFBQTtBQUFBQSxhQUFEO0FBQVFBO0FBQUFBO0FBQUFBO0FBQUFBLGNBQU1DLElBQWQsQ0FBTCxFQUEwQix5QkFBMUIsRUFBcURKLE1BQU0sQ0FBQ3FCLFdBQTVELEVBQXlFO0FBQzVGZixRQUFBQSxPQUFPLEVBQUU7QUFDTEMsVUFBQUEsTUFBTSxFQUFFLGtCQURIO0FBRUwsMEJBQWdCLGtCQUZYO0FBR0wsNEJBQWtCQyxZQUFZLENBQUNDLE9BQWIsQ0FBcUIsT0FBckI7QUFIYjtBQURtRixPQUF6RTtBQUFOLEtBQUgsQ0FBZDs7QUFEQTtBQUFBLHlDQVFtQlIsUUFSbkI7QUFBQSxVQVFRUyxNQVJSLFNBUVFBLE1BUlI7O0FBQUE7QUFBQTs7QUFTQSxRQUFJQSxNQUFNLEtBQUssR0FBZixFQUFvQjtBQUFBO0FBQUE7QUFBQTtBQUNoQixZQUFNRSxjQUFjLENBQUNDLFlBQWYsQ0FBNEI7QUFDOUJDLFFBQUFBLFVBQVUsRUFBRSxhQURrQjtBQUU5QkMsUUFBQUEsU0FBUyxFQUFFLElBRm1CO0FBRzlCQyxRQUFBQSxnQkFBZ0IsRUFBRSxzQkFIWTtBQUk5QkMsUUFBQUEsU0FBUyxFQUFFLE9BSm1CO0FBSzlCQyxRQUFBQSxXQUFXLEVBQUU7QUFMaUIsT0FBNUIsQ0FBTjtBQU9ILEtBUkQsTUFTSztBQUFBO0FBQUE7QUFBQTs7QUFBQSxVQUFJUixNQUFNLEtBQUssR0FBZixFQUNEO0FBQUE7QUFBQTtBQUFBO0FBQUEsY0FBTTtBQUFBO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBTjtBQUF1QixPQUR0QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ3NCO0FBQzlCLEdBcEJELENBcUJBLE9BQU9RLEtBQVAsRUFBYztBQUNWO0FBQ0g7QUFDSjs7QUFHTSxVQUFVRyxlQUFWLENBQTBCdEIsTUFBMUIsRUFBa0M7QUFBQTtBQUFBO0FBQUE7O0FBQ3JDLE1BQUk7QUFDQSxVQUFNQyxRQUFRO0FBQUE7QUFBQSw0QkFBRyxNQUFNO0FBQUE7QUFBQTtBQUFBQztBQUFBQTtBQUFBQTtBQUFBQSxZQUFLO0FBQUNDO0FBQUFBO0FBQUFBO0FBQUFBLGFBQUQ7QUFBUUE7QUFBQUE7QUFBQUE7QUFBQUEsY0FBTUMsSUFBZCxDQUFMLEVBQTBCLDBCQUExQixFQUFzREosTUFBTSxDQUFDdUIsV0FBN0QsRUFBMEU7QUFDN0ZqQixRQUFBQSxPQUFPLEVBQUU7QUFDTEMsVUFBQUEsTUFBTSxFQUFFLGtCQURIO0FBRUwsMEJBQWdCLGtCQUZYO0FBR0wsNEJBQWtCQyxZQUFZLENBQUNDLE9BQWIsQ0FBcUIsT0FBckI7QUFIYjtBQURvRixPQUExRTtBQUFOLEtBQUgsQ0FBZDs7QUFEQTtBQUFBLDBDQVFtQlIsUUFSbkI7QUFBQSxVQVFRUyxNQVJSLFNBUVFBLE1BUlI7O0FBQUE7QUFBQTs7QUFTQSxRQUFJQSxNQUFNLEtBQUssR0FBZixFQUFvQjtBQUFBO0FBQUE7QUFBQTtBQUNoQixZQUFNO0FBQUE7QUFBQTtBQUFBQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFOO0FBQ0gsS0FGRCxNQUdLO0FBQUE7QUFBQTtBQUFBO0FBQUEsWUFBTUMsY0FBYyxDQUFDQyxZQUFmLENBQTRCO0FBQ25DQyxRQUFBQSxVQUFVLEVBQUUsYUFEdUI7QUFFbkNDLFFBQUFBLFNBQVMsRUFBRSxJQUZ3QjtBQUduQ0MsUUFBQUEsZ0JBQWdCLEVBQUUsNkJBSGlCO0FBSW5DQyxRQUFBQSxTQUFTLEVBQUUsT0FKd0I7QUFLbkNDLFFBQUFBLFdBQVcsRUFBRTtBQUxzQixPQUE1QixDQUFOO0FBTUY7QUFDTixHQW5CRCxDQW9CQSxPQUFPQyxLQUFQLEVBQWM7QUFDVjtBQUNIO0FBQ0o7O0FBRU0sVUFBVUssOEJBQVYsR0FBMkM7QUFBQTtBQUFBO0FBQUE7QUFDOUMsUUFBTTtBQUFBO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsZUFBVUMsV0FBVyxDQUFDQyxpQ0FBdEIsRUFBeUQ1QixlQUF6RDtBQUFOOztBQUQ4QztBQUFBO0FBRTlDLFFBQU07QUFBQTtBQUFBO0FBQUEwQjtBQUFBQTtBQUFBQTtBQUFBQSxlQUFVQyxXQUFXLENBQUNFLGlDQUF0QixFQUF5RFIsZUFBekQ7QUFBTjs7QUFGOEM7QUFBQTtBQUc5QyxRQUFNO0FBQUE7QUFBQTtBQUFBSztBQUFBQTtBQUFBQTtBQUFBQSxlQUFVQyxXQUFXLENBQUNHLGlDQUF0QixFQUF5RFAsZUFBekQ7QUFBTjtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICBDT1BZUklHSFQgKGMpIDIwMTkgU0FNU1VORyBFTEVDVFJPTklDUyBDTy4sIExURC4gICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgQUxMIFJJR0hUUyBSRVNFUlZFRCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkIHRvIGxpY2Vuc2VlcyBvZiBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiAgICAgICAgL1xuLyAgIHByb2R1Y3RzIHRvIHVzZSBvciBhYnN0cmFjdCB0aGlzIGNvbXB1dGVyIHByb2dyYW0gZm9yIHRoZSBzb2xlIHB1cnBvc2Ugb2YgICAgICAgICAvXG4vICAgaW1wbGVtZW50aW5nIGEgcHJvZHVjdCBiYXNlZCBvbiBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBwcm9kdWN0cy4gICAgICAgICAgIC9cbi8gICBObyBvdGhlciByaWdodHMgdG8gcmVwcm9kdWNlLCB1c2UsIG9yIGRpc3NlbWluYXRlIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgICAgICAgICAgL1xuLyAgIHdoZXRoZXIgaW4gcGFydCBvciBpbiB3aG9sZSwgYXJlIGdyYW50ZWQuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvIFxuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gbWFrZXMgbm8gcmVwcmVzZW50YXRpb24gb3Igd2FycmFudGllcyB3aXRoICAgICAgICAgIC9cbi8gICByZXNwZWN0IHRvIHRoZSBwZXJmb3JtYW5jZSBvZiB0aGlzIGNvbXB1dGVyIHByb2dyYW0sIGFuZCBzcGVjaWZpY2FsbHkgZGlzY2xhaW1zICAgL1xuLyAgIGFueSByZXNwb25zaWJpbGl0eSBmb3IgYW55IGRhbWFnZXMsIHNwZWNpYWwgb3IgY29uc2VxdWVudGlhbCwgY29ubmVjdGVkICAgICAgICAgICAvXG4vICAgd2l0aCB0aGUgdXNlIG9mIHRoaXMgcHJvZ3JhbS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vXG5cblxuREVTQ1JJUFRJT046IDxDb250YWlucyBHZW5lcmF0b3IgRnVuY3Rpb25zIGZvciBVc2VyIFRhYmxlIGNvbXBvbmVudD4gKlxuQE5BTUUgOiB1c2VyTWFuYWdlbWVudFVzZXJUYWJsZVNhZ2EuanNcbkBBVVRIT1JTOiBKYXkgSGl0ZXNoIFNhbmdoYXZpIFxuQFZlcnNpb24gOiAxLjAgKlxuQFJFVklTSU9OIEhJU1RPUllcblswMy8wNi8yMDE5XSBbSmF5XSA6IFByb3RvdHlwaW5nLi4uLi4uLi4uLi8vLy8vLy8vLy8vLy8vLy8vLy8vXG4qL1xuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcbmltcG9ydCB7IGNhbGwsIHRha2VFdmVyeSB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5pbXBvcnQgKiBhcyBhY3Rpb25UeXBlcyBmcm9tIFwiLi4vc3RvcmUvYWN0aW9ucy9hY3Rpb25UeXBlc1wiO1xuaW1wb3J0ICogYXMgYWN0aW9uQ3JlYXRvcnMgZnJvbSBcIi4uL3N0b3JlL2FjdGlvbnMvZXhwb3J0QWN0aW9uQ3JlYXRvcnNcIjtcbmltcG9ydCB7IGZldGNoVXNlcnNJbmZvIH0gZnJvbSBcIi4vdXNlck1hbmFnZW1lbnRTYWdhXCJcblxuZXhwb3J0IGZ1bmN0aW9uKiB1cGRhdGVVc2Vyc0luZm8oYWN0aW9uKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBjYWxsKFtheGlvcywgYXhpb3MucG9zdF0sICcvYXBpL3YxLjAvdXBkYXRlX3VzZXIvJywgYWN0aW9uLm5ld1VzZXJzLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICAgICAneC1hY2Nlc3MtdG9rZW4nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB7IHN0YXR1cyB9ID0gcmVzcG9uc2U7XG4gICAgICAgIGlmIChzdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgeWllbGQgZmV0Y2hVc2Vyc0luZm8oKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHlpZWxkIGFjdGlvbkNyZWF0b3JzLm9wZW5BbGVydEJveCh7XG4gICAgICAgICAgICBhbGVydHRpdGxlOiAnVXBkYXRlIFVzZXInLFxuICAgICAgICAgICAgYWxlcnRPcGVuOiB0cnVlLFxuICAgICAgICAgICAgYWxlcnRkZXNjcmlwdGlvbjogJ1VzZXIgdXBkYXRpb24gZmFpbGVkJyxcbiAgICAgICAgICAgIGFsZXJ0dHlwZTogJ2FsZXJ0JyxcbiAgICAgICAgICAgIGlzdHlwZWFsZXJ0OiBmYWxzZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICA7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24qIGRlbGV0ZVVzZXJzSW5mbyhhY3Rpb24pIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IHlpZWxkIGNhbGwoW2F4aW9zLCBheGlvcy5wb3N0XSwgJy9hcGkvdjEuMC9kZWxldGVfdXNlcnMvJywgYWN0aW9uLmRlbGV0ZVVzZXJzLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICAgICAneC1hY2Nlc3MtdG9rZW4nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB7IHN0YXR1cyB9ID0gcmVzcG9uc2U7XG4gICAgICAgIGlmIChzdGF0dXMgIT09IDIwMCkge1xuICAgICAgICAgICAgeWllbGQgYWN0aW9uQ3JlYXRvcnMub3BlbkFsZXJ0Qm94KHtcbiAgICAgICAgICAgICAgICBhbGVydHRpdGxlOiAnRGVsZXRlIFVzZXInLFxuICAgICAgICAgICAgICAgIGFsZXJ0T3BlbjogdHJ1ZSxcbiAgICAgICAgICAgICAgICBhbGVydGRlc2NyaXB0aW9uOiAnVXNlciBkZWxldGlvbiBmYWlsZWQnLFxuICAgICAgICAgICAgICAgIGFsZXJ0dHlwZTogJ2FsZXJ0JyxcbiAgICAgICAgICAgICAgICBpc3R5cGVhbGVydDogZmFsc2UsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzdGF0dXMgPT09IDIwMClcbiAgICAgICAgICAgIHlpZWxkIGZldGNoVXNlcnNJbmZvKCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICA7XG4gICAgfVxufVxuXG5cbmV4cG9ydCBmdW5jdGlvbiogdG9nZ2xlVXNlcnNJbmZvKGFjdGlvbikge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgY2FsbChbYXhpb3MsIGF4aW9zLnBvc3RdLCAnL2FwaS92MS4wL3RvZ2dsZV9zdGF0dXMvJywgYWN0aW9uLnRvZ2dsZVVzZXJzLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgQWNjZXB0OiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICAgICAneC1hY2Nlc3MtdG9rZW4nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndG9rZW4nKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCB7IHN0YXR1cyB9ID0gcmVzcG9uc2U7XG4gICAgICAgIGlmIChzdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgeWllbGQgZmV0Y2hVc2Vyc0luZm8oKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHlpZWxkIGFjdGlvbkNyZWF0b3JzLm9wZW5BbGVydEJveCh7XG4gICAgICAgICAgICBhbGVydHRpdGxlOiAnVG9nZ2xlIFVzZXInLFxuICAgICAgICAgICAgYWxlcnRPcGVuOiB0cnVlLFxuICAgICAgICAgICAgYWxlcnRkZXNjcmlwdGlvbjogJ0FkbWluIENhbm5vdCBiZSBEZWFjdGl2YXRlZCcsXG4gICAgICAgICAgICBhbGVydHR5cGU6ICdhbGVydCcsXG4gICAgICAgICAgICBpc3R5cGVhbGVydDogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uKiB1c2VyTWFuYWdlbWVudFVzZXJUYWJsZVdhdGNoZXIoKSB7XG4gICAgeWllbGQgdGFrZUV2ZXJ5KGFjdGlvblR5cGVzLlNBR0FfVVNFUl9NQU5BR0VNRU5UX1VQREFURV9VU0VSUywgdXBkYXRlVXNlcnNJbmZvKTtcbiAgICB5aWVsZCB0YWtlRXZlcnkoYWN0aW9uVHlwZXMuU0FHQV9VU0VSX01BTkFHRU1FTlRfREVMRVRFX1VTRVJTLCBkZWxldGVVc2Vyc0luZm8pO1xuICAgIHlpZWxkIHRha2VFdmVyeShhY3Rpb25UeXBlcy5TQUdBX1VTRVJfTUFOQUdFTUVOVF9UT0dHTEVfVVNFUlMsIHRvZ2dsZVVzZXJzSW5mbyk7XG59XG4iXX0=