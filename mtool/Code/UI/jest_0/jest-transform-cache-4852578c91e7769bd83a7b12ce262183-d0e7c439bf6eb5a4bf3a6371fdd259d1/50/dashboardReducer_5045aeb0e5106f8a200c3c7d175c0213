39ec686d73215e6aaf478410d44c8f61
/* istanbul ignore next */
"use strict";

var cov_24oew2mwql = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/dashboardReducer.js";
  var hash = "ac6586405269359412020895abdb9e4f0d07a204";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/dashboardReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "1": {
        start: {
          line: 48,
          column: 25
        },
        end: {
          line: 90,
          column: 1
        }
      },
      "2": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "3": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 54,
          column: 14
        }
      },
      "4": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 59,
          column: 14
        }
      },
      "5": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 64,
          column: 14
        }
      },
      "6": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 72,
          column: 14
        }
      },
      "7": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 79,
          column: 14
        }
      },
      "8": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 86,
          column: 14
        }
      },
      "9": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 26
          }
        },
        loc: {
          start: {
            line: 48,
            column: 59
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 48
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 48,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 48,
            column: 34
          },
          end: {
            line: 48,
            column: 46
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 54,
            column: 14
          }
        }, {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 59,
            column: 14
          }
        }, {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 64,
            column: 14
          }
        }, {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 72,
            column: 14
          }
        }, {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 79,
            column: 14
          }
        }, {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 86,
            column: 14
          }
        }, {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 88,
            column: 25
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0, 0, 0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "ac6586405269359412020895abdb9e4f0d07a204"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_24oew2mwql.s[0]++, {
  volumes: [],
  alerts: [],
  ibofs: ['None'],
  unusedSpace: 100,
  used: 0,
  unused: 100,
  read_iops: 0,
  write_iops: 0,
  bw: 0,
  fetchingAlerts: false,
  ip: '0.0.0.0',
  mac: 'NA',
  host: '',
  arraySize: 0
});

/* istanbul ignore next */
cov_24oew2mwql.s[1]++;

const dashboardReducer = (state =
/* istanbul ignore next */
(cov_24oew2mwql.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_24oew2mwql.f[0]++;
  cov_24oew2mwql.s[2]++;

  switch (action.type) {
    case actionTypes.ENABLE_FETCHING_ALERTS:
      /* istanbul ignore next */
      cov_24oew2mwql.b[1][0]++;
      cov_24oew2mwql.s[3]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          fetchingAlerts: action.fetchingAlerts
        })
      );

    case actionTypes.FETCH_VOLUME_INFO:
      /* istanbul ignore next */
      cov_24oew2mwql.b[1][1]++;
      cov_24oew2mwql.s[4]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          volumes: action.volumes
        })
      );

    case actionTypes.FETCH_ALERTS_INFO:
      /* istanbul ignore next */
      cov_24oew2mwql.b[1][2]++;
      cov_24oew2mwql.s[5]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          alerts: action.alerts
        })
      );

    case actionTypes.FETCH_STORAGE_INFO:
      /* istanbul ignore next */
      cov_24oew2mwql.b[1][3]++;
      cov_24oew2mwql.s[6]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          unusedSpace: action.unusedSpace,
          used: action.used,
          unused: action.unused,
          arraySize: action.arraySize
        })
      );

    case actionTypes.FETCH_PERFORMANCE_INFO:
      /* istanbul ignore next */
      cov_24oew2mwql.b[1][4]++;
      cov_24oew2mwql.s[7]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          read_iops: action.read_iops,
          write_iops: action.write_iops,
          bw: action.bw
        })
      );

    case actionTypes.FETCH_IPANDMAC_INFO:
      /* istanbul ignore next */
      cov_24oew2mwql.b[1][5]++;
      cov_24oew2mwql.s[8]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          ip: action.ip,
          mac: action.mac,
          host: action.host
        })
      );

    default:
      /* istanbul ignore next */
      cov_24oew2mwql.b[1][6]++;
      cov_24oew2mwql.s[9]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = dashboardReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZFJlZHVjZXIuanMiXSwibmFtZXMiOlsiaW5pdGlhbFN0YXRlIiwidm9sdW1lcyIsImFsZXJ0cyIsImlib2ZzIiwidW51c2VkU3BhY2UiLCJ1c2VkIiwidW51c2VkIiwicmVhZF9pb3BzIiwid3JpdGVfaW9wcyIsImJ3IiwiZmV0Y2hpbmdBbGVydHMiLCJpcCIsIm1hYyIsImhvc3QiLCJhcnJheVNpemUiLCJkYXNoYm9hcmRSZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiYWN0aW9uVHlwZXMiLCJFTkFCTEVfRkVUQ0hJTkdfQUxFUlRTIiwiRkVUQ0hfVk9MVU1FX0lORk8iLCJGRVRDSF9BTEVSVFNfSU5GTyIsIkZFVENIX1NUT1JBR0VfSU5GTyIsIkZFVENIX1BFUkZPUk1BTkNFX0lORk8iLCJGRVRDSF9JUEFORE1BQ19JTkZPIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQTtBQUFBO0FBQUE7Ozs7OztBQUVBLE1BQU1BLFlBQVk7QUFBQTtBQUFBLHdCQUFHO0FBQ2pCQyxFQUFBQSxPQUFPLEVBQUUsRUFEUTtBQUVqQkMsRUFBQUEsTUFBTSxFQUFFLEVBRlM7QUFHakJDLEVBQUFBLEtBQUssRUFBRSxDQUFDLE1BQUQsQ0FIVTtBQUlqQkMsRUFBQUEsV0FBVyxFQUFFLEdBSkk7QUFLakJDLEVBQUFBLElBQUksRUFBRSxDQUxXO0FBTWpCQyxFQUFBQSxNQUFNLEVBQUUsR0FOUztBQU9qQkMsRUFBQUEsU0FBUyxFQUFFLENBUE07QUFRakJDLEVBQUFBLFVBQVUsRUFBRSxDQVJLO0FBU2pCQyxFQUFBQSxFQUFFLEVBQUUsQ0FUYTtBQVVqQkMsRUFBQUEsY0FBYyxFQUFFLEtBVkM7QUFXakJDLEVBQUFBLEVBQUUsRUFBRSxTQVhhO0FBWWpCQyxFQUFBQSxHQUFHLEVBQUUsSUFaWTtBQWFqQkMsRUFBQUEsSUFBSSxFQUFFLEVBYlc7QUFjakJDLEVBQUFBLFNBQVMsRUFBRTtBQWRNLENBQUgsQ0FBbEI7Ozs7O0FBa0JBLE1BQU1DLGdCQUFnQixHQUFHLENBQUNDLEtBQUs7QUFBQTtBQUFBLDJCQUFHaEIsWUFBSCxDQUFOLEVBQXVCaUIsTUFBdkIsS0FBa0M7QUFBQTtBQUFBO0FBQUE7O0FBQ3ZELFVBQVFBLE1BQU0sQ0FBQ0MsSUFBZjtBQUNJLFNBQUtDLFdBQVcsQ0FBQ0Msc0JBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQ0k7QUFBQTtBQUFBLDBCQUNPSixLQURQO0FBRUlOLFVBQUFBLGNBQWMsRUFBRU8sTUFBTSxDQUFDUDtBQUYzQjtBQUFBOztBQUlKLFNBQUtTLFdBQVcsQ0FBQ0UsaUJBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQ0k7QUFBQTtBQUFBLDBCQUNPTCxLQURQO0FBRUlmLFVBQUFBLE9BQU8sRUFBRWdCLE1BQU0sQ0FBQ2hCO0FBRnBCO0FBQUE7O0FBSUosU0FBS2tCLFdBQVcsQ0FBQ0csaUJBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQ0k7QUFBQTtBQUFBLDBCQUNPTixLQURQO0FBRUlkLFVBQUFBLE1BQU0sRUFBRWUsTUFBTSxDQUFDZjtBQUZuQjtBQUFBOztBQUlKLFNBQUtpQixXQUFXLENBQUNJLGtCQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUNJO0FBQUE7QUFBQSwwQkFDT1AsS0FEUDtBQUVJWixVQUFBQSxXQUFXLEVBQUNhLE1BQU0sQ0FBQ2IsV0FGdkI7QUFHSUMsVUFBQUEsSUFBSSxFQUFDWSxNQUFNLENBQUNaLElBSGhCO0FBSUlDLFVBQUFBLE1BQU0sRUFBQ1csTUFBTSxDQUFDWCxNQUpsQjtBQUtJUSxVQUFBQSxTQUFTLEVBQUNHLE1BQU0sQ0FBQ0g7QUFMckI7QUFBQTs7QUFPSixTQUFLSyxXQUFXLENBQUNLLHNCQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUNJO0FBQUE7QUFBQSwwQkFDT1IsS0FEUDtBQUVJVCxVQUFBQSxTQUFTLEVBQUVVLE1BQU0sQ0FBQ1YsU0FGdEI7QUFHSUMsVUFBQUEsVUFBVSxFQUFDUyxNQUFNLENBQUNULFVBSHRCO0FBSUlDLFVBQUFBLEVBQUUsRUFBQ1EsTUFBTSxDQUFDUjtBQUpkO0FBQUE7O0FBTUosU0FBS1UsV0FBVyxDQUFDTSxtQkFBakI7QUFBQTtBQUFBO0FBQUE7QUFDSTtBQUFBO0FBQUEsMEJBQ09ULEtBRFA7QUFFSUwsVUFBQUEsRUFBRSxFQUFDTSxNQUFNLENBQUNOLEVBRmQ7QUFHSUMsVUFBQUEsR0FBRyxFQUFDSyxNQUFNLENBQUNMLEdBSGY7QUFJSUMsVUFBQUEsSUFBSSxFQUFDSSxNQUFNLENBQUNKO0FBSmhCO0FBQUE7O0FBTUo7QUFBQTtBQUFBO0FBQUE7QUFDSSxhQUFPRyxLQUFQO0FBdkNSO0FBeUNILENBMUNEOzs7ZUE0Q2VELGdCIiwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICBDT1BZUklHSFQgKGMpIDIwMTkgU0FNU1VORyBFTEVDVFJPTklDUyBDTy4sIExURC4gICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgQUxMIFJJR0hUUyBSRVNFUlZFRCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkIHRvIGxpY2Vuc2VlcyBvZiBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiAgICAgICAgL1xuLyAgIHByb2R1Y3RzIHRvIHVzZSBvciBhYnN0cmFjdCB0aGlzIGNvbXB1dGVyIHByb2dyYW0gZm9yIHRoZSBzb2xlIHB1cnBvc2Ugb2YgICAgICAgICAvXG4vICAgaW1wbGVtZW50aW5nIGEgcHJvZHVjdCBiYXNlZCBvbiBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBwcm9kdWN0cy4gICAgICAgICAgIC9cbi8gICBObyBvdGhlciByaWdodHMgdG8gcmVwcm9kdWNlLCB1c2UsIG9yIGRpc3NlbWluYXRlIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgICAgICAgICAgL1xuLyAgIHdoZXRoZXIgaW4gcGFydCBvciBpbiB3aG9sZSwgYXJlIGdyYW50ZWQuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvIFxuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gbWFrZXMgbm8gcmVwcmVzZW50YXRpb24gb3Igd2FycmFudGllcyB3aXRoICAgICAgICAgIC9cbi8gICByZXNwZWN0IHRvIHRoZSBwZXJmb3JtYW5jZSBvZiB0aGlzIGNvbXB1dGVyIHByb2dyYW0sIGFuZCBzcGVjaWZpY2FsbHkgZGlzY2xhaW1zICAgL1xuLyAgIGFueSByZXNwb25zaWJpbGl0eSBmb3IgYW55IGRhbWFnZXMsIHNwZWNpYWwgb3IgY29uc2VxdWVudGlhbCwgY29ubmVjdGVkICAgICAgICAgICAvXG4vICAgd2l0aCB0aGUgdXNlIG9mIHRoaXMgcHJvZ3JhbS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vXG5cblxuREVTQ1JJUFRJT046IDxDb250YWlucyByZWR1Y2VyIGZ1bmN0aW9uIGZvciBkYXNoYm9hcmQgcGFnZT4gKlxuQE5BTUUgOiBkYXNoYm9hcmRSZWR1Y2VyLmpzXG5AQVVUSE9SUzogSmF5IEhpdGVzaCBTYW5naGF2aSBcbkBWZXJzaW9uIDogMS4wICpcbkBSRVZJU0lPTiBISVNUT1JZXG5bMDMvMDYvMjAxOV0gW0pheV0gOiBQcm90b3R5cGluZy4uLi4uLi4uLi4vLy8vLy8vLy8vLy8vLy8vLy8vL1xuKi9cblxuaW1wb3J0ICogYXMgYWN0aW9uVHlwZXMgZnJvbSBcIi4uL2FjdGlvbnMvYWN0aW9uVHlwZXNcIlxuXG5jb25zdCBpbml0aWFsU3RhdGUgPSB7XG4gICAgdm9sdW1lczogW10sXG4gICAgYWxlcnRzOiBbXSxcbiAgICBpYm9mczogWydOb25lJ10sXG4gICAgdW51c2VkU3BhY2U6IDEwMCxcbiAgICB1c2VkOiAwLFxuICAgIHVudXNlZDogMTAwLFxuICAgIHJlYWRfaW9wczogMCxcbiAgICB3cml0ZV9pb3BzOiAwLFxuICAgIGJ3OiAwLFxuICAgIGZldGNoaW5nQWxlcnRzOiBmYWxzZSxcbiAgICBpcDogJzAuMC4wLjAnLFxuICAgIG1hYzogJ05BJyxcbiAgICBob3N0OiAnJyxcbiAgICBhcnJheVNpemU6IDBcbn1cblxuXG5jb25zdCBkYXNoYm9hcmRSZWR1Y2VyID0gKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgYWN0aW9uVHlwZXMuRU5BQkxFX0ZFVENISU5HX0FMRVJUUzpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgICAgICAgZmV0Y2hpbmdBbGVydHM6IGFjdGlvbi5mZXRjaGluZ0FsZXJ0cyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIGNhc2UgYWN0aW9uVHlwZXMuRkVUQ0hfVk9MVU1FX0lORk86XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgICAgIHZvbHVtZXM6IGFjdGlvbi52b2x1bWVzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSBhY3Rpb25UeXBlcy5GRVRDSF9BTEVSVFNfSU5GTzpcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgICAgICAgYWxlcnRzOiBhY3Rpb24uYWxlcnRzLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSBhY3Rpb25UeXBlcy5GRVRDSF9TVE9SQUdFX0lORk86XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgICAgIHVudXNlZFNwYWNlOmFjdGlvbi51bnVzZWRTcGFjZSxcbiAgICAgICAgICAgICAgICB1c2VkOmFjdGlvbi51c2VkLFxuICAgICAgICAgICAgICAgIHVudXNlZDphY3Rpb24udW51c2VkLFxuICAgICAgICAgICAgICAgIGFycmF5U2l6ZTphY3Rpb24uYXJyYXlTaXplXG4gICAgICAgICAgICB9O1xuICAgICAgICBjYXNlIGFjdGlvblR5cGVzLkZFVENIX1BFUkZPUk1BTkNFX0lORk86XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgICAgICAgIHJlYWRfaW9wczogYWN0aW9uLnJlYWRfaW9wcyxcbiAgICAgICAgICAgICAgICB3cml0ZV9pb3BzOmFjdGlvbi53cml0ZV9pb3BzLFxuICAgICAgICAgICAgICAgIGJ3OmFjdGlvbi5id1xuICAgICAgICAgICAgfTtcbiAgICAgICAgY2FzZSBhY3Rpb25UeXBlcy5GRVRDSF9JUEFORE1BQ19JTkZPOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgICAgICBpcDphY3Rpb24uaXAsXG4gICAgICAgICAgICAgICAgbWFjOmFjdGlvbi5tYWMsXG4gICAgICAgICAgICAgICAgaG9zdDphY3Rpb24uaG9zdFxuICAgICAgICAgICAgfTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBkYXNoYm9hcmRSZWR1Y2VyOyJdfQ==