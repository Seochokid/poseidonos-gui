{"version":3,"sources":["index.js"],"names":["styles","theme","content","flexGrow","width","boxSizing","padding","spacing","toolbar","customTheme","cardHeader","card","header","UserManagement","Component","constructor","props","toggleUserStatus","bind","selectUser","deleteUsers","saveUser","OnHandleSubmit","onCancel","OnHandleChange","openAlert","handleAlertClose","triggerCommand","validate","state","username","password","confirmpassword","user_role","mobilenumber","emailid","phone_number","componentDidMount","fetchUsersInfo","setState","i","user","userid","users","_id","status","active","toggleUsersInfo","event","selected","target","checked","newUser","oldid","updateUsersInfo","ids","currentUser","localStorage","getItem","forEach","push","openAlertBox","istypealert","alerttype","alertOpen","alerttitle","alertdescription","length","data","deleteUsersInfo","name","value","indexOf","error","operationType","addDeleteSend","addNewUserInfo","render","classes","MToolTheme","mapStateToProps","userManagementReducer","alertManagementReducer","mapDispatchToProps","dispatch","setUsersInfo","updatedUsers","actionCreators","alertParam","type","actionTypes","SAGA_USER_MANAGEMENT_FETCH_USERS","newUsers","SAGA_USER_MANAGEMENT_UPDATE_USERS","SAGA_USER_MANAGEMENT_DELETE_USERS","toggleUsers","SAGA_USER_MANAGEMENT_TOGGLE_USERS","addNewUser","SAGA_USER_MANAGEMENT_ADD_NEW_USERS","withStyles","connect"],"mappingszBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,CADH;AAEPC,MAAAA,KAAK,EAAE,MAFA;AAGPC,MAAAA,SAAS,EAAE,YAHJ;AAIPC,MAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAJF,KADgB;AAOzBC,IAAAA,OAAO;AAAEC;AAAAA;AAAAA;AAAAA,gBAAYD,OAPI;AAQzBE,IAAAA,UAAU;AAAED;AAAAA;AAAAA;AAAAA,gBAAYE,IAAZ,CAAiBC;AARJ;AAS1B,CATD;;AAWA,MAAMC,cAAN;AAA6BC;AAAAA;AAAAA;AAAAA,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;AAAA;AAAA;AACjB,UAAMA,KAAN;;AADiB;AAAA;AAEjB,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;;AAFiB;AAAA;AAGjB,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;;AAHiB;AAAA;AAIjB,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;;AAJiB;AAAA;AAKjB,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;;AALiB;AAAA;AAMjB,SAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;;AANiB;AAAA;AAOjB,SAAKK,QAAL,GAAgB,KAAKA,QAAL,CAAcL,IAAd,CAAmB,IAAnB,CAAhB;;AAPiB;AAAA;AAQjB,SAAKM,cAAL,GAAsB,KAAKA,cAAL,CAAoBN,IAApB,CAAyB,IAAzB,CAAtB;;AARiB;AAAA;AASjB,SAAKO,SAAL,GAAiB,KAAKA,SAAL,CAAeP,IAAf,CAAoB,IAApB,CAAjB;;AATiB;AAAA;AAUjB,SAAKQ,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBR,IAAtB,CAA2B,IAA3B,CAAxB;;AAViB;AAAA;AAWjB,SAAKS,cAAL,GAAsB,KAAKA,cAAL,CAAoBT,IAApB,CAAyB,IAAzB,CAAtB;;AAXiB;AAAA;AAYjB,SAAKU,QAAL,GAAgB,KAAKA,QAAL,CAAcV,IAAd,CAAmB,IAAnB,CAAhB;;AAZiB;AAAA;AAajB,SAAKW,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,eAAe,EAAE,EAHN;AAIXC,MAAAA,SAAS,EAAE,OAJA;AAKXC,MAAAA,YAAY,EAAE,KALH;AAMXC,MAAAA,OAAO,EAAE,EANE;AAOXC,MAAAA,YAAY,EAAC;AAPF,KAAb;AASD;;AAEDC,EAAAA,iBAAiB,GAAG;AAAA;AAAA;AAAA;AAClB,SAAKrB,KAAL,CAAWsB,cAAX;AACD;;AAEDf,EAAAA,QAAQ,GAAG;AAAA;AAAA;AAAA;AACT,SAAKgB,QAAL;AAAA;AAAA,sBACK,KAAKV,KADV;AAEEC,MAAAA,QAAQ,EAAE,EAFZ;AAGEC,MAAAA,QAAQ,EAAE,EAHZ;AAIEC,MAAAA,eAAe,EAAE,EAJnB;AAKEC,MAAAA,SAAS,EAAE,OALb;AAMEC,MAAAA,YAAY,EAAE,KANhB;AAOEC,MAAAA,OAAO,EAAE,EAPX;AAQEC,MAAAA,YAAY,EAAC;AARf;AAUD;;AAEDnB,EAAAA,gBAAgB,CAACuB,CAAD,EAAI;AAAA;AAAA;AAClB,UAAMC,IAAI;AAAA;AAAA,6BAAG;AACXC,MAAAA,MAAM,EAAE,KAAK1B,KAAL,CAAW2B,KAAX,CAAiBH,CAAjB,EAAoBI,GADjB;AAEXC,MAAAA,MAAM,EAAE,CAAC,KAAK7B,KAAL,CAAW2B,KAAX,CAAiBH,CAAjB,EAAoBM;AAFlB,KAAH,CAAV;;AADkB;AAAA;AAKlB,SAAK9B,KAAL,CAAW+B,eAAX,CAA2BN,IAA3B;AACD;;AAEDtB,EAAAA,UAAU,CAAC6B,KAAD,EAAQR,CAAR,EAAW;AAAA;AAAA;AACnB,UAAMG,KAAK;AAAA;AAAA,6BAAG,CAAC,GAAG,KAAK3B,KAAL,CAAW2B,KAAf,CAAH,CAAX;;AADmB;AAAA;AAEnBA,IAAAA,KAAK,CAACH,CAAD,CAAL,CAASS,QAAT,GAAoBD,KAAK,CAACE,MAAN,CAAaC,OAAjC;;AAFmB;AAAA;AAGnB,SAAKZ,QAAL;AAAA;AAAA,sBACK,KAAKV,KADV;AAEEc,MAAAA;AAFF;AAID;;AAEDtB,EAAAA,QAAQ,CAACoB,IAAD,EAAOD,CAAP,EAAU;AAAA;AAAA;AAChB,UAAMY,OAAO;AAAA;AAAA,+CACRX,IADQ;AAEXY,MAAAA,KAAK,EAAE,KAAKrC,KAAL,CAAW2B,KAAX,CAAiBH,CAAjB,EAAoBI;AAFhB,OAAb;;AADgB;AAAA;AAKhB,SAAK5B,KAAL,CAAWsC,eAAX,CAA2BF,OAA3B;AACD;;AAEDhC,EAAAA,WAAW,GAAG;AAAA;AAAA;AACZ,UAAMmC,GAAG;AAAA;AAAA,6BAAG,EAAH,CAAT;AACA,UAAMC,WAAW;AAAA;AAAA,6BAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAH,CAAjB;;AAFY;AAAA;AAGZ,SAAK1C,KAAL,CAAW2B,KAAX,CAAiBgB,OAAjB,CAAyBlB,IAAI,IAAI;AAAA;AAAA;AAAA;;AAC/B;AAAI;AAAA,iCAAAA,IAAI,CAACQ,QAAL;AAAA;AAAA,iCAAiBR,IAAI,CAACG,GAAL,KAAaY,WAA9B,CAAJ,EAA+C;AAAA;AAAA;AAAA;AAC7CD,QAAAA,GAAG,CAACK,IAAJ,CAASnB,IAAI,CAACG,GAAd;AACD,OAFD,MAEO;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAA,mCAAAH,IAAI,CAACQ,QAAL;AAAA;AAAA,mCAAiBR,IAAI,CAACG,GAAL,KAAaY,WAA9B,CAAJ,EAA+C;AAAA;AAAA;AAAA;AACpD,eAAKxC,KAAL,CAAW6C,YAAX,CAAwB;AACtBC,YAAAA,WAAW,EAAE,IADS;AAEtBC,YAAAA,SAAS,EAAE,OAFW;AAGtBC,YAAAA,SAAS,EAAE,IAHW;AAItBC,YAAAA,UAAU,EAAE,aAJU;AAKtBC,YAAAA,gBAAgB,EAAE;AALI,WAAxB;AAOD,SARM;AAAA;AAAA;AAAA;AAAA;AAQN;AACF,KAZD;;AAHY;AAAA;;AAgBZ,QAAIX,GAAG,CAACY,MAAJ,KAAe,CAAnB,EAAsB;AAAA;AAAA;AAAA;AACpB,WAAK5B,QAAL,CAAc;AACZuB,QAAAA,WAAW,EAAE,IADD;AAEZC,QAAAA,SAAS,EAAE,OAFC;AAGZC,QAAAA,SAAS,EAAE,IAHC;AAIZC,QAAAA,UAAU,EAAE,aAJA;AAKZC,QAAAA,gBAAgB,EAAE;AALN,OAAd;AAOD,KARD;AAAA;AAAA;AAAA;AAAA;;AASA,UAAME,IAAI;AAAA;AAAA,6BAAG;AACXb,MAAAA;AADW,KAAH,CAAV;;AAzBY;AAAA;AA4BZ,SAAKvC,KAAL,CAAWqD,eAAX,CAA2BD,IAA3B;AACD;;AAED5C,EAAAA,cAAc,CAACwB,KAAD,EAAQ;AAAA;AAAA;;AAAA,0CACIA,KAAK,CAACE,MADV;AAAA,UACZoB,IADY,QACZA,IADY;AAAA,UACNC,KADM,QACNA,KADM;;AAAA;AAAA;AAEpB,SAAKhC,QAAL;AAAA;AAAA,sBACK,KAAKV,KADV;AAEE,OAACyC,IAAD,GAAQC;AAFV;AAID;;AAED3C,EAAAA,QAAQ,GAAG;AAAA;AAAA;AAAA;;AACT,QAAI,CAAC,KAAKC,KAAL,CAAWC,QAAhB,EAA0B;AAAA;AAAA;AAAA;AACxB,WAAKd,KAAL,CAAW6C,YAAX,CAAwB;AACtBG,QAAAA,SAAS,EAAE,IADW;AAEtBD,QAAAA,SAAS,EAAE,OAFW;AAGtBD,QAAAA,WAAW,EAAE,IAHS;AAItBG,QAAAA,UAAU,EAAE,cAJU;AAKtBC,QAAAA,gBAAgB,EAAE;AALI,OAAxB;AAOD,KARD,MASK;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAA,kCAAC,KAAKrC,KAAL,CAAWE,QAAZ;AAAA;AAAA,iCAAwB,CAAC,KAAKF,KAAL,CAAWG,eAApC,CAAJ,EACH;AAAA;AAAA;AAAA;AAAA,aAAKhB,KAAL,CAAW6C,YAAX,CAAwB;AAAEI,UAAAA,UAAU,EAAE,cAAd;AAA8BD,UAAAA,SAAS,EAAE,IAAzC;AAA+CD,UAAAA,SAAS,EAAE,OAA1D;AAAmED,UAAAA,WAAW,EAAE,IAAhF;AAAsFI,UAAAA,gBAAgB,EAAE;AAAxG,SAAxB;AAAkK,OAD/J,MAEA;AAAA;AAAA;AAAA;;AAAA,YAAI,KAAKrC,KAAL,CAAWE,QAAX,KAAwB,KAAKF,KAAL,CAAWG,eAAvC,EACH;AAAA;AAAA;AAAA;AAAA,eAAKhB,KAAL,CAAW6C,YAAX,CAAwB;AAAEI,YAAAA,UAAU,EAAE,cAAd;AAA8BD,YAAAA,SAAS,EAAE,IAAzC;AAA+CD,YAAAA,SAAS,EAAE,OAA1D;AAAmED,YAAAA,WAAW,EAAE,IAAhF;AAAsFI,YAAAA,gBAAgB,EAAE;AAAxG,WAAxB;AAA2J,SADxJ,MAEA;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAA,uCAAC,KAAKrC,KAAL,CAAWK,YAAZ;AAAA;AAAA,sCAA4B,KAAKL,KAAL,CAAWK,YAAX,CAAwBiC,MAAxB,GAAiC,CAA7D,CAAJ,EACH;AAAA;AAAA;AAAA;AAAA,iBAAKnD,KAAL,CAAW6C,YAAX,CAAwB;AAAEI,cAAAA,UAAU,EAAE,cAAd;AAA8BD,cAAAA,SAAS,EAAE,IAAzC;AAA+CD,cAAAA,SAAS,EAAE,OAA1D;AAAmED,cAAAA,WAAW,EAAE,IAAhF;AAAsFI,cAAAA,gBAAgB,EAAE;AAAxG,aAAxB;AAAuK,WADpK,MAEA;AAAA;AAAA;AAAA;;AAAA;AAAI;AAAA,yCAAC,KAAKrC,KAAL,CAAWM,OAAZ;AAAA;AAAA,wCAAuB,EAAE,KAAKN,KAAL,CAAWM,OAAX,CAAmBqC,OAAnB,CAA2B,GAA3B,IAAkC,CAAC,CAArC,CAAvB;AAAA;AAAA,wCAAkE,EAAE,KAAK3C,KAAL,CAAWM,OAAX,CAAmBqC,OAAnB,CAA2B,GAA3B,IAAkC,CAAC,CAArC,CAAlE,CAAJ,EACH;AAAA;AAAA;AAAA;AAAA,mBAAKxD,KAAL,CAAW6C,YAAX,CAAwB;AAAEI,gBAAAA,UAAU,EAAE,cAAd;AAA8BD,gBAAAA,SAAS,EAAE,IAAzC;AAA+CD,gBAAAA,SAAS,EAAE,OAA1D;AAAmED,gBAAAA,WAAW,EAAE,IAAhF;AAAsFI,gBAAAA,gBAAgB,EAAE;AAAxG,eAAxB;AAAkK,aAD/J,MAEA;AAAA;AAAA;AAAA;AACH,mBAAK3B,QAAL;AAAA;AAAA,gCAAmB,KAAKV,KAAxB;AAA+B4C,gBAAAA,KAAK,EAAE;AAAtC;;AADG;AAAA;AAEH,qBAAO,IAAP;AACD;AAAA;AAAA;AAAA;AAAA;;AArBQ;AAAA;AAsBT,WAAO,KAAP;AACD;;AAEDhD,EAAAA,SAAS,CAACiD,aAAD,EAAgB;AAAA;AAAA;AAAA;;AACvB,QAAIA,aAAa,KAAK,QAAtB,EAAgC;AAAA;AAAA;AAAA;;AAC9B,UAAI,CAAC,KAAK9C,QAAL,EAAL,EACE;AAAA;AAAA;AAAA;AAAA;AAAO,OADT;AAAA;AAAA;AAAA;AAAA;AAED,KAHD;AAAA;AAAA;AAAA;AAAA;;AADuB;AAKvB,SAAKZ,KAAL,CAAW6C,YAAX,CAAwB;AACtBG,MAAAA,SAAS,EAAE,IADW;AAEtBW,MAAAA,aAAa,EAAED,aAFO;AAGtBX,MAAAA,SAAS,EAAE,QAHW;AAItBD,MAAAA,WAAW,EAAE,KAJS;AAKtBG,MAAAA,UAAU,EAAG,GAAES,aAAc,OALP;AAMtBR,MAAAA,gBAAgB,EAAG,4BAA2BQ,aAAc;AANtC,KAAxB;AASD;;AAED/C,EAAAA,cAAc,GAAG;AAAA;AAAA;AAAA;;AACf,QAAI,KAAKX,KAAL,CAAW2D,aAAX,KAA6B,QAAjC,EAA2C;AAAA;AAAA;AAAA;AACzC,WAAKrD,cAAL;;AADyC;AAAA;AAEzC,WAAKI,gBAAL;AACD,KAHD,MAGO;AAAA;AAAA;AAAA;;AAAA,UAAI,KAAKV,KAAL,CAAW2D,aAAX,KAA6B,QAAjC,EAA2C;AAAA;AAAA;AAAA;AAChD,aAAKpD,QAAL;;AADgD;AAAA;AAEhD,aAAKG,gBAAL;AACD,OAHM;AAAA;AAAA;AAAA;AAAA;AAGN;AACF;;AAEDA,EAAAA,gBAAgB,GAAG;AAAA;AAAA;AAAA;AACjB,SAAKV,KAAL,CAAW6C,YAAX,CAAwB;AACtBG,MAAAA,SAAS,EAAE;AADW,KAAxB;AAGD;;AAED1C,EAAAA,cAAc,GAAG;AAAA;AAAA;AAAA;AACb,SAAKN,KAAL,CAAW4D,cAAX,CAA0B,KAAK/C,KAA/B;;AADa;AAAA;AAEb,SAAKU,QAAL,CAAc;AACZT,MAAAA,QAAQ,EAAE,EADE;AAEZC,MAAAA,QAAQ,EAAE,EAFE;AAGZC,MAAAA,eAAe,EAAE,EAHL;AAIZC,MAAAA,SAAS,EAAE,OAJC;AAKZC,MAAAA,YAAY,EAAE,KALF;AAMZC,MAAAA,OAAO,EAAE;AANG,KAAd;AAQH;;AAED0C,EAAAA,MAAM,GAAG;AAAA;AAAA;;AAAA,2CACa,KAAK7D,KADlB;AAAA,UACC8D,OADD,SACCA,OADD;;AAAA;AAAA;AAEP,WACE;AAAA;AAAA;AAAC;AAAA;AAAA;AAAA,aAAD;AAAA;AAAA;AAAe,QAAA,KAAK;AAAEC;AAAAA;AAAAA;AAAAA,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAM,QAAA,SAAS,EAAED,OAAO,CAAC5E,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE;AAAA;AAAC;AAAA;AAAA;AAAA,UAAD;AAAA;AAAA;AAAM,QAAA,SAAS;AAAA;AAAA,YAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE;AAAA;AAAC;AAAA;AAAA;AAAA,aAAD;AAAA;AAAA;AACE,QAAA,UAAU,EAAE,KAAKiB,UADnB;AAEE,QAAA,gBAAgB,EAAE,KAAKF,gBAFzB;AAGE,QAAA,UAAU,EAAE,KAAKI,QAHnB;AAIE,QAAA,WAAW,EAAE,KAAKD,WAJpB;AAKE,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAW2B,KALpB;AAME,QAAA,YAAY,EAAE,KAAKd,KAAL,CAAWO,YAN3B;AAOE,QAAA,cAAc,EAAE,KAAKZ,cAPvB;AAQE,QAAA,YAAY,EAAI,KAAKR,KAAL,CAAW6C,YAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAWE;AAAA;AAAC;AAAA;AAAA;AAAA,aAAD;AAAA;AAAA;AACE,QAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWC,QADvB;AAEE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAFvB;AAGE,QAAA,eAAe,EAAE,KAAKF,KAAL,CAAWG,eAH9B;AAIE,QAAA,YAAY,EAAE,KAAKH,KAAL,CAAWK,YAJ3B;AAKE,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OALtB;AAME,QAAA,SAAS,EAAE,KAAKV,SANlB;AAOE,QAAA,QAAQ,EAAE,KAAKF,QAPjB;AAQE,QAAA,cAAc,EAAE,KAAKC,cARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CAFF,CAJJ;AA8BI;AAAA;AAAC;AAAA;AAAA;AAAA,aAAD;AAAA;AAAA;AACE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWiD,UADpB;AAEE,QAAA,WAAW,EAAE,KAAKjD,KAAL,CAAWkD,gBAF1B;AAGE,QAAA,IAAI,EAAE,KAAKlD,KAAL,CAAWgD,SAHnB;AAIE,QAAA,IAAI,EAAE,KAAKhD,KAAL,CAAW+C,SAJnB;AAKE,QAAA,WAAW,EAAE,KAAKrC,gBALpB;AAME,QAAA,SAAS,EAAE,KAAKC,cANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BJ;AADF;AAyCD;;AA1NoC;;;;;AA6NvC,MAAMqD,eAAe,GAAGnD,KAAK,IAAI;AAAA;AAAA;AAAA;AAC/B,SAAO;AACLc,IAAAA,KAAK,EAAEd,KAAK,CAACoD,qBAAN,CAA4BtC,KAD9B;AAELgC,IAAAA,aAAa,EAAE9C,KAAK,CAACqD,sBAAN,CAA6BP,aAFvC;AAGLX,IAAAA,SAAS,EAAEnC,KAAK,CAACqD,sBAAN,CAA6BlB,SAHnC;AAILD,IAAAA,SAAS,EAAElC,KAAK,CAACqD,sBAAN,CAA6BnB,SAJnC;AAKLD,IAAAA,WAAW,EAAEjC,KAAK,CAACqD,sBAAN,CAA6BpB,WALrC;AAMLG,IAAAA,UAAU,EAAEpC,KAAK,CAACqD,sBAAN,CAA6BjB,UANpC;AAOLC,IAAAA,gBAAgB,EAAErC,KAAK,CAACqD,sBAAN,CAA6BhB;AAP1C,GAAP;AASD,CAVD;;;;;AAYA,MAAMiB,kBAAkB,GAAGC,QAAQ,IAAI;AAAA;AAAA;AAAA;AACrC,SAAO;AACLC,IAAAA,YAAY,EAAGC,YAAD,IAAkB;AAAA;AAAA;AAAA;AAAA,aAAAF,QAAQ,CAACG,cAAc,CAACF,YAAf,CAA4BC,YAA5B,CAAD,CAAR;AAAmD,KAD9E;AAELzB,IAAAA,YAAY,EAAG2B,UAAD,IAAgB;AAAA;AAAA;AAAA;AAAA,aAAAJ,QAAQ,CAACG,cAAc,CAAC1B,YAAf,CAA4B2B,UAA5B,CAAD,CAAR;AAAiD,KAF1E;AAGLlD,IAAAA,cAAc,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA,aAAA8C,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEC,WAAW,CAACC;AAApB,OAAD,CAAR;AAAgE,KAHjF;AAILrC,IAAAA,eAAe,EAAGsC,QAAD,IAAc;AAAA;AAAA;AAAA;AAAA,aAAAR,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEC,WAAW,CAACG,iCAApB;AAAuDD,QAAAA;AAAvD,OAAD,CAAR;AAA4E,KAJtG;AAKLvB,IAAAA,eAAe,EAAGjD,WAAD,IAAiB;AAAA;AAAA;AAAA;AAAA,aAAAgE,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEC,WAAW,CAACI,iCAApB;AAAuD1E,QAAAA;AAAvD,OAAD,CAAR;AAA+E,KAL5G;AAML2B,IAAAA,eAAe,EAAGgD,WAAD,IAAiB;AAAA;AAAA;AAAA;AAAA,aAAAX,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEC,WAAW,CAACM,iCAApB;AAAuDD,QAAAA;AAAvD,OAAD,CAAR;AAA+E,KAN5G;AAOLnB,IAAAA,cAAc,EAAGqB,UAAD,IAAgB;AAAA;AAAA;AAAA;AAAA,aAAAb,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEC,WAAW,CAACQ,kCAApB;AAAwDD,QAAAA;AAAxD,OAAD,CAAR;AAA+E;AAP1G,GAAP;AASD,CAVD;;;;AAYe;AAAA;AAAAE;AAAAA;AAAAA;AAAAA,YAAWnG,MAAX;AAAoB;AAAA;AAAAoG;AAAAA;AAAAA;AAAAA,SAAQpB,eAAR,EAAyBG,kBAAzB,CAAD,CAAiDtE,cAAjD,CAAnB,C","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Component corresponding to User Management Page\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[04/06/2019] [Aswin] : Changes for adding custom alert\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { withStyles, Grid } from '@material-ui/core';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport UserTable from '../../../components/UserTable';\nimport AddNewUser from '../../../components/AddNewUser';\nimport './User-Management.css';\nimport AlertDialog from '../../../components/Dialog';\nimport MToolTheme, { customTheme } from '../../../theme';\nimport * as actionTypes from \"../../../store/actions/actionTypes\";\nimport * as actionCreators from \"../../../store/actions/exportActionCreators\";\n\nconst styles = (theme) => ({\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    boxSizing: 'border-box',\n    padding: theme.spacing(2, 0)\n  },\n  toolbar: customTheme.toolbar,\n  cardHeader: customTheme.card.header\n});\n\nclass UserManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleUserStatus = this.toggleUserStatus.bind(this);\n    this.selectUser = this.selectUser.bind(this);\n    this.deleteUsers = this.deleteUsers.bind(this);\n    this.saveUser = this.saveUser.bind(this);\n    this.OnHandleSubmit = this.OnHandleSubmit.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.OnHandleChange = this.OnHandleChange.bind(this);\n    this.openAlert = this.openAlert.bind(this);\n    this.handleAlertClose = this.handleAlertClose.bind(this);\n    this.triggerCommand = this.triggerCommand.bind(this);\n    this.validate = this.validate.bind(this);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      user_role: \"Admin\",\n      mobilenumber: \"+82\",\n      emailid: \"\",\n      phone_number:\"+82\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUsersInfo();\n  }\n\n  onCancel() {\n    this.setState({\n      ...this.state,\n      username: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      user_role: \"Admin\",\n      mobilenumber: \"+82\",\n      emailid: \"\",\n      phone_number:\"+82\"\n    });\n  }\n\n  toggleUserStatus(i) {\n    const user = {\n      userid: this.props.users[i]._id,\n      status: !this.props.users[i].active,\n    };\n    this.props.toggleUsersInfo(user);\n  }\n\n  selectUser(event, i) {\n    const users = [...this.props.users];\n    users[i].selected = event.target.checked;\n    this.setState({\n      ...this.state,\n      users,\n    });\n  }\n\n  saveUser(user, i) {\n    const newUser = {\n      ...user,\n      oldid: this.props.users[i]._id,\n    };\n    this.props.updateUsersInfo(newUser);\n  }\n\n  deleteUsers() {\n    const ids = [];\n    const currentUser = localStorage.getItem('userid');\n    this.props.users.forEach(user => {\n      if (user.selected && user._id !== currentUser) {\n        ids.push(user._id);\n      } else if (user.selected && user._id === currentUser) {\n        this.props.openAlertBox({\n          istypealert: true,\n          alerttype: 'alert',\n          alertOpen: true,\n          alerttitle: 'Delete User',\n          alertdescription: 'Current user cannot be deleted'\n        });\n      }\n    });\n    if (ids.length === 0) {\n      this.setState({\n        istypealert: true,\n        alerttype: 'alert',\n        alertOpen: true,\n        alerttitle: 'Delete User',\n        alertdescription: 'Select the users to be deleted'\n      });\n    }\n    const data = {\n      ids,\n    };\n    this.props.deleteUsersInfo(data);\n  }\n\n  OnHandleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      ...this.state,\n      [name]: value\n    });\n  }\n\n  validate() {\n    if (!this.state.username) {\n      this.props.openAlertBox({\n        alertOpen: true,\n        alerttype: 'alert',\n        istypealert: true,\n        alerttitle: \"Add New User\",\n        alertdescription: \"Please Enter a Valid Username\",\n      });\n    }\n    else if (!this.state.password || !this.state.confirmpassword)\n      this.props.openAlertBox({ alerttitle: \"Add New User\", alertOpen: true, alerttype: \"alert\", istypealert: true, alertdescription: \"Please Enter a Valid Password\" })\n    else if (this.state.password !== this.state.confirmpassword)\n      this.props.openAlertBox({ alerttitle: \"Add New User\", alertOpen: true, alerttype: \"alert\", istypealert: true, alertdescription: \"Passwords do not match\" })\n    else if (!this.state.mobilenumber || this.state.mobilenumber.length < 4)\n      this.props.openAlertBox({ alerttitle: \"Add New User\", alertOpen: true, alerttype: \"alert\", istypealert: true, alertdescription: \"Please Enter a Valid Mobile Number\" })\n    else if (!this.state.emailid || !(this.state.emailid.indexOf('@') > -1) || !(this.state.emailid.indexOf('.') > -1))\n      this.props.openAlertBox({ alerttitle: \"Add New User\", alertOpen: true, alerttype: \"alert\", istypealert: true, alertdescription: \"Please Enter a Valid Email ID\" })\n    else {\n      this.setState({ ...this.state, error: \"\" })\n      return true;\n    }\n    return false;\n  }\n\n  openAlert(operationType) {\n    if (operationType === \"Submit\") {\n      if (!this.validate())\n        return;\n    }\n    this.props.openAlertBox({\n      alertOpen: true,\n      addDeleteSend: operationType,\n      alerttype: 'delete',\n      istypealert: false,\n      alerttitle: `${operationType} User`,\n      alertdescription: `Are you sure you want to ${operationType} the user?`,\n    }\n    );\n  }\n\n  triggerCommand() {\n    if (this.props.addDeleteSend === 'Submit') {\n      this.OnHandleSubmit();\n      this.handleAlertClose();\n    } else if (this.props.addDeleteSend === 'Cancel') {\n      this.onCancel();\n      this.handleAlertClose();\n    }\n  }\n\n  handleAlertClose() {\n    this.props.openAlertBox({\n      alertOpen: false\n    });\n  }\n\n  OnHandleSubmit() {\n      this.props.addNewUserInfo(this.state);\n      this.setState({\n        username: \"\",\n        password: \"\",\n        confirmpassword: \"\",\n        user_role: \"Admin\",\n        mobilenumber: \"+82\",\n        emailid: \"\",\n      });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <ThemeProvider theme={MToolTheme}>\n        {/* <Box display=\"flex\"> */}\n          {/* <Header /> */}\n          {/* <Sidebar /> */}\n          <main className={classes.content}>\n            {/* <div className={classes.toolbar} /> */}\n            <Grid container spacing={3}>\n              <UserTable\n                selectUser={this.selectUser}\n                toggleUserStatus={this.toggleUserStatus}\n                saveChange={this.saveUser}\n                deleteUsers={this.deleteUsers}\n                users={this.props.users}\n                phone_number={this.state.phone_number}\n                OnHandleChange={this.OnHandleChange}\n                openAlertBox = {this.props.openAlertBox}\n              />\n              <AddNewUser\n                username={this.state.username}\n                password={this.state.password}\n                confirmpassword={this.state.confirmpassword}\n                mobilenumber={this.state.mobilenumber}\n                emailid={this.state.emailid}\n                openAlert={this.openAlert}\n                onCancel={this.onCancel}\n                OnHandleChange={this.OnHandleChange}\n              />\n            </Grid>\n          </main>\n        {/* </Box> */}\n          <AlertDialog\n            title={this.props.alerttitle}\n            description={this.props.alertdescription}\n            open={this.props.alertOpen}\n            type={this.props.alerttype}\n            handleClose={this.handleAlertClose}\n            onConfirm={this.triggerCommand}\n          />\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.userManagementReducer.users,\n    addDeleteSend: state.alertManagementReducer.addDeleteSend,\n    alertOpen: state.alertManagementReducer.alertOpen,\n    alerttype: state.alertManagementReducer.alerttype,\n    istypealert: state.alertManagementReducer.istypealert,\n    alerttitle: state.alertManagementReducer.alerttitle,\n    alertdescription: state.alertManagementReducer.alertdescription,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUsersInfo: (updatedUsers) => dispatch(actionCreators.setUsersInfo(updatedUsers)),\n    openAlertBox: (alertParam) => dispatch(actionCreators.openAlertBox(alertParam)),\n    fetchUsersInfo: () => dispatch({ type: actionTypes.SAGA_USER_MANAGEMENT_FETCH_USERS }),\n    updateUsersInfo: (newUsers) => dispatch({ type: actionTypes.SAGA_USER_MANAGEMENT_UPDATE_USERS, newUsers, }),\n    deleteUsersInfo: (deleteUsers) => dispatch({ type: actionTypes.SAGA_USER_MANAGEMENT_DELETE_USERS, deleteUsers, }),\n    toggleUsersInfo: (toggleUsers) => dispatch({ type: actionTypes.SAGA_USER_MANAGEMENT_TOGGLE_USERS, toggleUsers, }),\n    addNewUserInfo: (addNewUser) => dispatch({ type: actionTypes.SAGA_USER_MANAGEMENT_ADD_NEW_USERS, addNewUser, }),\n  };\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(((UserManagement))));"]}