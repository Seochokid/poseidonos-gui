6c6f0ff9c001ccb61e71813e51488b28
/* istanbul ignore next */
"use strict";

var cov_2eb6qdjsmr = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/waitLoaderReducer.js";
  var hash = "ce2777d72683f7780db69d1e26bb90084d6a3a9f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/waitLoaderReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 33,
          column: 1
        }
      },
      "1": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 51,
          column: 1
        }
      },
      "2": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "3": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "4": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 47,
          column: 13
        }
      },
      "5": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 27
          }
        },
        loc: {
          start: {
            line: 35,
            column: 60
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 27
          },
          end: {
            line: 35,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 35,
            column: 35
          },
          end: {
            line: 35,
            column: 47
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 49,
            column: 25
          }
        }],
        line: 36
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "ce2777d72683f7780db69d1e26bb90084d6a3a9f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.initialState = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_2eb6qdjsmr.s[0]++, {
  loading: false,
  loadText: ''
});

/* istanbul ignore next */
exports.initialState = initialState;
cov_2eb6qdjsmr.s[1]++;

const waitLoaderReducer = (state =
/* istanbul ignore next */
(cov_2eb6qdjsmr.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_2eb6qdjsmr.f[0]++;
  cov_2eb6qdjsmr.s[2]++;

  switch (action.type) {
    case actionTypes.START_LOADER:
      /* istanbul ignore next */
      cov_2eb6qdjsmr.b[1][0]++;
      cov_2eb6qdjsmr.s[3]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          loading: true,
          loadText: action.payload
        })
      );

    case actionTypes.STOP_LOADER:
      /* istanbul ignore next */
      cov_2eb6qdjsmr.b[1][1]++;
      cov_2eb6qdjsmr.s[4]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          loading: false
        })
      );

    default:
      /* istanbul ignore next */
      cov_2eb6qdjsmr.b[1][2]++;
      cov_2eb6qdjsmr.s[5]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = waitLoaderReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhaXRMb2FkZXJSZWR1Y2VyLmpzIl0sIm5hbWVzIjpbImluaXRpYWxTdGF0ZSIsImxvYWRpbmciLCJsb2FkVGV4dCIsIndhaXRMb2FkZXJSZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiYWN0aW9uVHlwZXMiLCJTVEFSVF9MT0FERVIiLCJwYXlsb2FkIiwiU1RPUF9MT0FERVIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTJCQTtBQUFBO0FBQUE7Ozs7OztBQUVPLE1BQU1BLFlBQVk7QUFBQTtBQUFBLHdCQUFHO0FBQ3pCQyxFQUFBQSxPQUFPLEVBQUMsS0FEaUI7QUFFekJDLEVBQUFBLFFBQVEsRUFBQztBQUZnQixDQUFILENBQWxCOzs7Ozs7QUFLUCxNQUFNQyxpQkFBaUIsR0FBRyxDQUFDQyxLQUFLO0FBQUE7QUFBQSwyQkFBR0osWUFBSCxDQUFOLEVBQXVCSyxNQUF2QixLQUFrQztBQUFBO0FBQUE7QUFBQTs7QUFDeEQsVUFBT0EsTUFBTSxDQUFDQyxJQUFkO0FBQ0ksU0FBS0MsV0FBVyxDQUFDQyxZQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUNJO0FBQUE7QUFBQSwwQkFDT0osS0FEUDtBQUVJSCxVQUFBQSxPQUFPLEVBQUUsSUFGYjtBQUdJQyxVQUFBQSxRQUFRLEVBQUVHLE1BQU0sQ0FBQ0k7QUFIckI7QUFBQTs7QUFLSixTQUFLRixXQUFXLENBQUNHLFdBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQ0k7QUFBQTtBQUFBLDBCQUNPTixLQURQO0FBRUlILFVBQUFBLE9BQU8sRUFBRTtBQUZiO0FBQUE7O0FBSUo7QUFBQTtBQUFBO0FBQUE7QUFDSSxhQUFPRyxLQUFQO0FBYlI7QUFlSCxDQWhCRDs7O2VBa0JlRCxpQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgQ09QWVJJR0hUIChjKSAyMDE5IFNBTVNVTkcgRUxFQ1RST05JQ1MgQ08uLCBMVEQuICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgIEFMTCBSSUdIVFMgUkVTRVJWRUQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCB0byBsaWNlbnNlZXMgb2YgU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gICAgICAgIC9cbi8gICBwcm9kdWN0cyB0byB1c2Ugb3IgYWJzdHJhY3QgdGhpcyBjb21wdXRlciBwcm9ncmFtIGZvciB0aGUgc29sZSBwdXJwb3NlIG9mICAgICAgICAgL1xuLyAgIGltcGxlbWVudGluZyBhIHByb2R1Y3QgYmFzZWQgb24gU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gcHJvZHVjdHMuICAgICAgICAgICAvXG4vICAgTm8gb3RoZXIgcmlnaHRzIHRvIHJlcHJvZHVjZSwgdXNlLCBvciBkaXNzZW1pbmF0ZSB0aGlzIGNvbXB1dGVyIHByb2dyYW0sICAgICAgICAgIC9cbi8gICB3aGV0aGVyIGluIHBhcnQgb3IgaW4gd2hvbGUsIGFyZSBncmFudGVkLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyBcbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIG1ha2VzIG5vIHJlcHJlc2VudGF0aW9uIG9yIHdhcnJhbnRpZXMgd2l0aCAgICAgICAgICAvXG4vICAgcmVzcGVjdCB0byB0aGUgcGVyZm9ybWFuY2Ugb2YgdGhpcyBjb21wdXRlciBwcm9ncmFtLCBhbmQgc3BlY2lmaWNhbGx5IGRpc2NsYWltcyAgIC9cbi8gICBhbnkgcmVzcG9uc2liaWxpdHkgZm9yIGFueSBkYW1hZ2VzLCBzcGVjaWFsIG9yIGNvbnNlcXVlbnRpYWwsIGNvbm5lY3RlZCAgICAgICAgICAgL1xuLyAgIHdpdGggdGhlIHVzZSBvZiB0aGlzIHByb2dyYW0uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuXG5cbkRFU0NSSVBUSU9OOiA8Q29udGFpbnMgcmVkdWNlciBmdW5jdGlvbiBmb3IgTG9hZGVyIENvbXBvbmVudD4gKlxuQE5BTUUgOiB3YWl0TG9hZGVyUmVkdWNlci5qc1xuQEFVVEhPUlM6IEpheSBIaXRlc2ggU2FuZ2hhdmlcbkBWZXJzaW9uIDogMS4wICpcbkBSRVZJU0lPTiBISVNUT1JZXG5bMDMvMDYvMjAxOV0gW0pheV0gOiBQcm90b3R5cGluZy4uLi4uLi4uLi4vLy8vLy8vLy8vLy8vLy8vLy8vL1xuKi9cblxuaW1wb3J0ICogYXMgYWN0aW9uVHlwZXMgZnJvbSBcIi4uL2FjdGlvbnMvYWN0aW9uVHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgIGxvYWRpbmc6ZmFsc2UsXG4gICBsb2FkVGV4dDonJ1xufVxuXG5jb25zdCB3YWl0TG9hZGVyUmVkdWNlciA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgc3dpdGNoKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgYWN0aW9uVHlwZXMuU1RBUlRfTE9BREVSOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiB0cnVlLFxuICAgICAgICAgICAgICAgIGxvYWRUZXh0OiBhY3Rpb24ucGF5bG9hZFxuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIGFjdGlvblR5cGVzLlNUT1BfTE9BREVSOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICAgICAgICBsb2FkaW5nOiBmYWxzZVxuICAgICAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2FpdExvYWRlclJlZHVjZXI7Il19