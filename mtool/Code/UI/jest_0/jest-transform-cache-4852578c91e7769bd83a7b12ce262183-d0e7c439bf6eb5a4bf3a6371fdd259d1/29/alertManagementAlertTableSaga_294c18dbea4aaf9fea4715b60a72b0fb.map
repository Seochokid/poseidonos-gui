{"version":3,"sources":["alertManagementAlertTableSaga.js"],"names":["updateAlertsInfo","action","response","axios","post","newAlerts","headers","Accept","localStorage","getItem","status","error","deleteAlertsInfo","deleteAlerts","toggleAlertsInfo","toggleAlerts","alertManagementAlertTableWatcher","actionTypes","SAGA_ALERT_MANAGEMENT_UPDATE_ALERTS","SAGA_ALERT_MANAGEMENT_DELETE_ALERTS","SAGA_ALERT_MANAGEMENT_TOGGLE_ALERTS"],"mappings":";;;;;;;;;;;;;;AA0BA;;AACA;;AACA;;AACA;;AA7BA;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BO,UAAUA,gBAAV,CAA2BC,MAA3B,EAAmC;AACtC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAM,mBAAK,CAACC,cAAD,EAAQA,eAAMC,IAAd,CAAL,EAA0B,0BAA1B,EAAqDH,MAAM,CAACI,SAA5D,EAAsE;AACzFC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHb;AADgF,KAAtE,CAAvB;AADA,UAQOC,MARP,GAQiBR,QARjB,CAQOQ,MARP;;AASA,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAChB,YAAM,2CAAN;AACH;AACJ,GAZD,CAaA,OAAOC,KAAP,EAAc;AACX;AACF;AACJ;;AAEM,UAAUC,gBAAV,CAA2BX,MAA3B,EAAmC;AACtC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAM,mBAAK,CAACC,cAAD,EAAQA,eAAMC,IAAd,CAAL,EAA0B,0BAA1B,EAAqDH,MAAM,CAACY,YAA5D,EAAyE;AAC5FP,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHb;AADmF,KAAzE,CAAvB;AADA,UAQOC,MARP,GAQiBR,QARjB,CAQOQ,MARP;;AASA,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAChB,YAAM,2CAAN;AACH;AACJ,GAZD,CAaA,OAAOC,KAAP,EAAc;AACX;AACF;AACJ;;AAGM,UAAUG,gBAAV,CAA2Bb,MAA3B,EAAmC;AACtC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAM,mBAAK,CAACC,cAAD,EAAQA,eAAMC,IAAd,CAAL,EAA0B,gCAA1B,EAA2DH,MAAM,CAACc,YAAlE,EAA+E;AAClGT,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB,kBAFX;AAGL,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHb;AADyF,KAA/E,CAAvB;AADA,UAQOC,MARP,GAQiBR,QARjB,CAQOQ,MARP;;AASA,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAChB,YAAM,2CAAN;AACH;AACJ,GAZD,CAaA,OAAOC,KAAP,EAAc;AACX;AACF;AACJ;;AAEM,UAAUK,gCAAV,GAA6C;AAChD,QAAM,wBAAUC,WAAW,CAACC,mCAAtB,EAA2DlB,gBAA3D,CAAN;AACA,QAAM,wBAAUiB,WAAW,CAACE,mCAAtB,EAA2DP,gBAA3D,CAAN;AACA,QAAM,wBAAUK,WAAW,CAACG,mCAAtB,EAA2DN,gBAA3D,CAAN;AACH","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <Contains Generator Functions for Alert Table component> *\n@NAME : alertManagementAlertTableSaga.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport axios from 'axios';\nimport { call, takeEvery} from 'redux-saga/effects';\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport {fetchAlertsInfo} from \"./alertManagementSaga\"\n\nexport function* updateAlertsInfo(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/update_alerts/',action.newAlerts,{ \n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const {status} = response;\n        if (status === 200) {\n            yield fetchAlertsInfo();\n        }\n    }\n    catch (error) {\n       ;\n    }\n}\n\nexport function* deleteAlertsInfo(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/delete_alerts/',action.deleteAlerts,{ \n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const {status} = response;\n        if (status === 200) {\n            yield fetchAlertsInfo();\n        }\n    }\n    catch (error) {\n       ;\n    }\n}\n\n\nexport function* toggleAlertsInfo(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/toggle_alert_status/',action.toggleAlerts,{ \n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const {status} = response;\n        if (status === 200) {\n            yield fetchAlertsInfo();\n        }\n    }\n    catch (error) {\n       ;\n    }\n}\n\nexport function* alertManagementAlertTableWatcher() {\n    yield takeEvery(actionTypes.SAGA_ALERT_MANAGEMENT_UPDATE_ALERTS, updateAlertsInfo);\n    yield takeEvery(actionTypes.SAGA_ALERT_MANAGEMENT_DELETE_ALERTS, deleteAlertsInfo);\n    yield takeEvery(actionTypes.SAGA_ALERT_MANAGEMENT_TOGGLE_ALERTS, toggleAlertsInfo);\n}\n"]}