331541dc009ef6ee352fe0744d5d6cad
"use strict";

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactLoaderSpinner = _interopRequireDefault(require("react-loader-spinner"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/MToolLoader/index.js";
const loaderStyle = {
  width: '100%',
  height: '100%',
  background: 'white',
  position: 'absolute',
  top: 0,
  left: 0,
  opacity: 0.9,
  zIndex: 100,
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  flexDirection: 'column'
};
const loaderTextStyle = {
  width: '25%',
  marginLeft: '280px',
  top: '100px',
  left: '40%',
  fontSize: '18px',
  // zIndex: 100,
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center'
};

const MToolLoader = props => {
  return _react.default.createElement("div", {
    style: loaderStyle,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60
    },
    __self: void 0
  }, _react.default.createElement("div", {
    style: {
      marginLeft: '280px'
    },
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61
    },
    __self: void 0
  }, _react.default.createElement(_reactLoaderSpinner.default, {
    type: "Bars",
    color: "#788595",
    marginTop: "100px",
    height: "50",
    width: "50",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62
    },
    __self: void 0
  })), _react.default.createElement("h", {
    style: loaderTextStyle,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70
    },
    __self: void 0
  }, props.text));
};

MToolLoader.propTypes = {
  text: _propTypes.default.string.isRequired
};
var _default = MToolLoader;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImxvYWRlclN0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJiYWNrZ3JvdW5kIiwicG9zaXRpb24iLCJ0b3AiLCJsZWZ0Iiwib3BhY2l0eSIsInpJbmRleCIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJmbGV4RGlyZWN0aW9uIiwibG9hZGVyVGV4dFN0eWxlIiwibWFyZ2luTGVmdCIsImZvbnRTaXplIiwiTVRvb2xMb2FkZXIiLCJwcm9wcyIsInRleHQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUEwQkE7O0FBQ0E7O0FBQ0E7OztBQUVBLE1BQU1BLFdBQVcsR0FBRztBQUNsQkMsRUFBQUEsS0FBSyxFQUFFLE1BRFc7QUFFbEJDLEVBQUFBLE1BQU0sRUFBRSxNQUZVO0FBR2xCQyxFQUFBQSxVQUFVLEVBQUUsT0FITTtBQUlsQkMsRUFBQUEsUUFBUSxFQUFFLFVBSlE7QUFLbEJDLEVBQUFBLEdBQUcsRUFBRSxDQUxhO0FBTWxCQyxFQUFBQSxJQUFJLEVBQUUsQ0FOWTtBQU9sQkMsRUFBQUEsT0FBTyxFQUFFLEdBUFM7QUFRbEJDLEVBQUFBLE1BQU0sRUFBRSxHQVJVO0FBU2xCQyxFQUFBQSxPQUFPLEVBQUUsTUFUUztBQVVsQkMsRUFBQUEsVUFBVSxFQUFFLFFBVk07QUFXbEJDLEVBQUFBLGNBQWMsRUFBRSxRQVhFO0FBWWxCQyxFQUFBQSxhQUFhLEVBQUU7QUFaRyxDQUFwQjtBQWVBLE1BQU1DLGVBQWUsR0FBRztBQUN0QlosRUFBQUEsS0FBSyxFQUFFLEtBRGU7QUFFdEJhLEVBQUFBLFVBQVUsRUFBRSxPQUZVO0FBR3RCVCxFQUFBQSxHQUFHLEVBQUUsT0FIaUI7QUFJdEJDLEVBQUFBLElBQUksRUFBRSxLQUpnQjtBQUt0QlMsRUFBQUEsUUFBUSxFQUFFLE1BTFk7QUFNdEI7QUFDQU4sRUFBQUEsT0FBTyxFQUFFLE1BUGE7QUFRdEJDLEVBQUFBLFVBQVUsRUFBRSxRQVJVO0FBU3RCQyxFQUFBQSxjQUFjLEVBQUU7QUFUTSxDQUF4Qjs7QUFZQSxNQUFNSyxXQUFXLEdBQUdDLEtBQUssSUFBSTtBQUMzQixTQUNFO0FBQUssSUFBQSxLQUFLLEVBQUVqQixXQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0U7QUFBSyxJQUFBLEtBQUssRUFBRTtBQUFFYyxNQUFBQSxVQUFVLEVBQUU7QUFBZCxLQUFaO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQ0UsNkJBQUMsMkJBQUQ7QUFDRSxJQUFBLElBQUksRUFBQyxNQURQO0FBRUUsSUFBQSxLQUFLLEVBQUMsU0FGUjtBQUdFLElBQUEsU0FBUyxFQUFDLE9BSFo7QUFJRSxJQUFBLE1BQU0sRUFBQyxJQUpUO0FBS0UsSUFBQSxLQUFLLEVBQUMsSUFMUjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxJQURGLENBREYsRUFVRTtBQUFHLElBQUEsS0FBSyxFQUFFRCxlQUFWO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBQTRCSSxLQUFLLENBQUNDLElBQWxDLENBVkYsQ0FERjtBQWNELENBZkQ7O0FBaUJBRixXQUFXLENBQUNHLFNBQVosR0FBd0I7QUFDdEJELEVBQUFBLElBQUksRUFBRUUsbUJBQVVDLE1BQVYsQ0FBaUJDO0FBREQsQ0FBeEI7ZUFJZU4sVyIsInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgQ09QWVJJR0hUIChjKSAyMDE5IFNBTVNVTkcgRUxFQ1RST05JQ1MgQ08uLCBMVEQuICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgIEFMTCBSSUdIVFMgUkVTRVJWRUQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCB0byBsaWNlbnNlZXMgb2YgU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gICAgICAgIC9cbi8gICBwcm9kdWN0cyB0byB1c2Ugb3IgYWJzdHJhY3QgdGhpcyBjb21wdXRlciBwcm9ncmFtIGZvciB0aGUgc29sZSBwdXJwb3NlIG9mICAgICAgICAgL1xuLyAgIGltcGxlbWVudGluZyBhIHByb2R1Y3QgYmFzZWQgb24gU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gcHJvZHVjdHMuICAgICAgICAgICAvXG4vICAgTm8gb3RoZXIgcmlnaHRzIHRvIHJlcHJvZHVjZSwgdXNlLCBvciBkaXNzZW1pbmF0ZSB0aGlzIGNvbXB1dGVyIHByb2dyYW0sICAgICAgICAgIC9cbi8gICB3aGV0aGVyIGluIHBhcnQgb3IgaW4gd2hvbGUsIGFyZSBncmFudGVkLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyBcbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIG1ha2VzIG5vIHJlcHJlc2VudGF0aW9uIG9yIHdhcnJhbnRpZXMgd2l0aCAgICAgICAgICAvXG4vICAgcmVzcGVjdCB0byB0aGUgcGVyZm9ybWFuY2Ugb2YgdGhpcyBjb21wdXRlciBwcm9ncmFtLCBhbmQgc3BlY2lmaWNhbGx5IGRpc2NsYWltcyAgIC9cbi8gICBhbnkgcmVzcG9uc2liaWxpdHkgZm9yIGFueSBkYW1hZ2VzLCBzcGVjaWFsIG9yIGNvbnNlcXVlbnRpYWwsIGNvbm5lY3RlZCAgICAgICAgICAgL1xuLyAgIHdpdGggdGhlIHVzZSBvZiB0aGlzIHByb2dyYW0uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuXG5cbkRFU0NSSVBUSU9OOiA8RmlsZSBkZXNjcmlwdGlvbj4gKlxuQE5BTUUgOiBpbmRleC5qc1xuQEFVVEhPUlM6IEpheSBIaXRlc2ggU2FuZ2hhdmkgXG5AVmVyc2lvbiA6IDEuMCAqXG5AUkVWSVNJT04gSElTVE9SWVxuWzAzLzA2LzIwMTldIFtKYXldIDogUHJvdG90eXBpbmcuLi4uLi4uLi4uLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiovXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IExvYWRlciBmcm9tICdyZWFjdC1sb2FkZXItc3Bpbm5lcic7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5jb25zdCBsb2FkZXJTdHlsZSA9IHtcbiAgd2lkdGg6ICcxMDAlJyxcbiAgaGVpZ2h0OiAnMTAwJScsXG4gIGJhY2tncm91bmQ6ICd3aGl0ZScsXG4gIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICB0b3A6IDAsXG4gIGxlZnQ6IDAsXG4gIG9wYWNpdHk6IDAuOSxcbiAgekluZGV4OiAxMDAsXG4gIGRpc3BsYXk6ICdmbGV4JyxcbiAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgZmxleERpcmVjdGlvbjogJ2NvbHVtbidcbn07XG5cbmNvbnN0IGxvYWRlclRleHRTdHlsZSA9IHtcbiAgd2lkdGg6ICcyNSUnLFxuICBtYXJnaW5MZWZ0OiAnMjgwcHgnLFxuICB0b3A6ICcxMDBweCcsXG4gIGxlZnQ6ICc0MCUnLFxuICBmb250U2l6ZTogJzE4cHgnLFxuICAvLyB6SW5kZXg6IDEwMCxcbiAgZGlzcGxheTogJ2ZsZXgnLFxuICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxufTtcblxuY29uc3QgTVRvb2xMb2FkZXIgPSBwcm9wcyA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBzdHlsZT17bG9hZGVyU3R5bGV9PlxuICAgICAgPGRpdiBzdHlsZT17eyBtYXJnaW5MZWZ0OiAnMjgwcHgnIH19PlxuICAgICAgICA8TG9hZGVyXG4gICAgICAgICAgdHlwZT1cIkJhcnNcIlxuICAgICAgICAgIGNvbG9yPVwiIzc4ODU5NVwiXG4gICAgICAgICAgbWFyZ2luVG9wPVwiMTAwcHhcIlxuICAgICAgICAgIGhlaWdodD1cIjUwXCJcbiAgICAgICAgICB3aWR0aD1cIjUwXCJcbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGggc3R5bGU9e2xvYWRlclRleHRTdHlsZX0+e3Byb3BzLnRleHR9PC9oPlxuICAgIDwvZGl2PlxuICApO1xufTtcblxuTVRvb2xMb2FkZXIucHJvcFR5cGVzID0ge1xuICB0ZXh0OiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbn1cblxuZXhwb3J0IGRlZmF1bHQgTVRvb2xMb2FkZXI7XG4iXX0=