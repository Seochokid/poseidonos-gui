3dec75d26b18cd234625c70689026e46
/* istanbul ignore next */
"use strict";

var cov_rr5e3p3ls = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/LogConfiguration/index.js";
  var hash = "12b2bd704316021713ad20141d319da94e2c4b2a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/LogConfiguration/index.js",
    statementMap: {
      "0": {
        start: {
          line: 35,
          column: 18
        },
        end: {
          line: 107,
          column: 3
        }
      },
      "1": {
        start: {
          line: 35,
          column: 41
        },
        end: {
          line: 107,
          column: 1
        }
      },
      "2": {
        start: {
          line: 109,
          column: 25
        },
        end: {
          line: 199,
          column: 1
        }
      },
      "3": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 31
        }
      },
      "4": {
        start: {
          line: 111,
          column: 32
        },
        end: {
          line: 111,
          column: 58
        }
      },
      "5": {
        start: {
          line: 112,
          column: 30
        },
        end: {
          line: 112,
          column: 56
        }
      },
      "6": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "7": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 198,
          column: 6
        }
      },
      "8": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 162,
          column: 59
        }
      },
      "9": {
        start: {
          line: 187,
          column: 28
        },
        end: {
          line: 187,
          column: 60
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 30
          }
        },
        loc: {
          start: {
            line: 35,
            column: 41
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 35
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 109,
            column: 25
          },
          end: {
            line: 109,
            column: 26
          }
        },
        loc: {
          start: {
            line: 109,
            column: 36
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 109
      },
      "2": {
        name: "downloadLogs",
        decl: {
          start: {
            line: 114,
            column: 13
          },
          end: {
            line: 114,
            column: 25
          }
        },
        loc: {
          start: {
            line: 114,
            column: 28
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 114
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 161,
            column: 33
          },
          end: {
            line: 161,
            column: 34
          }
        },
        loc: {
          start: {
            line: 161,
            column: 39
          },
          end: {
            line: 163,
            column: 25
          }
        },
        line: 161
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 186,
            column: 33
          },
          end: {
            line: 186,
            column: 34
          }
        },
        loc: {
          start: {
            line: 186,
            column: 39
          },
          end: {
            line: 188,
            column: 25
          }
        },
        line: 186
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "12b2bd704316021713ad20141d319da94e2c4b2a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _slicedToArray2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/slicedToArray"));

var
/* istanbul ignore next */
_react = _interopRequireDefault(require("react"));

var
/* istanbul ignore next */
_core = require("@material-ui/core");

var
/* istanbul ignore next */
_pickers = require("@material-ui/pickers");

var
/* istanbul ignore next */
_dateFns = _interopRequireDefault(require("@date-io/date-fns"));

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/LogConfiguration/index.js";
const useStyles =
/* istanbul ignore next */
(cov_rr5e3p3ls.s[0]++,
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_core.
/* istanbul ignore next */
makeStyles)(theme => {
  /* istanbul ignore next */
  cov_rr5e3p3ls.f[0]++;
  cov_rr5e3p3ls.s[1]++;
  return {
    paper: {
      width: '100%'
    },
    mainHeader: {
      textAlign: 'left',
      color: 'rgba(255, 255, 255, 0.87)',
      fontSize: '14px',
      width: '100%',
      marginLeft: '10px',
      lineHeight: '2'
    },
    title: {
      backgroundColor: '#788595',
      borderRadius: 0,
      justifyContent: 'center'
    },
    btn: {
      height: '1.8rem',
      fontSize: '12px',
      textTransform: 'none',
      marginRight: '10px',
      width: 125,
      marginBottom: theme.spacing(1)
    },
    btnContainer: {
      padding: theme.spacing(2)
    },
    ibofosSettingGrid: {
      marginTop: theme.spacing(3)
    },
    ibofosSettingInputField: {
      marginLeft: theme.spacing(2),
      fontFamily: '"Roboto", "Helvetica", "Arial", sans-serif',
      color: 'black',
      fontSize: '12px'
    },
    textField: {
      width: 190,
      padding: '0px',
      marginLeft: theme.spacing(2)
    },
    ibofosSettingButton: {
      marginTop: theme.spacing(2),
      marginLeft: theme.spacing(2),
      height: '1.8rem',
      fontSize: '12px',
      textTransform: 'none',
      marginRight: '10px',
      width: 70
    },
    gridItem: {
      [theme.breakpoints.down('sm')]: {
        justifyContent: 'center',
        display: 'flex'
      }
    },
    deletetextField: {
      marginLeft: theme.spacing(1),
      marginRight: theme.spacing(1),
      width: 190,
      marginTop: theme.spacing(2),
      color: 'black',
      background: 'rgb(245,245,245)',
      textDecoration: 'none',
      borderBottom: 'none',
      '&>input': {
        paddingLeft: '4px'
      }
    }
  };
}));

/* istanbul ignore next */
cov_rr5e3p3ls.s[2]++;

const LogConfiguration = props => {
  /* istanbul ignore next */
  cov_rr5e3p3ls.f[1]++;
  const classes =
  /* istanbul ignore next */
  (cov_rr5e3p3ls.s[3]++, useStyles());

  /* istanbul ignore next */
  const _ref = (cov_rr5e3p3ls.s[4]++,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  default.useState(new Date())),
        _ref2 = (0, _slicedToArray2.default)(_ref, 1),
        selectedStartDate = _ref2[0];

  /* istanbul ignore next */
  const _ref3 = (cov_rr5e3p3ls.s[5]++,
  /* istanbul ignore next */
  _react.
  /* istanbul ignore next */
  default.useState(new Date())),
        _ref4 = (0, _slicedToArray2.default)(_ref3, 1),
        selectedEndDate = _ref4[0];

  function downloadLogs() {
    /* istanbul ignore next */
    cov_rr5e3p3ls.f[2]++;
    cov_rr5e3p3ls.s[6]++;
    props.downloadLogs({
      start_date: selectedStartDate,
      end_date: selectedEndDate
    });
  }

  /* istanbul ignore next */
  cov_rr5e3p3ls.s[7]++;
  return (
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Paper,
    /* istanbul ignore next */
    {
      className: classes.paper,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 123
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Grid,
    /* istanbul ignore next */
    {
      xs: 12,
      className: classes.title,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 124
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Typography,
    /* istanbul ignore next */
    {
      className: classes.mainHeader,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 125
      },
      __self: void 0
    },
    /* istanbul ignore next */
    "Log Collection Configuration")),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Grid,
    /* istanbul ignore next */
    {
      xs: 12,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 127
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _pickers.
    /* istanbul ignore next */
    MuiPickersUtilsProvider,
    /* istanbul ignore next */
    {
      utils:
      /* istanbul ignore next */
      _dateFns.
      /* istanbul ignore next */
      default,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 128
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Grid,
    /* istanbul ignore next */
    {
      item:
      /* istanbul ignore next */
      true,
      container:
      /* istanbul ignore next */
      true,
      justify: "center",
      className: classes.btnContainer,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 129
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Button,
    /* istanbul ignore next */
    {
      onClick: downloadLogs,
      className: classes.btn,
      color: "primary",
      variant: "contained",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 130
      },
      __self: void 0
    },
    /* istanbul ignore next */
    "Download log")))),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Divider,
    /* istanbul ignore next */
    {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 136
      },
      __self: void 0
    }),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Grid,
    /* istanbul ignore next */
    {
      container:
      /* istanbul ignore next */
      true,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 137
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Grid,
    /* istanbul ignore next */
    {
      xs: 12,
      className: classes.ibofosSettingGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 138
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    InputLabel,
    /* istanbul ignore next */
    {
      className: classes.ibofosSettingInputField,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 139
      },
      __self: void 0
    },
    /* istanbul ignore next */
    "Set Poseidon OS Status Time Interval:"),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    TextField,
    /* istanbul ignore next */
    {
      type: "number",
      inputProps: {
        'data-testid': "ibofosSettingTextField",
        min: 0
      },
      name: "ibofostimeinterval",
      onChange: props.OnHandleChange,
      placeholder: "Time Interval",
      id: "standard-required",
      value: props.ibofostimeinterval,
      className: classes.textField,
      label: "In Sec",
      margin: "none" // onKeyDown={f => /[+-,.,#]$/.test(f.key) && f.preventDefault()}
      ,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 140
      },
      __self: void 0
    }),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Button,
    /* istanbul ignore next */
    {
      variant: "contained",
      color: "primary",
      className: classes.ibofosSettingButton,

      /* istanbul ignore next */
      "data-testid": "setTimeIntervalButton",
      onClick: () => {
        /* istanbul ignore next */
        cov_rr5e3p3ls.f[3]++;
        cov_rr5e3p3ls.s[8]++;
        props.applyIbofOSTimeInterval();
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 156
      },
      __self: void 0
    },
    /* istanbul ignore next */
    "Apply"),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    TextField,
    /* istanbul ignore next */
    {
      inputProps: {
        'data-testid': "ibofosSettingTextField",
        readOnly: true,
        className: classes.inputText
      },
      disabled:
      /* istanbul ignore next */
      true,
      value: props.ibofostimeintervalvalue,
      className: classes.deletetextField,
      type: "text",
      margin: "none",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 168
      },
      __self: void 0
    }),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Button,
    /* istanbul ignore next */
    {
      variant: "contained",
      color: "primary",
      type: "submit",
      className: classes.ibofosSettingButton,

      /* istanbul ignore next */
      "data-testid": "setTimeIntervalButton",
      onClick: () => {
        /* istanbul ignore next */
        cov_rr5e3p3ls.f[4]++;
        cov_rr5e3p3ls.s[9]++;
        props.deleteIbofOSTimeInterval();
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 180
      },
      __self: void 0
    },
    /* istanbul ignore next */
    "Delete"))))
  );
};

/* istanbul ignore next */
var _default = LogConfiguration;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,