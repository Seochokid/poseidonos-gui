{"version":3,"sources":["index.js"],"names":["styles","theme","multilineColor","color","root","flexGrow","Paper","marginTop","spacing","marginBottom","width","maxHeight","powerParentGrid","maxWidth","flexBasis","minHeight","powerOuterGrid","border","overflowY","overflowX","background","summaryOuterGrid","justifyContent","summaryInfoHeader","textAlign","fontSize","borderRadius","marginLeft","lineHeight","summaryCard","backgroundColor","ToggleCard","margin","textField","marginRight","radioGroup","display","flexDirection","PowerStateTable","Component","constructor","props","overrides","MuiSvgIcon","MuiTablePagination","menuItem","select","toolbar","palette","primary","main","secondary","interval","state","columns","title","field","editable","cellStyle","fontFamily","render","rowData","tableData","id","Status","Health","Health_OK_Icon","Health_NOT_OK_Icon","componentDidMount","fetchChassisFrontInfo","setInterval","componentWillUnmount","clearInterval","classes","event","handleChange","powermode","Check","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","Search","ThirdStateCheck","Remove","DetailPanel","Export","SaveAlt","Filter","FilterList","Add","Edit","EditIcon","Delete","TrashIcon","SortArrow","ArrowUpward","Clear","EditField","columnDef","required","value","length","onRowUpdate","newData","oldData","Promise","resolve","reject","PowerState","MinPowerState","MaxPowerState","openAlertBox","alertOpen","istypealert","alerttype","alerttitle","alertdescription","changeCurrentPowerState","interval_alert","alertStatus","chassis_front_list","actionsColumnIndex","selection","sorting","rowStyle","search","paginationType","loadingType","maxBodyHeight","headerStyle","height","paddingTop","paddingBottom","mapStateToProps","hardwareOverviewReducer","currentpowermode","hardwarePowerManagementReducer","alertManagementReducer","mapDispatchToProps","dispatch","setCurrentPowerMode","param","type","actionTypes","SAGA_HARDWARE_POWER_MANAGEMENT_SET_CURRENT_POWER_MODE","SAGA_HARDWARE_POWER_MANAGEMENT_CHANGE_CURRENT_POWER_STATE","alertParam","actionCreators","SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_FRONT_INFORMATION"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: Power State Table Component\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi\n@Version : 1.0 \n@REVISION HISTORY\n[03/11/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport MaterialTable,{MTableEditField} from 'material-table';\nimport { Paper , createMuiTheme, RadioGroup, Radio, FormControlLabel, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport Search from '@material-ui/icons/Search';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Add from '@material-ui/icons/Add';\nimport Check from '@material-ui/icons/Check';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Remove from '@material-ui/icons/Remove';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TrashIcon from '@material-ui/icons/Delete';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Clear from '@material-ui/icons/Clear';\nimport Health_OK_Icon from '../../../assets/images/Ok14x14.png'\nimport Health_NOT_OK_Icon from '../../../assets/images/Not-Ok14x14.png'\nimport * as actionTypes from '../../../store/actions/actionTypes';\nimport * as actionCreators from \"../../../store/actions/exportActionCreators\";\n\nconst styles = theme => ({\n    multilineColor: {\n        color: 'black'\n    },\n    root: {\n        flexGrow: 1,\n    },\n\n    Paper: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        width: '100%',\n        maxHeight: '100%',\n    },\n    powerParentGrid: {\n        maxWidth: '100%',\n        flexBasis: '100%',\n        minHeight: '100%',\n        marginTop: theme.spacing(2)\n    },\n\n    powerOuterGrid: {\n        border: '1px solid gray',\n        maxWidth: '100%',\n        flexBasis: '100%',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        background: '#fff',\n    },\n    summaryOuterGrid: {\n        border: '1px solid gray',\n        maxWidth: '100%',\n        minHeight: '140px',\n        maxHeight: '150px',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        justifyContent: 'left',\n        background: '#fff'\n    },\n\n    summaryInfoHeader: {\n        textAlign: 'left',\n        color: 'rgba(255, 255, 255, 0.87)',\n        fontSize: '14px',\n        borderRadius: '0px',\n        width: '100%',\n        marginLeft: '10px',\n        lineHeight: '2',\n    },\n\n    summaryCard: {\n        backgroundColor: '#788595',\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '30px',\n        flexBasis: '100%'\n    },\n    ToggleCard: {\n        margin: theme.spacing(2),\n        maxWidth: '100%',\n        flexBasis: '100%',\n    },\n    textField: {\n        color: \"black\",\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        width: 300,\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        textAlign: 'center',\n        marginTop: theme.spacing(1)\n    },\n\n});\n\n\nclass PowerStateTable extends Component {\n    constructor(props) {\n        super(props);\n        this.theme = createMuiTheme({\n            overrides: {\n                MuiSvgIcon: {\n                    //  stylesheet name\n                    root: {\n                        //  rule name\n                        color: '#808080',\n                    },\n                },\n                MuiTablePagination: {\n                    menuItem: {\n                        fontSize: \"12px\",\n                        minHeight: \"0px\"\n                    },\n                    select: {\n                        width: \"45px\"\n                    },\n                    toolbar: {\n                        maxHeight: '50px',\n                        minHeight: '20px'\n                    },\n                },\n            },\n\n            palette: {\n                primary: {\n                    main: '#4caf50',\n                },\n                secondary: {\n                    main: '#808080',\n                },\n            },\n        });\n        this.interval = null;\n        this.state = {\n            columns: [\n                {\n                    title: 'Drive Name',\n                    field: 'driveName',\n                    editable: 'never',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                        (\n                            <p>{`nvme${ rowData.tableData.id}`}</p>\n                        ),\n                },\n                {\n                    title: 'Drive Status',\n                    field: 'Status.Health',\n                    editable: 'never',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                        (\n                            <img src={(rowData.Status && rowData.Status.Health === 'OK') ? Health_OK_Icon : Health_NOT_OK_Icon} />\n                        ),\n                },\n                {\n                    title: 'Min Power State Value',\n                    field: 'MinPowerState',\n                    editable: 'never',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                },\n                {\n                    title: 'Max Power State Value',\n                    field: 'MaxPowerState',\n                    editable: 'never',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                },\n                {\n                    title: 'Current Power State',\n                    field: 'PowerState',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                },\n            ],\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchChassisFrontInfo();\n        this.interval = setInterval(() => {\n            this.props.fetchChassisFrontInfo();\n          },5000);\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.interval);\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.Paper}>\n                <Grid sm={6} xs={12} item container className={classes.powerParentGrid}>\n                    <Grid xs={12} item className={classes.powerOuterGrid}>\n                        <Grid className={classes.summaryCard}>\n                            <Typography className={classes.summaryInfoHeader}>\n                                Power Mode\n                            </Typography>\n                        </Grid>\n                        <Grid className={classes.ToggleCard}>\n                            <label>Select Power Mode: </label>\n                            <RadioGroup\n                                className={classes.radioGroup}\n                                name = \"powermode\"\n                                // value = {this.props.powermode}\n                                onChange={(event) => { this.props.handleChange(event) }}\n                                // onChange={(event) => { this.props.setCurrentPowerMode({\"newpowermode\":event.target.value}); }}\n                            >\n                                <FormControlLabel\n                                    value=\"Manual\"\n                                    checked={this.props.powermode === \"Manual\"}\n                                    control={<Radio />}\n                                    label=\"Manual\"\n                                />\n                                <FormControlLabel\n                                    value=\"Power Efficient\"\n                                    checked={this.props.powermode === \"Power Efficient\"}\n                                    control={<Radio />}\n                                    label=\"Power Efficient\"\n                                />\n\n                                <FormControlLabel\n                                    value=\"Performance\"\n                                    checked={this.props.powermode === \"Performance\"}\n                                    control={<Radio />}\n                                    label=\"Performance\"\n                                />\n                            </RadioGroup>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                {this.props.powermode === \"Manual\" ?\n                    (\n                        <Grid sm={6} xs={12} item container className={classes.powerParentGrid}>\n                            <Grid xs={12} item className={classes.powerOuterGrid}>\n\n                                <ThemeProvider theme={this.theme}>\n                                    <MaterialTable\n                                        icons={{\n                                            Check,\n                                            FirstPage,\n                                            LastPage,\n                                            NextPage: ChevronRight,\n                                            PreviousPage: ChevronLeft,\n                                            Search,\n                                            ThirdStateCheck: Remove,\n                                            DetailPanel: ChevronRight,\n                                            Export: SaveAlt,\n                                            Filter: FilterList,\n                                            Add,\n                                            Edit: EditIcon,\n                                            Delete: TrashIcon,\n                                            SortArrow: ArrowUpward,\n                                            Clear,\n                                        }}\n                                        components={{\n                                            EditField: props => {\n                                                clearInterval(this.interval);\n                                                if (props.columnDef.required && props.value.length === 0) {\n                                                    return (<MTableEditField {...props} error label=\"Required\" />);\n                                                  }\n                                                  return (<MTableEditField {...props} />);\n                                            }\n                                        }}\n                                        editable={{\n                                            onRowUpdate: (newData, oldData) =>\n                                                new Promise((resolve, reject) => {\n                                                    clearInterval(this.interval);\n                                                    clearInterval(this.interval);\n                                                    if (newData.PowerState < oldData.MinPowerState || newData.PowerState > oldData.MaxPowerState) {\n                                                        this.props.openAlertBox({\n                                                            alertOpen: true,\n                                                            istypealert: true,\n                                                            alerttype: 'alert',\n                                                            alerttitle: 'Change Power State',\n                                                            alertdescription: 'Power State Value is out of range',\n                                                        });\n                                                        this.interval = setInterval(() => {\n                                                            this.props.fetchChassisFrontInfo();\n                                                        }, 5000);\n                                                    }\n                                                    else if (newData.PowerState === oldData.PowerState) {\n                                                        this.props.openAlertBox({\n                                                            alertOpen: true,\n                                                            istypealert: true,\n                                                            alerttype: 'info',\n                                                            alerttitle: 'Change Power State',\n                                                            alertdescription: `Already in Power State ${ oldData.PowerState}`,\n                                                        });\n                                                    }\n                                                    else if (newData.PowerState >= oldData.MinPowerState && newData.PowerState <= oldData.MaxPowerState) {\n                                                        this.props.changeCurrentPowerState(newData);\n                                                        const interval_alert = setInterval(() => {\n                                                            if (this.props.alertStatus == true) {\n                                                                clearInterval(interval_alert);\n                                                            }\n                                                        }, 1000);\n                                                    }\n                                                    this.interval = setInterval(() => {\n                                                        this.props.fetchChassisFrontInfo();\n                                                    }, 5000);\n                                                    resolve();        \n                                                }),\n                                        }}\n                                        columns={this.state.columns}\n                                        data={this.props.chassis_front_list} \n                                        options={{\n                                            actionsColumnIndex: -1,\n                                            selection: false,\n                                            sorting: true,\n                                            toolbar: false,\n                                            rowStyle: {\n                                                fontSize: '4px',\n                                            },\n                                            search: false,\n                                            paginationType: 'normal',\n                                            loadingType: 'linear',\n                                            maxBodyHeight: '260px',\n                                            headerStyle: {\n                                                backgroundColor: '#788595',\n                                                color: 'rgba(255, 255, 255, 0.87)',\n                                                fontSize: '14px',\n                                                height: '10%',\n                                                paddingTop: '2px',\n                                                paddingBottom: '2px',\n                                            },\n                                        }}\n\n                                    />\n                                </ThemeProvider>\n                            </Grid>\n\n                        </Grid>\n                    )\n                    : null}\n\n            </Paper>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        chassis_front_list: state.hardwareOverviewReducer.chassis_front_list,\n        currentpowermode:state.hardwarePowerManagementReducer.currentpowermode, \n        alertStatus: state.alertManagementReducer.alertOpen\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentPowerMode:(param) => dispatch({ type: actionTypes.SAGA_HARDWARE_POWER_MANAGEMENT_SET_CURRENT_POWER_MODE,param }),\n        changeCurrentPowerState:(param) => dispatch({ type: actionTypes.SAGA_HARDWARE_POWER_MANAGEMENT_CHANGE_CURRENT_POWER_STATE,param }),\n        openAlertBox: (alertParam) => dispatch(actionCreators.openAlertBox(alertParam)),\n        fetchChassisFrontInfo: (param) => dispatch({ type: actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_FRONT_INFORMATION, param }),\n    };\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(((PowerStateTable))));"]}