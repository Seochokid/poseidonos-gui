{"version":3,"sources":["logManagementSaga.js"],"names":["getIbofOsLogs","response","call","axios","get","Date","now","headers","Accept","localStorage","getItem","result","data","logList","forEach","log","push","put","actionCreators","error","setLiveLogsDb","action","post","payload","setLiveLogs","getLiveLogsDb","logManagementWatcher","takeEvery","actionTypes","SAGA_GET_IBOFOS_LOGS","SAGA_SET_LIVE_LOGS_DB","SAGA_GET_LIVE_LOGS_DB"],"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: <Contains Generator Functions for Configuration container> *\n@NAME : logManagementSaga.js\n@AUTHORS: Palak Kapoor \n@Version : 1.0 *\n@REVISION HISTORY\n[08/22/2019] [Palak] : Prototyping..........////////////////////\n*/\n\nimport axios from 'axios';\nimport { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actionTypes from '../store/actions/actionTypes';\nimport * as actionCreators from '../store/actions/exportActionCreators';\n\nexport function* getIbofOsLogs() {\n  try {\n    const response = yield call([axios, axios.get], `/api/v1.0/get_Ibof_OS_Logs/?ts=${Date.now()}`, {\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'x-access-token': localStorage.getItem('token'),\n      }\n  });\n\n    const result = response.data;\n    if (result) {\n      const logList = [];\n      result.forEach(log => {\n        logList.push({\n          ...log,\n        });\n      });\n      yield put(actionCreators.getIbofOsLogs(logList));\n    }\n  } catch (error) {\n    //  console.log(error);\n  }\n}\n\nexport function* setLiveLogsDb(action) {\n  \n  try {\n     yield call(\n      [axios, axios.post],\n      '/api/v1.0/set_live_logs/',\n      {\"liveLogs\":action.payload}, {\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'x-access-token': localStorage.getItem('token'),\n        }\n    }\n    );\n    yield put(actionCreators.setLiveLogs(action.payload));\n  } catch (error) {\n    yield put(actionCreators.setLiveLogs(action.payload));\n  }\n}\n\nexport function* getLiveLogsDb() {\n  try {\n    const response = yield call([axios, axios.get], `/api/v1.0/get_live_logs/?ts=${Date.now()}`, {\n      headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'x-access-token': localStorage.getItem('token'),\n      }\n  });\n\n    const result = response.data;\n    if (result) {\n      yield put(actionCreators.setLiveLogs(result));\n    }\n  } catch (error) {\n     // console.log(error);\n  }\n}\n\n\n\nexport function* logManagementWatcher() {\n    yield takeEvery(actionTypes.SAGA_GET_IBOFOS_LOGS, getIbofOsLogs);\n    yield takeEvery(actionTypes.SAGA_SET_LIVE_LOGS_DB, setLiveLogsDb);\n    yield takeEvery(actionTypes.SAGA_GET_LIVE_LOGS_DB, getLiveLogsDb);\n  }\n  \n"]}