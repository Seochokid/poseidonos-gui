740fb2a31ed01f7ba8fef366ad4112a8
/* istanbul ignore next */
"use strict";

var cov_cw7ik5wja = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/utils/format-bytes/index.js";
  var hash = "2e1bf414dd52b57d28ff994ee2b3ebba2091ee21";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/utils/format-bytes/index.js",
    statementMap: {
      "0": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "1": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "2": {
        start: {
          line: 29,
          column: 19
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "3": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 16
        }
      },
      "4": {
        start: {
          line: 32,
          column: 13
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "5": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 73
        }
      },
      "6": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 53
        }
      },
      "7": {
        start: {
          line: 37,
          column: 2
        },
        end: {
          line: 37,
          column: 67
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 21
          }
        },
        loc: {
          start: {
            line: 28,
            column: 45
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 28
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 28
          },
          end: {
            line: 28,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 36
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 36
          }
        }, {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 36
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 13
          },
          end: {
            line: 32,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 32,
            column: 29
          }
        }, {
          start: {
            line: 32,
            column: 32
          },
          end: {
            line: 32,
            column: 40
          }
        }],
        line: 32
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "2e1bf414dd52b57d28ff994ee2b3ebba2091ee21"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
cov_cw7ik5wja.s[0]++;

/* -------------------------------------------------------------------------------------/
                                                                                    /
/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /
/                          ALL RIGHTS RESERVED                                        /
/                                                                                     /
/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /
/   products to use or abstract this computer program for the sole purpose of         /
/   implementing a product based on Samsung Electronics Co., Ltd. products.           /
/   No other rights to reproduce, use, or disseminate this computer program,          /
/   whether in part or in whole, are granted.                                         / 
/                                                                                     /
/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /
/   respect to the performance of this computer program, and specifically disclaims   /
/   any responsibility for any damages, special or consequential, connected           /
/   with the use of this program.                                                     /
/                                                                                     /
/-------------------------------------------------------------------------------------/


DESCRIPTION: <File description> *
@NAME : index.js
@AUTHORS: Jay Hitesh Sanghavi 
@Version : 1.0 *
@REVISION HISTORY
[03/06/2019] [Jay] : Prototyping..........////////////////////
*/
const formatBytes = (bytes, decimals =
/* istanbul ignore next */
(cov_cw7ik5wja.b[0][0]++, 2)) => {
  /* istanbul ignore next */
  cov_cw7ik5wja.f[0]++;
  cov_cw7ik5wja.s[1]++;

  if (bytes === 0) {
    /* istanbul ignore next */
    cov_cw7ik5wja.b[1][0]++;
    cov_cw7ik5wja.s[2]++;
    return '0 Bytes';
  } else
  /* istanbul ignore next */
  {
    cov_cw7ik5wja.b[1][1]++;
  }

  const k =
  /* istanbul ignore next */
  (cov_cw7ik5wja.s[3]++, 1024);
  const dm =
  /* istanbul ignore next */
  (cov_cw7ik5wja.s[4]++, decimals < 0 ?
  /* istanbul ignore next */
  (cov_cw7ik5wja.b[2][0]++, 0) :
  /* istanbul ignore next */
  (cov_cw7ik5wja.b[2][1]++, decimals));
  const sizes =
  /* istanbul ignore next */
  (cov_cw7ik5wja.s[5]++, ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']);
  const i =
  /* istanbul ignore next */
  (cov_cw7ik5wja.s[6]++, Math.floor(Math.log(bytes) / Math.log(k)));

  /* istanbul ignore next */
  cov_cw7ik5wja.s[7]++;
  return `${parseFloat((bytes / k ** i).toFixed(dm))} ${sizes[i]}`;
};

/* istanbul ignore next */
var _default = formatBytes;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZvcm1hdEJ5dGVzIiwiYnl0ZXMiLCJkZWNpbWFscyIsImsiLCJkbSIsInNpemVzIiwiaSIsIk1hdGgiLCJmbG9vciIsImxvZyIsInBhcnNlRmxvYXQiLCJ0b0ZpeGVkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEsTUFBTUEsV0FBVyxHQUFHLENBQUNDLEtBQUQsRUFBUUMsUUFBUTtBQUFBO0FBQUEsMEJBQUcsQ0FBSCxDQUFoQixLQUF5QjtBQUFBO0FBQUE7QUFBQTs7QUFDM0MsTUFBSUQsS0FBSyxLQUFLLENBQWQsRUFBaUI7QUFBQTtBQUFBO0FBQUE7QUFBQSxXQUFPLFNBQVA7QUFBaUIsR0FBbEM7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQSxRQUFNRSxDQUFDO0FBQUE7QUFBQSx5QkFBRyxJQUFILENBQVA7QUFDQSxRQUFNQyxFQUFFO0FBQUE7QUFBQSx5QkFBR0YsUUFBUSxHQUFHLENBQVg7QUFBQTtBQUFBLDRCQUFlLENBQWY7QUFBQTtBQUFBLDRCQUFtQkEsUUFBbkIsQ0FBSCxDQUFSO0FBQ0EsUUFBTUcsS0FBSztBQUFBO0FBQUEseUJBQUcsQ0FBQyxPQUFELEVBQVUsSUFBVixFQUFnQixJQUFoQixFQUFzQixJQUF0QixFQUE0QixJQUE1QixFQUFrQyxJQUFsQyxFQUF3QyxJQUF4QyxFQUE4QyxJQUE5QyxFQUFvRCxJQUFwRCxDQUFILENBQVg7QUFFQSxRQUFNQyxDQUFDO0FBQUE7QUFBQSx5QkFBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsR0FBTCxDQUFTUixLQUFULElBQWtCTSxJQUFJLENBQUNFLEdBQUwsQ0FBU04sQ0FBVCxDQUE3QixDQUFILENBQVA7O0FBUDJDO0FBQUE7QUFTM0MsU0FBUSxHQUFFTyxVQUFVLENBQUMsQ0FBQ1QsS0FBSyxHQUFHRSxDQUFDLElBQUlHLENBQWQsRUFBaUJLLE9BQWpCLENBQXlCUCxFQUF6QixDQUFELENBQStCLElBQUdDLEtBQUssQ0FBQ0MsQ0FBRCxDQUFJLEVBQS9EO0FBQ0QsQ0FWRDs7O2VBWWVOLFciLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgIENPUFlSSUdIVCAoYykgMjAxOSBTQU1TVU5HIEVMRUNUUk9OSUNTIENPLiwgTFRELiAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICBBTEwgUklHSFRTIFJFU0VSVkVEICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQgdG8gbGljZW5zZWVzIG9mIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuICAgICAgICAvXG4vICAgcHJvZHVjdHMgdG8gdXNlIG9yIGFic3RyYWN0IHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiAgICAgICAgIC9cbi8gICBpbXBsZW1lbnRpbmcgYSBwcm9kdWN0IGJhc2VkIG9uIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIHByb2R1Y3RzLiAgICAgICAgICAgL1xuLyAgIE5vIG90aGVyIHJpZ2h0cyB0byByZXByb2R1Y2UsIHVzZSwgb3IgZGlzc2VtaW5hdGUgdGhpcyBjb21wdXRlciBwcm9ncmFtLCAgICAgICAgICAvXG4vICAgd2hldGhlciBpbiBwYXJ0IG9yIGluIHdob2xlLCBhcmUgZ3JhbnRlZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8gXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBtYWtlcyBubyByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50aWVzIHdpdGggICAgICAgICAgL1xuLyAgIHJlc3BlY3QgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgYW5kIHNwZWNpZmljYWxseSBkaXNjbGFpbXMgICAvXG4vICAgYW55IHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgZGFtYWdlcywgc3BlY2lhbCBvciBjb25zZXF1ZW50aWFsLCBjb25uZWN0ZWQgICAgICAgICAgIC9cbi8gICB3aXRoIHRoZSB1c2Ugb2YgdGhpcyBwcm9ncmFtLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cblxuXG5ERVNDUklQVElPTjogPEZpbGUgZGVzY3JpcHRpb24+ICpcbkBOQU1FIDogaW5kZXguanNcbkBBVVRIT1JTOiBKYXkgSGl0ZXNoIFNhbmdoYXZpIFxuQFZlcnNpb24gOiAxLjAgKlxuQFJFVklTSU9OIEhJU1RPUllcblswMy8wNi8yMDE5XSBbSmF5XSA6IFByb3RvdHlwaW5nLi4uLi4uLi4uLi8vLy8vLy8vLy8vLy8vLy8vLy8vXG4qL1xuXG5jb25zdCBmb3JtYXRCeXRlcyA9IChieXRlcywgZGVjaW1hbHMgPSAyKSA9PiB7XG4gIGlmIChieXRlcyA9PT0gMCkgcmV0dXJuICcwIEJ5dGVzJztcblxuICBjb25zdCBrID0gMTAyNDtcbiAgY29uc3QgZG0gPSBkZWNpbWFscyA8IDAgPyAwIDogZGVjaW1hbHM7XG4gIGNvbnN0IHNpemVzID0gWydCeXRlcycsICdLQicsICdNQicsICdHQicsICdUQicsICdQQicsICdFQicsICdaQicsICdZQiddO1xuXG4gIGNvbnN0IGkgPSBNYXRoLmZsb29yKE1hdGgubG9nKGJ5dGVzKSAvIE1hdGgubG9nKGspKTtcblxuICByZXR1cm4gYCR7cGFyc2VGbG9hdCgoYnl0ZXMgLyBrICoqIGkpLnRvRml4ZWQoZG0pKX0gJHtzaXplc1tpXX1gO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZm9ybWF0Qnl0ZXM7XG4iXX0=