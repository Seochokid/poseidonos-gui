c3ac1dc9174db7fb41d507259ec8806e
/* istanbul ignore next */
"use strict";

var cov_yr7b8kb57 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/containers/ConfigurationSetting/Alert-Management/index.js";
  var hash = "e60ba2dbaadb68edac3680f71ca1ca3d69746fce";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/containers/ConfigurationSetting/Alert-Management/index.js",
    statementMap: {
      "0": {
        start: {
          line: 42,
          column: 15
        },
        end: {
          line: 55,
          column: 1
        }
      },
      "1": {
        start: {
          line: 43,
          column: 2
        },
        end: {
          line: 54,
          column: 4
        }
      },
      "2": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 17
        }
      },
      "3": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 63
        }
      },
      "4": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 53
        }
      },
      "5": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 49
        }
      },
      "6": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 53
        }
      },
      "7": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 53
        }
      },
      "8": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 53
        }
      },
      "9": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "10": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 65
        }
      },
      "11": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 71
        }
      },
      "12": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 63
        }
      },
      "13": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 57
        }
      },
      "14": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 73
        }
      },
      "15": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 47
        }
      },
      "16": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 47
        }
      },
      "17": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 61
        }
      },
      "18": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 57
        }
      },
      "19": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 65
        }
      },
      "20": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "21": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 148,
          column: 6
        }
      },
      "22": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 152,
          column: 33
        }
      },
      "23": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 153,
          column: 37
        }
      },
      "24": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 159,
          column: 7
        }
      },
      "25": {
        start: {
          line: 163,
          column: 28
        },
        end: {
          line: 163,
          column: 40
        }
      },
      "26": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 166,
          column: 7
        }
      },
      "27": {
        start: {
          line: 171,
          column: 19
        },
        end: {
          line: 171,
          column: 41
        }
      },
      "28": {
        start: {
          line: 172,
          column: 4
        },
        end: {
          line: 172,
          column: 37
        }
      },
      "29": {
        start: {
          line: 173,
          column: 4
        },
        end: {
          line: 176,
          column: 7
        }
      },
      "30": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 181,
          column: 36
        }
      },
      "31": {
        start: {
          line: 182,
          column: 19
        },
        end: {
          line: 182,
          column: 21
        }
      },
      "32": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 188,
          column: 7
        }
      },
      "33": {
        start: {
          line: 184,
          column: 6
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "34": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "35": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 199,
          column: 7
        }
      },
      "36": {
        start: {
          line: 204,
          column: 22
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "37": {
        start: {
          line: 207,
          column: 4
        },
        end: {
          line: 207,
          column: 43
        }
      },
      "38": {
        start: {
          line: 212,
          column: 19
        },
        end: {
          line: 212,
          column: 41
        }
      },
      "39": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 213,
          column: 37
        }
      },
      "40": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "41": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 222,
          column: 18
        }
      },
      "42": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 225,
          column: 7
        }
      },
      "43": {
        start: {
          line: 224,
          column: 6
        },
        end: {
          line: 224,
          column: 54
        }
      },
      "44": {
        start: {
          line: 224,
          column: 27
        },
        end: {
          line: 224,
          column: 54
        }
      },
      "45": {
        start: {
          line: 226,
          column: 4
        },
        end: {
          line: 235,
          column: 5
        }
      },
      "46": {
        start: {
          line: 227,
          column: 6
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "47": {
        start: {
          line: 234,
          column: 6
        },
        end: {
          line: 234,
          column: 13
        }
      },
      "48": {
        start: {
          line: 236,
          column: 17
        },
        end: {
          line: 238,
          column: 5
        }
      },
      "49": {
        start: {
          line: 239,
          column: 4
        },
        end: {
          line: 239,
          column: 38
        }
      },
      "50": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 240,
          column: 28
        }
      },
      "51": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 249,
          column: 7
        }
      },
      "52": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 259,
          column: 7
        }
      },
      "53": {
        start: {
          line: 264,
          column: 4
        },
        end: {
          line: 268,
          column: 7
        }
      },
      "54": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 45
        }
      },
      "55": {
        start: {
          line: 274,
          column: 19
        },
        end: {
          line: 274,
          column: 41
        }
      },
      "56": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 46
        }
      },
      "57": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 279,
          column: 7
        }
      },
      "58": {
        start: {
          line: 284,
          column: 18
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "59": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 288,
          column: 39
        }
      },
      "60": {
        start: {
          line: 296,
          column: 18
        },
        end: {
          line: 296,
          column: 48
        }
      },
      "61": {
        start: {
          line: 298,
          column: 20
        },
        end: {
          line: 298,
          column: 53
        }
      },
      "62": {
        start: {
          line: 299,
          column: 4
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "63": {
        start: {
          line: 300,
          column: 6
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "64": {
        start: {
          line: 307,
          column: 6
        },
        end: {
          line: 307,
          column: 13
        }
      },
      "65": {
        start: {
          line: 309,
          column: 4
        },
        end: {
          line: 326,
          column: 5
        }
      },
      "66": {
        start: {
          line: 317,
          column: 6
        },
        end: {
          line: 324,
          column: 9
        }
      },
      "67": {
        start: {
          line: 325,
          column: 6
        },
        end: {
          line: 325,
          column: 13
        }
      },
      "68": {
        start: {
          line: 327,
          column: 20
        },
        end: {
          line: 327,
          column: 22
        }
      },
      "69": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 343,
          column: 7
        }
      },
      "70": {
        start: {
          line: 329,
          column: 6
        },
        end: {
          line: 342,
          column: 8
        }
      },
      "71": {
        start: {
          line: 332,
          column: 10
        },
        end: {
          line: 340,
          column: 12
        }
      },
      "72": {
        start: {
          line: 335,
          column: 14
        },
        end: {
          line: 338,
          column: 15
        }
      },
      "73": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 337,
          column: 60
        }
      },
      "74": {
        start: {
          line: 336,
          column: 38
        },
        end: {
          line: 336,
          column: 59
        }
      },
      "75": {
        start: {
          line: 337,
          column: 21
        },
        end: {
          line: 337,
          column: 60
        }
      },
      "76": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 347,
          column: 7
        }
      },
      "77": {
        start: {
          line: 348,
          column: 21
        },
        end: {
          line: 348,
          column: 60
        }
      },
      "78": {
        start: {
          line: 349,
          column: 1
        },
        end: {
          line: 350,
          column: 25
        }
      },
      "79": {
        start: {
          line: 350,
          column: 3
        },
        end: {
          line: 350,
          column: 25
        }
      },
      "80": {
        start: {
          line: 351,
          column: 24
        },
        end: {
          line: 360,
          column: 5
        }
      },
      "81": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 361,
          column: 45
        }
      },
      "82": {
        start: {
          line: 362,
          column: 4
        },
        end: {
          line: 369,
          column: 7
        }
      },
      "83": {
        start: {
          line: 370,
          column: 4
        },
        end: {
          line: 370,
          column: 28
        }
      },
      "84": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 382,
          column: 6
        }
      },
      "85": {
        start: {
          line: 386,
          column: 4
        },
        end: {
          line: 388,
          column: 7
        }
      },
      "86": {
        start: {
          line: 392,
          column: 4
        },
        end: {
          line: 396,
          column: 5
        }
      },
      "87": {
        start: {
          line: 393,
          column: 6
        },
        end: {
          line: 393,
          column: 26
        }
      },
      "88": {
        start: {
          line: 394,
          column: 11
        },
        end: {
          line: 396,
          column: 5
        }
      },
      "89": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 395,
          column: 23
        }
      },
      "90": {
        start: {
          line: 400,
          column: 4
        },
        end: {
          line: 402,
          column: 7
        }
      },
      "91": {
        start: {
          line: 406,
          column: 24
        },
        end: {
          line: 406,
          column: 34
        }
      },
      "92": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 478,
          column: 6
        }
      },
      "93": {
        start: {
          line: 482,
          column: 24
        },
        end: {
          line: 493,
          column: 1
        }
      },
      "94": {
        start: {
          line: 483,
          column: 2
        },
        end: {
          line: 492,
          column: 4
        }
      },
      "95": {
        start: {
          line: 494,
          column: 27
        },
        end: {
          line: 505,
          column: 1
        }
      },
      "96": {
        start: {
          line: 495,
          column: 2
        },
        end: {
          line: 504,
          column: 4
        }
      },
      "97": {
        start: {
          line: 496,
          column: 38
        },
        end: {
          line: 496,
          column: 91
        }
      },
      "98": {
        start: {
          line: 497,
          column: 34
        },
        end: {
          line: 497,
          column: 83
        }
      },
      "99": {
        start: {
          line: 498,
          column: 27
        },
        end: {
          line: 498,
          column: 93
        }
      },
      "100": {
        start: {
          line: 499,
          column: 31
        },
        end: {
          line: 499,
          column: 102
        }
      },
      "101": {
        start: {
          line: 500,
          column: 37
        },
        end: {
          line: 500,
          column: 116
        }
      },
      "102": {
        start: {
          line: 501,
          column: 40
        },
        end: {
          line: 501,
          column: 122
        }
      },
      "103": {
        start: {
          line: 502,
          column: 40
        },
        end: {
          line: 502,
          column: 122
        }
      },
      "104": {
        start: {
          line: 503,
          column: 39
        },
        end: {
          line: 503,
          column: 121
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 42,
            column: 15
          },
          end: {
            line: 42,
            column: 16
          }
        },
        loc: {
          start: {
            line: 42,
            column: 26
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 42
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 59,
            column: 2
          },
          end: {
            line: 59,
            column: 3
          }
        },
        loc: {
          start: {
            line: 59,
            column: 21
          },
          end: {
            line: 149,
            column: 3
          }
        },
        line: 59
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 151,
            column: 2
          },
          end: {
            line: 151,
            column: 3
          }
        },
        loc: {
          start: {
            line: 151,
            column: 22
          },
          end: {
            line: 154,
            column: 3
          }
        },
        line: 151
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 156,
            column: 2
          },
          end: {
            line: 156,
            column: 3
          }
        },
        loc: {
          start: {
            line: 156,
            column: 32
          },
          end: {
            line: 160,
            column: 3
          }
        },
        line: 156
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 162,
            column: 2
          },
          end: {
            line: 162,
            column: 3
          }
        },
        loc: {
          start: {
            line: 162,
            column: 24
          },
          end: {
            line: 167,
            column: 3
          }
        },
        line: 162
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 170,
            column: 2
          },
          end: {
            line: 170,
            column: 3
          }
        },
        loc: {
          start: {
            line: 170,
            column: 16
          },
          end: {
            line: 177,
            column: 3
          }
        },
        line: 170
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 180,
            column: 2
          },
          end: {
            line: 180,
            column: 3
          }
        },
        loc: {
          start: {
            line: 180,
            column: 25
          },
          end: {
            line: 193,
            column: 3
          }
        },
        line: 180
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 183,
            column: 30
          },
          end: {
            line: 183,
            column: 31
          }
        },
        loc: {
          start: {
            line: 183,
            column: 39
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 183
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 195,
            column: 2
          },
          end: {
            line: 195,
            column: 3
          }
        },
        loc: {
          start: {
            line: 195,
            column: 32
          },
          end: {
            line: 200,
            column: 3
          }
        },
        line: 195
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 203,
            column: 2
          },
          end: {
            line: 203,
            column: 3
          }
        },
        loc: {
          start: {
            line: 203,
            column: 23
          },
          end: {
            line: 208,
            column: 3
          }
        },
        line: 203
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 211,
            column: 2
          },
          end: {
            line: 211,
            column: 3
          }
        },
        loc: {
          start: {
            line: 211,
            column: 18
          },
          end: {
            line: 218,
            column: 3
          }
        },
        line: 211
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 221,
            column: 2
          },
          end: {
            line: 221,
            column: 3
          }
        },
        loc: {
          start: {
            line: 221,
            column: 17
          },
          end: {
            line: 241,
            column: 3
          }
        },
        line: 221
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 223,
            column: 30
          },
          end: {
            line: 223,
            column: 31
          }
        },
        loc: {
          start: {
            line: 223,
            column: 40
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 223
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 244,
            column: 2
          },
          end: {
            line: 244,
            column: 3
          }
        },
        loc: {
          start: {
            line: 244,
            column: 33
          },
          end: {
            line: 250,
            column: 3
          }
        },
        line: 244
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 253,
            column: 2
          },
          end: {
            line: 253,
            column: 3
          }
        },
        loc: {
          start: {
            line: 253,
            column: 57
          },
          end: {
            line: 260,
            column: 3
          }
        },
        line: 253
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 263,
            column: 2
          },
          end: {
            line: 263,
            column: 3
          }
        },
        loc: {
          start: {
            line: 263,
            column: 32
          },
          end: {
            line: 270,
            column: 3
          }
        },
        line: 263
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 273,
            column: 2
          },
          end: {
            line: 273,
            column: 3
          }
        },
        loc: {
          start: {
            line: 273,
            column: 25
          },
          end: {
            line: 280,
            column: 3
          }
        },
        line: 273
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 283,
            column: 2
          },
          end: {
            line: 283,
            column: 3
          }
        },
        loc: {
          start: {
            line: 283,
            column: 23
          },
          end: {
            line: 289,
            column: 3
          }
        },
        line: 283
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 292,
            column: 2
          },
          end: {
            line: 292,
            column: 3
          }
        },
        loc: {
          start: {
            line: 292,
            column: 14
          },
          end: {
            line: 371,
            column: 3
          }
        },
        line: 292
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 328,
            column: 33
          },
          end: {
            line: 328,
            column: 34
          }
        },
        loc: {
          start: {
            line: 328,
            column: 44
          },
          end: {
            line: 343,
            column: 5
          }
        },
        line: 328
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 331,
            column: 53
          },
          end: {
            line: 331,
            column: 54
          }
        },
        loc: {
          start: {
            line: 331,
            column: 69
          },
          end: {
            line: 341,
            column: 9
          }
        },
        line: 331
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 334,
            column: 54
          },
          end: {
            line: 334,
            column: 55
          }
        },
        loc: {
          start: {
            line: 334,
            column: 61
          },
          end: {
            line: 339,
            column: 13
          }
        },
        line: 334
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 373,
            column: 2
          },
          end: {
            line: 373,
            column: 3
          }
        },
        loc: {
          start: {
            line: 373,
            column: 27
          },
          end: {
            line: 383,
            column: 3
          }
        },
        line: 373
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 385,
            column: 2
          },
          end: {
            line: 385,
            column: 3
          }
        },
        loc: {
          start: {
            line: 385,
            column: 21
          },
          end: {
            line: 389,
            column: 3
          }
        },
        line: 385
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 391,
            column: 2
          },
          end: {
            line: 391,
            column: 3
          }
        },
        loc: {
          start: {
            line: 391,
            column: 19
          },
          end: {
            line: 397,
            column: 3
          }
        },
        line: 391
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 399,
            column: 2
          },
          end: {
            line: 399,
            column: 3
          }
        },
        loc: {
          start: {
            line: 399,
            column: 23
          },
          end: {
            line: 403,
            column: 3
          }
        },
        line: 399
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 405,
            column: 2
          },
          end: {
            line: 405,
            column: 3
          }
        },
        loc: {
          start: {
            line: 405,
            column: 11
          },
          end: {
            line: 479,
            column: 3
          }
        },
        line: 405
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 482,
            column: 24
          },
          end: {
            line: 482,
            column: 25
          }
        },
        loc: {
          start: {
            line: 482,
            column: 33
          },
          end: {
            line: 493,
            column: 1
          }
        },
        line: 482
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 494,
            column: 27
          },
          end: {
            line: 494,
            column: 28
          }
        },
        loc: {
          start: {
            line: 494,
            column: 39
          },
          end: {
            line: 505,
            column: 1
          }
        },
        line: 494
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 496,
            column: 19
          },
          end: {
            line: 496,
            column: 20
          }
        },
        loc: {
          start: {
            line: 496,
            column: 38
          },
          end: {
            line: 496,
            column: 91
          }
        },
        line: 496
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 497,
            column: 18
          },
          end: {
            line: 497,
            column: 19
          }
        },
        loc: {
          start: {
            line: 497,
            column: 34
          },
          end: {
            line: 497,
            column: 83
          }
        },
        line: 497
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 498,
            column: 21
          },
          end: {
            line: 498,
            column: 22
          }
        },
        loc: {
          start: {
            line: 498,
            column: 27
          },
          end: {
            line: 498,
            column: 93
          }
        },
        line: 498
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 499,
            column: 25
          },
          end: {
            line: 499,
            column: 26
          }
        },
        loc: {
          start: {
            line: 499,
            column: 31
          },
          end: {
            line: 499,
            column: 102
          }
        },
        line: 499
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 500,
            column: 22
          },
          end: {
            line: 500,
            column: 23
          }
        },
        loc: {
          start: {
            line: 500,
            column: 37
          },
          end: {
            line: 500,
            column: 116
          }
        },
        line: 500
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 501,
            column: 22
          },
          end: {
            line: 501,
            column: 23
          }
        },
        loc: {
          start: {
            line: 501,
            column: 40
          },
          end: {
            line: 501,
            column: 122
          }
        },
        line: 501
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 502,
            column: 22
          },
          end: {
            line: 502,
            column: 23
          }
        },
        loc: {
          start: {
            line: 502,
            column: 40
          },
          end: {
            line: 502,
            column: 122
          }
        },
        line: 502
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 503,
            column: 22
          },
          end: {
            line: 503,
            column: 23
          }
        },
        loc: {
          start: {
            line: 503,
            column: 39
          },
          end: {
            line: 503,
            column: 121
          }
        },
        line: 503
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 224,
            column: 6
          },
          end: {
            line: 224,
            column: 54
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 6
          },
          end: {
            line: 224,
            column: 54
          }
        }, {
          start: {
            line: 224,
            column: 6
          },
          end: {
            line: 224,
            column: 54
          }
        }],
        line: 224
      },
      "1": {
        loc: {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        }, {
          start: {
            line: 226,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        }],
        line: 226
      },
      "2": {
        loc: {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        }, {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        }],
        line: 299
      },
      "3": {
        loc: {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        }, {
          start: {
            line: 309,
            column: 4
          },
          end: {
            line: 326,
            column: 5
          }
        }],
        line: 309
      },
      "4": {
        loc: {
          start: {
            line: 310,
            column: 6
          },
          end: {
            line: 314,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 310,
            column: 6
          },
          end: {
            line: 310,
            column: 33
          }
        }, {
          start: {
            line: 311,
            column: 6
          },
          end: {
            line: 311,
            column: 40
          }
        }, {
          start: {
            line: 312,
            column: 6
          },
          end: {
            line: 312,
            column: 38
          }
        }, {
          start: {
            line: 313,
            column: 6
          },
          end: {
            line: 313,
            column: 34
          }
        }, {
          start: {
            line: 314,
            column: 6
          },
          end: {
            line: 314,
            column: 33
          }
        }],
        line: 310
      },
      "5": {
        loc: {
          start: {
            line: 335,
            column: 14
          },
          end: {
            line: 338,
            column: 15
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 335,
            column: 14
          },
          end: {
            line: 338,
            column: 15
          }
        }, {
          start: {
            line: 335,
            column: 14
          },
          end: {
            line: 338,
            column: 15
          }
        }],
        line: 335
      },
      "6": {
        loc: {
          start: {
            line: 336,
            column: 16
          },
          end: {
            line: 337,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 16
          },
          end: {
            line: 337,
            column: 60
          }
        }, {
          start: {
            line: 336,
            column: 16
          },
          end: {
            line: 337,
            column: 60
          }
        }],
        line: 336
      },
      "7": {
        loc: {
          start: {
            line: 349,
            column: 1
          },
          end: {
            line: 350,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 1
          },
          end: {
            line: 350,
            column: 25
          }
        }, {
          start: {
            line: 349,
            column: 1
          },
          end: {
            line: 350,
            column: 25
          }
        }],
        line: 349
      },
      "8": {
        loc: {
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        }, {
          start: {
            line: 392,
            column: 4
          },
          end: {
            line: 396,
            column: 5
          }
        }],
        line: 392
      },
      "9": {
        loc: {
          start: {
            line: 394,
            column: 11
          },
          end: {
            line: 396,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 394,
            column: 11
          },
          end: {
            line: 396,
            column: 5
          }
        }, {
          start: {
            line: 394,
            column: 11
          },
          end: {
            line: 396,
            column: 5
          }
        }],
        line: 394
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "e60ba2dbaadb68edac3680f71ca1ca3d69746fce"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));

var
/* istanbul ignore next */
_reactRedux = require("react-redux");

var
/* istanbul ignore next */
_Grid = _interopRequireDefault(require("@material-ui/core/Grid"));

var
/* istanbul ignore next */
_styles = require("@material-ui/core/styles");

var
/* istanbul ignore next */
_MuiThemeProvider = _interopRequireDefault(require("@material-ui/core/styles/MuiThemeProvider"));

var
/* istanbul ignore next */
_theme = require("../../../theme");

var
/* istanbul ignore next */
_AlertTable = _interopRequireDefault(require("../../../components/AlertManagementComponents/AlertTable"));

var
/* istanbul ignore next */
_AddNewAlerts = _interopRequireDefault(require("../../../components/AlertManagementComponents/AddNewAlerts"));

/* istanbul ignore next */
require("./Alert-Management.css");

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../../../store/actions/actionTypes"));

var
/* istanbul ignore next */
actionCreators = _interopRequireWildcard(require("../../../store/actions/exportActionCreators"));

var
/* istanbul ignore next */
_AlertFields = _interopRequireDefault(require("../../../components/AlertManagementComponents/AlertFields"));

var
/* istanbul ignore next */
_AlertTypes = _interopRequireDefault(require("../../../components/AlertManagementComponents/AlertTypes"));

var
/* istanbul ignore next */
_Dialog = _interopRequireDefault(require("../../../components/Dialog"));

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/containers/ConfigurationSetting/Alert-Management/index.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

cov_yr7b8kb57.s[0]++;

const styles = theme => {
  /* istanbul ignore next */
  cov_yr7b8kb57.f[0]++;
  cov_yr7b8kb57.s[1]++;
  return {
    AlertManagementContainer: {
      display: 'flex'
    },
    content: {
      flexGrow: 1,
      paddingTop: theme.spacing(2),
      width: '100%',
      boxSizing: 'border-box'
    },
    toolbar: theme.mixins.toolbar
  };
};

class AlertManagement extends
/* istanbul ignore next */
_react.
/* istanbul ignore next */
Component {
  constructor(props) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[1]++;
    cov_yr7b8kb57.s[2]++;
    super(props);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[3]++;
    this.toggleAlertStatus = this.toggleAlertStatus.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[4]++;
    this.selectalerts = this.selectalerts.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[5]++;
    this.editalerts = this.editalerts.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[6]++;
    this.deletealerts = this.deletealerts.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[7]++;
    this.updateAlerts = this.updateAlerts.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[8]++;
    this.cancelChange = this.cancelChange.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[9]++;
    this.selectAllalerts = this.selectAllalerts.bind(this); // this.onconditionchange = this.onconditionchange.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[10]++;
    this.selectAlertCluster = this.selectAlertCluster.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[11]++;
    this.selectAlertSubCluster = this.selectAlertSubCluster.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[12]++;
    this.alertTypeSelected = this.alertTypeSelected.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[13]++;
    this.onHandleChange = this.onHandleChange.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[14]++;
    this.onHandleDropdownChange = this.onHandleDropdownChange.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[15]++;
    this.addAlerts = this.addAlerts.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[16]++;
    this.openAlert = this.openAlert.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[17]++;
    this.handleAlertClose = this.handleAlertClose.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[18]++;
    this.triggerCommand = this.triggerCommand.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[19]++;
    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[20]++;
    this.updateAlertsState = this.updateAlertsState.bind(this);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[21]++;
    this.state = {
      conditions: ['Greater Than', 'Less Than', 'Equal To', 'Not Equal To', 'Equal To Or Greater', 'Equal To Or Less Than'],
      // For Alert Table and Add New Alerts
      // , 'Inside Range', 'Outside Range'  - TBD
      selectedAlertSubCluster: null,
      // For Alert Types
      radiolist: [// For Alert Fields
      [{
        name: 'cpu-usage',
        id: '1'
      }, {
        name: 'cpu-affinity',
        id: '2'
      }, {
        name: 'cpu-state',
        id: '3'
      }, {
        name: 'cpu-processor-usage',
        id: '4'
      }, {
        name: 'cpu-threads',
        id: '5'
      }, {
        name: 'cpu-memory',
        id: '6'
      }, {
        name: 'cpu-utilization',
        id: '7'
      }, {
        name: 'cpu-affinity2',
        id: '8'
      }], [{
        name: 'array-name',
        id: '1'
      }, {
        name: 'array-time',
        id: '2'
      }]],
      radioindex: 0,
      alertName: '',
      alertType: '',
      alertRadioButton: '',
      // For Alert Fields
      alertCondition: 'Greater Than',
      // For Add New Alerts
      alertRange: '',
      // For Add New Alerts
      description: '',
      // For Add New Alerts
      alertClusterName: '',
      // For Add New Alerts,
      mobileOpen: false
    };
  }

  componentDidMount() {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[2]++;
    cov_yr7b8kb57.s[22]++;
    this.props.fetchAlertsInfo();

    /* istanbul ignore next */
    cov_yr7b8kb57.s[23]++;
    this.props.fetchAlertsTypeInfo();
  }

  onHandleDropdownChange(event) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[3]++;
    cov_yr7b8kb57.s[24]++;
    this.setState({
      alertCondition: event.target.value
    });
  }

  onHandleChange(event) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[4]++;

    const _ref = (cov_yr7b8kb57.s[25]++, event.target),
          name = _ref.name,
          value = _ref.value;

    /* istanbul ignore next */
    cov_yr7b8kb57.s[26]++;
    this.setState({
      [name]: value
    });
  } // Edit Alert Condition, Alert Range and Description


  editalerts(i) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[5]++;
    const alerts =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[27]++, [...this.props.alerts]);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[28]++;
    alerts[i].edit = !alerts[i].edit;

    /* istanbul ignore next */
    cov_yr7b8kb57.s[29]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      alerts
    }));
  } // Select all Alerts from the table


  selectAllalerts(event) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[6]++;

    const _ref2 = (cov_yr7b8kb57.s[30]++, event.target),
          checked = _ref2.checked;

    const alerts =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[31]++, []);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[32]++;
    this.props.alerts.forEach(alert => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[7]++;
      cov_yr7b8kb57.s[33]++;
      alerts.push(
      /* istanbul ignore next */
      _objectSpread({}, alert, {
        selected: checked
      }));
    });

    /* istanbul ignore next */
    cov_yr7b8kb57.s[34]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      alerts
    }));
  }

  updateAlertsState(alertsData) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[8]++;
    cov_yr7b8kb57.s[35]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      alerts: alertsData
    }));
  } // update existing alerts with change in fields


  updateAlerts(alerts) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[9]++;
    const newalerts =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[36]++, _objectSpread({}, alerts));

    /* istanbul ignore next */
    cov_yr7b8kb57.s[37]++;
    this.props.updateAlertsInfo(newalerts);
  } // Cancel all the changes made


  cancelChange(i) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[10]++;
    const alerts =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[38]++, [...this.props.alerts]);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[39]++;
    alerts[i].edit = !alerts[i].edit;

    /* istanbul ignore next */
    cov_yr7b8kb57.s[40]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      alerts
    }));
  } // Delete selected alerts from backend


  deletealerts() {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[11]++;
    const ids =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[41]++, []);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[42]++;
    this.props.alerts.forEach(alerts => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[12]++;
      cov_yr7b8kb57.s[43]++;

      if (alerts.selected) {
        /* istanbul ignore next */
        cov_yr7b8kb57.b[0][0]++;
        cov_yr7b8kb57.s[44]++;
        ids.push(alerts.alertName);
      } else
      /* istanbul ignore next */
      {
        cov_yr7b8kb57.b[0][1]++;
      }
    });

    /* istanbul ignore next */
    cov_yr7b8kb57.s[45]++;

    if (ids.length <= 0) {
      /* istanbul ignore next */
      cov_yr7b8kb57.b[1][0]++;
      cov_yr7b8kb57.s[46]++;
      this.props.openAlertBox({
        alertOpen: true,
        istypealert: true,
        alerttype: 'alert',
        alerttitle: 'Delete Alert',
        alertdescription: 'Please select an alert to delete'
      });

      /* istanbul ignore next */
      cov_yr7b8kb57.s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_yr7b8kb57.b[1][1]++;
    }

    const data =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[48]++, {
      ids
    });

    /* istanbul ignore next */
    cov_yr7b8kb57.s[49]++;
    this.props.deleteAlertsInfo(data);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[50]++;
    this.handleAlertClose();
  } // API for selecting a alert cluster


  selectAlertCluster(cluster, i) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[13]++;
    cov_yr7b8kb57.s[51]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      alertClusterName: cluster.name,
      radioindex: i
    }));
  } // API for selecting a alert sub cluster


  selectAlertSubCluster(clusterName, alertSubCluster, i) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[14]++;
    cov_yr7b8kb57.s[52]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      selectedAlertSubCluster: alertSubCluster,
      alertClusterName: clusterName,
      radioindex: i
    }));
  } // API for selecting a particular alert type


  alertTypeSelected(type, i, j) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[15]++;
    cov_yr7b8kb57.s[53]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      radioindex: i,
      alertType: type.type
    }));

    /* istanbul ignore next */
    cov_yr7b8kb57.s[54]++;
    this.props.setAlertsInfo({
      type,
      i,
      j
    });
  } // Select Alerts from Table


  selectalerts(event, i) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[16]++;
    const alerts =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[55]++, [...this.props.alerts]);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[56]++;
    alerts[i].selected = event.target.checked;

    /* istanbul ignore next */
    cov_yr7b8kb57.s[57]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      alerts
    }));
  } // API to toggle alert name... Dont delete from the Mongo DB


  toggleAlertStatus(i) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[17]++;
    const alert =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[58]++, {
      alertName: this.props.alerts[i].alertName,
      status: !this.props.alerts[i].active
    });

    /* istanbul ignore next */
    cov_yr7b8kb57.s[59]++;
    this.props.toggleAlertsInfo(alert);
  } // Add new alerts in DB


  addAlerts() {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[18]++;
    // if (this.state.alertCondition == "Inside Range" || this.state.alertCondition == "Outside Range")
    //     var regex = /^[0-9-]+$/
    // else
    const regex =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[60]++, /\b(0?[1-9]|[1-9][0-9]|100)\b/); // /^[0-9]+$/
    // Validate TextBox value against the Regex.

    const isValid =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[61]++, regex.test(this.state.alertRange));

    /* istanbul ignore next */
    cov_yr7b8kb57.s[62]++;

    if (!isValid) {
      /* istanbul ignore next */
      cov_yr7b8kb57.b[2][0]++;
      cov_yr7b8kb57.s[63]++;
      this.props.openAlertBox({
        alertOpen: true,
        istypealert: true,
        alerttype: 'alert',
        alerttitle: 'Add Alert',
        alertdescription: 'Please specify a valid input'
      });

      /* istanbul ignore next */
      cov_yr7b8kb57.s[64]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_yr7b8kb57.b[2][1]++;
    }

    cov_yr7b8kb57.s[65]++;

    if (
    /* istanbul ignore next */
    (cov_yr7b8kb57.b[4][0]++, this.state.alertName === '') ||
    /* istanbul ignore next */
    (cov_yr7b8kb57.b[4][1]++, this.state.alertRadioButton === '') ||
    /* istanbul ignore next */
    (cov_yr7b8kb57.b[4][2]++, this.state.alertCondition === '') ||
    /* istanbul ignore next */
    (cov_yr7b8kb57.b[4][3]++, this.state.alertRange === '') ||
    /* istanbul ignore next */
    (cov_yr7b8kb57.b[4][4]++, this.state.alertType === '')) {
      /* istanbul ignore next */
      cov_yr7b8kb57.b[3][0]++;
      cov_yr7b8kb57.s[66]++;
      // alert("Please specify a valid input");
      this.props.openAlertBox({
        alertOpen: true,
        istypealert: true,
        alerttype: 'alert',
        // alerttitle:"Input Error",
        alerttitle: 'Add Alert',
        alertdescription: 'Please specify a valid input'
      });

      /* istanbul ignore next */
      cov_yr7b8kb57.s[67]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_yr7b8kb57.b[3][1]++;
    }

    let alertType =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[68]++, '');

    /* istanbul ignore next */
    cov_yr7b8kb57.s[69]++;
    this.props.alertClusters.map(cluster => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[19]++;
      cov_yr7b8kb57.s[70]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, cluster, {
          alertSubCluster: cluster.alertSubCluster.map(subcluster => {
            /* istanbul ignore next */
            cov_yr7b8kb57.f[20]++;
            cov_yr7b8kb57.s[71]++;
            return (
              /* istanbul ignore next */
              _objectSpread({}, subcluster, {
                alertTypes: subcluster.alertTypes.forEach(cip => {
                  /* istanbul ignore next */
                  cov_yr7b8kb57.f[21]++;
                  cov_yr7b8kb57.s[72]++;

                  if (cip.selected === true) {
                    /* istanbul ignore next */
                    cov_yr7b8kb57.b[5][0]++;
                    cov_yr7b8kb57.s[73]++;

                    if (alertType === '') {
                      /* istanbul ignore next */
                      cov_yr7b8kb57.b[6][0]++;
                      cov_yr7b8kb57.s[74]++;
                      alertType = cip.type;
                    } else {
                      /* istanbul ignore next */
                      cov_yr7b8kb57.b[6][1]++;
                      cov_yr7b8kb57.s[75]++;
                      alertType = `${alertType}|${cip.type}`;
                    }
                  } else
                  /* istanbul ignore next */
                  {
                    cov_yr7b8kb57.b[5][1]++;
                  }
                })
              })
            );
          })
        })
      );
    });

    /* istanbul ignore next */
    cov_yr7b8kb57.s[76]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      alertType
    }));
    let subClusterName =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[77]++, this.state.selectedAlertSubCluster.name);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[78]++;

    if (subClusterName === "cpu ") {
      /* istanbul ignore next */
      cov_yr7b8kb57.b[7][0]++;
      cov_yr7b8kb57.s[79]++;
      subClusterName = "cpu";
    } else
    /* istanbul ignore next */
    {
      cov_yr7b8kb57.b[7][1]++;
    }

    const addNewAlert =
    /* istanbul ignore next */
    (cov_yr7b8kb57.s[80]++, {
      alertName: this.state.alertName,
      alertField: this.state.alertRadioButton,
      alertCluster: this.state.alertClusterName,
      alertSubCluster: subClusterName,
      alertType: this.state.alertType,
      alertCondition: this.state.alertCondition,
      // For Add New Alerts
      alertRange: this.state.alertRange,
      // For Add New Alerts
      description: this.state.description // For Add New Alerts

    });

    /* istanbul ignore next */
    cov_yr7b8kb57.s[81]++;
    this.props.addNewAlertsInfo(addNewAlert);

    /* istanbul ignore next */
    cov_yr7b8kb57.s[82]++;
    this.setState({
      alertName: '',
      alertField: '',
      alertRadioButton: '',
      // For Alert Fields
      alertCondition: 'Greater Than',
      // For Add New Alerts
      alertRange: '',
      // For Add New Alerts
      description: '' // For Add New Alerts

    });

    /* istanbul ignore next */
    cov_yr7b8kb57.s[83]++;
    this.handleAlertClose();
  }

  openAlert(operationType) {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[22]++;
    cov_yr7b8kb57.s[84]++;
    this.props.openAlertBox({
      alertOpen: true,
      addDeleteSend: operationType,
      alerttype: 'delete',
      istypealert: false,
      alerttitle: `${operationType} Alert`,
      alertdescription: `Are you sure you want to ${operationType} the alert?`
    });
  }

  handleAlertClose() {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[23]++;
    cov_yr7b8kb57.s[85]++;
    this.props.openAlertBox({
      alertOpen: false
    });
  }

  triggerCommand() {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[24]++;
    cov_yr7b8kb57.s[86]++;

    if (this.props.addDeleteSend === 'Delete') {
      /* istanbul ignore next */
      cov_yr7b8kb57.b[8][0]++;
      cov_yr7b8kb57.s[87]++;
      this.deletealerts();
    } else {
      /* istanbul ignore next */
      cov_yr7b8kb57.b[8][1]++;
      cov_yr7b8kb57.s[88]++;

      if (this.props.addDeleteSend === 'Add') {
        /* istanbul ignore next */
        cov_yr7b8kb57.b[9][0]++;
        cov_yr7b8kb57.s[89]++;
        this.addAlerts();
      } else
      /* istanbul ignore next */
      {
        cov_yr7b8kb57.b[9][1]++;
      }
    }
  }

  handleDrawerToggle() {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[25]++;
    cov_yr7b8kb57.s[90]++;
    this.setState({
      mobileOpen: !this.state.mobileOpen
    });
  }

  render() {
    /* istanbul ignore next */
    cov_yr7b8kb57.f[26]++;

    const _ref3 = (cov_yr7b8kb57.s[91]++, this.props),
          classes = _ref3.classes;

    /* istanbul ignore next */
    cov_yr7b8kb57.s[92]++;
    return (
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _MuiThemeProvider.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        theme:
        /* istanbul ignore next */
        _theme.
        /* istanbul ignore next */
        PageTheme,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 408
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: classes.AlertManagementContainer,

        /* istanbul ignore next */
        "data-testid": "alertManagementTag",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 409
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      "main",
      /* istanbul ignore next */
      {
        className: classes.content,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 412
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        container:
        /* istanbul ignore next */
        true,
        spacing: 3,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 414
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _AlertTable.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        selectalerts: this.selectalerts,
        togglealertstatus: this.toggleAlertStatus,
        editalerts: this.editalerts,
        cancelChange: this.cancelChange,
        saveChange: this.updateAlerts,
        updateAlertsState: this.updateAlertsState,
        deletealerts: this.deletealerts,
        selectAllalerts: this.selectAllalerts,
        alerts: this.props.alerts,
        dropdownCondition: this.state.conditions,
        alertOpen: this.state.alertOpen_alertTable,
        alerttitle: this.state.alertboxtitle_alertTable,
        alertdescription: this.state.alertboxdescription_alertTable,
        triggerCommand: this.triggerCommand,
        openAlert: this.openAlert,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 415
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        spacing: 3,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 432
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _AlertTypes.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        selectAlertCluster: this.selectAlertCluster,
        selectAlertSubCluster: this.selectAlertSubCluster,
        alertClusterList: this.props.alertClusters,
        selectedAlertSubCluster: this.state.selectedAlertSubCluster,
        alertTypeSelected: this.alertTypeSelected,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 433
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _AlertFields.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        radiolist: this.state.radiolist,
        alertClusterList: this.props.alertClusters,
        alertRadioButton: this.state.alertRadioButton,
        onHandleChange: this.onHandleChange,
        radioindex: this.state.radioindex,
        alertClusterName: this.state.alertClusterName,
        selectedAlertSubCluster: this.state.selectedAlertSubCluster,
        alertType: this.state.alertType,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 441
        },
        __self: this
      })),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 452
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _AddNewAlerts.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        dropdownCondition: this.state.conditions,
        onHandleChange: this.onHandleChange,
        alertName: this.state.alertName,
        alertCondition: this.state.alertCondition,
        onHandleDropdownChange: this.onHandleDropdownChange,
        alertRadioButton: this.state.alertRadioButton,
        alertRange: this.state.alertRange,
        description: this.state.description // addAlerts={this.addAlerts}
        ,
        openAlert: this.openAlert,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 453
        },
        __self: this
      })),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Dialog.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        title: this.props.alerttitle,
        description: this.props.alertdescription,
        open: this.props.alertOpen,
        type: this.props.alerttype,
        handleClose: this.handleAlertClose,
        onConfirm: this.triggerCommand,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 466
        },
        __self: this
      })))))
    );
  }

}

/* istanbul ignore next */
cov_yr7b8kb57.s[93]++;

const mapStateToProps = state => {
  /* istanbul ignore next */
  cov_yr7b8kb57.f[27]++;
  cov_yr7b8kb57.s[94]++;
  return {
    alerts: state.alertManagementReducer.alerts,
    alertClusters: state.alertManagementReducer.alertClusters,
    alertOpen: state.alertManagementReducer.alertOpen,
    addDeleteSend: state.alertManagementReducer.addDeleteSend,
    alerttype: state.alertManagementReducer.alerttype,
    istypealert: state.alertManagementReducer.istypealert,
    alerttitle: state.alertManagementReducer.alerttitle,
    alertdescription: state.alertManagementReducer.alertdescription
  };
};

/* istanbul ignore next */
cov_yr7b8kb57.s[95]++;

const mapDispatchToProps = dispatch => {
  /* istanbul ignore next */
  cov_yr7b8kb57.f[28]++;
  cov_yr7b8kb57.s[96]++;
  return {
    setAlertsInfo: updatedAlerts => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[29]++;
      cov_yr7b8kb57.s[97]++;
      return dispatch(actionCreators.setAlertsInfo(updatedAlerts));
    },
    openAlertBox: alertParam => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[30]++;
      cov_yr7b8kb57.s[98]++;
      return dispatch(actionCreators.openAlertBox(alertParam));
    },
    fetchAlertsInfo: () => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[31]++;
      cov_yr7b8kb57.s[99]++;
      return dispatch({
        type: actionTypes.SAGA_ALERT_MANAGEMENT_FETCH_ALERTS
      });
    },
    fetchAlertsTypeInfo: () => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[32]++;
      cov_yr7b8kb57.s[100]++;
      return dispatch({
        type: actionTypes.SAGA_ALERT_MANAGEMENT_FETCH_ALERTS_TYPE
      });
    },
    updateAlertsInfo: newAlerts => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[33]++;
      cov_yr7b8kb57.s[101]++;
      return dispatch({
        type: actionTypes.SAGA_ALERT_MANAGEMENT_UPDATE_ALERTS,
        newAlerts
      });
    },
    deleteAlertsInfo: deleteAlerts => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[34]++;
      cov_yr7b8kb57.s[102]++;
      return dispatch({
        type: actionTypes.SAGA_ALERT_MANAGEMENT_DELETE_ALERTS,
        deleteAlerts
      });
    },
    toggleAlertsInfo: toggleAlerts => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[35]++;
      cov_yr7b8kb57.s[103]++;
      return dispatch({
        type: actionTypes.SAGA_ALERT_MANAGEMENT_TOGGLE_ALERTS,
        toggleAlerts
      });
    },
    addNewAlertsInfo: addNewAlert => {
      /* istanbul ignore next */
      cov_yr7b8kb57.f[36]++;
      cov_yr7b8kb57.s[104]++;
      return dispatch({
        type: actionTypes.SAGA_ALERT_MANAGEMENT_ADD_NEW_ALERTS,
        addNewAlert
      });
    }
  };
};

/* istanbul ignore next */
var _default =
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
withStyles)(styles)(
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_reactRedux.
/* istanbul ignore next */
connect)(mapStateToProps, mapDispatchToProps)(AlertManagement));

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,