{"version":3,"sources":["index.js"],"names":["styles","theme","root","flexGrow","overviewPaper","width","serviceRootGrid","serviceParentGrid","marginTop","spacing","maxWidth","flexBasis","serviceOuterGrid","border","overflowY","overflowX","minHeight","maxHeight","background","hardwareOuterGrid","serviceRowContainer","serviceInnerGrid","hardwareInnerGrid","serviceHeader","backgroundColor","color","paddingLeft","fontSize","height","img","marginLeft","marginRight","ServiceStatus","Component","constructor","props","componentDidMount","fetchSoftwareDetails","fetchHardwareDetails","fetchNetworkDetails","render","classes","software_health","length","Refresh_Icon","mgmt_service","Health_OK_Icon","Health_NOT_OK_Icon","data_service","hardware_health","power","fans","temperature","cpu","memory","network_health","mgmt_network","client_network","storage_fabric","mapStateToProps","state","hardwareHealthReducer","mapDispatchToProps","dispatch","type","actionTypes","SAGA_HARDWARE_HEALTH_FETCH_SOFTWARE_DETAILS","SAGA_HARDWARE_HEALTH_FETCH_HARDWARE_DETAILS","SAGA_HARDWARE_HEALTH_FETCH_NETWORK_DETAILS"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: Health Page Service Component\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi\n@Version : 1.0 \n@REVISION HISTORY\n[03/11/2019] [Jay] : Prototyping..........//////////////////// \n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport * as actionTypes from '../../../store/actions/actionTypes';\nimport Health_OK_Icon from '../../../assets/images/Ok14x14.png'\nimport Health_NOT_OK_Icon from '../../../assets/images/Not-Ok14x14.png'\nimport Refresh_Icon from '../../../assets/images/Refresh-14x14A.png'\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n\n    overviewPaper: {\n        width: '100%',\n    },\n    serviceRootGrid:{\n      \n    },\n    serviceParentGrid: {\n        marginTop: theme.spacing(0.5),\n        maxWidth:'100%',\n        flexBasis:'100%'\n    },\n    serviceOuterGrid: {\n        border: '1px solid gray',\n        maxWidth: '100%',\n        flexBasis: '100%',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        minHeight: '75px',\n        maxHeight: '100px',\n        background: '#fff',\n        marginTop:theme.spacing(2)\n    },\n    hardwareOuterGrid:{\n        border: '1px solid gray',\n        maxWidth: '100%',\n        flexBasis: '100%',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        minHeight: '100px',\n        maxHeight: '100px',\n        background: '#fff',\n        marginTop:theme.spacing(2)\n    },\n    serviceRowContainer:{\n        maxWidth: '100%',\n        flexBasis:'100%',\n    },\n    serviceInnerGrid: {\n        maxWidth: '50%',\n        flexBasis:'50%',\n        marginTop: theme.spacing(2),\n    },\n    hardwareInnerGrid: {\n        maxWidth: '33%',\n        flexBasis:'33%',\n        marginTop: theme.spacing(2),\n    },\n    serviceHeader: {\n        backgroundColor: '#788595',\n        color: 'white',\n        paddingLeft: '5px',\n        fontSize: '14px',\n        height: '24px',\n    },\n    img:{\n        marginLeft: theme.spacing(1),\n        marginRight:theme.spacing(1),\n    }\n});\n\nclass ServiceStatus extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.fetchSoftwareDetails();\n        this.props.fetchHardwareDetails();\n        this.props.fetchNetworkDetails();\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.overviewPaper}>\n                <Grid item container spacing={3} className={classes.serviceRootGrid}>\n                    <Grid sm={6} xs={12} item container className={classes.serviceParentGrid}>\n                        <Grid xs={12} item className={classes.serviceOuterGrid}>\n                            <Typography className={classes.serviceHeader} variant=\"h6\">Software </Typography>\n                            <Grid sm={6} xs={12} item container className={classes.serviceRowContainer}>\n                                <Grid sm={6} xs={12} item className={classes.serviceInnerGrid}>\n                                    <img title={(this.props.software_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.software_health.length === 0 ? Refresh_Icon:((this.props.software_health && this.props.software_health[0] && this.props.software_health[0].mgmt_service===\"OK\") ? Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>Mgmt Service</label>\n                                </Grid>\n                                <Grid sm={6} xs={12} item className={classes.serviceInnerGrid}>\n                                    <img title={(this.props.software_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.software_health.length === 0 ? Refresh_Icon:((this.props.software_health && this.props.software_health[0] && this.props.software_health[0].data_service===\"OK\") ? Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>Data Services</label>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n\n                        <Grid xs={12} item className={classes.hardwareOuterGrid}>\n                            <Typography className={classes.serviceHeader} variant=\"h6\">Hardware </Typography>\n                            <Grid sm={6} xs={12} item container className={classes.serviceRowContainer}>\n                                <Grid sm={6} xs={12} item className={classes.hardwareInnerGrid}>\n                                    <img title={(this.props.hardware_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.hardware_health.length === 0 ? Refresh_Icon:((this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].power === \"OK\") ?Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>Power Supplies</label>\n                                </Grid>\n                                <Grid sm={6} xs={12} item className={classes.hardwareInnerGrid}>\n                                    <img title={(this.props.hardware_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.hardware_health.length === 0 ? Refresh_Icon:((this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].fans === \"OK\") ? Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>Fans</label>\n                                </Grid>\n                                <Grid sm={6} xs={12} item className={classes.hardwareInnerGrid}>\n                                    <img title={(this.props.hardware_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.hardware_health.length === 0 ? Refresh_Icon:((this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].temperature===\"OK\") ?Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>Temperature Sensors</label>\n                                </Grid>\n                                <Grid sm={6} xs={12} item className={classes.hardwareInnerGrid}>\n                                    <img title={(this.props.hardware_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.hardware_health.length === 0 ? Refresh_Icon:((this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].cpu===\"OK\") ?Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>CPU</label>\n                                </Grid>\n                                <Grid sm={6} xs={12} item className={classes.hardwareInnerGrid}>\n                                    <img title={(this.props.hardware_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.hardware_health.length === 0 ? Refresh_Icon:((this.props.hardware_health && this.props.hardware_health[0] && this.props.hardware_health[0].memory===\"OK\") ?Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>Memory</label>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n\n                        <Grid xs={12} item className={classes.serviceOuterGrid}>\n                            <Typography className={classes.serviceHeader} variant=\"h6\">Network </Typography>\n                            <Grid sm={6} xs={12} item container className={classes.serviceRowContainer}>\n                                <Grid sm={6} xs={12} item className={classes.hardwareInnerGrid}>\n                                    <img title={(this.props.network_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.network_health.length === 0 ? Refresh_Icon:((this.props.network_health && this.props.network_health[0] && this.props.network_health[0].mgmt_network===\"OK\") ? Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>Management Network</label>\n                                </Grid>\n                                <Grid sm={6} xs={12} item className={classes.hardwareInnerGrid}>\n                                    <img title={(this.props.network_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.network_health.length === 0 ? Refresh_Icon:((this.props.network_health && this.props.network_health[0] && this.props.network_health[0].client_network===\"OK\") ? Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>Client Network</label>\n                                </Grid>\n                                <Grid sm={6} xs={12} item className={classes.hardwareInnerGrid}>\n                                    <img title={(this.props.network_health.length === 0 ? \"Refreshing..\": \"Health Status\")} src={(this.props.network_health.length === 0 ? Refresh_Icon:((this.props.network_health && this.props.network_health[0] && this.props.network_health[0].storage_fabric===\"OK\") ? Health_OK_Icon : Health_NOT_OK_Icon))} className={classes.img} />\n                                    <label>Storage Fabric 1</label>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Paper>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        software_health: state.hardwareHealthReducer.software_health,\n        hardware_health: state.hardwareHealthReducer.hardware_health,\n        network_health: state.hardwareHealthReducer.network_health,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchSoftwareDetails: () => dispatch({ type: actionTypes.SAGA_HARDWARE_HEALTH_FETCH_SOFTWARE_DETAILS }),\n        fetchHardwareDetails: () => dispatch({ type: actionTypes.SAGA_HARDWARE_HEALTH_FETCH_HARDWARE_DETAILS }),\n        fetchNetworkDetails: () => dispatch({ type: actionTypes.SAGA_HARDWARE_HEALTH_FETCH_NETWORK_DETAILS }),\n    };\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(((ServiceStatus))));"]}