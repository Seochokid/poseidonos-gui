{"version":3,"sources":["index.js"],"names":["styles","theme","root","flexGrow","overviewPaper","width","textField","color","marginLeft","spacing","marginRight","powerParentGrid","marginTop","powerOuterGrid","maxWidth","flexBasis","overflowY","overflowX","minHeight","background","powerInnerGrid","powerHeader","backgroundColor","paddingLeft","fontSize","height","label","submit","textTransform","PowerInformation","Component","constructor","props","componentDidMount","fetchPowerInfo","interval","setInterval","componentWillUnmount","clearInterval","render","classes","powerconsumption","readOnly","input","powercap","powerstatus","paddingBottom","openAlert","textAlign","mapStateToProps","state","hardwareOverviewReducer","mapDispatchToProps","dispatch","param","type","actionTypes","SAGA_HARDWARE_OVERVIEW_FETCH_POWER_INFORMATION"],"mappings":";;;;;;;;;;;AAyBA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADiB;AAKvBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,KAAK,EAAE;AADM,GALQ;AASvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAFH;AAGTC,IAAAA,WAAW,EAAET,KAAK,CAACQ,OAAN,CAAc,CAAd,CAHJ;AAITJ,IAAAA,KAAK,EAAE;AAJE,GATY;AAevBM,EAAAA,eAAe,EAAE;AACfC,IAAAA,SAAS,EAAEX,KAAK,CAACQ,OAAN,CAAc,GAAd;AADI,GAfM;AAkBvBI,EAAAA,cAAc,EAAE;AACd;AACAC,IAAAA,QAAQ,EAAE,MAFI;AAGdC,IAAAA,SAAS,EAAE,MAHG;AAIdC,IAAAA,SAAS,EAAE,MAJG;AAKdC,IAAAA,SAAS,EAAE,QALG;AAMdC,IAAAA,SAAS,EAAE,OANG;AAOd;AACAC,IAAAA,UAAU,EAAE;AARE,GAlBO;AA4BvBC,EAAAA,cAAc,EAAE;AACdN,IAAAA,QAAQ,EAAE,MADI;AAEdF,IAAAA,SAAS,EAAEX,KAAK,CAACQ,OAAN,CAAc,CAAd;AAFG,GA5BO;AAgCvBY,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE,SADN;AAEXf,IAAAA,KAAK,EAAE,OAFI;AAGXgB,IAAAA,WAAW,EAAE,KAHF;AAIXC,IAAAA,QAAQ,EAAE,MAJC;AAKXC,IAAAA,MAAM,EAAE;AALG,GAhCU;AAuCvBC,EAAAA,KAAK,EAAE;AACLlB,IAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADP;AAELG,IAAAA,SAAS,EAAEX,KAAK,CAACQ,OAAN,CAAc,CAAd;AAFN,GAvCgB;AA2CvBkB,EAAAA,MAAM,EAAE;AACNF,IAAAA,MAAM,EAAE,SADF;AAEND,IAAAA,QAAQ,EAAE,MAFJ;AAGNI,IAAAA,aAAa,EAAE,MAHT;AAINhB,IAAAA,SAAS,EAAE,MAJL;AAKNF,IAAAA,WAAW,EAAE,MALP;AAMN;AACAI,IAAAA,QAAQ,EAAE;AAPJ;AA3Ce,CAAL,CAApB;;AAsDA,MAAMe,gBAAN,SAA+BC,gBAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,KAAL,CAAWE,cAAX;AACA,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAC9B,WAAKJ,KAAL,CAAWE,cAAX,CAA0B,kBAA1B;AACD,KAFwB,EAEtB,MAFsB,CAA3B;AAGD;;AAEDG,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;AAEDI,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKR,KADlB,CACCQ,OADD;AAEP,WACI,6BAAC,aAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,OAAO,EAAE,CAA9B;AAAiC,MAAA,SAAS,EAAEA,OAAO,CAAC7B,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,aAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,SAAS,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,cAAD;AAAO,MAAA,EAAE,EAAE,EAAX;AAAe,MAAA,IAAI,MAAnB;AAAoB,MAAA,SAAS,EAAE6B,OAAO,CAAC3B,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,mBAAD;AAAY,MAAA,SAAS,EAAE2B,OAAO,CAACnB,WAA/B;AAA4C,MAAA,OAAO,EAAC,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE,6BAAC,aAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,SAAS,EAAEmB,OAAO,CAACpB,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,kBAAD;AACE,MAAA,SAAS,EAAEoB,OAAO,CAAClC,SADrB;AAEE,MAAA,EAAE,EAAC,mBAFL;AAGE,MAAA,MAAM,EAAC,MAHT;AAIE,MAAA,KAAK,EAAE,KAAK0B,KAAL,CAAWS,gBAAX,KAAgC,CAAhC,GAAoC,OAApC,GAA8C,KAAKT,KAAL,CAAWS,gBAJlE;AAKE,MAAA,KAAK,EAAC,2BALR;AAME,MAAA,QAAQ,MANV;AAOE,MAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAE,IADA;AAEVF,QAAAA,OAAO,EAAE;AACPG,UAAAA,KAAK,EAAEH,OAAO,CAAClC;AADR;AAFC,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAeE,6BAAC,kBAAD;AACE,MAAA,SAAS,EAAEkC,OAAO,CAAClC,SADrB;AAEE,MAAA,EAAE,EAAC,mBAFL;AAGE,MAAA,MAAM,EAAC,MAHT;AAIE,MAAA,KAAK,EAAE,KAAK0B,KAAL,CAAWY,QAJpB;AAKE,MAAA,QAAQ,MALV;AAME,MAAA,KAAK,EAAC,WANR;AAOE,MAAA,UAAU,EAAE;AACVF,QAAAA,QAAQ,EAAE,IADA;AAEVF,QAAAA,OAAO,EAAE;AACPG,UAAAA,KAAK,EAAEH,OAAO,CAAClC;AADR;AAFC,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EA6BE,6BAAC,kBAAD;AACE,MAAA,SAAS,EAAEkC,OAAO,CAAClC,SADrB;AAEE,MAAA,EAAE,EAAC,mBAFL;AAGE,MAAA,MAAM,EAAC,MAHT;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,KAAK,EAAE,KAAK0B,KAAL,CAAWa,WALpB;AAME,MAAA,KAAK,EAAC,mBANR;AAOE,MAAA,UAAU,EAAE;AACVH,QAAAA,QAAQ,EAAE,IADA;AAEVF,QAAAA,OAAO,EAAE;AACPG,UAAAA,KAAK,EAAEH,OAAO,CAAClC;AADR;AAFC,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,EA2CE;AAAK,MAAA,KAAK,EAAE;AAACwC,QAAAA,aAAa,EAAC;AAAf,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,6BAAC,gBAAD;AAAS,MAAA,KAAK,EAAG,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,eAAD;AACC,qBAAc,eADf;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,KAAK,EAAE;AAAEtC,QAAAA,UAAU,EAAE;AAAd,OALT;AAME,MAAA,SAAS,EAAEgC,OAAO,CAACb,MANrB;AAOE,MAAA,OAAO,EAAE,MAAM;AACb,aAAKK,KAAL,CAAWe,SAAX,CAAqB,uBAArB;AACD,OATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADE,EAgBA,6BAAC,gBAAD;AAAS,MAAA,KAAK,EAAG,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,6BAAC,eAAD;AACE,qBAAc,gBADhB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,SAAS,EAAEP,OAAO,CAACb,MALrB;AAME,MAAA,OAAO,EAAE,MAAM;AACb,aAAKK,KAAL,CAAWe,SAAX,CAAqB,wBAArB;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,CAhBA,EA8BA,6BAAC,gBAAD;AAAS,MAAA,KAAK,EAAG,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,6BAAC,eAAD;AACC,qBAAc,qBADf;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,SAAS,EAAEP,OAAO,CAACb,MALrB;AAME,MAAA,OAAO,EAAE,MAAM;AACb,aAAKK,KAAL,CAAWe,SAAX,CAAqB,8BAArB;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CA9BA,EA4CE,6BAAC,gBAAD;AAAS,MAAA,KAAK,EAAG,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,6BAAC,eAAD;AACE,qBAAc,oBADhB;AAEE,MAAA,OAAO,EAAC,WAFV;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,SAAS,EAAEP,OAAO,CAACb,MALrB;AAME,MAAA,OAAO,EAAE,MAAM;AACb,aAAKK,KAAL,CAAWe,SAAX,CAAqB,4BAArB;AACD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADE,CA5CF,CA3CF,CAJF,CADF,CADF,EAgHE,6BAAC,aAAD;AAAM,MAAA,EAAE,EAAE,CAAV;AAAa,MAAA,EAAE,EAAE,EAAjB;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,SAAS,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,cAAD;AAAO,MAAA,EAAE,EAAE,EAAX;AAAe,MAAA,IAAI,MAAnB;AAAoB,MAAA,SAAS,EAAEP,OAAO,CAAC3B,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,aAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,EAAE,EAAE,EAFN;AAGE,MAAA,IAAI,MAHN;AAIE,MAAA,SAAS,EAAE2B,OAAO,CAACpB,cAJrB;AAKE,MAAA,KAAK,EAAE;AAAE4B,QAAAA,SAAS,EAAE,QAAb;AAAuBpC,QAAAA,SAAS,EAAE;AAAlC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,EAQE,6BAAC,eAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,OAAO,MAFT;AAGE,MAAA,KAAK,EAAC,SAHR,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,CADF,CAhHF,CADJ;AAsID;;AAxJsC;;AA2JzC,MAAMqC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLT,IAAAA,gBAAgB,EAAES,KAAK,CAACC,uBAAN,CAA8BV,gBAD3C;AAELG,IAAAA,QAAQ,EAAEM,KAAK,CAACC,uBAAN,CAA8BP,QAFnC;AAGLC,IAAAA,WAAW,EAAEK,KAAK,CAACC,uBAAN,CAA8BN;AAHtC,GAAP;AAKD,CAND;;AAQA,MAAMO,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,cAAc,EAAGoB,KAAD,IACdD,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEC,WAAW,CAACC,8CADX;AAC0DH,MAAAA;AAD1D,KAAD;AAFL,GAAP;AAMD,CAPD;;eASe,wBAAWtD,MAAX,EACb,yBACEiD,eADF,EAEEG,kBAFF,EAGEvB,gBAHF,CADa,C","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: Overview Page Power Component\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi\n@Version : 1.0 \n@REVISION HISTORY\n[03/11/2019] [Jay] : Prototyping..........//////////////////// \n*/\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport * as actionTypes from \"../../../store/actions/actionTypes\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n\n  overviewPaper: {\n    width: \"100%\"\n  },\n\n  textField: {\n    color: \"black\",\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 230\n  },\n  powerParentGrid: {\n    marginTop: theme.spacing(0.5)\n  },\n  powerOuterGrid: {\n    // border: \"1px solid gray\",\n    maxWidth: \"100%\",\n    flexBasis: \"100%\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n    minHeight: \"130px\",\n    // maxHeight: \"130px\",\n    background: \"#fff\"\n  },\n  powerInnerGrid: {\n    maxWidth: \"100%\",\n    marginTop: theme.spacing(1)\n  },\n  powerHeader: {\n    backgroundColor: \"#788595\",\n    color: \"white\",\n    paddingLeft: \"5px\",\n    fontSize: \"14px\",\n    height: \"24px\"\n  },\n  label: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    height: \"1.75rem\",\n    fontSize: \"12px\",\n    textTransform: \"none\",\n    marginTop: \"18px\",\n    marginRight: \"15px\",\n    // minWidth: '0px',\n    maxWidth: \"110px\"\n  }\n});\n\nclass PowerInformation extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchPowerInfo();\n    this.interval = setInterval(() => {\n        this.props.fetchPowerInfo(\"doNotStartLoader\");\n      }, 300000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n        <Grid item container spacing={2} className={classes.powerParentGrid}>\n          <Grid sm={6} xs={12} item container>\n            <Paper xs={12} item className={classes.powerOuterGrid}>\n              <Typography className={classes.powerHeader} variant=\"h6\">\n                Power Options\n              </Typography>\n              <Grid sm={6} xs={12} item className={classes.powerInnerGrid}>\n                <TextField\n                  className={classes.textField}\n                  id=\"standard-required\"\n                  margin=\"none\"\n                  value={this.props.powerconsumption === 0 ? \"Error\" : this.props.powerconsumption}\n                  label=\"Power Consumption (Watts)\"\n                  disabled\n                  InputProps={{\n                    readOnly: true,\n                    classes: {\n                      input: classes.textField\n                    }\n                  }}\n                />\n                <TextField\n                  className={classes.textField}\n                  id=\"standard-required\"\n                  margin=\"none\"\n                  value={this.props.powercap}\n                  disabled\n                  label=\"Power CAP\"\n                  InputProps={{\n                    readOnly: true,\n                    classes: {\n                      input: classes.textField\n                    }\n                  }}\n                />\n                <TextField\n                  className={classes.textField}\n                  id=\"standard-required\"\n                  margin=\"none\"\n                  disabled\n                  value={this.props.powerstatus}\n                  label=\" CPU Power Status\"\n                  InputProps={{\n                    readOnly: true,\n                    classes: {\n                      input: classes.textField\n                    }\n                  }}\n                />\n                <div style={{paddingBottom:\"10px\"}}>\n              <Tooltip title = \"Power On Poseidon Box\">\n                <Button\n                 data-testid = \"PowerOnButton\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  style={{ marginLeft: \"20px\" }}\n                  className={classes.submit}\n                  onClick={() => {\n                    this.props.openAlert(\"Power On Poseidon Box\");\n                  }}\n                >\n                  On\n                </Button>\n              </Tooltip>\n                <Tooltip title = \"Power Off Poseidon Box\">\n                <Button\n                  data-testid = \"PowerOffButton\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  className={classes.submit}\n                  onClick={() => {\n                    this.props.openAlert(\"Power Off Poseidon Box\");\n                  }}\n                >\n                  Off\n                </Button>\n                </Tooltip>\n                <Tooltip title = \"Force Power Off Poseidon Box\">\n                <Button\n                 data-testid = \"ForcePowerOffButton\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  className={classes.submit}\n                  onClick={() => {\n                    this.props.openAlert(\"Force Power Off Poseidon Box\");\n                  }}\n                >\n                  Force Off\n                </Button>\n                </Tooltip>\n                  <Tooltip title = \"Restart Poseidon Box\">\n                <Button\n                  data-testid = \"ForceRestartButton\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  className={classes.submit}\n                  onClick={() => {\n                    this.props.openAlert(\"Force Restart Poseidon Box\");\n                  }}\n                >\n                  Restart\n                </Button>\n                  </Tooltip>\n                </div>\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Grid sm={6} xs={12} item container>\n            <Paper xs={12} item className={classes.powerOuterGrid}>\n              <Grid\n                sm={6}\n                xs={12}\n                item\n                className={classes.powerInnerGrid}\n                style={{ textAlign: \"center\", marginTop: \"60px\" }}\n              >\n                <label>Turn On Server LED</label>\n                <Switch\n                  size=\"small\"\n                  checked\n                  color=\"primary\"\n                  // onClick={() => console.log(\"here\")}\n                />\n              </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    powerconsumption: state.hardwareOverviewReducer.powerconsumption,\n    powercap: state.hardwareOverviewReducer.powercap,\n    powerstatus: state.hardwareOverviewReducer.powerstatus\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPowerInfo: (param) =>\n      dispatch({\n        type: actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_POWER_INFORMATION,param\n      })\n  };\n};\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(PowerInformation)\n);\n"]}