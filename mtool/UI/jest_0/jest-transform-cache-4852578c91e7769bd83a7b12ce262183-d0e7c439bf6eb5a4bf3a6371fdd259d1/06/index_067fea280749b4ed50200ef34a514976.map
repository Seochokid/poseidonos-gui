{"version":3,"sources":["index.js"],"names":["styles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","EmailTableMainHeader","fontSize","borderRadius","width","marginLeft","lineHeight","EmailAlertsPaper","EmailAlertsCard","backgroundColor","justifyContent","SpecifySmtpCard","marginTop","paddingTop","boxShadow","SpecifySmtpText","breakpoints","down","display","SendEmailAlerts","EmailTableContainer","border","marginBottom","overflow","marginRight","height","fontFamily","paddingLeft","paddingRight","SettingsForm","textField","divider","deletetextField","background","textDecoration","borderBottom","submit","textTransform","minWidth","inputCard","gridItem","labelText","table","margin","inputText","cursor","EmailAlerts","Component","constructor","props","overrides","MuiSvgIcon","MuiTablePagination","menuItem","minHeight","select","primary","main","state","columns","title","field","cellStyle","render","rowData","email","editable","sorting","data","index","indexOf","id","active","tableData","editing","toggleEmailStatus","maxHeight","paddingBottom","headerStyle","componentWillReceiveProps","newProps","setState","emailids","classes","event","testserver","savesmtpserverdetails","className","readOnly","configuredsmtpserver","deleteConfiguredSmtpServer","Check","FirstPage","LastPage","NextPage","PreviousPage","Search","ThirdStateCheck","Remove","DetailPanel","ChevronRight","Export","SaveAlt","Filter","FilterList","Add","Edit","Delete","TrashIcon","SortArrow","ArrowUpward","Clear","Toolbar","Pagination","icon","iconProps","tooltip","onClick","evt","oldData","selectEmail","openAlert","rowStyle","search","paginationType","loadingType","actionsColumnIndex","onRowAdd","newData","Promise","resolve","setTimeout","saveChange","onRowUpdate","editEmail"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: Configuration Page Component for Adding Email Alerts\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi, Palak Kapoor \n@Version : 1.0 \n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[08/21/2019] [Palak]: Material UI........///////////////////  \n*/\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createMuiTheme , TablePagination } from \"@material-ui/core\";\nimport ThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport Search from \"@material-ui/icons/Search\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Add from \"@material-ui/icons/Add\";\nimport Check from \"@material-ui/icons/Check\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport TrashIcon from \"@material-ui/icons/Delete\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport \"./EmailAlerts.css\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n\n  EmailTableMainHeader: {\n    textAlign: \"left\",\n    color: \"rgba(255, 255, 255, 0.87)\",\n    fontSize: \"14px\",\n    borderRadius: \"0px\",\n    width: \"100%\",\n    marginLeft: \"10px\",\n    lineHeight: \"2\"\n  },\n\n  EmailAlertsPaper: {\n    width: \"100%\"\n    // margin: '0px',\n    // padding: '0px',\n    // boxShadow: 'none',\n  },\n\n  EmailAlertsCard: {\n    // backgroundColor: 'rgb(113, 133, 157)',\n    backgroundColor: \"#788595\",\n    justifyContent: \"center\"\n  },\n\n  SpecifySmtpCard: {\n    borderRadius: \"0px\",\n    marginTop: \"2px\",\n    paddingTop: \"10px\",\n    boxShadow: \"none\"\n  },\n\n  SpecifySmtpText: {\n    marginLeft: \"10px\",\n    paddingTop: \"10px\",\n    textAlign: \"center\",\n    color: \"#151d3b\",\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"center\",\n      display: \"flex\",\n      marginLeft: \"-8px\"\n    }\n  },\n\n  SendEmailAlerts: {\n    marginLeft: \"-12px\",\n    textAlign: \"center\",\n    color: \"#151d3b\",\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"center\",\n      display: \"flex\",\n      marginLeft: \"-8px\"\n    }\n  },\n\n  EmailTableContainer: {\n    display: \"flex\",\n    width: \"50%\",\n    border: \"0px solid gray\",\n    marginBottom: \"15px\",\n    overflow: \"initial\",\n    marginTop: \"10px\",\n    marginRight: \"1000px\",\n    height: \"290px\",\n    fontFamily: \"Arial\",\n    fontSize: \"12px\",\n    paddingLeft: \"0px\",\n    paddingRight: \"0px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\"\n    }\n  },\n\n  SettingsForm: {\n    display: \"flex\",\n    marginLeft: \"4px\",\n    fontSize: \"10px\",\n    justifyContent: \"space-between\"\n  },\n\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 150\n  },\n\n  divider: {\n    marginBottom: \"40px\"\n  },\n\n  deletetextField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 150,\n    marginTop: \"30px\",\n    color: \"black\",\n    background: \"rgb(245,245,245)\",\n    textDecoration: \"none\",\n    borderBottom: \"none\",\n\n    \"&>input\": {\n      paddingLeft: \"4px\"\n    }\n  },\n\n  submit: {\n    // background: '#007bff',\n    height: \"1.8rem\",\n    fontSize: \"12px\",\n    // marginTop: '35px',\n    marginTop: \"1.75rem\",\n    // lineHeight: '0.5',\n    textTransform: \"none\",\n    marginRight: \"10px\",\n    minWidth: \"0px\",\n    width: \"60px\"\n  },\n\n  inputCard: {\n    boxShadow: \"none\",\n    width: \"50%\"\n  },\n\n  gridItem: {\n    [theme.breakpoints.down(\"sm\")]: {\n      justifyContent: \"center\",\n      display: \"flex\"\n    }\n  },\n\n  labelText: {\n    fontSize: \"12px\"\n  },\n\n  table: {\n    margin: \"10px\"\n  },\n\n  inputText: {\n    color: \"black\",\n    fontSize: \"12px\",\n    margin: \"0px\",\n    padding: \"0px\",\n\n    \"&>input\": {\n      cursor: \"context-menu\",\n      textAlign: \"center\",\n      justifyContent: \"center\",\n\n      [theme.breakpoints.down(\"xs\")]: {\n        justifyContent: \"left\",\n        textAlign: \"left\",\n        paddingLeft: \"1px\"\n      }\n    },\n\n    \"&:before\": {\n      borderBottom: \"none\"\n    },\n\n    \"&:hover:not(.Mui-disabled):before\": {\n      borderBottom: \"none\"\n    },\n\n    \"&:after\": {\n      borderBottom: \"none\"\n    }\n  }\n});\n\nclass EmailAlerts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.theme = createMuiTheme({\n      overrides: {\n        MuiSvgIcon: {\n          //  stylesheet name\n          root: {\n            //  rule name\n            color: \"#808080\"\n          }\n        },\n        MuiTablePagination: {\n          menuItem: {\n            fontSize: \"12px\",\n            minHeight: \"0px\"\n          },\n          select: {\n            width: \"45px\"\n          }\n        }\n      },\n\n      palette: {\n        primary: {\n          main: \"#4caf50\"\n        },\n        secondary: {\n          main: \"#808080\"\n        }\n      }\n    });\n\n    this.state = {\n      columns: [\n        {\n          title: \"Email ID\",\n          field: \"email\",\n          cellStyle: {\n            fontSize: \"12px\"\n          },\n          render: rowData => {\n            return <span id={rowData.email}>{rowData.email}</span>;\n          }\n        },\n        {\n          title: \"Active\",\n          field: \"active\",\n          editable: \"never\",\n          sorting: false,\n          render: rowData => {\n            const { data } = this.state;\n            const index = data.indexOf(rowData);\n            const id = rowData ? `EmailAlerts-togglebtn-${ rowData.email}` : \"\";\n            return (\n              <Switch\n                size=\"small\"\n                checked={rowData && (rowData.active === 1 || rowData.active)}\n                color=\"primary\"\n                disabled={\n                  index < 0 ||\n                  (rowData.tableData && rowData.tableData.editing === \"update\")\n                }\n                onClick={() => this.props.toggleEmailStatus(index)}\n                data-testid=\"toggleButton\"\n                id={id}\n              />\n            );\n          },\n\n          cellStyle: {\n            maxHeight: \"12px\",\n            paddingTop: \"0px\",\n            paddingBottom: \"0px\"\n          },\n\n          headerStyle: {\n            paddingLeft: \"18px\"\n          }\n        }\n      ],\n\n      data: []\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({ data: newProps.emailids });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Paper className={classes.EmailAlertsPaper}>\n        <Grid className={classes.EmailAlertsCard}>\n          <Typography className={classes.EmailTableMainHeader}>\n            Email Alerts\n          </Typography>\n        </Grid>\n        <Card className={classes.SpecifySmtpCard}>\n          <Typography\n            variant=\"caption\"\n            color=\"secondary\"\n            className={classes.SpecifySmtpText}\n          >\n            Specify SMTP Network Settings\n          </Typography>\n          <Divider />\n          <form className={classes.SettingsForm} noValidate autoComplete=\"off\">\n            <Grid container>\n              <Grid item xs={12} sm={6} className={classes.gridItem}>\n                <form\n                  autoComplete=\"off\"\n                  onSubmit={event => {\n                    this.props.testserver(event);\n                  }}\n                  data-testid=\"form\"\n                >\n                  <TextField\n                    id=\"smtp-server\"\n                    label=\"SMTP Server\"\n                    required\n                    className={classes.textField}\n                    placeholder=\"IP:Port\"\n                    onChange={event => this.props.savesmtpserverdetails(event)}\n                    InputLabelProps={{\n                      className: classes.labelText\n                    }}\n                    name=\"smtpserver\"\n                    type=\"text\"\n                    margin=\"normal\"\n                    data-testid=\"smtpServerField\"\n                  />\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    className={classes.submit}\n                    data-testid=\"applyButton\"\n                  >\n                    Apply\n                  </Button>\n                </form>\n              </Grid>\n\n              <Grid item xs={12} sm={6} className={classes.gridItem}>\n                <TextField\n                  id=\"smtp-server-display\"\n                  className={classes.deletetextField}\n                  InputProps={{\n                    readOnly: true,\n                    className: classes.inputText\n                  }}\n                  margin=\"normal\"\n                  type=\"text\"\n                  value={this.props.configuredsmtpserver}\n                  data-testid=\"readOnlyField\"\n                />\n                <Button\n                  onClick={() => {\n                    this.props.deleteConfiguredSmtpServer();\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  data-testid=\"deleteButton\"\n                >\n                  Delete\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n          <Grid>\n            <ThemeProvider theme={this.theme}>\n              <MaterialTable\n                icons={{\n                  Check,\n                  FirstPage: () => (\n                    <FirstPage id=\"EmailAlerts-icon-firstpage\" />\n                  ),\n                  LastPage: () => <LastPage id=\"EmailAlerts-icon-lastpage\" />,\n                  NextPage: () => (\n                    <ChevronRight id=\"EmailAlerts-icon-nextpage\" />\n                  ),\n                  PreviousPage: () => (\n                    <ChevronLeft id=\"EmailAlerts-icon-previouspage\" />\n                  ),\n                  Search,\n                  ThirdStateCheck: Remove,\n                  DetailPanel: ChevronRight,\n                  Export: SaveAlt,\n                  Filter: FilterList,\n                  Add: () => <Add id=\"EmailAlerts-icon-addemail\" />,\n                  Edit: () => <EditIcon id=\"EmailAlerts-icon-editemail\" />,\n                  Delete: TrashIcon,\n                  SortArrow: ArrowUpward,\n                  Clear\n                }}\n                components={{\n                  Toolbar: props => (\n                    <div style={{ height: \"50px\", fontSize: \"12px\" }}>\n                      <MTableToolbar {...props} />\n                    </div>\n                  ),\n                  Pagination: props => (\n                    <TablePagination\n                      {...props}\n                      // labelRowsPerPage={<div style={{fontSize: 12}}>{props.labelRowsPerPage}</div>}\n                      // labelDisplayedRows={row => <div style={{fontSize: 12}}>{props.labelDisplayedRows(row)}</div>}\n                      // SelectProps={{\n                      //   style:{\n                      //     fontSize: 12,\n                      //   }\n                      // }}\n                    />\n                  )\n                }}\n                title={(\n<div>\n                    <Typography\n                      variant=\"caption\"\n                      className={classes.SendEmailAlerts}\n                    >\n                      Send Email Alerts through the following Email List\n                    </Typography>\n</div>\n)}\n                actions={[\n                 /* {\n                    icon: EmailIcon,\n                    iconProps: {\n                      color: \"secondary\",\n                      id: \"EmailAlerts-icon-testemail\"\n                    },\n                    tooltip: \"Test Email\",\n                    onClick: (event, rowData) => {\n                      const { data } = this.state;\n                      const index = data.indexOf(rowData);\n                      this.props.selectEmail(index);\n                      this.props.sendEmail();\n                    },\n                    \"data-testid\": \"action\"\n                  },\n\t\t  */\n                  {\n                    icon: TrashIcon,\n                    iconProps: {\n                      color: \"secondary\",\n                      id: \"EmailAlerts-icon-deleteemail\"\n                    },\n                    tooltip: \"Delete\",\n                    onClick: (evt, oldData) => {\n                      const { data } = this.state;\n                      const index = data.indexOf(oldData);\n                      this.props.selectEmail(index);\n                      this.props.openAlert(\"Delete\");\n                    }\n                  }\n                ]}\n                options={{\n                  rowStyle: {\n                    fontSize: \"4px\"\n                  },\n                  search: false,\n                  paginationType: \"normal\",\n                  loadingType: \"linear\",\n                  actionsColumnIndex: -1,\n                  headerStyle: {\n                    // backgroundColor: 'rgb(113, 133, 157)',\n                    backgroundColor: \"#788595\",\n                    color: \"rgba(255, 255, 255, 0.87)\",\n                    fontSize: \"14px\",\n                    height: \"10%\",\n                    paddingTop: \"2px\",\n                    paddingBottom: \"2px\"\n                  }\n                }}\n                columns={this.state.columns}\n                data={this.state.data}\n                editable={{\n                  onRowAdd: newData =>\n                    new Promise(resolve => {\n                      setTimeout(() => {\n                        this.props.saveChange(newData, -1, true);\n                        resolve();\n                      }, 1000);\n                    }),\n                  onRowUpdate: (newData, oldData) =>\n                    new Promise(resolve => {\n                      setTimeout(() => {\n                        {\n                          const { data } = this.state;\n                          const index = data.indexOf(oldData);\n\n                          this.props.editEmail(index);\n                          this.props.saveChange(newData, index, false);\n                          data[index] = newData;\n                          this.setState({ data }, () => resolve());\n                        }\n                        resolve();\n                      }, 1000);\n                    })\n                }}\n              />\n            </ThemeProvider>\n          </Grid>\n        </Card>\n      </Paper>\n    );\n  }\n}\nexport default withStyles(styles)(EmailAlerts);\n"]}