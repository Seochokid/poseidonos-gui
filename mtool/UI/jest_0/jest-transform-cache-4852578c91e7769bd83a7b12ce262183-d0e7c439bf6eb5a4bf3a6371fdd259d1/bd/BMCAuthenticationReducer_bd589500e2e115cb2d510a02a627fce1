a0f906f7c2107d8d75ed54f035542b62
/* istanbul ignore next */
"use strict";

var cov_1ptdrm8zye = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/BMCAuthenticationReducer.js";
  var hash = "5ba66268bb7d615ef66f2f67c376f84246bda001";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/BMCAuthenticationReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "1": {
        start: {
          line: 37,
          column: 33
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "2": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "3": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "4": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "5": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 40
        }
      },
      "6": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "7": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "8": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 67,
          column: 10
        }
      },
      "9": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 37,
            column: 34
          }
        },
        loc: {
          start: {
            line: 37,
            column: 67
          },
          end: {
            line: 73,
            column: 3
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 37,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 42
          },
          end: {
            line: 37,
            column: 54
          }
        }],
        line: 37
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 46,
            column: 7
          }
        }, {
          start: {
            line: 48,
            column: 6
          },
          end: {
            line: 54,
            column: 7
          }
        }, {
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 61,
            column: 7
          }
        }, {
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 68,
            column: 7
          }
        }, {
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 71,
            column: 21
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "5ba66268bb7d615ef66f2f67c376f84246bda001"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.initialState = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_1ptdrm8zye.s[0]++, {
  bmc_username: '',
  bmc_password: '',
  bmc_loginFailed: false,
  bmc_isLoggedIn: false
});

/* istanbul ignore next */
exports.initialState = initialState;
cov_1ptdrm8zye.s[1]++;

const BMCAuthenticationReducer = (state =
/* istanbul ignore next */
(cov_1ptdrm8zye.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_1ptdrm8zye.f[0]++;
  cov_1ptdrm8zye.s[2]++;

  switch (action.type) {
    case actionTypes.BMC_CHANGE_CREDENTIALS:
      /* istanbul ignore next */
      cov_1ptdrm8zye.b[1][0]++;
      {
        /* istanbul ignore next */
        cov_1ptdrm8zye.s[3]++;
        console.log("asda", action.payload);

        /* istanbul ignore next */
        cov_1ptdrm8zye.s[4]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            [action.payload.name]: action.payload.value
          })
        );

        /* istanbul ignore next */
        cov_1ptdrm8zye.s[5]++;
        console.log(state.bmc_username);
      }

    case actionTypes.BMC_SET_IS_LOGGED_IN:
      /* istanbul ignore next */
      cov_1ptdrm8zye.b[1][1]++;
      {
        /* istanbul ignore next */
        cov_1ptdrm8zye.s[6]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            bmc_isLoggedIn: true,
            bmc_loginFailed: false
          })
        );
      }

    case actionTypes.BMC_RESET_IS_LOGGED_IN:
      /* istanbul ignore next */
      cov_1ptdrm8zye.b[1][2]++;
      {
        /* istanbul ignore next */
        cov_1ptdrm8zye.s[7]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            bmc_isLoggedIn: false
          })
        );
      }

    case actionTypes.BMC_SET_LOGIN_FAILED:
      /* istanbul ignore next */
      cov_1ptdrm8zye.b[1][3]++;
      {
        /* istanbul ignore next */
        cov_1ptdrm8zye.s[8]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            bmc_loginFailed: true
          })
        );
      }

    default:
      /* istanbul ignore next */
      cov_1ptdrm8zye.b[1][4]++;
      cov_1ptdrm8zye.s[9]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = BMCAuthenticationReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJNQ0F1dGhlbnRpY2F0aW9uUmVkdWNlci5qcyJdLCJuYW1lcyI6WyJpbml0aWFsU3RhdGUiLCJibWNfdXNlcm5hbWUiLCJibWNfcGFzc3dvcmQiLCJibWNfbG9naW5GYWlsZWQiLCJibWNfaXNMb2dnZWRJbiIsIkJNQ0F1dGhlbnRpY2F0aW9uUmVkdWNlciIsInN0YXRlIiwiYWN0aW9uIiwidHlwZSIsImFjdGlvblR5cGVzIiwiQk1DX0NIQU5HRV9DUkVERU5USUFMUyIsImNvbnNvbGUiLCJsb2ciLCJwYXlsb2FkIiwibmFtZSIsInZhbHVlIiwiQk1DX1NFVF9JU19MT0dHRURfSU4iLCJCTUNfUkVTRVRfSVNfTE9HR0VEX0lOIiwiQk1DX1NFVF9MT0dJTl9GQUlMRUQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBO0FBQUE7QUFBQTs7Ozs7O0FBR08sTUFBTUEsWUFBWTtBQUFBO0FBQUEsd0JBQUc7QUFDeEJDLEVBQUFBLFlBQVksRUFBRSxFQURVO0FBRXhCQyxFQUFBQSxZQUFZLEVBQUUsRUFGVTtBQUd4QkMsRUFBQUEsZUFBZSxFQUFFLEtBSE87QUFJeEJDLEVBQUFBLGNBQWMsRUFBRTtBQUpRLENBQUgsQ0FBbEI7Ozs7OztBQU9QLE1BQU1DLHdCQUF3QixHQUFHLENBQUNDLEtBQUs7QUFBQTtBQUFBLDJCQUFHTixZQUFILENBQU4sRUFBdUJPLE1BQXZCLEtBQWtDO0FBQUE7QUFBQTtBQUFBOztBQUMvRCxVQUFRQSxNQUFNLENBQUNDLElBQWY7QUFDRSxTQUFLQyxXQUFXLENBQUNDLHNCQUFqQjtBQUFBO0FBQUE7QUFBeUM7QUFBQTtBQUFBO0FBQ3ZDQyxRQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxNQUFaLEVBQW1CTCxNQUFNLENBQUNNLE9BQTFCOztBQUR1QztBQUFBO0FBRXZDO0FBQUE7QUFBQSw0QkFDS1AsS0FETDtBQUVBLGFBQUNDLE1BQU0sQ0FBQ00sT0FBUCxDQUFlQyxJQUFoQixHQUF3QlAsTUFBTSxDQUFDTSxPQUFQLENBQWVFO0FBRnZDO0FBQUE7O0FBRnVDO0FBQUE7QUFNdkNKLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTixLQUFLLENBQUNMLFlBQWxCO0FBQ0Q7O0FBRUQsU0FBS1EsV0FBVyxDQUFDTyxvQkFBakI7QUFBQTtBQUFBO0FBQXVDO0FBQUE7QUFBQTtBQUNyQztBQUFBO0FBQUEsNEJBQ0tWLEtBREw7QUFFQUYsWUFBQUEsY0FBYyxFQUFHLElBRmpCO0FBR0FELFlBQUFBLGVBQWUsRUFBRztBQUhsQjtBQUFBO0FBS0Q7O0FBRUQsU0FBS00sV0FBVyxDQUFDUSxzQkFBakI7QUFBQTtBQUFBO0FBQXlDO0FBQUE7QUFBQTtBQUN2QztBQUFBO0FBQUEsNEJBQ0tYLEtBREw7QUFFQUYsWUFBQUEsY0FBYyxFQUFHO0FBRmpCO0FBQUE7QUFJRDs7QUFFRCxTQUFLSyxXQUFXLENBQUNTLG9CQUFqQjtBQUFBO0FBQUE7QUFBdUM7QUFBQTtBQUFBO0FBQ3JDO0FBQUE7QUFBQSw0QkFDS1osS0FETDtBQUVBSCxZQUFBQSxlQUFlLEVBQUc7QUFGbEI7QUFBQTtBQUlEOztBQUVEO0FBQUE7QUFBQTtBQUFBO0FBQ0UsYUFBT0csS0FBUDtBQWpDSjtBQW1DRCxDQXBDSDs7O2VBc0NpQkQsd0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgIENPUFlSSUdIVCAoYykgMjAxOSBTQU1TVU5HIEVMRUNUUk9OSUNTIENPLiwgTFRELiAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICBBTEwgUklHSFRTIFJFU0VSVkVEICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQgdG8gbGljZW5zZWVzIG9mIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuICAgICAgICAvXG4vICAgcHJvZHVjdHMgdG8gdXNlIG9yIGFic3RyYWN0IHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiAgICAgICAgIC9cbi8gICBpbXBsZW1lbnRpbmcgYSBwcm9kdWN0IGJhc2VkIG9uIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIHByb2R1Y3RzLiAgICAgICAgICAgL1xuLyAgIE5vIG90aGVyIHJpZ2h0cyB0byByZXByb2R1Y2UsIHVzZSwgb3IgZGlzc2VtaW5hdGUgdGhpcyBjb21wdXRlciBwcm9ncmFtLCAgICAgICAgICAvXG4vICAgd2hldGhlciBpbiBwYXJ0IG9yIGluIHdob2xlLCBhcmUgZ3JhbnRlZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8gXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBtYWtlcyBubyByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50aWVzIHdpdGggICAgICAgICAgL1xuLyAgIHJlc3BlY3QgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgYW5kIHNwZWNpZmljYWxseSBkaXNjbGFpbXMgICAvXG4vICAgYW55IHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgZGFtYWdlcywgc3BlY2lhbCBvciBjb25zZXF1ZW50aWFsLCBjb25uZWN0ZWQgICAgICAgICAgIC9cbi8gICB3aXRoIHRoZSB1c2Ugb2YgdGhpcyBwcm9ncmFtLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cblxuREVTQ1JJUFRJT046IDxDb250YWlucyBSZWR1Y2VyIEZ1bmN0aW9ucyBmb3IgQk1DIEF1dGhlbnRpY2F0aW9uIGNvbnRhaW5lcj4gKlxuQE5BTUUgOiBCTUNBdXRoZW50aWNhdGlvblJlZHVjZXIuanNcbkBBVVRIT1JTOiBKYXkgU2FuZ2hhdmkgXG5AVmVyc2lvbiA6IDEuMCAqXG5AUkVWSVNJT04gSElTVE9SWVxuWzIxLzAyLzIwMjBdIFtKYXldIDogUHJvdG90eXBpbmcuLi4uLi4uLi4uLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiovXG5cbmltcG9ydCAqIGFzIGFjdGlvblR5cGVzIGZyb20gJy4uL2FjdGlvbnMvYWN0aW9uVHlwZXMnO1xuXG5cbmV4cG9ydCBjb25zdCBpbml0aWFsU3RhdGUgPSB7XG4gICAgYm1jX3VzZXJuYW1lOiAnJyxcbiAgICBibWNfcGFzc3dvcmQ6ICcnLFxuICAgIGJtY19sb2dpbkZhaWxlZDogZmFsc2UsXG4gICAgYm1jX2lzTG9nZ2VkSW46IGZhbHNlLFxufTtcblxuY29uc3QgQk1DQXV0aGVudGljYXRpb25SZWR1Y2VyID0gKHN0YXRlID0gaW5pdGlhbFN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICBjYXNlIGFjdGlvblR5cGVzLkJNQ19DSEFOR0VfQ1JFREVOVElBTFM6IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJhc2RhXCIsYWN0aW9uLnBheWxvYWQpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBbYWN0aW9uLnBheWxvYWQubmFtZV0gOiBhY3Rpb24ucGF5bG9hZC52YWx1ZSxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc29sZS5sb2coc3RhdGUuYm1jX3VzZXJuYW1lKTtcbiAgICAgIH1cblxuICAgICAgY2FzZSBhY3Rpb25UeXBlcy5CTUNfU0VUX0lTX0xPR0dFRF9JTjoge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBibWNfaXNMb2dnZWRJbiA6IHRydWUsXG4gICAgICAgIGJtY19sb2dpbkZhaWxlZCA6IGZhbHNlLFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBjYXNlIGFjdGlvblR5cGVzLkJNQ19SRVNFVF9JU19MT0dHRURfSU46IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgYm1jX2lzTG9nZ2VkSW4gOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgY2FzZSBhY3Rpb25UeXBlcy5CTUNfU0VUX0xPR0lOX0ZBSUxFRDoge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBibWNfbG9naW5GYWlsZWQgOiB0cnVlLFxuICAgICAgICB9O1xuICAgICAgfVxuICAgICBcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG4gIH07XG4gIFxuICBleHBvcnQgZGVmYXVsdCBCTUNBdXRoZW50aWNhdGlvblJlZHVjZXI7XG4gICJdfQ==