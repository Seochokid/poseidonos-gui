3b4bc18260c9681c1297dd9956f1157b
/* istanbul ignore next */
"use strict";

var cov_h5gqf9rt4 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/indexSaga.js";
  var hash = "08c34a3affb452a6c4699a4d0aa0748d4997c479";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/indexSaga.js",
    statementMap: {
      "0": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 68,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "rootSaga",
        decl: {
          start: {
            line: 48,
            column: 25
          },
          end: {
            line: 48,
            column: 33
          }
        },
        loc: {
          start: {
            line: 48,
            column: 36
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 48
      }
    },
    branchMap: {},
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "08c34a3affb452a6c4699a4d0aa0748d4997c479"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = rootSaga;

var
/* istanbul ignore next */
_effects = require("redux-saga/effects");

var
/* istanbul ignore next */
_headerSaga = _interopRequireDefault(require("./headerSaga"));

var
/* istanbul ignore next */
_dashboardSaga = require("./dashboardSaga");

var
/* istanbul ignore next */
_configurationsettingSaga = require("./configurationsettingSaga");

var
/* istanbul ignore next */
_logManagementSaga = require("./logManagementSaga");

var
/* istanbul ignore next */
_alertManagementSaga = require("./alertManagementSaga");

var
/* istanbul ignore next */
_alertManagementAlertTableSaga = require("./alertManagementAlertTableSaga");

var
/* istanbul ignore next */
_alertManagementAddNewAlertsSaga = require("./alertManagementAddNewAlertsSaga");

var
/* istanbul ignore next */
_authenticationSaga = require("./authenticationSaga");

var
/* istanbul ignore next */
_userManagementSaga = require("./userManagementSaga");

var
/* istanbul ignore next */
_userManagementUserTableSaga = require("./userManagementUserTableSaga");

var
/* istanbul ignore next */
_userManagementAddNewUsersSaga = require("./userManagementAddNewUsersSaga");

var
/* istanbul ignore next */
_storageSaga = _interopRequireDefault(require("./storageSaga"));

var
/* istanbul ignore next */
_performanceSaga = _interopRequireDefault(require("./performanceSaga"));

var
/* istanbul ignore next */
_hardwareOverviewSaga = require("./hardwareOverviewSaga");

var
/* istanbul ignore next */
_hardwareSensorSaga = require("./hardwareSensorSaga");

var
/* istanbul ignore next */
_hardwareHealthSaga = require("./hardwareHealthSaga");

var
/* istanbul ignore next */
_hardwarePowerManagementSaga = require("./hardwarePowerManagementSaga");

var
/* istanbul ignore next */
_BMCAuthenticationSaga = require("./BMCAuthenticationSaga");

function* rootSaga() {
  /* istanbul ignore next */
  cov_h5gqf9rt4.f[0]++;
  cov_h5gqf9rt4.s[0]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    all)([
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _headerSaga.
    /* istanbul ignore next */
    default)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _dashboardSaga.
    /* istanbul ignore next */
    dashboardWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _configurationsettingSaga.
    /* istanbul ignore next */
    configurationsettingWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _logManagementSaga.
    /* istanbul ignore next */
    logManagementWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _alertManagementSaga.
    /* istanbul ignore next */
    alertManagementContainerWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _alertManagementAlertTableSaga.
    /* istanbul ignore next */
    alertManagementAlertTableWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _alertManagementAddNewAlertsSaga.
    /* istanbul ignore next */
    alertManagementAddNewAlertsWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _storageSaga.
    /* istanbul ignore next */
    default)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _performanceSaga.
    /* istanbul ignore next */
    default)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _authenticationSaga.
    /* istanbul ignore next */
    authenticationWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _userManagementSaga.
    /* istanbul ignore next */
    userManagementContainerWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _userManagementUserTableSaga.
    /* istanbul ignore next */
    userManagementUserTableWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _userManagementAddNewUsersSaga.
    /* istanbul ignore next */
    userManagementAddNewUsersWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _hardwareOverviewSaga.
    /* istanbul ignore next */
    hardwareOverviewWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _hardwareSensorSaga.
    /* istanbul ignore next */
    hardwareSensorWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _hardwareHealthSaga.
    /* istanbul ignore next */
    hardwareHealthWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _hardwarePowerManagementSaga.
    /* istanbul ignore next */
    hardwarePowerManagementWatcher)(),
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _BMCAuthenticationSaga.
    /* istanbul ignore next */
    BMCAuthenticationWatcher)()])
  );
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4U2FnYS5qcyJdLCJuYW1lcyI6WyJyb290U2FnYSIsImFsbCIsImhlYWRlcldhdGNoZXIiLCJkYXNoYm9hcmRXYXRjaGVyIiwiY29uZmlndXJhdGlvbnNldHRpbmdXYXRjaGVyIiwibG9nTWFuYWdlbWVudFdhdGNoZXIiLCJhbGVydE1hbmFnZW1lbnRDb250YWluZXJXYXRjaGVyIiwiYWxlcnRNYW5hZ2VtZW50QWxlcnRUYWJsZVdhdGNoZXIiLCJhbGVydE1hbmFnZW1lbnRBZGROZXdBbGVydHNXYXRjaGVyIiwic3RvcmFnZVdhdGNoZXIiLCJwZXJmb3JtYW5jZVdhdGNoZXIiLCJhdXRoZW50aWNhdGlvbldhdGNoZXIiLCJ1c2VyTWFuYWdlbWVudENvbnRhaW5lcldhdGNoZXIiLCJ1c2VyTWFuYWdlbWVudFVzZXJUYWJsZVdhdGNoZXIiLCJ1c2VyTWFuYWdlbWVudEFkZE5ld1VzZXJzV2F0Y2hlciIsImhhcmR3YXJlT3ZlcnZpZXdXYXRjaGVyIiwiaGFyZHdhcmVTZW5zb3JXYXRjaGVyIiwiaGFyZHdhcmVIZWFsdGhXYXRjaGVyIiwiaGFyZHdhcmVQb3dlck1hbmFnZW1lbnRXYXRjaGVyIiwiQk1DQXV0aGVudGljYXRpb25XYXRjaGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBOztBQUVlLFVBQVVBLFFBQVYsR0FBcUI7QUFBQTtBQUFBO0FBQUE7QUFDaEMsUUFBTTtBQUFBO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsU0FBSTtBQUNOO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsY0FETTtBQUVOO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsdUJBRk07QUFHTjtBQUFBO0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBLGtDQUhNO0FBSU47QUFBQTtBQUFBQztBQUFBQTtBQUFBQTtBQUFBQSwyQkFKTTtBQUtOO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsc0NBTE07QUFNTjtBQUFBO0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBLHVDQU5NO0FBT047QUFBQTtBQUFBQztBQUFBQTtBQUFBQTtBQUFBQSx5Q0FQTTtBQVFOO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsY0FSTTtBQVNOO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsY0FUTTtBQVVOO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsNEJBVk07QUFXTjtBQUFBO0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBLHFDQVhNO0FBWU47QUFBQTtBQUFBQztBQUFBQTtBQUFBQTtBQUFBQSxxQ0FaTTtBQWFOO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsdUNBYk07QUFjTjtBQUFBO0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBLDhCQWRNO0FBZU47QUFBQTtBQUFBQztBQUFBQTtBQUFBQTtBQUFBQSw0QkFmTTtBQWdCTjtBQUFBO0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBLDRCQWhCTTtBQWlCTjtBQUFBO0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBLHFDQWpCTTtBQWtCTjtBQUFBO0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBLCtCQWxCTSxDQUFKO0FBQU47QUFvQkgiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgIENPUFlSSUdIVCAoYykgMjAxOSBTQU1TVU5HIEVMRUNUUk9OSUNTIENPLiwgTFRELiAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICBBTEwgUklHSFRTIFJFU0VSVkVEICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQgdG8gbGljZW5zZWVzIG9mIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuICAgICAgICAvXG4vICAgcHJvZHVjdHMgdG8gdXNlIG9yIGFic3RyYWN0IHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiAgICAgICAgIC9cbi8gICBpbXBsZW1lbnRpbmcgYSBwcm9kdWN0IGJhc2VkIG9uIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIHByb2R1Y3RzLiAgICAgICAgICAgL1xuLyAgIE5vIG90aGVyIHJpZ2h0cyB0byByZXByb2R1Y2UsIHVzZSwgb3IgZGlzc2VtaW5hdGUgdGhpcyBjb21wdXRlciBwcm9ncmFtLCAgICAgICAgICAvXG4vICAgd2hldGhlciBpbiBwYXJ0IG9yIGluIHdob2xlLCBhcmUgZ3JhbnRlZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8gXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBtYWtlcyBubyByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50aWVzIHdpdGggICAgICAgICAgL1xuLyAgIHJlc3BlY3QgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgYW5kIHNwZWNpZmljYWxseSBkaXNjbGFpbXMgICAvXG4vICAgYW55IHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgZGFtYWdlcywgc3BlY2lhbCBvciBjb25zZXF1ZW50aWFsLCBjb25uZWN0ZWQgICAgICAgICAgIC9cbi8gICB3aXRoIHRoZSB1c2Ugb2YgdGhpcyBwcm9ncmFtLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cblxuXG5ERVNDUklQVElPTjogPFJvb3QgSW5kZXggZmlsZSBmb3IgcnVubmluZyBTYWdhcz4gKlxuQE5BTUUgOiBpbmRleFNhZ2EuanNcbkBBVVRIT1JTOiBKYXkgSGl0ZXNoIFNhbmdoYXZpIFxuQFZlcnNpb24gOiAxLjAgKlxuQFJFVklTSU9OIEhJU1RPUllcblswMy8wNi8yMDE5XSBbSmF5XSA6IFByb3RvdHlwaW5nLi4uLi4uLi4uLi8vLy8vLy8vLy8vLy8vLy8vLy8vXG4qL1xuXG5pbXBvcnQgeyBhbGwgfSBmcm9tICdyZWR1eC1zYWdhL2VmZmVjdHMnO1xuaW1wb3J0IGhlYWRlcldhdGNoZXIgZnJvbSBcIi4vaGVhZGVyU2FnYVwiXG5pbXBvcnQge2Rhc2hib2FyZFdhdGNoZXJ9IGZyb20gXCIuL2Rhc2hib2FyZFNhZ2FcIlxuaW1wb3J0IHtjb25maWd1cmF0aW9uc2V0dGluZ1dhdGNoZXJ9IGZyb20gXCIuL2NvbmZpZ3VyYXRpb25zZXR0aW5nU2FnYVwiXG5pbXBvcnQge2xvZ01hbmFnZW1lbnRXYXRjaGVyfSBmcm9tIFwiLi9sb2dNYW5hZ2VtZW50U2FnYVwiXG5pbXBvcnQge2FsZXJ0TWFuYWdlbWVudENvbnRhaW5lcldhdGNoZXJ9IGZyb20gXCIuL2FsZXJ0TWFuYWdlbWVudFNhZ2FcIlxuaW1wb3J0IHthbGVydE1hbmFnZW1lbnRBbGVydFRhYmxlV2F0Y2hlcn0gZnJvbSBcIi4vYWxlcnRNYW5hZ2VtZW50QWxlcnRUYWJsZVNhZ2FcIlxuaW1wb3J0IHthbGVydE1hbmFnZW1lbnRBZGROZXdBbGVydHNXYXRjaGVyfSBmcm9tIFwiLi9hbGVydE1hbmFnZW1lbnRBZGROZXdBbGVydHNTYWdhXCJcbmltcG9ydCB7YXV0aGVudGljYXRpb25XYXRjaGVyfSBmcm9tIFwiLi9hdXRoZW50aWNhdGlvblNhZ2FcIlxuaW1wb3J0IHt1c2VyTWFuYWdlbWVudENvbnRhaW5lcldhdGNoZXJ9IGZyb20gXCIuL3VzZXJNYW5hZ2VtZW50U2FnYVwiXG5pbXBvcnQge3VzZXJNYW5hZ2VtZW50VXNlclRhYmxlV2F0Y2hlcn0gZnJvbSBcIi4vdXNlck1hbmFnZW1lbnRVc2VyVGFibGVTYWdhXCJcbmltcG9ydCB7dXNlck1hbmFnZW1lbnRBZGROZXdVc2Vyc1dhdGNoZXJ9IGZyb20gXCIuL3VzZXJNYW5hZ2VtZW50QWRkTmV3VXNlcnNTYWdhXCJcbmltcG9ydCBzdG9yYWdlV2F0Y2hlciBmcm9tIFwiLi9zdG9yYWdlU2FnYVwiO1xuaW1wb3J0IHBlcmZvcm1hbmNlV2F0Y2hlciBmcm9tICcuL3BlcmZvcm1hbmNlU2FnYSc7XG5pbXBvcnQge2hhcmR3YXJlT3ZlcnZpZXdXYXRjaGVyfSBmcm9tICcuL2hhcmR3YXJlT3ZlcnZpZXdTYWdhJ1xuaW1wb3J0IHtoYXJkd2FyZVNlbnNvcldhdGNoZXJ9IGZyb20gJy4vaGFyZHdhcmVTZW5zb3JTYWdhJ1xuaW1wb3J0IHtoYXJkd2FyZUhlYWx0aFdhdGNoZXJ9IGZyb20gJy4vaGFyZHdhcmVIZWFsdGhTYWdhJ1xuaW1wb3J0IHtoYXJkd2FyZVBvd2VyTWFuYWdlbWVudFdhdGNoZXJ9IGZyb20gJy4vaGFyZHdhcmVQb3dlck1hbmFnZW1lbnRTYWdhJ1xuaW1wb3J0IHtCTUNBdXRoZW50aWNhdGlvbldhdGNoZXJ9IGZyb20gJy4vQk1DQXV0aGVudGljYXRpb25TYWdhJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogcm9vdFNhZ2EoKSB7XG4gICAgeWllbGQgYWxsKFtcbiAgICAgICAgaGVhZGVyV2F0Y2hlcigpLFxuICAgICAgICBkYXNoYm9hcmRXYXRjaGVyKCksXG4gICAgICAgIGNvbmZpZ3VyYXRpb25zZXR0aW5nV2F0Y2hlcigpLFxuICAgICAgICBsb2dNYW5hZ2VtZW50V2F0Y2hlcigpLFxuICAgICAgICBhbGVydE1hbmFnZW1lbnRDb250YWluZXJXYXRjaGVyKCksXG4gICAgICAgIGFsZXJ0TWFuYWdlbWVudEFsZXJ0VGFibGVXYXRjaGVyKCksXG4gICAgICAgIGFsZXJ0TWFuYWdlbWVudEFkZE5ld0FsZXJ0c1dhdGNoZXIoKSxcbiAgICAgICAgc3RvcmFnZVdhdGNoZXIoKSxcbiAgICAgICAgcGVyZm9ybWFuY2VXYXRjaGVyKCksXG4gICAgICAgIGF1dGhlbnRpY2F0aW9uV2F0Y2hlcigpLFxuICAgICAgICB1c2VyTWFuYWdlbWVudENvbnRhaW5lcldhdGNoZXIoKSxcbiAgICAgICAgdXNlck1hbmFnZW1lbnRVc2VyVGFibGVXYXRjaGVyKCksXG4gICAgICAgIHVzZXJNYW5hZ2VtZW50QWRkTmV3VXNlcnNXYXRjaGVyKCksXG4gICAgICAgIGhhcmR3YXJlT3ZlcnZpZXdXYXRjaGVyKCksXG4gICAgICAgIGhhcmR3YXJlU2Vuc29yV2F0Y2hlcigpLFxuICAgICAgICBoYXJkd2FyZUhlYWx0aFdhdGNoZXIoKSxcbiAgICAgICAgaGFyZHdhcmVQb3dlck1hbmFnZW1lbnRXYXRjaGVyKCksXG4gICAgICAgIEJNQ0F1dGhlbnRpY2F0aW9uV2F0Y2hlcigpLFxuICAgIF0pO1xufSJdfQ==