{"version":3,"sources":["index.js"],"names":["styles","theme","root","flexGrow","summaryOuterGrid","border","maxWidth","minHeight","maxHeight","overflowY","overflowX","justifyContent","background","summaryInfoHeader","textAlign","color","fontSize","borderRadius","width","marginLeft","lineHeight","overviewPaper","summaryCard","backgroundColor","flexBasis","SpecifySummaryCard","marginTop","spacing","boxShadow","textField","marginRight","PowerSummary","Component","constructor","props","componentDidMount","fetchPowerSummary","fetchPowerInfo","render","classes","powerconsumption","readOnly","input","currentpowermode","mapStateToProps","state","hardwarePowerManagementReducer","hardwareOverviewReducer","mapDispatchToProps","dispatch","type","actionTypes","SAGA_HARDWARE_POWER_MANAGEMENT_FETCH_POWER_SUMMARY_INFORMATION","SAGA_HARDWARE_OVERVIEW_FETCH_POWER_INFORMATION","withStyles","connect"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: Power Summary Component\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi\n@Version : 1.0 \n@REVISION HISTORY\n[03/11/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport * as actionTypes from '../../../store/actions/actionTypes';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    summaryOuterGrid: {\n        border: '1px solid gray',\n        maxWidth: '100%',\n        minHeight: '100px',\n        maxHeight: '150px',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        justifyContent: 'left',\n        background: '#fff'\n    },\n\n    summaryInfoHeader: {\n        textAlign: 'left',\n        color: 'rgba(255, 255, 255, 0.87)',\n        fontSize: '14px',\n        borderRadius: '0px',\n        width: '100%',\n        marginLeft: '10px',\n        lineHeight: '2',\n    },\n\n    overviewPaper: {\n        width: '100%',\n    },\n\n    summaryCard: {\n        backgroundColor: '#788595',\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '30px',\n        flexBasis: '100%'\n    },\n\n    SpecifySummaryCard: {\n        marginTop: theme.spacing(2),\n        borderRadius: '0px',\n        boxShadow: 'none',\n    },\n    textField: {\n        color: \"black\",\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        width: 300,\n    },\n\n});\n\nclass PowerSummary extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n       this.props.fetchPowerSummary();\n       this.props.fetchPowerInfo();\n    }\n  \n    render() {\n        const { classes } = this.props;\n        return (\n            <Card className={classes.SpecifySummaryCard}>\n                <Grid container className={classes.summaryOuterGrid}>\n                    <Grid className={classes.summaryCard}>\n                        <Typography className={classes.summaryInfoHeader}>\n                            Power Summary\n                        </Typography>\n                    </Grid>\n                    <TextField className={classes.textField}\n                        id=\"standard-required\"\n                        margin=\"none\"\n                        value={this.props.powerconsumption === 0 ? \"Error\" : this.props.powerconsumption}\n                        label=\"Total Power Consumption (Watts)\"\n                        disabled\n                         InputProps={{\n                            readOnly: true,\n                             classes: {\n                            input: classes.textField\n                         }\n                    }}\n                    />\n                    <TextField className={classes.textField}\n                        id=\"standard-required\"\n                        margin=\"none\"\n                        value={this.props.currentpowermode}\n                        disabled\n                        label=\"Current Power Mode\"\n                          InputProps={{\n                            readOnly: true,\n                             classes: {\n                            input: classes.textField\n                         }\n                    }}\n                    />\n                </Grid>\n            </Card>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentpowermode:state.hardwarePowerManagementReducer.currentpowermode,\n        powerconsumption:state.hardwareOverviewReducer.powerconsumption,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchPowerSummary: () => dispatch({ type: actionTypes.SAGA_HARDWARE_POWER_MANAGEMENT_FETCH_POWER_SUMMARY_INFORMATION }),\n        fetchPowerInfo: () => dispatch({ type: actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_POWER_INFORMATION }),\n    };\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(((PowerSummary))));"]}