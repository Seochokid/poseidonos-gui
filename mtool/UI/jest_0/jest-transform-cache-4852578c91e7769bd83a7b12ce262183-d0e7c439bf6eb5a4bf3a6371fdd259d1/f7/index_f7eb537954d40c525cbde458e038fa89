efec3f4813443edc231aa00c04d85a85
/* istanbul ignore next */
"use strict";

var cov_gun7mek9y = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/AddNewUser/index.js";
  var hash = "ceb01ca360cec4c185e5ed8356d8412b855e8ad9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/AddNewUser/index.js",
    statementMap: {
      "0": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 129,
          column: 1
        }
      },
      "1": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 128,
          column: 6
        }
      },
      "2": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 21
        }
      },
      "3": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 10
        }
      },
      "4": {
        start: {
          line: 140,
          column: 28
        },
        end: {
          line: 140,
          column: 38
        }
      },
      "5": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "6": {
        start: {
          line: 163,
          column: 57
        },
        end: {
          line: 163,
          column: 89
        }
      },
      "7": {
        start: {
          line: 164,
          column: 52
        },
        end: {
          line: 164,
          column: 98
        }
      },
      "8": {
        start: {
          line: 193,
          column: 52
        },
        end: {
          line: 193,
          column: 98
        }
      },
      "9": {
        start: {
          line: 209,
          column: 52
        },
        end: {
          line: 209,
          column: 98
        }
      },
      "10": {
        start: {
          line: 215,
          column: 57
        },
        end: {
          line: 215,
          column: 127
        }
      },
      "11": {
        start: {
          line: 242,
          column: 52
        },
        end: {
          line: 242,
          column: 98
        }
      },
      "12": {
        start: {
          line: 248,
          column: 93
        },
        end: {
          line: 248,
          column: 123
        }
      },
      "13": {
        start: {
          line: 249,
          column: 93
        },
        end: {
          line: 249,
          column: 123
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        },
        loc: {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 38
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        loc: {
          start: {
            line: 132,
            column: 23
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 132
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        loc: {
          start: {
            line: 139,
            column: 13
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 139
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 163,
            column: 46
          },
          end: {
            line: 163,
            column: 47
          }
        },
        loc: {
          start: {
            line: 163,
            column: 57
          },
          end: {
            line: 163,
            column: 89
          }
        },
        line: 163
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 164,
            column: 47
          },
          end: {
            line: 164,
            column: 48
          }
        },
        loc: {
          start: {
            line: 164,
            column: 52
          },
          end: {
            line: 164,
            column: 98
          }
        },
        line: 164
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 193,
            column: 47
          },
          end: {
            line: 193,
            column: 48
          }
        },
        loc: {
          start: {
            line: 193,
            column: 52
          },
          end: {
            line: 193,
            column: 98
          }
        },
        line: 193
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 209,
            column: 47
          },
          end: {
            line: 209,
            column: 48
          }
        },
        loc: {
          start: {
            line: 209,
            column: 52
          },
          end: {
            line: 209,
            column: 98
          }
        },
        line: 209
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 215,
            column: 46
          },
          end: {
            line: 215,
            column: 47
          }
        },
        loc: {
          start: {
            line: 215,
            column: 57
          },
          end: {
            line: 215,
            column: 127
          }
        },
        line: 215
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 242,
            column: 47
          },
          end: {
            line: 242,
            column: 48
          }
        },
        loc: {
          start: {
            line: 242,
            column: 52
          },
          end: {
            line: 242,
            column: 98
          }
        },
        line: 242
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 248,
            column: 85
          },
          end: {
            line: 248,
            column: 86
          }
        },
        loc: {
          start: {
            line: 248,
            column: 91
          },
          end: {
            line: 248,
            column: 125
          }
        },
        line: 248
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 249,
            column: 85
          },
          end: {
            line: 249,
            column: 86
          }
        },
        loc: {
          start: {
            line: 249,
            column: 91
          },
          end: {
            line: 249,
            column: 125
          }
        },
        line: 249
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 164,
            column: 52
          },
          end: {
            line: 164,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 52
          },
          end: {
            line: 164,
            column: 76
          }
        }, {
          start: {
            line: 164,
            column: 80
          },
          end: {
            line: 164,
            column: 98
          }
        }],
        line: 164
      },
      "1": {
        loc: {
          start: {
            line: 193,
            column: 52
          },
          end: {
            line: 193,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 52
          },
          end: {
            line: 193,
            column: 76
          }
        }, {
          start: {
            line: 193,
            column: 80
          },
          end: {
            line: 193,
            column: 98
          }
        }],
        line: 193
      },
      "2": {
        loc: {
          start: {
            line: 209,
            column: 52
          },
          end: {
            line: 209,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 52
          },
          end: {
            line: 209,
            column: 76
          }
        }, {
          start: {
            line: 209,
            column: 80
          },
          end: {
            line: 209,
            column: 98
          }
        }],
        line: 209
      },
      "3": {
        loc: {
          start: {
            line: 242,
            column: 52
          },
          end: {
            line: 242,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 52
          },
          end: {
            line: 242,
            column: 76
          }
        }, {
          start: {
            line: 242,
            column: 80
          },
          end: {
            line: 242,
            column: 98
          }
        }],
        line: 242
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "ceb01ca360cec4c185e5ed8356d8412b855e8ad9"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));

var
/* istanbul ignore next */
_MuiThemeProvider = _interopRequireDefault(require("@material-ui/core/styles/MuiThemeProvider"));

var
/* istanbul ignore next */
_core = require("@material-ui/core");

var
/* istanbul ignore next */
_materialUiPhoneNumber = _interopRequireDefault(require("material-ui-phone-number"));

/* istanbul ignore next */
require("./AddNewUser.css");

var
/* istanbul ignore next */
_theme = require("../../theme");

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/AddNewUser/index.js";
cov_gun7mek9y.s[0]++;

const styles = theme => {
  /* istanbul ignore next */
  cov_gun7mek9y.f[0]++;
  cov_gun7mek9y.s[1]++;
  return {
    addNewUserOuterGrid: {
      maxWidth: '100%',
      flexBasis: '100%',
      justifyContent: 'center'
    },
    addNewUserFirstInnerGrid: {
      border: '1px solid gray',
      paddingBottom: theme.spacing(2),
      backgroundColor: '#fff'
    },
    gridTypography: {
      maxWidth: '100%',
      flexBasis: '100%',
      maxHeight: '5%'
    },
    addNewUserTypography: {
      textAlign: 'left',
      fontSize: '14px',
      fontWeight: 'bold',
      color: '#424780',
      margin: theme.spacing(1.5)
    },
    addNewUserSecondInnerGrid: {
      maxWidth: '40%',
      maxHeight: '70%',
      flexBasis: '40%'
    },
    addNewUserThirdInnerGrid: {
      maxWidth: '20%',
      flexBasis: '20%',
      maxHeight: '70%'
    },
    textField: {
      marginLeft: theme.spacing(3),
      width: '70%',
      [theme.breakpoints.down('xs')]: {
        marginLeft: 0
      }
    },
    fieldContainer: {
      [theme.breakpoints.down('xs')]: {
        display: 'flex',
        justifyContent: 'center'
      }
    },
    formWrapper: {
      paddingTop: theme.spacing(2)
    },
    textFieldAfterDropdown: {
      marginLeft: theme.spacing(3),
      width: '70%',
      marginTop: theme.spacing(1)
    },
    selectFieldItem: {
      marginLeft: theme.spacing(3),
      marginTop: theme.spacing(2),
      color: 'black',
      width: '70%',
      textTransform: 'uppercase',
      [theme.breakpoints.down('xs')]: {
        marginLeft: 0
      }
    },
    selectMenuItem: {
      color: 'black',
      textTransform: 'uppercase'
    },
    button: {
      margin: theme.spacing(1),
      textTransform: 'none',
      paddingTop: '1px',
      maxHeight: '25px',
      color: 'white',
      marginBottom: 0,
      '&:hover': {
        background: 'rgb(94,104,116)',
        // borderColor: 'black',
        color: 'white'
      }
    },
    buttonGroup: {
      alignItems: 'flex-end'
    },
    buttonContainer: {
      [theme.breakpoints.down('xs')]: {
        justifyContent: 'center'
      }
    }
  };
};

class AddNewUser extends
/* istanbul ignore next */
_react.
/* istanbul ignore next */
Component {
  constructor(props) {
    /* istanbul ignore next */
    cov_gun7mek9y.f[1]++;
    cov_gun7mek9y.s[2]++;
    super(props);

    /* istanbul ignore next */
    cov_gun7mek9y.s[3]++;
    this.state = {};
  }

  render() {
    /* istanbul ignore next */
    cov_gun7mek9y.f[2]++;

    const _ref = (cov_gun7mek9y.s[4]++, this.props),
          classes = _ref.classes;

    /* istanbul ignore next */
    cov_gun7mek9y.s[5]++;
    return (
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        sm: 6,
        xs: 12,
        direction: "row",
        className: classes.addNewUserOuterGrid,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 142
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        xs: 12,
        direction: "row",
        className: classes.addNewUserFirstInnerGrid,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 144
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _MuiThemeProvider.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        theme:
        /* istanbul ignore next */
        _theme.
        /* istanbul ignore next */
        PageTheme,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 145
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        className: classes.gridTypography,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 146
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Typography,
      /* istanbul ignore next */
      {
        className: classes.addNewUserTypography,
        variant: "h3",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 147
        },
        __self: this
      },
      /* istanbul ignore next */
      "Add New User")),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        sm: 8,
        md: 10,
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        className: classes.formWrapper,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 149
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        className: classes.fieldContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 150
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      TextField,
      /* istanbul ignore next */
      {
        className: classes.textField,
        required:
        /* istanbul ignore next */
        true,
        multiline:
        /* istanbul ignore next */
        true,
        rowsMax: "1",
        inputProps: {
          "data-testid": "add-user-name"
        },
        margin: "none",
        value: this.props.username,
        name: "username",
        label: "User Name",
        placeholder: "Enter User Name",
        onChange: event => {
          /* istanbul ignore next */
          cov_gun7mek9y.f[3]++;
          cov_gun7mek9y.s[6]++;
          return this.props.OnHandleChange(event);
        },
        onKeyDown: e => {
          /* istanbul ignore next */
          cov_gun7mek9y.f[4]++;
          cov_gun7mek9y.s[7]++;
          return (
            /* istanbul ignore next */
            (cov_gun7mek9y.b[0][0]++, /[+-,#, ,]$/.test(e.key)) &&
            /* istanbul ignore next */
            (cov_gun7mek9y.b[0][1]++, e.preventDefault())
          );
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 151
        },
        __self: this
      })),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        className: classes.fieldContainer,
        item:
        /* istanbul ignore next */
        true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 167
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Select,
      /* istanbul ignore next */
      {
        disabled:
        /* istanbul ignore next */
        true,
        className: classes.selectFieldItem,
        value: "admin",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 168
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      MenuItem,
      /* istanbul ignore next */
      {
        className: classes.selectMenuItem,
        value: "admin",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 173
        },
        __self: this
      },
      /* istanbul ignore next */
      " admin "))),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        className: classes.fieldContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 180
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      TextField,
      /* istanbul ignore next */
      {
        className: classes.textField,
        required:
        /* istanbul ignore next */
        true,
        inputProps: {
          "data-testid": "add-user-password"
        },
        margin: "none",
        value: this.props.password,
        name: "password",
        type: "password",
        label: "Password",
        placeholder: "Enter Initial Password",
        onChange: this.props.OnHandleChange,
        onKeyDown: e => {
          /* istanbul ignore next */
          cov_gun7mek9y.f[5]++;
          cov_gun7mek9y.s[8]++;
          return (
            /* istanbul ignore next */
            (cov_gun7mek9y.b[1][0]++, /[+-,#, ,]$/.test(e.key)) &&
            /* istanbul ignore next */
            (cov_gun7mek9y.b[1][1]++, e.preventDefault())
          );
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 181
        },
        __self: this
      })),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        className: classes.fieldContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 196
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      TextField,
      /* istanbul ignore next */
      {
        className: classes.textField,
        required:
        /* istanbul ignore next */
        true,
        inputProps: {
          "data-testid": "add-user-confirm-password"
        },
        type: "password",
        margin: "none",
        value: this.props.confirmpassword,
        name: "confirmpassword",
        label: "Confirm Password",
        placeholder: "Please Confirm Password",
        onChange: this.props.OnHandleChange,
        onKeyDown: e => {
          /* istanbul ignore next */
          cov_gun7mek9y.f[6]++;
          cov_gun7mek9y.s[9]++;
          return (
            /* istanbul ignore next */
            (cov_gun7mek9y.b[2][0]++, /[+-,#, ,]$/.test(e.key)) &&
            /* istanbul ignore next */
            (cov_gun7mek9y.b[2][1]++, e.preventDefault())
          );
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 197
        },
        __self: this
      })),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        className: classes.fieldContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 212
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _materialUiPhoneNumber.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        inputClass: classes.textField,
        onChange: value => {
          /* istanbul ignore next */
          cov_gun7mek9y.f[7]++;
          cov_gun7mek9y.s[10]++;
          return this.props.OnHandleChange({
            target: {
              value,
              name: 'mobilenumber'
            }
          });
        },
        inputProps: {
          'data-testid': "add-user-phno",
          name: 'mobilenumber',
          label: 'Mobile Number',
          value: this.props.mobilenumber
        },
        required:
        /* istanbul ignore next */
        true,
        label: "Phone Number" // onlyCountries={['in', 'kr']}
        ,
        defaultCountry: "kr",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 213
        },
        __self: this
      })),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        className: classes.fieldContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 228
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      TextField,
      /* istanbul ignore next */
      {
        className: classes.textField,
        required:
        /* istanbul ignore next */
        true,
        multiline:
        /* istanbul ignore next */
        true,
        rowsMax: "1",
        inputProps: {
          "data-testid": "add-user-email"
        },
        margin: "none",
        value: this.props.emailid,
        name: "emailid",
        label: "Email ID",
        placeholder: "Enter Email Id",
        onChange: this.props.OnHandleChange,
        onKeyDown: e => {
          /* istanbul ignore next */
          cov_gun7mek9y.f[8]++;
          cov_gun7mek9y.s[11]++;
          return (
            /* istanbul ignore next */
            (cov_gun7mek9y.b[3][0]++, /[+-,#, ,]$/.test(e.key)) &&
            /* istanbul ignore next */
            (cov_gun7mek9y.b[3][1]++, e.preventDefault())
          );
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 229
        },
        __self: this
      }))),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Grid,
      /* istanbul ignore next */
      {
        sm: 4,
        md: 2,
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        className: classes.buttonContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 246
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      ButtonGroup,
      /* istanbul ignore next */
      {
        size: "small",
        color: "primary",
        className: classes.buttonGroup,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 247
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Button,
      /* istanbul ignore next */
      {
        color: "primary",
        variant: "contained",
        onClick: () => {
          /* istanbul ignore next */
          cov_gun7mek9y.f[9]++;
          cov_gun7mek9y.s[12]++;
          this.props.openAlert("Cancel");
        },
        className: classes.button,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 248
        },
        __self: this
      },
      /* istanbul ignore next */
      "Cancel"),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Button,
      /* istanbul ignore next */
      {
        color: "primary",
        variant: "contained",
        onClick: () => {
          /* istanbul ignore next */
          cov_gun7mek9y.f[10]++;
          cov_gun7mek9y.s[13]++;
          this.props.openAlert("Submit");
        },
        className: classes.button,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 249
        },
        __self: this
      },
      /* istanbul ignore next */
      "Submit"))))))
    );
  }

}

/* istanbul ignore next */
var _default =
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_core.
/* istanbul ignore next */
withStyles)(styles)(AddNewUser);

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,