{"version":3,"sources":["index.js"],"names":["styles","theme","multilineColor","color","root","flexGrow","Paper","marginTop","spacing","width","maxHeight","powerParentGrid","maxWidth","flexBasis","minHeight","powerOuterGrid","border","overflowY","overflowX","background","DriveTable","Component","constructor","props","overrides","MuiSvgIcon","MuiTablePagination","menuItem","fontSize","select","toolbar","palette","primary","main","secondary","state","columns","title","field","cellStyle","fontFamily","render","rowData","SlotNumber","Status","Health","Health_OK_Icon","Health_NOT_OK_Icon","SerialNumber","Firmware","State","Capacity","active","console","log","componentDidMount","classes","Check","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","Search","ThirdStateCheck","Remove","DetailPanel","Export","SaveAlt","Filter","FilterList","Add","Edit","EditIcon","Delete","TrashIcon","SortArrow","ArrowUpward","Clear","chassis_front_list","actionsColumnIndex","selection","sorting","rowStyle","search","paginationType","loadingType","maxBodyHeight","headerStyle","backgroundColor","height","paddingTop","paddingBottom","mapStateToProps","hardwareOverviewReducer"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: Drives Page Drive Component\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi\n@Version : 1.0 \n@REVISION HISTORY\n[03/11/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport { Paper, Switch , createMuiTheme, } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport Search from '@material-ui/icons/Search';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Add from '@material-ui/icons/Add';\nimport Check from '@material-ui/icons/Check';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Remove from '@material-ui/icons/Remove';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TrashIcon from '@material-ui/icons/Delete';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Clear from '@material-ui/icons/Clear';\nimport Health_OK_Icon from '../../../assets/images/Ok14x14.png'\nimport Health_NOT_OK_Icon from '../../../assets/images/Not-Ok14x14.png'\nimport * as actionTypes from '../../../store/actions/actionTypes';\n\nconst styles = theme => ({\n    multilineColor: {\n        color: 'black'\n    },\n    root: {\n        flexGrow: 1,\n    },\n\n    Paper: {\n        marginTop: theme.spacing(2),\n        width: '100%',\n        maxHeight: '100%'\n    },\n    powerParentGrid: {\n        maxWidth: '100%',\n        flexBasis: '100%',\n        minHeight: '100%'\n    },\n\n    powerOuterGrid: {\n        border: '1px solid gray',\n        maxWidth: '100%',\n        flexBasis: '100%',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        background: '#fff',\n    },\n});\n\n\nclass DriveTable extends Component {\n    constructor(props) {\n        super(props);\n        this.theme = createMuiTheme({\n            overrides: {\n                MuiSvgIcon: {\n                    //  stylesheet name\n                    root: {\n                        //  rule name\n                        color: '#808080',\n                    },\n                },\n                MuiTablePagination: {\n                    menuItem: {\n                        fontSize: \"12px\",\n                        minHeight: \"0px\"\n                    },\n                    select: {\n                        width: \"45px\"\n                    },\n                    toolbar: {\n                        maxHeight: '50px',\n                        minHeight: '20px'\n                    },\n                },\n            },\n\n            palette: {\n                primary: {\n                    main: '#4caf50',\n                },\n                secondary: {\n                    main: '#808080',\n                },\n            },\n        });\n\n        this.state = {\n            columns: [\n                {\n                    title: 'Slot Number',\n                    field: 'SlotNumber',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                    (\n                       <p>{rowData.SlotNumber? rowData.SlotNumber : 'NA'}</p>\n                    ), \n                },\n                {\n                    title: 'Health',\n                    field: 'Status.Health',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                    (\n                       <img src={(rowData.Status && rowData.Status.Health === 'OK') ? Health_OK_Icon : Health_NOT_OK_Icon} />\n                    ), \n                },\n                {\n                    title: 'Serial Number',\n                    field: 'SerialNumber',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                    (\n                       <p>{rowData.SerialNumber !== '' ? rowData.SerialNumber : 'NA'}</p>\n                    ), \n                },\n                {\n                    title: 'Firmware',\n                    field: 'Firmware',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                    (\n                       <p>{rowData.Firmware ? rowData.Firmware : 'NA'}</p>\n                    ), \n                },\n                {\n                    title: 'State',\n                    field: 'State',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                    (\n                       <p>{rowData.State ? rowData.State : 'NA'}</p>\n                    ), \n                },\n                {\n                    title: 'Raw Capacity',\n                    field: 'RawCapacity',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                    (\n                       <p>{rowData.Capacity ? rowData.Capacity : 'NA'}</p>\n                    ), \n                },\n                {\n                    title: 'LED',\n                    field: 'active',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                    (\n                        <Switch\n                          size=\"small\"\n                          checked={rowData.active}\n                          onChange={() => console.log(\"Switch\")} // this.props.togglealertstatus(row.tableData.id)}\n                          color=\"primary\"\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                    ), \n                },\n            ],\n        };\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.Paper}>\n                <Grid sm={6} xs={12} item container className={classes.powerParentGrid}>\n                    <Grid xs={12} item className={classes.powerOuterGrid} data-testid=\"DriveTable-table\">\n                        <ThemeProvider theme={this.theme}>\n                            <MaterialTable\n                                icons={{\n                                    Check,\n                                    FirstPage,\n                                    LastPage,\n                                    NextPage: ChevronRight,\n                                    PreviousPage: ChevronLeft,\n                                    Search,\n                                    ThirdStateCheck: Remove,\n                                    DetailPanel: ChevronRight,\n                                    Export: SaveAlt,\n                                    Filter: FilterList,\n                                    Add,\n                                    Edit: EditIcon,\n                                    Delete: TrashIcon,\n                                    SortArrow: ArrowUpward,\n                                    Clear,\n                                }}\n                                columns={this.state.columns}\n                                data={this.props.chassis_front_list}\n                                options={{\n                                    actionsColumnIndex: -1,\n                                    selection: false,\n                                    sorting: true,\n                                    toolbar: false,\n                                    rowStyle: {\n                                        fontSize: '4px',\n                                    },\n                                    search: false,\n                                    paginationType: 'normal',\n                                    loadingType: 'linear',\n                                    maxBodyHeight: '260px',\n                                    headerStyle: {\n                                        backgroundColor: '#788595',\n                                        color: 'rgba(255, 255, 255, 0.87)',\n                                        fontSize: '14px',\n                                        height: '10%',\n                                        paddingTop: '2px',\n                                        paddingBottom: '2px',\n                                    },\n                                }}\n\n                            />\n                        </ThemeProvider>\n                    </Grid>\n                </Grid>\n            </Paper>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        chassis_front_list: state.hardwareOverviewReducer.chassis_front_list,\n    };\n}\n\n\nexport default withStyles(styles)((connect(mapStateToProps))(((DriveTable))));"]}