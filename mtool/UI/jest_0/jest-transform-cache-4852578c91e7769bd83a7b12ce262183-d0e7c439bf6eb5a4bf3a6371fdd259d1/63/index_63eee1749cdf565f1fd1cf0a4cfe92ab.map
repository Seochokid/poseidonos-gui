{"version":3,"sources":["index.js"],"names":["styles","theme","root","display","flexDirection","height","nodata","flex","alignItems","justifyContent","marginTop","spacing","title","paddingTop","Chart","Component","constructor","props","data","width","margin","xAxis","d3AxisBottom","scale","state","xScale","ticks","yAxis","d3AxisLeft","tickFormat","d3Format","yScale","linePath","circlePoints","constLinePath","areaGraph","rectangles","d3ScaleTime","d3ScaleLinear","range","tooltipStyle","left","top","position","pointerEvents","value","time","componentDidUpdate","interval","d3timeFormat","d3Select","xAxisRef","call","yAxisRef","selectAll","attr","yAxisGrids","tickSize","xAxisGrids","yGridRef","xGridRef","getDerivedStateFromProps","nextProps","prevState","selectX","datum","Date","selectY","selectYConst","constValue","columns","values","maxValue","timeDomain","d3ArrayExtent","valMax","d3ArrayMax","domain","selectScaledX","selectScaledY","sparkLine","d3Line","x","y","constSparkLine","map","t","area","d3Area","y0","y1","mouseOverPoint","event","boundingRectangle","target","getBoundingClientRect","bodyBound","document","getElementsByTagName","right","setState","getAttribute","mouseOut","render","classes","renderGraph","chartName","datatestid","overflow","r","circlePoint","bind","scatterId","textAnchor","yLabel","withStyles"],"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <File description> *\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[12/06/2018] [Aswin] : Changed X axis time format. Y axis values rotated\n*/\nimport React, { Component } from 'react';\nimport { extent as d3ArrayExtent, max as d3ArrayMax } from 'd3-array';\nimport { timeFormat as d3timeFormat } from 'd3-time-format';\nimport { format as d3Format } from 'd3-format';\nimport {\n  scaleLinear as d3ScaleLinear,\n  scaleTime as d3ScaleTime,\n} from 'd3-scale';\nimport { axisBottom as d3AxisBottom, axisLeft as d3AxisLeft } from 'd3-axis';\nimport { select as d3Select } from 'd3-selection';\nimport { line as d3Line, area as d3Area } from 'd3-shape';\nimport { Paper, Typography, withStyles } from '@material-ui/core';\n// import Loader from 'react-loader-spinner';\nimport './Chart.css';\nimport Tooltip from './Tooltip';\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: 350\n  },\n  nodata: {\n    display: 'flex',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: -theme.spacing(3)\n  },\n  title: {\n    paddingTop: theme.spacing(1)\n  }\n});\n\nclass Chart extends Component {\n  data = [];\n\n  height = 280;\n\n  width = 800;\n\n  margin = 20;\n\n  constructor(props) {\n    super(props)\n  this.state = {\n    linePath: null,\n    circlePoints: null,\n    constLinePath: null,\n    areaGraph: null,\n    rectangles: null,\n    xScale: d3ScaleTime(),\n    yScale: d3ScaleLinear().range([this.height, 0]),\n    tooltipStyle: {\n      left: '0px',\n      top: '0px',\n      display: 'none',\n      position: 'absolute',\n      pointerEvents: 'none',\n    },\n    value: null,\n    time: null,\n  };\n  }\n\n  xAxis = d3AxisBottom()\n    .scale(this.state.xScale)\n    .ticks(4);\n\n  yAxis = d3AxisLeft()\n    .tickFormat(d3Format('.2s'))\n    .scale(this.state.yScale);\n\n  componentDidUpdate() {\n    if (!(this.props.interval === '7d' || this.props.interval === '30d')) {\n      this.xAxis.tickFormat(d3timeFormat('%H:%M:%S'));\n    } else {\n      this.xAxis.tickFormat(d3timeFormat('%m/%d %H:%M'));\n    }\n    d3Select(this.xAxisRef).call(this.xAxis);\n    d3Select(this.yAxisRef)\n      .call(this.yAxis)\n      .selectAll('text')\n      .attr('transform', 'rotate(45)');\n    const yAxisGrids = d3AxisLeft(this.state.yScale)\n      .tickFormat('')\n      .tickSize(-this.props.width + 100);\n    const xAxisGrids = d3AxisBottom(this.state.xScale)\n      .tickFormat('')\n      .tickSize(280);\n    d3Select(this.yGridRef).call(yAxisGrids);\n    d3Select(this.xGridRef).call(xAxisGrids);\n  }\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log(\"nextProps.columns\",nextProps.columns)\n    // if (!nextProps.columns) return null;\n    \n    const selectX = datum => new Date(datum.time);\n    const selectY = datum => datum.value;\n    const selectYConst = () => nextProps.constValue;\n    \n\n    // console.log(\"nextProps.columns.values\",nextProps.columns.values)\n    // const data = nextProps.columns.values || [];\n    const data = nextProps.columns && nextProps.columns.values ? nextProps.columns.values : [];\n\n    const { width, maxValue } = nextProps;\n    const { xScale, yScale } = prevState;\n    xScale.range([0, width ? width - 100 : 300]);\n    const timeDomain = d3ArrayExtent(data, selectX);\n    let valMax = d3ArrayMax(data, selectY);\n    if (nextProps.constValue) {\n      if(valMax < nextProps.constValue) {\n        valMax = nextProps.constValue;\n      }\n    }\n    xScale.domain(timeDomain);\n    if (maxValue) {\n      yScale.domain([0, 100]);\n    } else {\n      yScale.domain([0, valMax !== 0 ? valMax * 1.25 : 10]);\n    }\n\n    const selectScaledX = datum => xScale(selectX(datum));\n    const selectScaledY = datum => yScale(selectY(datum));\n    const sparkLine = d3Line()\n      .x(selectScaledX)\n      .y(selectScaledY);\n    const constSparkLine = d3Line()\n      .x(selectScaledX)\n      .y((datum) => yScale(selectYConst(datum)));\n    const circlePoints = data.map((datum) => ({\n      x: selectScaledX(datum),\n      y: selectScaledY(datum),\n      data: datum.value,\n      t: d3timeFormat('%m/%d %H:%M')(new Date(datum.time)),\n    }));\n    \n    \n    // if (nextProps.chartType === 'bar') {\n    //   const rectangles = data.map((datum) => ({\n    //     x: selectScaledX(datum),\n    //     y: selectScaledY(datum),\n    //     height: 280 - selectScaledY(datum),\n    //   }));\n    //   return { circlePoints, rectangles };\n    // }\n    const linePath = sparkLine(data);\n    const constLinePath = constSparkLine(data);\n    const area = d3Area()\n      .x(selectScaledX)\n      .y0(280)\n      .y1(selectScaledY);\n    const areaGraph = area(data);\n    return { circlePoints, areaGraph, linePath, constLinePath };\n  }\n\n  mouseOverPoint(event) {\n    const boundingRectangle = event.target.getBoundingClientRect();\n    const bodyBound = document\n      .getElementsByTagName('body')[0]\n      .getBoundingClientRect();\n    const x =\n      boundingRectangle.left -\n      (bodyBound.right > boundingRectangle.left + 300 ? 50 : 160);\n    const y = boundingRectangle.top - 50;\n\n    this.setState({\n      ...this.state,\n      value: event.target.getAttribute('data'),\n      time: event.target.getAttribute('t'),\n      tooltipStyle: {\n        ...this.state.tooltipStyle,\n        display: 'block',\n        left: `${x}px`,\n        top: `${y}px`,\n        position: 'fixed'\n      },\n    });\n  }\n\n  mouseOut() {\n    this.setState({\n      ...this.state,\n      tooltipStyle: {\n        ...this.state.tooltipStyle,\n        display: 'none',\n      },\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const renderGraph = () => {\n      return (\n        <React.Fragment>\n          <g className=\"line\">\n            <path d={this.state.linePath} transform=\"translate(50,20)\" />\n          </g>\n          {this.props.constValue !== null ? (\n            <g className=\"constline\">\n              <path d={this.state.constLinePath} transform=\"translate(50,20)\" />\n            </g>\n          ): null}\n          <g className=\"area\">\n            <path d={this.state.areaGraph} transform=\"translate(50,20)\" />\n          </g>\n        </React.Fragment>\n      );\n    };\n    return (\n      <React.Fragment>\n          <Paper className={classes.root}>\n            <Typography variant=\"caption\" className={classes.title} align=\"center\">{this.props.chartName}</Typography>\n            {this.state.linePath !== null || this.state.rectangles !== null ? (\n              <svg\n                className=\"container\"\n                data-testid = {this.props.datatestid}\n                style={{\n                  overflow: 'visible',\n                  height: '90%',\n                  width: '100%',\n                }}\n              >\n                <g>\n                  <g\n                    className=\"xAxis\"\n                    ref={(r) => { this.xAxisRef = r; }}\n                    transform={`translate(50,${this.height + 20})`}\n                  />\n                  <g\n                    className=\"yAxis\"\n                    ref={(r) => { this.yAxisRef = r; }}\n                    transform=\"translate(50,20)\"\n                  />\n                  <g className=\"grid\" ref={(r) => { this.yGridRef = r; }} transform=\"translate(50,20)\" />\n                  <g className=\"grid\" ref={(r) => { this.xGridRef = r; }} transform=\"translate(50,20)\" />\n                  {renderGraph()}\n                  <g className=\"scatter\">\n                    {/* {this.state.circlePoints\n                      ?  */}\n                      {this.state.circlePoints.map(circlePoint => (\n                        <circle\n                          cx={circlePoint.x}\n                          cy={circlePoint.y}\n                          data={circlePoint.data}\n                          t={circlePoint.t}\n                          key={`${circlePoint.x},${circlePoint.y}`}\n                          r={4}\n                          onMouseOver={this.mouseOverPoint.bind(this)}\n                          onFocus={this.mouseOverPoint.bind(this)}\n                          onMouseOut={this.mouseOut.bind(this)}\n                          onBlur={this.mouseOut.bind(this)}\n                          transform=\"translate(50,20)\"\n                          data-testid = {this.props.scatterId}\n                        />\n                      ))}\n                      {/* : null} */}\n                  </g>\n                  <text\n                    transform=\"rotate(-90)\"\n                    x={0 - this.height / 2}\n                    y={15}\n                    style={{ textAnchor: 'middle' }}\n                  >\n                    {this.props.yLabel}\n                  </text>\n                </g>\n              </svg>\n            ) : (\n                <Typography className={classes.nodata}>\n                  No Data Available to Display\n                </Typography>\n              )}\n            <Tooltip\n              containerStyle={this.state.tooltipStyle}\n              value={this.state.value}\n              label={this.props.chartName}\n              t={this.state.time}\n            />\n          </Paper>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(Chart);\n"]}