a6919b3a4180dd47822be31d4cedc307
/* istanbul ignore next */
"use strict";

var cov_1ki6ikdl2t = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/storageSaga.js";
  var hash = "a9666d2f2703bf28c6d2dab1a5ec960e5fa0210d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/storageSaga.js",
    statementMap: {
      "0": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "1": {
        start: {
          line: 36,
          column: 25
        },
        end: {
          line: 42,
          column: 10
        }
      },
      "2": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "3": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 81
        }
      },
      "4": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 56
        }
      },
      "5": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 52
        }
      },
      "6": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "7": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 56
        }
      },
      "8": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "9": {
        start: {
          line: 60,
          column: 25
        },
        end: {
          line: 66,
          column: 10
        }
      },
      "10": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "11": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 69
        }
      },
      "12": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "13": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 48
        }
      },
      "14": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "15": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "16": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "17": {
        start: {
          line: 87,
          column: 24
        },
        end: {
          line: 87,
          column: 25
        }
      },
      "18": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 90
        }
      },
      "19": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 35
        }
      },
      "20": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 92
        }
      },
      "21": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 88
        }
      },
      "22": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "23": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 92
        }
      },
      "24": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "25": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 73
        }
      },
      "26": {
        start: {
          line: 106,
          column: 25
        },
        end: {
          line: 112,
          column: 10
        }
      },
      "27": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "28": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 67
        }
      },
      "29": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 35
        }
      },
      "30": {
        start: {
          line: 116,
          column: 15
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "31": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 42
        }
      },
      "32": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 51
        }
      },
      "33": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 47
        }
      },
      "34": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "35": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 51
        }
      },
      "36": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 54
        }
      },
      "37": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 29
        }
      },
      "38": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 137,
          column: 5
        }
      },
      "39": {
        start: {
          line: 138,
          column: 25
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "40": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "41": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 73
        }
      },
      "42": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 149,
          column: 10
        }
      },
      "43": {
        start: {
          line: 150,
          column: 23
        },
        end: {
          line: 150,
          column: 36
        }
      },
      "44": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "45": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "46": {
        start: {
          line: 159,
          column: 13
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "47": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 59
        }
      },
      "48": {
        start: {
          line: 163,
          column: 13
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "49": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 68
        }
      },
      "50": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 68
        }
      },
      "51": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 65
        }
      },
      "52": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 64
        }
      },
      "53": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "54": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 69
        }
      },
      "55": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 68
        }
      },
      "56": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 27
        }
      },
      "57": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 54
        }
      },
      "58": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 258,
          column: 5
        }
      },
      "59": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 187,
          column: 76
        }
      },
      "60": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 76
        }
      },
      "61": {
        start: {
          line: 188,
          column: 25
        },
        end: {
          line: 196,
          column: 10
        }
      },
      "62": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 82
        }
      },
      "63": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "64": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "65": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 73
        }
      },
      "66": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 209,
          column: 19
        }
      },
      "67": {
        start: {
          line: 213,
          column: 13
        },
        end: {
          line: 239,
          column: 13
        }
      },
      "68": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 61
        }
      },
      "69": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 230,
          column: 17
        }
      },
      "70": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 62
        }
      },
      "71": {
        start: {
          line: 217,
          column: 20
        },
        end: {
          line: 222,
          column: 24
        }
      },
      "72": {
        start: {
          line: 224,
          column: 20
        },
        end: {
          line: 229,
          column: 23
        }
      },
      "73": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 231,
          column: 37
        }
      },
      "74": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 238,
          column: 19
        }
      },
      "75": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 247,
          column: 11
        }
      },
      "76": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "77": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 255,
          column: 15
        }
      },
      "78": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 54
        }
      },
      "79": {
        start: {
          line: 408,
          column: 4
        },
        end: {
          line: 475,
          column: 5
        }
      },
      "80": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 409,
          column: 72
        }
      },
      "81": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 419,
          column: 9
        }
      },
      "82": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 417,
          column: 16
        }
      },
      "83": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 19
        }
      },
      "84": {
        start: {
          line: 420,
          column: 21
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "85": {
        start: {
          line: 425,
          column: 25
        },
        end: {
          line: 431,
          column: 10
        }
      },
      "86": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 457,
          column: 9
        }
      },
      "87": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 448,
          column: 13
        }
      },
      "88": {
        start: {
          line: 434,
          column: 16
        },
        end: {
          line: 439,
          column: 20
        }
      },
      "89": {
        start: {
          line: 441,
          column: 16
        },
        end: {
          line: 447,
          column: 19
        }
      },
      "90": {
        start: {
          line: 449,
          column: 12
        },
        end: {
          line: 449,
          column: 33
        }
      },
      "91": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 456,
          column: 15
        }
      },
      "92": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 464,
          column: 11
        }
      },
      "93": {
        start: {
          line: 466,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "94": {
        start: {
          line: 467,
          column: 12
        },
        end: {
          line: 472,
          column: 15
        }
      },
      "95": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 474,
          column: 54
        }
      },
      "96": {
        start: {
          line: 479,
          column: 4
        },
        end: {
          line: 497,
          column: 5
        }
      },
      "97": {
        start: {
          line: 480,
          column: 25
        },
        end: {
          line: 486,
          column: 10
        }
      },
      "98": {
        start: {
          line: 487,
          column: 8
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "99": {
        start: {
          line: 488,
          column: 12
        },
        end: {
          line: 488,
          column: 73
        }
      },
      "100": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 492,
          column: 59
        }
      },
      "101": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 496,
          column: 9
        }
      },
      "102": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 63
        }
      },
      "103": {
        start: {
          line: 502,
          column: 4
        },
        end: {
          line: 546,
          column: 5
        }
      },
      "104": {
        start: {
          line: 503,
          column: 8
        },
        end: {
          line: 503,
          column: 71
        }
      },
      "105": {
        start: {
          line: 504,
          column: 25
        },
        end: {
          line: 512,
          column: 10
        }
      },
      "106": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 527,
          column: 9
        }
      },
      "107": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 519,
          column: 15
        }
      },
      "108": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 526,
          column: 16
        }
      },
      "109": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 528,
          column: 27
        }
      },
      "110": {
        start: {
          line: 530,
          column: 8
        },
        end: {
          line: 535,
          column: 12
        }
      },
      "111": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 544,
          column: 9
        }
      },
      "112": {
        start: {
          line: 538,
          column: 12
        },
        end: {
          line: 543,
          column: 16
        }
      },
      "113": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 54
        }
      },
      "114": {
        start: {
          line: 551,
          column: 4
        },
        end: {
          line: 603,
          column: 5
        }
      },
      "115": {
        start: {
          line: 552,
          column: 8
        },
        end: {
          line: 552,
          column: 75
        }
      },
      "116": {
        start: {
          line: 553,
          column: 25
        },
        end: {
          line: 559,
          column: 10
        }
      },
      "117": {
        start: {
          line: 560,
          column: 8
        },
        end: {
          line: 584,
          column: 9
        }
      },
      "118": {
        start: {
          line: 561,
          column: 12
        },
        end: {
          line: 576,
          column: 13
        }
      },
      "119": {
        start: {
          line: 562,
          column: 16
        },
        end: {
          line: 567,
          column: 20
        }
      },
      "120": {
        start: {
          line: 570,
          column: 16
        },
        end: {
          line: 575,
          column: 20
        }
      },
      "121": {
        start: {
          line: 578,
          column: 12
        },
        end: {
          line: 583,
          column: 16
        }
      },
      "122": {
        start: {
          line: 585,
          column: 8
        },
        end: {
          line: 585,
          column: 29
        }
      },
      "123": {
        start: {
          line: 587,
          column: 8
        },
        end: {
          line: 592,
          column: 12
        }
      },
      "124": {
        start: {
          line: 594,
          column: 8
        },
        end: {
          line: 601,
          column: 9
        }
      },
      "125": {
        start: {
          line: 595,
          column: 12
        },
        end: {
          line: 600,
          column: 16
        }
      },
      "126": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 602,
          column: 54
        }
      },
      "127": {
        start: {
          line: 608,
          column: 4
        },
        end: {
          line: 666,
          column: 5
        }
      },
      "128": {
        start: {
          line: 609,
          column: 8
        },
        end: {
          line: 609,
          column: 71
        }
      },
      "129": {
        start: {
          line: 610,
          column: 25
        },
        end: {
          line: 618,
          column: 10
        }
      },
      "130": {
        start: {
          line: 619,
          column: 8
        },
        end: {
          line: 646,
          column: 9
        }
      },
      "131": {
        start: {
          line: 620,
          column: 12
        },
        end: {
          line: 635,
          column: 13
        }
      },
      "132": {
        start: {
          line: 621,
          column: 16
        },
        end: {
          line: 626,
          column: 20
        }
      },
      "133": {
        start: {
          line: 629,
          column: 16
        },
        end: {
          line: 634,
          column: 20
        }
      },
      "134": {
        start: {
          line: 638,
          column: 12
        },
        end: {
          line: 645,
          column: 16
        }
      },
      "135": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 647,
          column: 27
        }
      },
      "136": {
        start: {
          line: 648,
          column: 8
        },
        end: {
          line: 648,
          column: 36
        }
      },
      "137": {
        start: {
          line: 650,
          column: 8
        },
        end: {
          line: 655,
          column: 11
        }
      },
      "138": {
        start: {
          line: 657,
          column: 8
        },
        end: {
          line: 664,
          column: 9
        }
      },
      "139": {
        start: {
          line: 658,
          column: 12
        },
        end: {
          line: 663,
          column: 15
        }
      },
      "140": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 665,
          column: 54
        }
      },
      "141": {
        start: {
          line: 670,
          column: 4
        },
        end: {
          line: 716,
          column: 5
        }
      },
      "142": {
        start: {
          line: 671,
          column: 8
        },
        end: {
          line: 671,
          column: 73
        }
      },
      "143": {
        start: {
          line: 672,
          column: 25
        },
        end: {
          line: 680,
          column: 10
        }
      },
      "144": {
        start: {
          line: 681,
          column: 8
        },
        end: {
          line: 697,
          column: 9
        }
      },
      "145": {
        start: {
          line: 682,
          column: 12
        },
        end: {
          line: 687,
          column: 16
        }
      },
      "146": {
        start: {
          line: 689,
          column: 12
        },
        end: {
          line: 696,
          column: 16
        }
      },
      "147": {
        start: {
          line: 698,
          column: 8
        },
        end: {
          line: 698,
          column: 27
        }
      },
      "148": {
        start: {
          line: 700,
          column: 8
        },
        end: {
          line: 705,
          column: 11
        }
      },
      "149": {
        start: {
          line: 707,
          column: 8
        },
        end: {
          line: 714,
          column: 9
        }
      },
      "150": {
        start: {
          line: 708,
          column: 12
        },
        end: {
          line: 713,
          column: 15
        }
      },
      "151": {
        start: {
          line: 715,
          column: 8
        },
        end: {
          line: 715,
          column: 54
        }
      },
      "152": {
        start: {
          line: 720,
          column: 4
        },
        end: {
          line: 776,
          column: 5
        }
      },
      "153": {
        start: {
          line: 721,
          column: 8
        },
        end: {
          line: 721,
          column: 76
        }
      },
      "154": {
        start: {
          line: 722,
          column: 25
        },
        end: {
          line: 730,
          column: 10
        }
      },
      "155": {
        start: {
          line: 731,
          column: 8
        },
        end: {
          line: 757,
          column: 9
        }
      },
      "156": {
        start: {
          line: 732,
          column: 12
        },
        end: {
          line: 747,
          column: 13
        }
      },
      "157": {
        start: {
          line: 733,
          column: 16
        },
        end: {
          line: 738,
          column: 20
        }
      },
      "158": {
        start: {
          line: 741,
          column: 16
        },
        end: {
          line: 746,
          column: 20
        }
      },
      "159": {
        start: {
          line: 749,
          column: 12
        },
        end: {
          line: 756,
          column: 16
        }
      },
      "160": {
        start: {
          line: 758,
          column: 8
        },
        end: {
          line: 758,
          column: 27
        }
      },
      "161": {
        start: {
          line: 760,
          column: 8
        },
        end: {
          line: 765,
          column: 11
        }
      },
      "162": {
        start: {
          line: 767,
          column: 8
        },
        end: {
          line: 774,
          column: 9
        }
      },
      "163": {
        start: {
          line: 768,
          column: 12
        },
        end: {
          line: 773,
          column: 15
        }
      },
      "164": {
        start: {
          line: 775,
          column: 8
        },
        end: {
          line: 775,
          column: 54
        }
      },
      "165": {
        start: {
          line: 781,
          column: 4
        },
        end: {
          line: 827,
          column: 5
        }
      },
      "166": {
        start: {
          line: 782,
          column: 8
        },
        end: {
          line: 782,
          column: 73
        }
      },
      "167": {
        start: {
          line: 783,
          column: 25
        },
        end: {
          line: 791,
          column: 10
        }
      },
      "168": {
        start: {
          line: 792,
          column: 8
        },
        end: {
          line: 808,
          column: 9
        }
      },
      "169": {
        start: {
          line: 793,
          column: 12
        },
        end: {
          line: 798,
          column: 16
        }
      },
      "170": {
        start: {
          line: 800,
          column: 12
        },
        end: {
          line: 807,
          column: 16
        }
      },
      "171": {
        start: {
          line: 809,
          column: 8
        },
        end: {
          line: 809,
          column: 27
        }
      },
      "172": {
        start: {
          line: 811,
          column: 8
        },
        end: {
          line: 816,
          column: 11
        }
      },
      "173": {
        start: {
          line: 818,
          column: 8
        },
        end: {
          line: 825,
          column: 9
        }
      },
      "174": {
        start: {
          line: 819,
          column: 12
        },
        end: {
          line: 824,
          column: 15
        }
      },
      "175": {
        start: {
          line: 826,
          column: 8
        },
        end: {
          line: 826,
          column: 54
        }
      },
      "176": {
        start: {
          line: 832,
          column: 4
        },
        end: {
          line: 888,
          column: 5
        }
      },
      "177": {
        start: {
          line: 833,
          column: 8
        },
        end: {
          line: 833,
          column: 78
        }
      },
      "178": {
        start: {
          line: 834,
          column: 25
        },
        end: {
          line: 842,
          column: 10
        }
      },
      "179": {
        start: {
          line: 843,
          column: 8
        },
        end: {
          line: 869,
          column: 9
        }
      },
      "180": {
        start: {
          line: 844,
          column: 12
        },
        end: {
          line: 859,
          column: 13
        }
      },
      "181": {
        start: {
          line: 845,
          column: 16
        },
        end: {
          line: 850,
          column: 20
        }
      },
      "182": {
        start: {
          line: 853,
          column: 16
        },
        end: {
          line: 858,
          column: 20
        }
      },
      "183": {
        start: {
          line: 861,
          column: 12
        },
        end: {
          line: 868,
          column: 16
        }
      },
      "184": {
        start: {
          line: 870,
          column: 8
        },
        end: {
          line: 870,
          column: 27
        }
      },
      "185": {
        start: {
          line: 872,
          column: 8
        },
        end: {
          line: 877,
          column: 11
        }
      },
      "186": {
        start: {
          line: 879,
          column: 8
        },
        end: {
          line: 886,
          column: 9
        }
      },
      "187": {
        start: {
          line: 880,
          column: 12
        },
        end: {
          line: 885,
          column: 15
        }
      },
      "188": {
        start: {
          line: 887,
          column: 8
        },
        end: {
          line: 887,
          column: 54
        }
      },
      "189": {
        start: {
          line: 894,
          column: 31
        },
        end: {
          line: 911,
          column: 5
        }
      },
      "190": {
        start: {
          line: 912,
          column: 4
        },
        end: {
          line: 930,
          column: 5
        }
      },
      "191": {
        start: {
          line: 913,
          column: 25
        },
        end: {
          line: 919,
          column: 10
        }
      },
      "192": {
        start: {
          line: 920,
          column: 8
        },
        end: {
          line: 927,
          column: 9
        }
      },
      "193": {
        start: {
          line: 921,
          column: 12
        },
        end: {
          line: 924,
          column: 16
        }
      },
      "194": {
        start: {
          line: 926,
          column: 12
        },
        end: {
          line: 926,
          column: 77
        }
      },
      "195": {
        start: {
          line: 929,
          column: 8
        },
        end: {
          line: 929,
          column: 73
        }
      },
      "196": {
        start: {
          line: 936,
          column: 4
        },
        end: {
          line: 936,
          column: 70
        }
      },
      "197": {
        start: {
          line: 937,
          column: 4
        },
        end: {
          line: 937,
          column: 64
        }
      },
      "198": {
        start: {
          line: 938,
          column: 4
        },
        end: {
          line: 938,
          column: 71
        }
      },
      "199": {
        start: {
          line: 939,
          column: 4
        },
        end: {
          line: 939,
          column: 62
        }
      },
      "200": {
        start: {
          line: 940,
          column: 4
        },
        end: {
          line: 940,
          column: 64
        }
      },
      "201": {
        start: {
          line: 941,
          column: 4
        },
        end: {
          line: 941,
          column: 66
        }
      },
      "202": {
        start: {
          line: 942,
          column: 4
        },
        end: {
          line: 942,
          column: 68
        }
      },
      "203": {
        start: {
          line: 943,
          column: 4
        },
        end: {
          line: 943,
          column: 64
        }
      },
      "204": {
        start: {
          line: 944,
          column: 4
        },
        end: {
          line: 944,
          column: 79
        }
      },
      "205": {
        start: {
          line: 945,
          column: 4
        },
        end: {
          line: 945,
          column: 66
        }
      },
      "206": {
        start: {
          line: 946,
          column: 4
        },
        end: {
          line: 946,
          column: 62
        }
      },
      "207": {
        start: {
          line: 947,
          column: 4
        },
        end: {
          line: 947,
          column: 62
        }
      },
      "208": {
        start: {
          line: 948,
          column: 4
        },
        end: {
          line: 948,
          column: 67
        }
      },
      "209": {
        start: {
          line: 949,
          column: 4
        },
        end: {
          line: 949,
          column: 73
        }
      },
      "210": {
        start: {
          line: 950,
          column: 4
        },
        end: {
          line: 950,
          column: 82
        }
      }
    },
    fnMap: {
      "0": {
        name: "fetchArraySize",
        decl: {
          start: {
            line: 34,
            column: 10
          },
          end: {
            line: 34,
            column: 24
          }
        },
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 34
      },
      "1": {
        name: "fetchVolumeDetails",
        decl: {
          start: {
            line: 58,
            column: 10
          },
          end: {
            line: 58,
            column: 28
          }
        },
        loc: {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 58
      },
      "2": {
        name: "fetchVolumes",
        decl: {
          start: {
            line: 76,
            column: 10
          },
          end: {
            line: 76,
            column: 22
          }
        },
        loc: {
          start: {
            line: 76,
            column: 25
          },
          end: {
            line: 101,
            column: 1
          }
        },
        line: 76
      },
      "3": {
        name: "fetchArray",
        decl: {
          start: {
            line: 103,
            column: 10
          },
          end: {
            line: 103,
            column: 20
          }
        },
        loc: {
          start: {
            line: 103,
            column: 29
          },
          end: {
            line: 130,
            column: 1
          }
        },
        line: 103
      },
      "4": {
        name: "fetchDevices",
        decl: {
          start: {
            line: 133,
            column: 10
          },
          end: {
            line: 133,
            column: 22
          }
        },
        loc: {
          start: {
            line: 133,
            column: 25
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 133
      },
      "5": {
        name: "createVolume",
        decl: {
          start: {
            line: 183,
            column: 10
          },
          end: {
            line: 183,
            column: 22
          }
        },
        loc: {
          start: {
            line: 183,
            column: 31
          },
          end: {
            line: 259,
            column: 1
          }
        },
        line: 183
      },
      "6": {
        name: "updateVolume",
        decl: {
          start: {
            line: 407,
            column: 10
          },
          end: {
            line: 407,
            column: 22
          }
        },
        loc: {
          start: {
            line: 407,
            column: 31
          },
          end: {
            line: 476,
            column: 1
          }
        },
        line: 407
      },
      "7": {
        name: "fetchMaxVolumeCount",
        decl: {
          start: {
            line: 478,
            column: 10
          },
          end: {
            line: 478,
            column: 29
          }
        },
        loc: {
          start: {
            line: 478,
            column: 32
          },
          end: {
            line: 498,
            column: 1
          }
        },
        line: 478
      },
      "8": {
        name: "deleteArray",
        decl: {
          start: {
            line: 501,
            column: 10
          },
          end: {
            line: 501,
            column: 21
          }
        },
        loc: {
          start: {
            line: 501,
            column: 30
          },
          end: {
            line: 547,
            column: 1
          }
        },
        line: 501
      },
      "9": {
        name: "deleteVolumes",
        decl: {
          start: {
            line: 550,
            column: 10
          },
          end: {
            line: 550,
            column: 23
          }
        },
        loc: {
          start: {
            line: 550,
            column: 32
          },
          end: {
            line: 605,
            column: 1
          }
        },
        line: 550
      },
      "10": {
        name: "createArray",
        decl: {
          start: {
            line: 607,
            column: 10
          },
          end: {
            line: 607,
            column: 21
          }
        },
        loc: {
          start: {
            line: 607,
            column: 30
          },
          end: {
            line: 667,
            column: 1
          }
        },
        line: 607
      },
      "11": {
        name: "attachDisk",
        decl: {
          start: {
            line: 669,
            column: 10
          },
          end: {
            line: 669,
            column: 20
          }
        },
        loc: {
          start: {
            line: 669,
            column: 29
          },
          end: {
            line: 717,
            column: 1
          }
        },
        line: 669
      },
      "12": {
        name: "addSpareDisk",
        decl: {
          start: {
            line: 719,
            column: 10
          },
          end: {
            line: 719,
            column: 22
          }
        },
        loc: {
          start: {
            line: 719,
            column: 31
          },
          end: {
            line: 777,
            column: 1
          }
        },
        line: 719
      },
      "13": {
        name: "detachDisk",
        decl: {
          start: {
            line: 780,
            column: 10
          },
          end: {
            line: 780,
            column: 20
          }
        },
        loc: {
          start: {
            line: 780,
            column: 29
          },
          end: {
            line: 828,
            column: 1
          }
        },
        line: 780
      },
      "14": {
        name: "removeSpareDisk",
        decl: {
          start: {
            line: 831,
            column: 10
          },
          end: {
            line: 831,
            column: 25
          }
        },
        loc: {
          start: {
            line: 831,
            column: 34
          },
          end: {
            line: 889,
            column: 1
          }
        },
        line: 831
      },
      "15": {
        name: "fetchDeviceDetails",
        decl: {
          start: {
            line: 893,
            column: 10
          },
          end: {
            line: 893,
            column: 28
          }
        },
        loc: {
          start: {
            line: 893,
            column: 37
          },
          end: {
            line: 933,
            column: 1
          }
        },
        line: 893
      },
      "16": {
        name: "storageWatcher",
        decl: {
          start: {
            line: 935,
            column: 25
          },
          end: {
            line: 935,
            column: 39
          }
        },
        loc: {
          start: {
            line: 935,
            column: 42
          },
          end: {
            line: 951,
            column: 1
          }
        },
        line: 935
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 35
          }
        }, {
          start: {
            line: 43,
            column: 39
          },
          end: {
            line: 43,
            column: 52
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }],
        line: 97
      },
      "6": {
        loc: {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: 113,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }],
        line: 113
      },
      "7": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 35
          }
        }, {
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 113,
            column: 52
          }
        }, {
          start: {
            line: 113,
            column: 56
          },
          end: {
            line: 113,
            column: 80
          }
        }],
        line: 113
      },
      "8": {
        loc: {
          start: {
            line: 116,
            column: 15
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 15
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: 116,
            column: 15
          },
          end: {
            line: 120,
            column: 9
          }
        }],
        line: 116
      },
      "9": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }],
        line: 124
      },
      "10": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }],
        line: 151
      },
      "11": {
        loc: {
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 151,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 12
          },
          end: {
            line: 151,
            column: 35
          }
        }, {
          start: {
            line: 151,
            column: 39
          },
          end: {
            line: 151,
            column: 59
          }
        }, {
          start: {
            line: 151,
            column: 63
          },
          end: {
            line: 151,
            column: 101
          }
        }],
        line: 151
      },
      "12": {
        loc: {
          start: {
            line: 156,
            column: 43
          },
          end: {
            line: 156,
            column: 196
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 97
          },
          end: {
            line: 156,
            column: 191
          }
        }, {
          start: {
            line: 156,
            column: 194
          },
          end: {
            line: 156,
            column: 196
          }
        }],
        line: 156
      },
      "13": {
        loc: {
          start: {
            line: 156,
            column: 43
          },
          end: {
            line: 156,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 43
          },
          end: {
            line: 156,
            column: 63
          }
        }, {
          start: {
            line: 156,
            column: 67
          },
          end: {
            line: 156,
            column: 94
          }
        }],
        line: 156
      },
      "14": {
        loc: {
          start: {
            line: 159,
            column: 13
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 13
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: 159,
            column: 13
          },
          end: {
            line: 168,
            column: 9
          }
        }],
        line: 159
      },
      "15": {
        loc: {
          start: {
            line: 159,
            column: 17
          },
          end: {
            line: 159,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 17
          },
          end: {
            line: 159,
            column: 23
          }
        }, {
          start: {
            line: 159,
            column: 27
          },
          end: {
            line: 159,
            column: 55
          }
        }, {
          start: {
            line: 159,
            column: 59
          },
          end: {
            line: 159,
            column: 79
          }
        }],
        line: 159
      },
      "16": {
        loc: {
          start: {
            line: 163,
            column: 13
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 13
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: 163,
            column: 13
          },
          end: {
            line: 168,
            column: 9
          }
        }],
        line: 163
      },
      "17": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }],
        line: 173
      },
      "18": {
        loc: {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 187,
            column: 76
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 187,
            column: 76
          }
        }, {
          start: {
            line: 186,
            column: 8
          },
          end: {
            line: 187,
            column: 76
          }
        }],
        line: 186
      },
      "19": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 239,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 239,
            column: 13
          }
        }, {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 239,
            column: 13
          }
        }],
        line: 199
      },
      "20": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }, {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 210,
            column: 13
          }
        }],
        line: 200
      },
      "21": {
        loc: {
          start: {
            line: 213,
            column: 13
          },
          end: {
            line: 239,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 13
          },
          end: {
            line: 239,
            column: 13
          }
        }, {
          start: {
            line: 213,
            column: 13
          },
          end: {
            line: 239,
            column: 13
          }
        }],
        line: 213
      },
      "22": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        }, {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 230,
            column: 17
          }
        }],
        line: 215
      },
      "23": {
        loc: {
          start: {
            line: 215,
            column: 20
          },
          end: {
            line: 215,
            column: 160
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 20
          },
          end: {
            line: 215,
            column: 40
          }
        }, {
          start: {
            line: 215,
            column: 44
          },
          end: {
            line: 215,
            column: 71
          }
        }, {
          start: {
            line: 215,
            column: 76
          },
          end: {
            line: 215,
            column: 117
          }
        }, {
          start: {
            line: 215,
            column: 121
          },
          end: {
            line: 215,
            column: 159
          }
        }],
        line: 215
      },
      "24": {
        loc: {
          start: {
            line: 228,
            column: 51
          },
          end: {
            line: 228,
            column: 204
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 105
          },
          end: {
            line: 228,
            column: 199
          }
        }, {
          start: {
            line: 228,
            column: 202
          },
          end: {
            line: 228,
            column: 204
          }
        }],
        line: 228
      },
      "25": {
        loc: {
          start: {
            line: 228,
            column: 51
          },
          end: {
            line: 228,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 228,
            column: 51
          },
          end: {
            line: 228,
            column: 71
          }
        }, {
          start: {
            line: 228,
            column: 75
          },
          end: {
            line: 228,
            column: 102
          }
        }],
        line: 228
      },
      "26": {
        loc: {
          start: {
            line: 237,
            column: 55
          },
          end: {
            line: 237,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 237,
            column: 71
          },
          end: {
            line: 237,
            column: 91
          }
        }, {
          start: {
            line: 237,
            column: 94
          },
          end: {
            line: 237,
            column: 96
          }
        }],
        line: 237
      },
      "27": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }],
        line: 249
      },
      "28": {
        loc: {
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        }, {
          start: {
            line: 410,
            column: 8
          },
          end: {
            line: 419,
            column: 9
          }
        }],
        line: 410
      },
      "29": {
        loc: {
          start: {
            line: 410,
            column: 12
          },
          end: {
            line: 411,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 410,
            column: 12
          },
          end: {
            line: 410,
            column: 38
          }
        }, {
          start: {
            line: 410,
            column: 42
          },
          end: {
            line: 410,
            column: 66
          }
        }, {
          start: {
            line: 411,
            column: 13
          },
          end: {
            line: 411,
            column: 39
          }
        }, {
          start: {
            line: 411,
            column: 43
          },
          end: {
            line: 411,
            column: 70
          }
        }],
        line: 410
      },
      "30": {
        loc: {
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        }, {
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 457,
            column: 9
          }
        }],
        line: 432
      },
      "31": {
        loc: {
          start: {
            line: 433,
            column: 12
          },
          end: {
            line: 448,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 433,
            column: 12
          },
          end: {
            line: 448,
            column: 13
          }
        }, {
          start: {
            line: 433,
            column: 12
          },
          end: {
            line: 448,
            column: 13
          }
        }],
        line: 433
      },
      "32": {
        loc: {
          start: {
            line: 433,
            column: 16
          },
          end: {
            line: 433,
            column: 156
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 433,
            column: 16
          },
          end: {
            line: 433,
            column: 36
          }
        }, {
          start: {
            line: 433,
            column: 40
          },
          end: {
            line: 433,
            column: 67
          }
        }, {
          start: {
            line: 433,
            column: 72
          },
          end: {
            line: 433,
            column: 113
          }
        }, {
          start: {
            line: 433,
            column: 117
          },
          end: {
            line: 433,
            column: 155
          }
        }],
        line: 433
      },
      "33": {
        loc: {
          start: {
            line: 445,
            column: 47
          },
          end: {
            line: 445,
            column: 200
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 445,
            column: 101
          },
          end: {
            line: 445,
            column: 195
          }
        }, {
          start: {
            line: 445,
            column: 198
          },
          end: {
            line: 445,
            column: 200
          }
        }],
        line: 445
      },
      "34": {
        loc: {
          start: {
            line: 445,
            column: 47
          },
          end: {
            line: 445,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 445,
            column: 47
          },
          end: {
            line: 445,
            column: 67
          }
        }, {
          start: {
            line: 445,
            column: 71
          },
          end: {
            line: 445,
            column: 98
          }
        }],
        line: 445
      },
      "35": {
        loc: {
          start: {
            line: 455,
            column: 51
          },
          end: {
            line: 455,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 455,
            column: 67
          },
          end: {
            line: 455,
            column: 87
          }
        }, {
          start: {
            line: 455,
            column: 90
          },
          end: {
            line: 455,
            column: 92
          }
        }],
        line: 455
      },
      "36": {
        loc: {
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        }, {
          start: {
            line: 466,
            column: 8
          },
          end: {
            line: 473,
            column: 9
          }
        }],
        line: 466
      },
      "37": {
        loc: {
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        }, {
          start: {
            line: 487,
            column: 8
          },
          end: {
            line: 489,
            column: 9
          }
        }],
        line: 487
      },
      "38": {
        loc: {
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 487,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 487,
            column: 12
          },
          end: {
            line: 487,
            column: 35
          }
        }, {
          start: {
            line: 487,
            column: 39
          },
          end: {
            line: 487,
            column: 52
          }
        }],
        line: 487
      },
      "39": {
        loc: {
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        }, {
          start: {
            line: 494,
            column: 8
          },
          end: {
            line: 496,
            column: 9
          }
        }],
        line: 494
      },
      "40": {
        loc: {
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        }, {
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 527,
            column: 9
          }
        }],
        line: 513
      },
      "41": {
        loc: {
          start: {
            line: 513,
            column: 12
          },
          end: {
            line: 513,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 12
          },
          end: {
            line: 513,
            column: 35
          }
        }, {
          start: {
            line: 513,
            column: 39
          },
          end: {
            line: 513,
            column: 52
          }
        }, {
          start: {
            line: 513,
            column: 56
          },
          end: {
            line: 513,
            column: 83
          }
        }],
        line: 513
      },
      "42": {
        loc: {
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 544,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 544,
            column: 9
          }
        }, {
          start: {
            line: 537,
            column: 8
          },
          end: {
            line: 544,
            column: 9
          }
        }],
        line: 537
      },
      "43": {
        loc: {
          start: {
            line: 560,
            column: 8
          },
          end: {
            line: 584,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 560,
            column: 8
          },
          end: {
            line: 584,
            column: 9
          }
        }, {
          start: {
            line: 560,
            column: 8
          },
          end: {
            line: 584,
            column: 9
          }
        }],
        line: 560
      },
      "44": {
        loc: {
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 560,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 560,
            column: 35
          }
        }, {
          start: {
            line: 560,
            column: 39
          },
          end: {
            line: 560,
            column: 52
          }
        }],
        line: 560
      },
      "45": {
        loc: {
          start: {
            line: 561,
            column: 12
          },
          end: {
            line: 576,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 561,
            column: 12
          },
          end: {
            line: 576,
            column: 13
          }
        }, {
          start: {
            line: 561,
            column: 12
          },
          end: {
            line: 576,
            column: 13
          }
        }],
        line: 561
      },
      "46": {
        loc: {
          start: {
            line: 594,
            column: 8
          },
          end: {
            line: 601,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 594,
            column: 8
          },
          end: {
            line: 601,
            column: 9
          }
        }, {
          start: {
            line: 594,
            column: 8
          },
          end: {
            line: 601,
            column: 9
          }
        }],
        line: 594
      },
      "47": {
        loc: {
          start: {
            line: 619,
            column: 8
          },
          end: {
            line: 646,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 619,
            column: 8
          },
          end: {
            line: 646,
            column: 9
          }
        }, {
          start: {
            line: 619,
            column: 8
          },
          end: {
            line: 646,
            column: 9
          }
        }],
        line: 619
      },
      "48": {
        loc: {
          start: {
            line: 620,
            column: 12
          },
          end: {
            line: 635,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 620,
            column: 12
          },
          end: {
            line: 635,
            column: 13
          }
        }, {
          start: {
            line: 620,
            column: 12
          },
          end: {
            line: 635,
            column: 13
          }
        }],
        line: 620
      },
      "49": {
        loc: {
          start: {
            line: 620,
            column: 16
          },
          end: {
            line: 620,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 620,
            column: 16
          },
          end: {
            line: 620,
            column: 43
          }
        }, {
          start: {
            line: 620,
            column: 47
          },
          end: {
            line: 620,
            column: 85
          }
        }],
        line: 620
      },
      "50": {
        loc: {
          start: {
            line: 641,
            column: 27
          },
          end: {
            line: 643,
            column: 43
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 642,
            column: 20
          },
          end: {
            line: 642,
            column: 40
          }
        }, {
          start: {
            line: 643,
            column: 20
          },
          end: {
            line: 643,
            column: 43
          }
        }],
        line: 641
      },
      "51": {
        loc: {
          start: {
            line: 641,
            column: 27
          },
          end: {
            line: 641,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 641,
            column: 27
          },
          end: {
            line: 641,
            column: 40
          }
        }, {
          start: {
            line: 641,
            column: 44
          },
          end: {
            line: 641,
            column: 64
          }
        }],
        line: 641
      },
      "52": {
        loc: {
          start: {
            line: 657,
            column: 8
          },
          end: {
            line: 664,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 657,
            column: 8
          },
          end: {
            line: 664,
            column: 9
          }
        }, {
          start: {
            line: 657,
            column: 8
          },
          end: {
            line: 664,
            column: 9
          }
        }],
        line: 657
      },
      "53": {
        loc: {
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 697,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 697,
            column: 9
          }
        }, {
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 697,
            column: 9
          }
        }],
        line: 681
      },
      "54": {
        loc: {
          start: {
            line: 681,
            column: 12
          },
          end: {
            line: 681,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 681,
            column: 12
          },
          end: {
            line: 681,
            column: 35
          }
        }, {
          start: {
            line: 681,
            column: 39
          },
          end: {
            line: 681,
            column: 66
          }
        }],
        line: 681
      },
      "55": {
        loc: {
          start: {
            line: 692,
            column: 27
          },
          end: {
            line: 694,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 693,
            column: 20
          },
          end: {
            line: 693,
            column: 40
          }
        }, {
          start: {
            line: 694,
            column: 20
          },
          end: {
            line: 694,
            column: 45
          }
        }],
        line: 692
      },
      "56": {
        loc: {
          start: {
            line: 692,
            column: 27
          },
          end: {
            line: 692,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 692,
            column: 27
          },
          end: {
            line: 692,
            column: 40
          }
        }, {
          start: {
            line: 692,
            column: 44
          },
          end: {
            line: 692,
            column: 64
          }
        }],
        line: 692
      },
      "57": {
        loc: {
          start: {
            line: 707,
            column: 8
          },
          end: {
            line: 714,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 707,
            column: 8
          },
          end: {
            line: 714,
            column: 9
          }
        }, {
          start: {
            line: 707,
            column: 8
          },
          end: {
            line: 714,
            column: 9
          }
        }],
        line: 707
      },
      "58": {
        loc: {
          start: {
            line: 731,
            column: 8
          },
          end: {
            line: 757,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 731,
            column: 8
          },
          end: {
            line: 757,
            column: 9
          }
        }, {
          start: {
            line: 731,
            column: 8
          },
          end: {
            line: 757,
            column: 9
          }
        }],
        line: 731
      },
      "59": {
        loc: {
          start: {
            line: 732,
            column: 12
          },
          end: {
            line: 747,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 732,
            column: 12
          },
          end: {
            line: 747,
            column: 13
          }
        }, {
          start: {
            line: 732,
            column: 12
          },
          end: {
            line: 747,
            column: 13
          }
        }],
        line: 732
      },
      "60": {
        loc: {
          start: {
            line: 752,
            column: 27
          },
          end: {
            line: 754,
            column: 48
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 753,
            column: 20
          },
          end: {
            line: 753,
            column: 40
          }
        }, {
          start: {
            line: 754,
            column: 20
          },
          end: {
            line: 754,
            column: 48
          }
        }],
        line: 752
      },
      "61": {
        loc: {
          start: {
            line: 752,
            column: 27
          },
          end: {
            line: 752,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 752,
            column: 27
          },
          end: {
            line: 752,
            column: 40
          }
        }, {
          start: {
            line: 752,
            column: 44
          },
          end: {
            line: 752,
            column: 64
          }
        }],
        line: 752
      },
      "62": {
        loc: {
          start: {
            line: 767,
            column: 8
          },
          end: {
            line: 774,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 767,
            column: 8
          },
          end: {
            line: 774,
            column: 9
          }
        }, {
          start: {
            line: 767,
            column: 8
          },
          end: {
            line: 774,
            column: 9
          }
        }],
        line: 767
      },
      "63": {
        loc: {
          start: {
            line: 792,
            column: 8
          },
          end: {
            line: 808,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 792,
            column: 8
          },
          end: {
            line: 808,
            column: 9
          }
        }, {
          start: {
            line: 792,
            column: 8
          },
          end: {
            line: 808,
            column: 9
          }
        }],
        line: 792
      },
      "64": {
        loc: {
          start: {
            line: 792,
            column: 12
          },
          end: {
            line: 792,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 792,
            column: 12
          },
          end: {
            line: 792,
            column: 35
          }
        }, {
          start: {
            line: 792,
            column: 39
          },
          end: {
            line: 792,
            column: 66
          }
        }],
        line: 792
      },
      "65": {
        loc: {
          start: {
            line: 803,
            column: 27
          },
          end: {
            line: 805,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 804,
            column: 20
          },
          end: {
            line: 804,
            column: 40
          }
        }, {
          start: {
            line: 805,
            column: 20
          },
          end: {
            line: 805,
            column: 45
          }
        }],
        line: 803
      },
      "66": {
        loc: {
          start: {
            line: 803,
            column: 27
          },
          end: {
            line: 803,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 803,
            column: 27
          },
          end: {
            line: 803,
            column: 40
          }
        }, {
          start: {
            line: 803,
            column: 44
          },
          end: {
            line: 803,
            column: 64
          }
        }],
        line: 803
      },
      "67": {
        loc: {
          start: {
            line: 818,
            column: 8
          },
          end: {
            line: 825,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 818,
            column: 8
          },
          end: {
            line: 825,
            column: 9
          }
        }, {
          start: {
            line: 818,
            column: 8
          },
          end: {
            line: 825,
            column: 9
          }
        }],
        line: 818
      },
      "68": {
        loc: {
          start: {
            line: 843,
            column: 8
          },
          end: {
            line: 869,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 843,
            column: 8
          },
          end: {
            line: 869,
            column: 9
          }
        }, {
          start: {
            line: 843,
            column: 8
          },
          end: {
            line: 869,
            column: 9
          }
        }],
        line: 843
      },
      "69": {
        loc: {
          start: {
            line: 844,
            column: 12
          },
          end: {
            line: 859,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 844,
            column: 12
          },
          end: {
            line: 859,
            column: 13
          }
        }, {
          start: {
            line: 844,
            column: 12
          },
          end: {
            line: 859,
            column: 13
          }
        }],
        line: 844
      },
      "70": {
        loc: {
          start: {
            line: 864,
            column: 27
          },
          end: {
            line: 866,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 865,
            column: 20
          },
          end: {
            line: 865,
            column: 40
          }
        }, {
          start: {
            line: 866,
            column: 20
          },
          end: {
            line: 866,
            column: 50
          }
        }],
        line: 864
      },
      "71": {
        loc: {
          start: {
            line: 864,
            column: 27
          },
          end: {
            line: 864,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 864,
            column: 27
          },
          end: {
            line: 864,
            column: 40
          }
        }, {
          start: {
            line: 864,
            column: 44
          },
          end: {
            line: 864,
            column: 64
          }
        }],
        line: 864
      },
      "72": {
        loc: {
          start: {
            line: 879,
            column: 8
          },
          end: {
            line: 886,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 879,
            column: 8
          },
          end: {
            line: 886,
            column: 9
          }
        }, {
          start: {
            line: 879,
            column: 8
          },
          end: {
            line: 886,
            column: 9
          }
        }],
        line: 879
      },
      "73": {
        loc: {
          start: {
            line: 920,
            column: 8
          },
          end: {
            line: 927,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 920,
            column: 8
          },
          end: {
            line: 927,
            column: 9
          }
        }, {
          start: {
            line: 920,
            column: 8
          },
          end: {
            line: 927,
            column: 9
          }
        }],
        line: 920
      },
      "74": {
        loc: {
          start: {
            line: 920,
            column: 12
          },
          end: {
            line: 920,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 920,
            column: 12
          },
          end: {
            line: 920,
            column: 35
          }
        }, {
          start: {
            line: 920,
            column: 39
          },
          end: {
            line: 920,
            column: 52
          }
        }],
        line: 920
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0, 0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0, 0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "a9666d2f2703bf28c6d2dab1a5ec960e5fa0210d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = storageWatcher;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
_axios = _interopRequireDefault(require("axios"));

var
/* istanbul ignore next */
_effects = require("redux-saga/effects");

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../store/actions/actionTypes"));

var
/* istanbul ignore next */
actionCreators = _interopRequireWildcard(require("../store/actions/exportActionCreators"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function* fetchArraySize() {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[0]++;
  cov_1ki6ikdl2t.s[0]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[1]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], `/api/v1.0/available_storage/?ts=${Date.now()}`, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[2]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[1][0]++, response.status === 200) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[1][1]++, response.data)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[0][0]++;
      cov_1ki6ikdl2t.s[3]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchArraySize(response.data[0].arraySize))
      );
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[0][1]++;
      cov_1ki6ikdl2t.s[4]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchArraySize(0))
      );
    }
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[5]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.fetchArraySize(0))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[6]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[2][0]++;
      cov_1ki6ikdl2t.s[7]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchArraySize(0))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[2][1]++;
    }
  }
}

function* fetchVolumeDetails(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[1]++;
  cov_1ki6ikdl2t.s[8]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[9]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], action.payload, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[10]++;

    if (response.status === 200) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[3][0]++;
      cov_1ki6ikdl2t.s[11]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.addVolumeDetails(response.data))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[3][1]++;
    }
  } catch (e) {// console.log(e)
  }
}

function* fetchVolumes() {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[2]++;
  cov_1ki6ikdl2t.s[12]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[13]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.clearVolumes())
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[14]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], '/redfish/v1/StorageServices/1/Volumes', {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[15]++;

    if (response.status === 200) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[4][0]++;
      cov_1ki6ikdl2t.s[16]++;

      for (let i =
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.s[17]++, 0); i < response.data.Members.length; i += 1) {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.s[18]++;
        yield fetchVolumeDetails({
          payload: response.data.Members[i]["@odata.id"]
        });
      }

      /* istanbul ignore next */
      cov_1ki6ikdl2t.s[19]++;
      yield fetchArraySize();
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[4][1]++;
      cov_1ki6ikdl2t.s[20]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchStorageVolumes({
          volumes: [],
          totalVolSize: 0
        }))
      );
    }
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[21]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.fetchStorageVolumes({
        volumes: [],
        totalVolSize: 0
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[22]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[5][0]++;
      cov_1ki6ikdl2t.s[23]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchStorageVolumes({
          volumes: [],
          totalVolSize: 0
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[5][1]++;
    }
  }
}

function* fetchArray(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[3]++;
  cov_1ki6ikdl2t.s[24]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[25]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Fetching Devices'))
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[26]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], `/api/v1.0/get_arrays/?ts=${Date.now()}`, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[27]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[7][0]++, response.status === 200) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[7][1]++, response.data) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[7][2]++, response.data.length > 0)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[6][0]++;
      cov_1ki6ikdl2t.s[28]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchArray(response.data[0]))
      );

      /* istanbul ignore next */
      cov_1ki6ikdl2t.s[29]++;
      yield fetchArraySize();
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[6][1]++;
      cov_1ki6ikdl2t.s[30]++;

      if (response.status === 401) {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[8][0]++;
        cov_1ki6ikdl2t.s[31]++;
        action.payload.push("/login");
      } else {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[8][1]++;
        cov_1ki6ikdl2t.s[32]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.setNoArray())
        );
      }
    }
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[33]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.setNoArray())
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[34]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[9][0]++;
      cov_1ki6ikdl2t.s[35]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.setNoArray())
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[9][1]++;
    }

    cov_1ki6ikdl2t.s[36]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[37]++;
    yield fetchVolumes();
  }
}

function* fetchDevices() {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[4]++;
  const defaultResponse =
  /* istanbul ignore next */
  (cov_1ki6ikdl2t.s[38]++, {
    devices: [],
    metadevices: []
  });
  const alertDetails =
  /* istanbul ignore next */
  (cov_1ki6ikdl2t.s[39]++, {
    errorMsg: 'Unable to get devices!',
    alertType: 'alert',
    alertTitle: 'Fetch Devices'
  });

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[40]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[41]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Fetching Devices'))
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[42]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], '/api/v1.0/get_devices/', {
        headers: {
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));
    const result =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[43]++, response.data);

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[44]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[11][0]++, response.status === 200) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[11][1]++, response.data.result) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[11][2]++, response.data.result.status.code !== 0)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[10][0]++;
      cov_1ki6ikdl2t.s[45]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          alertTitle: 'Fetch Devices',
          errorMsg: 'Unable to get devices!',
          errorCode: `Description: ${
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[13][0]++, response.data.result) &&
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[13][1]++, response.data.result.status) ?
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[12][0]++, `${response.data.result.status.description}, Error code:${response.data.result.status.code}`) :
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[12][1]++, '')}`
        }))
      );
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[10][1]++;
      cov_1ki6ikdl2t.s[46]++;

      if (
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.b[15][0]++, result) &&
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.b[15][1]++, typeof result !== "string") &&
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.b[15][2]++, result.return !== -1)) {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[14][0]++;
        cov_1ki6ikdl2t.s[47]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.fetchDevices(result))
        );
      } else {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[14][1]++;
        cov_1ki6ikdl2t.s[48]++;

        if (result.status === 401) {// console.log('401 status');

          /* istanbul ignore next */
          cov_1ki6ikdl2t.b[16][0]++;
        } else {
          /* istanbul ignore next */
          cov_1ki6ikdl2t.b[16][1]++;
          cov_1ki6ikdl2t.s[49]++;
          yield (
            /* istanbul ignore next */
            (0,
            /* istanbul ignore next */
            _effects.
            /* istanbul ignore next */
            put)(actionCreators.showStorageAlert(alertDetails))
          );

          /* istanbul ignore next */
          cov_1ki6ikdl2t.s[50]++;
          yield (
            /* istanbul ignore next */
            (0,
            /* istanbul ignore next */
            _effects.
            /* istanbul ignore next */
            put)(actionCreators.fetchDevices(defaultResponse))
          );
        }
      }
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[51]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert(alertDetails))
    );

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[52]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.fetchDevices(defaultResponse))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[53]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[17][0]++;
      cov_1ki6ikdl2t.s[54]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert(alertDetails))
      );

      /* istanbul ignore next */
      cov_1ki6ikdl2t.s[55]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchDevices(defaultResponse))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[17][1]++;
    }

    cov_1ki6ikdl2t.s[56]++;
    yield fetchArray();

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[57]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}

function* createVolume(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[5]++;
  cov_1ki6ikdl2t.s[58]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[59]++;

    // for multi-volume creation
    if (action.payload.count < 2) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[18][0]++;
      cov_1ki6ikdl2t.s[60]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.startStorageLoader('Creating Volume'))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[18][1]++;
    }

    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[61]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/save-volume/',
      /* istanbul ignore next */
      _objectSpread({}, action.payload), {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[62]++;
    console.log("Volume Createddd!!!!!!!!!!!!!!!!", response, action.payload);

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[63]++;

    if (action.payload.count > 1) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[19][0]++;
      cov_1ki6ikdl2t.s[64]++;

      if (response.status === 200) {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[20][0]++;
        cov_1ki6ikdl2t.s[65]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.toggleCreateVolumeButton(true))
        );
      } else {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[20][1]++;
        cov_1ki6ikdl2t.s[66]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            alertType: 'alert',
            alertTitle: 'Create Volume',
            errorMsg: 'Volume(s) creation failed',
            errorCode: ``
          }))
        );
      }
    } // for single volume creation
    else {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[19][1]++;
        cov_1ki6ikdl2t.s[67]++;

        if (response.status === 200) {
          /* istanbul ignore next */
          cov_1ki6ikdl2t.b[21][0]++;
          cov_1ki6ikdl2t.s[68]++;
          console.log(response.data.result.status.code);

          /* istanbul ignore next */
          cov_1ki6ikdl2t.s[69]++;

          if (
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[23][0]++, response.data.result) &&
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[23][1]++, response.data.result.status) && (
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[23][2]++, response.data.result.status.code === 2000) ||
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[23][3]++, response.data.result.status.code === 0))) {
            /* istanbul ignore next */
            cov_1ki6ikdl2t.b[22][0]++;
            cov_1ki6ikdl2t.s[70]++;
            console.log(" Create volume successfull");

            /* istanbul ignore next */
            cov_1ki6ikdl2t.s[71]++;
            yield (
              /* istanbul ignore next */
              (0,
              /* istanbul ignore next */
              _effects.
              /* istanbul ignore next */
              put)(actionCreators.showStorageAlert({
                alertType: 'info',
                alertTitle: 'Create Volume',
                errorMsg: 'Volume(s) created successfully',
                errorCode: ''
              }))
            );
          } else {
            /* istanbul ignore next */
            cov_1ki6ikdl2t.b[22][1]++;
            cov_1ki6ikdl2t.s[72]++;
            yield (
              /* istanbul ignore next */
              (0,
              /* istanbul ignore next */
              _effects.
              /* istanbul ignore next */
              put)(actionCreators.showStorageAlert({
                alertType: 'alert',
                alertTitle: 'Create Volume',
                errorMsg: 'Volume(s) creation failed',
                errorCode: `Description: ${
                /* istanbul ignore next */
                (cov_1ki6ikdl2t.b[25][0]++, response.data.result) &&
                /* istanbul ignore next */
                (cov_1ki6ikdl2t.b[25][1]++, response.data.result.status) ?
                /* istanbul ignore next */
                (cov_1ki6ikdl2t.b[24][0]++, `${response.data.result.status.description}, Error code:${response.data.result.status.code}`) :
                /* istanbul ignore next */
                (cov_1ki6ikdl2t.b[24][1]++, '')}`
              }))
            );
          }

          /* istanbul ignore next */
          cov_1ki6ikdl2t.s[73]++;
          yield fetchVolumes();
        } else {
          /* istanbul ignore next */
          cov_1ki6ikdl2t.b[21][1]++;
          cov_1ki6ikdl2t.s[74]++;
          yield (
            /* istanbul ignore next */
            (0,
            /* istanbul ignore next */
            _effects.
            /* istanbul ignore next */
            put)(actionCreators.showStorageAlert({
              alertType: 'alert',
              alertTitle: 'Create Volume',
              errorMsg: 'Volume(s) creation failed',
              errorCode: `Message from server: ${response.data ?
              /* istanbul ignore next */
              (cov_1ki6ikdl2t.b[26][0]++, response.data.result) :
              /* istanbul ignore next */
              (cov_1ki6ikdl2t.b[26][1]++, '')}`
            }))
          );
        }
      }
  } catch (error) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[75]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert({
        alertType: 'alert',
        alertTitle: 'Create Volume',
        errorMsg: 'Volume(s) creation failed',
        errorCode: ``
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[76]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[27][0]++;
      cov_1ki6ikdl2t.s[77]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          alertTitle: 'Create Volume',
          errorMsg: 'Volume(s) creation failed',
          errorCode: ``
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[27][1]++;
    }

    cov_1ki6ikdl2t.s[78]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}
/* function* createVolume(action) {
    let vol_successful = 0
    try {
        let count
        let prefix = action.payload.name
        
        yield put(actionCreators.toggleCreateVolumeButton(true));

        console.log("payloaddd",action.payload)
        for (count = 1; count <= action.payload.count; count++) {
            if (action.payload.count != 1) {
                action.payload.name = prefix + "_" + action.payload.suffix.toString()
                action.payload.suffix++
            }
            const response = yield call([axios, axios.post], '/api/v1.0/save-volume/', {
                ...action.payload
            }, {
                headers: {
                    Accept: 'application/json',
                    'Content-Type': 'application/json',
                    'x-access-token': localStorage.getItem('token'),
                }
            })

            if (response.status === 200) {
                if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {
                    vol_successful++
                }
            }
            if (action.payload.stop_on_error === true) {
                if (response.status === 200) {
                    if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0))
                        continue;
                    else
                        break;
                }
                else if (yield cancelled() || response.status !== 200) {
                    break;
                }
            }
        }
    }
    catch (error) {
        yield put(actionCreators.showStorageAlert({
            alertType: 'alert',
            alertTitle: 'Create Volume',
            errorMsg: 'Volume(s) creation failed',
            errorCode: ``
        }))
    } finally {
        if (yield cancelled()) {
            yield put(actionCreators.showStorageAlert({
                alertType: 'alert',
                alertTitle: 'Create Volume',
                errorMsg: 'Volume(s) creation failed',
                errorCode: ``
            }))
        }
        else {
            let alert_type = vol_successful === 0 ? 'alert' : 'info'
            let error_msg
            if(vol_successful == action.payload.count)
            {
                if(action.payload.count === 1)
                    error_msg = 'Volume created successfully'
                else
                    error_msg = 'Status: ' + vol_successful + ' volumes created successfully'
            }
            else
            {
                if(action.payload.count === 1)
                    error_msg = 'Volume creation failed'
                else
                    error_msg = 'Status: ' + vol_successful + "/" + action.payload.count + ' volume(s) created successfully'
            }

            yield put(actionCreators.showStorageAlert({
                alertType: alert_type,
                alertTitle: 'Create Volume',
                errorMsg: error_msg,
                errorCode: '',
            }));
        }
        yield put(actionCreators.toggleCreateVolumeButton(false));
        yield fetchVolumes();
    }
}
*/
// function* createVolume(action) {
//     try {
//         yield put(actionCreators.startStorageLoader('Creating Volume'));
//         const response = yield call([axios, axios.post], '/api/v1.0/save-volume/', {
//             ...action.payload
//         }, {
//             headers: {
//                 Accept: 'application/json',
//                 'Content-Type': 'application/json',
//                 'x-access-token': localStorage.getItem('token'),
//             }
//         });
//         if (response.status === 200) {
//             if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {
//                 yield put(actionCreators.showStorageAlert({
//                     alertType: 'info',
//                     alertTitle: 'Create Volume',
//                     errorMsg: 'Volume(s) created successfully',
//                     errorCode: '',
//                 }));
//             } else {
//                 yield put(actionCreators.showStorageAlert({
//                     alertType: 'alert',
//                     alertTitle: 'Create Volume',
//                     errorMsg: 'Volume(s) creation failed',
//                     errorCode: `Message from server: ${response.data.result && response.data.result.status ? response.data.result.status.description : ''}`
//                 }))
//             }
//             yield fetchVolumes();
//         } else {
//             yield put(actionCreators.showStorageAlert({
//                 alertType: 'alert',
//                 alertTitle: 'Create Volume',
//                 errorMsg: 'Volume(s) creation failed',
//                 errorCode: `Message from server: ${response.data ? response.data.result : ''}`
//             }))
//         }
//     } catch (error) {
//         yield put(actionCreators.showStorageAlert({
//             alertType: 'alert',
//             alertTitle: 'Create Volume',
//             errorMsg: 'Volume(s) creation failed',
//             errorCode: ``
//         }))
//     } finally {
//         if (yield cancelled()) {
//             yield put(actionCreators.showStorageAlert({
//                 alertType: 'alert',
//                 alertTitle: 'Create Volume',
//                 errorMsg: 'Volume(s) creation failed',
//                 errorCode: ``
//             }))
//         }
//         yield put(actionCreators.stopStorageLoader());
//     }
// }


function* updateVolume(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[6]++;
  cov_1ki6ikdl2t.s[79]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[80]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Updating Volume'))
    );

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[81]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[29][0]++, action.payload.maxiops < 0) ||
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[29][1]++, action.payload.maxbw < 0) ||
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[29][2]++, action.payload.maxiops > 0) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[29][3]++, action.payload.maxiops < 10)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[28][0]++;
      cov_1ki6ikdl2t.s[82]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          alertTitle: 'Update Volume',
          errorMsg: 'Please give valid values',
          errorCode: ''
        }))
      );

      /* istanbul ignore next */
      cov_1ki6ikdl2t.s[83]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[28][1]++;
    }

    const data =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[84]++, {
      maxiops: parseInt(action.payload.maxiops, 10),
      maxbw: parseInt(action.payload.maxbw, 10),
      name: action.payload.name
    });
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[85]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.put], '/api/v1.0/update-volume/', data, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[86]++;

    if (response.status === 200) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[30][0]++;
      cov_1ki6ikdl2t.s[87]++;

      if (
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.b[32][0]++, response.data.result) &&
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.b[32][1]++, response.data.result.status) && (
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.b[32][2]++, response.data.result.status.code === 2000) ||
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.b[32][3]++, response.data.result.status.code === 0))) {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[31][0]++;
        cov_1ki6ikdl2t.s[88]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            alertType: 'info',
            alertTitle: 'Update Volume',
            errorMsg: 'Volume Updated successfully',
            errorCode: ''
          }))
        );
      } else {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[31][1]++;
        cov_1ki6ikdl2t.s[89]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            alertType: 'alert',
            alertTitle: 'Update Volume',
            errorMsg: 'Volume Updation failed',
            errorCode: `Description: ${
            /* istanbul ignore next */
            (cov_1ki6ikdl2t.b[34][0]++, response.data.result) &&
            /* istanbul ignore next */
            (cov_1ki6ikdl2t.b[34][1]++, response.data.result.status) ?
            /* istanbul ignore next */
            (cov_1ki6ikdl2t.b[33][0]++, `${response.data.result.status.description}, Error code:${response.data.result.status.code}`) :
            /* istanbul ignore next */
            (cov_1ki6ikdl2t.b[33][1]++, '')}`
          }))
        );
      }

      /* istanbul ignore next */
      cov_1ki6ikdl2t.s[90]++;
      yield fetchVolumes();
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[30][1]++;
      cov_1ki6ikdl2t.s[91]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          alertTitle: 'Update Volume',
          errorMsg: 'Volume Updation failed',
          errorCode: `Message from server: ${response.data ?
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[35][0]++, response.data.result) :
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[35][1]++, '')}`
        }))
      );
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[92]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert({
        alertType: 'alert',
        alertTitle: 'Update Volume',
        errorMsg: 'Volume Updation failed',
        errorCode: ``
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[93]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[36][0]++;
      cov_1ki6ikdl2t.s[94]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          alertTitle: 'Update Volume',
          errorMsg: 'Volume Updation failed',
          errorCode: ``
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[36][1]++;
    }

    cov_1ki6ikdl2t.s[95]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}

function* fetchMaxVolumeCount() {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[7]++;
  cov_1ki6ikdl2t.s[96]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[97]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], `/api/v1.0/max_volume_count/?ts=${Date.now()}`, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[98]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[38][0]++, response.status === 200) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[38][1]++, response.data)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[37][0]++;
      cov_1ki6ikdl2t.s[99]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchMaxVolumeCount(response.data))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[37][1]++;
    }
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[100]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.fetchMaxVolumeCount(256))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[101]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[39][0]++;
      cov_1ki6ikdl2t.s[102]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchMaxVolumeCount(256))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[39][1]++;
    }
  }
}

function* deleteArray(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[8]++;
  cov_1ki6ikdl2t.s[103]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[104]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Deleting Array'))
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[105]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/delete_array/',
      /* istanbul ignore next */
      _objectSpread({}, action.payload), {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[106]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[41][0]++, response.status === 200) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[41][1]++, response.data) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[41][2]++, response.data.return !== -1)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[40][0]++;
      cov_1ki6ikdl2t.s[107]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'info',
          alertTitle: 'Delete Array',
          errorMsg: 'Array deleted successfully',
          errorCode: ''
        }))
      );
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[40][1]++;
      cov_1ki6ikdl2t.s[108]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          errorMsg: 'Array deletion failed',
          alertType: 'alert',
          alertTitle: 'Delete Array',
          errorCode: `Message from server: ${response.data.result}`
        }))
      );
    }

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[109]++;
    yield fetchArray();
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[110]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert({
        errorMsg: 'Array deletion failed',
        alertType: 'alert',
        alertTitle: 'Delete Array',
        errorCode: ''
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[111]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[42][0]++;
      cov_1ki6ikdl2t.s[112]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          errorMsg: 'Array deletion failed',
          alertType: 'alert',
          alertTitle: 'Delete Array',
          errorCode: ``
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[42][1]++;
    }

    cov_1ki6ikdl2t.s[113]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}

function* deleteVolumes(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[9]++;
  cov_1ki6ikdl2t.s[114]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[115]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Deleting Volume(s)'))
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[116]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/delete_volumes', action.payload, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[117]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[44][0]++, response.status === 200) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[44][1]++, response.data)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[43][0]++;
      cov_1ki6ikdl2t.s[118]++;

      if (response.data.return !== -1) {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[45][0]++;
        cov_1ki6ikdl2t.s[119]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            alertType: 'info',
            alertTitle: 'Delete Volume',
            errorMsg: 'Volume(s) deleted successfully',
            errorCode: ''
          }))
        );
      } else {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[45][1]++;
        cov_1ki6ikdl2t.s[120]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            errorMsg: `Deletion failed for volume :  ${response.data.vol_name}`,
            alertType: 'alert',
            alertTitle: 'Delete Volume',
            errorCode: `Description:${`${response.data.result.description}, Error Code:${response.data.result.code}`}`
          }))
        );
      }
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[43][1]++;
      cov_1ki6ikdl2t.s[121]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          errorMsg: 'Volume deletion failed',
          alertType: 'alert',
          alertTitle: 'Delete Volume',
          errorCode: `Message from server:${response.data.result}`
        }))
      );
    }

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[122]++;
    yield fetchVolumes();
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[123]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert({
        errorMsg: 'Volume deletion failed',
        alertType: 'alert',
        alertTitle: 'Delete Volume',
        errorCode: ''
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[124]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[46][0]++;
      cov_1ki6ikdl2t.s[125]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          errorMsg: 'Volume deletion failed',
          alertType: 'alert',
          alertTitle: 'Delete Volume',
          errorCode: ''
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[46][1]++;
    }

    cov_1ki6ikdl2t.s[126]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}

function* createArray(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[10]++;
  cov_1ki6ikdl2t.s[127]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[128]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Creating Array'))
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[129]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/create_arrays/',
      /* istanbul ignore next */
      _objectSpread({}, action.payload), {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[130]++;

    if (response.status === 200) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[47][0]++;
      cov_1ki6ikdl2t.s[131]++;

      if (
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.b[49][0]++, response.data.return !== -1) &&
      /* istanbul ignore next */
      (cov_1ki6ikdl2t.b[49][1]++, response.data.result.status.code === 0)) {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[48][0]++;
        cov_1ki6ikdl2t.s[132]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            errorMsg: 'Array created successfully',
            alertTitle: 'Create Array',
            alertType: 'info',
            errorCode: ''
          }))
        );
      } else {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[48][1]++;
        cov_1ki6ikdl2t.s[133]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            alertType: 'alert',
            errorMsg: 'Error in Array Creation',
            errorCode: `Description:${response.data.result.status.description}, Error Code: ${response.data.result.status.code}`,
            alertTitle: 'Create Array'
          }))
        );
      }
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[47][1]++;
      cov_1ki6ikdl2t.s[134]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error in Array Creation',
          errorCode:
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[51][0]++, response.data) &&
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[51][1]++, response.data.result) ?
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[50][0]++, response.data.result) :
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[50][1]++, 'Array Creation failed'),
          alertTitle: 'Create Array'
        }))
      );
    }

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[135]++;
    yield fetchArray();

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[136]++;
    yield fetchMaxVolumeCount();
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[137]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert({
        alertType: 'alert',
        errorMsg: 'Error in Array Creation',
        errorCode: '',
        alertTitle: 'Create Array'
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[138]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[52][0]++;
      cov_1ki6ikdl2t.s[139]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error in Array Creation',
          errorCode: '',
          alertTitle: 'Create Array'
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[52][1]++;
    }

    cov_1ki6ikdl2t.s[140]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}

function* attachDisk(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[11]++;
  cov_1ki6ikdl2t.s[141]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[142]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Attaching Device'))
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[143]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/attach_device/', {
        name: action.payload.name
      }, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[144]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[54][0]++, response.status === 200) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[54][1]++, response.data.return !== -1)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[53][0]++;
      cov_1ki6ikdl2t.s[145]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          errorMsg: 'Device Attached successfully',
          alertTitle: 'Attach Device',
          alertType: 'info',
          errorCode: ''
        }))
      );
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[53][1]++;
      cov_1ki6ikdl2t.s[146]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error while Attaching Device',
          errorCode:
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[56][0]++, response.data) &&
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[56][1]++, response.data.result) ?
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[55][0]++, response.data.result) :
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[55][1]++, 'Device Attaching failed'),
          alertTitle: 'Device Attach'
        }))
      );
    }

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[147]++;
    yield fetchArray();
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[148]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert({
        alertType: 'alert',
        errorMsg: 'Error in Attaching Device',
        errorCode: '',
        alertTitle: 'Attach Device'
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[149]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[57][0]++;
      cov_1ki6ikdl2t.s[150]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error in Attaching Device',
          errorCode: '',
          alertTitle: 'Attach Device'
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[57][1]++;
    }

    cov_1ki6ikdl2t.s[151]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}

function* addSpareDisk(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[12]++;
  cov_1ki6ikdl2t.s[152]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[153]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Adding Spare Device'))
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[154]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/add_spare_device/', {
        name: action.payload.name
      }, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[155]++;

    if (response.status === 200) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[58][0]++;
      cov_1ki6ikdl2t.s[156]++;

      if (response.data.return !== -1) {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[59][0]++;
        cov_1ki6ikdl2t.s[157]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            errorMsg: 'Spare Device Added successfully',
            alertTitle: 'Add Spare Device',
            alertType: 'info',
            errorCode: ''
          }))
        );
      } else {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[59][1]++;
        cov_1ki6ikdl2t.s[158]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            alertType: 'alert',
            errorMsg: 'Error while Adding Spare Device',
            errorCode: `Description:${response.data.result.description}, Error Code:${response.data.result.code}`,
            alertTitle: 'Add Spare Device'
          }))
        );
      }
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[58][1]++;
      cov_1ki6ikdl2t.s[159]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error while Adding Spare Device',
          errorCode:
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[61][0]++, response.data) &&
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[61][1]++, response.data.result) ?
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[60][0]++, response.data.result) :
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[60][1]++, 'Adding Spare Device Failed'),
          alertTitle: 'Add Spare Device'
        }))
      );
    }

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[160]++;
    yield fetchArray();
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[161]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert({
        alertType: 'alert',
        errorMsg: 'Error while Adding Spare Device',
        errorCode: '',
        alertTitle: 'Add Spare Device'
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[162]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[62][0]++;
      cov_1ki6ikdl2t.s[163]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error while Adding Spare Device',
          errorCode: '',
          alertTitle: 'Add Spare Device'
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[62][1]++;
    }

    cov_1ki6ikdl2t.s[164]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}

function* detachDisk(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[13]++;
  cov_1ki6ikdl2t.s[165]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[166]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Detaching Device'))
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[167]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/detach_device/', {
        name: action.payload.name
      }, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[168]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[64][0]++, response.status === 200) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[64][1]++, response.data.return !== -1)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[63][0]++;
      cov_1ki6ikdl2t.s[169]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          errorMsg: 'Device Detached successfully',
          alertTitle: 'Detach Device',
          alertType: 'info',
          errorCode: ''
        }))
      );
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[63][1]++;
      cov_1ki6ikdl2t.s[170]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error while Detaching Device',
          errorCode:
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[66][0]++, response.data) &&
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[66][1]++, response.data.result) ?
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[65][0]++, response.data.result) :
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[65][1]++, 'Device Detaching failed'),
          alertTitle: 'Device Detach'
        }))
      );
    }

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[171]++;
    yield fetchArray();
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[172]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert({
        alertType: 'alert',
        errorMsg: 'Error in Detaching Device',
        errorCode: '',
        alertTitle: 'Detach Device'
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[173]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[67][0]++;
      cov_1ki6ikdl2t.s[174]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error in Detaching Device',
          errorCode: '',
          alertTitle: 'Detach Device'
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[67][1]++;
    }

    cov_1ki6ikdl2t.s[175]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}

function* removeSpareDisk(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[14]++;
  cov_1ki6ikdl2t.s[176]++;

  try {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[177]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.startStorageLoader('Removing Spare Device'))
    );
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[178]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/remove_spare_device/', {
        name: action.payload.name
      }, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[179]++;

    if (response.status === 200) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[68][0]++;
      cov_1ki6ikdl2t.s[180]++;

      if (response.data.return !== -1) {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[69][0]++;
        cov_1ki6ikdl2t.s[181]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            errorMsg: 'Spare Device Removed successfully',
            alertTitle: 'Remove Spare Device',
            alertType: 'info',
            errorCode: ''
          }))
        );
      } else {
        /* istanbul ignore next */
        cov_1ki6ikdl2t.b[69][1]++;
        cov_1ki6ikdl2t.s[182]++;
        yield (
          /* istanbul ignore next */
          (0,
          /* istanbul ignore next */
          _effects.
          /* istanbul ignore next */
          put)(actionCreators.showStorageAlert({
            alertType: 'alert',
            errorMsg: 'Error while Removing Spare Device',
            errorCode: `Description:${response.data.result.description}, Error Code:${response.data.result.code}`,
            alertTitle: 'Remove Spare Device'
          }))
        );
      }
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[68][1]++;
      cov_1ki6ikdl2t.s[183]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error while Removing Spare Device',
          errorCode:
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[71][0]++, response.data) &&
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[71][1]++, response.data.result) ?
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[70][0]++, response.data.result) :
          /* istanbul ignore next */
          (cov_1ki6ikdl2t.b[70][1]++, 'Removing Spare Device failed'),
          alertTitle: 'Remove Spare Device'
        }))
      );
    }

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[184]++;
    yield fetchArray();
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[185]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.showStorageAlert({
        alertType: 'alert',
        errorMsg: 'Error while Removing Spare Device',
        errorCode: '',
        alertTitle: 'Remove Spare Device'
      }))
    );
  } finally {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[186]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[72][0]++;
      cov_1ki6ikdl2t.s[187]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.showStorageAlert({
          alertType: 'alert',
          errorMsg: 'Error while Removing Spare Device',
          errorCode: '',
          alertTitle: 'Remove Spare Device'
        }))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1ki6ikdl2t.b[72][1]++;
    }

    cov_1ki6ikdl2t.s[188]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.stopStorageLoader())
    );
  }
}

function* fetchDeviceDetails(action) {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[15]++;
  const defaultDiskDetails =
  /* istanbul ignore next */
  (cov_1ki6ikdl2t.s[189]++, {
    DevicePath: 'NA',
    SerialNumber: 'NA',
    ModelNumber: 'NA',
    PhysicalSize: 'NA',
    UsedBytes: 'NA',
    Firmware: 'NA',
    critical_warning: 'NA',
    temperature: 'NA',
    avail_spare: 'NA',
    spare_thresh: 'NA',
    precent_used: 'NA',
    data_units_read: 'NA',
    data_units_written: 'NA',
    critical_comp_time: 'NA',
    warning_temp_time: 'NA',
    percent_used: 'NA'
  });

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[190]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.s[191]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/get_device_details/', action.payload, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));

    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[192]++;

    if (
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[74][0]++, response.status === 200) &&
    /* istanbul ignore next */
    (cov_1ki6ikdl2t.b[74][1]++, response.data)) {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[73][0]++;
      cov_1ki6ikdl2t.s[193]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchDeviceDetails(
        /* istanbul ignore next */
        _objectSpread({}, response.data.Device, {}, response.data.smartStatus)))
      );
    } else {
      /* istanbul ignore next */
      cov_1ki6ikdl2t.b[73][1]++;
      cov_1ki6ikdl2t.s[194]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchDeviceDetails(defaultDiskDetails))
      );
    }
  } catch (e) {
    /* istanbul ignore next */
    cov_1ki6ikdl2t.s[195]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.fetchDeviceDetails(defaultDiskDetails))
    );
  }
}

function* storageWatcher() {
  /* istanbul ignore next */
  cov_1ki6ikdl2t.f[16]++;
  cov_1ki6ikdl2t.s[196]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_DEVICE_INFO, fetchDevices)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[197]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_SAVE_VOLUME, createVolume)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[198]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_ARRAY_SIZE, fetchArraySize)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[199]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_ARRAY, fetchArray)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[200]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_DELETE_ARRAY, deleteArray)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[201]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_VOLUMES, fetchVolumes)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[202]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_DELETE_VOLUMES, deleteVolumes)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[203]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_CREATE_ARRAY, createArray)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[204]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_DEVICE_DETAILS, fetchDeviceDetails)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[205]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_UPDATE_VOLUME, updateVolume)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[206]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_ATTACH_DISK, attachDisk)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[207]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_DETACH_DISK, detachDisk)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[208]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_ADD_SPARE_DISK, addSpareDisk)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[209]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_REMOVE_SPARE_DISK, removeSpareDisk)
  );

  /* istanbul ignore next */
  cov_1ki6ikdl2t.s[210]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_MAX_VOLUME_COUNT, fetchMaxVolumeCount)
  );
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,