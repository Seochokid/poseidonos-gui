{"version":3,"sources":["storageSaga.js"],"names":["fetchArraySize","response","axios","get","Date","now","headers","Accept","localStorage","getItem","status","data","actionCreators","arraySize","e","fetchVolumeDetails","action","payload","addVolumeDetails","fetchVolumes","clearVolumes","i","Members","length","fetchStorageVolumes","volumes","totalVolSize","fetchArray","startStorageLoader","push","setNoArray","stopStorageLoader","fetchDevices","defaultResponse","devices","metadevices","alertDetails","errorMsg","alertType","alertTitle","result","code","showStorageAlert","errorCode","description","return","error","createVolume","count","post","console","log","toggleCreateVolumeButton","updateVolume","maxiops","maxbw","parseInt","name","put","fetchMaxVolumeCount","deleteArray","deleteVolumes","vol_name","createArray","attachDisk","addSpareDisk","detachDisk","removeSpareDisk","fetchDeviceDetails","defaultDiskDetails","DevicePath","SerialNumber","ModelNumber","PhysicalSize","UsedBytes","Firmware","critical_warning","temperature","avail_spare","spare_thresh","precent_used","data_units_read","data_units_written","critical_comp_time","warning_temp_time","percent_used","Device","smartStatus","storageWatcher","actionTypes","SAGA_FETCH_DEVICE_INFO","SAGA_SAVE_VOLUME","SAGA_FETCH_ARRAY_SIZE","SAGA_FETCH_ARRAY","SAGA_DELETE_ARRAY","SAGA_FETCH_VOLUMES","SAGA_DELETE_VOLUMES","SAGA_CREATE_ARRAY","SAGA_FETCH_DEVICE_DETAILS","SAGA_UPDATE_VOLUME","SAGA_ATTACH_DISK","SAGA_DETACH_DISK","SAGA_ADD_SPARE_DISK","SAGA_REMOVE_SPARE_DISK","SAGA_FETCH_MAX_VOLUME_COUNT"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <Contains Generator Functions for Storage Management component> *\n@NAME : storageSaga.js\n@AUTHORS: Aswin K K \n@Version : 1.0 *\n@REVISION HISTORY\n[21/08/2019] [Aswin K K] : Prototyping..........////////////////////\n*/\n\nimport axios from 'axios';\nimport { call, takeEvery, put, cancelled } from 'redux-saga/effects';\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as actionCreators from \"../store/actions/exportActionCreators\";\n\n\nfunction* fetchArraySize() {\n    try {\n        const response = yield call([axios, axios.get], `/api/v1.0/available_storage/?ts=${Date.now()}`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data) {\n            yield put(actionCreators.fetchArraySize(response.data[0].arraySize));\n        } else {\n            yield put(actionCreators.fetchArraySize(0));\n        }\n    } catch (e) {\n        yield put(actionCreators.fetchArraySize(0));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.fetchArraySize(0));\n        }\n    }\n}\n\n\nfunction* fetchVolumeDetails(action) {\n    try {\n        const response = yield call([axios, axios.get], action.payload, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n\n        if (response.status === 200) {\n            yield put(actionCreators.addVolumeDetails(response.data))\n        }\n    } catch(e) {\n        // console.log(e)\n    }\n}\n\nfunction* fetchVolumes() {\n    try {\n        yield put(actionCreators.clearVolumes())\n        const response = yield call([axios, axios.get], '/redfish/v1/StorageServices/1/Volumes', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            for(let i = 0; i < response.data.Members.length; i += 1) {\n                yield fetchVolumeDetails({payload: response.data.Members[i][\"@odata.id\"]})\n            }\n            yield fetchArraySize();\n        } else {\n            yield put(actionCreators.fetchStorageVolumes({ volumes: [], totalVolSize: 0 }));\n        }\n    } catch (e) {\n        yield put(actionCreators.fetchStorageVolumes({ volumes: [], totalVolSize: 0 }));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.fetchStorageVolumes({ volumes: [], totalVolSize: 0 }));\n        }\n    }\n}\n\nfunction* fetchArray(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Fetching Devices'));\n        const response = yield call([axios, axios.get], `/api/v1.0/get_arrays/?ts=${Date.now()}`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data && response.data.length > 0) {\n            yield put(actionCreators.fetchArray(response.data[0]));\n            yield fetchArraySize();\n        } else if (response.status === 401) {\n            action.payload.push(\"/login\");\n        } else {\n            yield put(actionCreators.setNoArray());\n        }\n    } catch (e) {\n        yield put(actionCreators.setNoArray());\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.setNoArray());\n        }\n        yield put(actionCreators.stopStorageLoader());\n        yield fetchVolumes();\n    }\n}\n\n\nfunction* fetchDevices() {\n    const defaultResponse = {\n        devices: [],\n        metadevices: []\n    }\n    const alertDetails = {\n        errorMsg: 'Unable to get devices!',\n        alertType: 'alert',\n        alertTitle: 'Fetch Devices'\n    };\n    try {\n        yield put(actionCreators.startStorageLoader('Fetching Devices'));\n        const response = yield call([axios, axios.get], '/api/v1.0/get_devices/', {\n            headers: {\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        const result = response.data;\n        if (response.status === 200 && response.data.result && response.data.result.status.code !== 0) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Fetch Devices',\n                errorMsg: 'Unable to get devices!',\n                errorCode: `Description: ${response.data.result && response.data.result.status ? `${response.data.result.status.description }, Error code:${ response.data.result.status.code}` : ''}`\n            }))\n        }\n        else if (result && typeof (result) !== \"string\" && result.return !== -1) {\n            yield put(actionCreators.fetchDevices(result));\n        }\n\n        else if (result.status === 401) {\n            // console.log('401 status');\n        } else {\n            yield put(actionCreators.showStorageAlert(alertDetails))\n            yield put(actionCreators.fetchDevices(defaultResponse));\n        }\n    } catch (error) {\n        yield put(actionCreators.showStorageAlert(alertDetails));\n        yield put(actionCreators.fetchDevices(defaultResponse));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert(alertDetails));\n            yield put(actionCreators.fetchDevices(defaultResponse));\n        }\n        yield fetchArray();\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\nfunction* createVolume(action) {\n    try {\n        // for multi-volume creation\n        if (action.payload.count < 2)\n            yield put(actionCreators.startStorageLoader('Creating Volume'));\n        const response = yield call([axios, axios.post], '/api/v1.0/save-volume/', {\n            ...action.payload\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n\n        console.log(\"Volume Createddd!!!!!!!!!!!!!!!!\", response);\n        if (action.payload.count > 1) {\n            if (response.status === 200) {\n                yield put(actionCreators.toggleCreateVolumeButton(true));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    alertTitle: 'Create Volume',\n                    errorMsg: 'Volume(s) creation failed',\n                    errorCode: ``\n                }))\n            }\n        }\n        // for single volume creation\n        else if (response.status === 200) {\n                if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {\n                    yield put(actionCreators.showStorageAlert({\n                        alertType: 'info',\n                        alertTitle: 'Create Volume',\n                        errorMsg: 'Volume(s) created successfully',\n                        errorCode: '',\n                    }));\n                } else {\n                    yield put(actionCreators.showStorageAlert({\n                        alertType: 'alert',\n                        alertTitle: 'Create Volume',\n                        errorMsg: 'Volume(s) creation failed',\n                        errorCode: `Description: ${response.data.result && response.data.result.status ? `${response.data.result.status.description }, Error code:${ response.data.result.status.code}` : ''}`\n                    }))\n                }\n                yield fetchVolumes();\n            } else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    alertTitle: 'Create Volume',\n                    errorMsg: 'Volume(s) creation failed',\n                    errorCode: `Message from server: ${response.data ? response.data.result : ''}`\n                }))\n            }\n\n    } catch (error) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            alertTitle: 'Create Volume',\n            errorMsg: 'Volume(s) creation failed',\n            errorCode: ``\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Create Volume',\n                errorMsg: 'Volume(s) creation failed',\n                errorCode: ``\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n/* function* createVolume(action) {\n    let vol_successful = 0\n    try {\n        let count\n        let prefix = action.payload.name\n        \n        yield put(actionCreators.toggleCreateVolumeButton(true));\n\n        console.log(\"payloaddd\",action.payload)\n        for (count = 1; count <= action.payload.count; count++) {\n            if (action.payload.count != 1) {\n                action.payload.name = prefix + \"_\" + action.payload.suffix.toString()\n                action.payload.suffix++\n            }\n            const response = yield call([axios, axios.post], '/api/v1.0/save-volume/', {\n                ...action.payload\n            }, {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'x-access-token': localStorage.getItem('token'),\n                }\n            })\n\n            if (response.status === 200) {\n                if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {\n                    vol_successful++\n                }\n            }\n            if (action.payload.stop_on_error === true) {\n                if (response.status === 200) {\n                    if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0))\n                        continue;\n                    else\n                        break;\n                }\n                else if (yield cancelled() || response.status !== 200) {\n                    break;\n                }\n            }\n        }\n    }\n    catch (error) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            alertTitle: 'Create Volume',\n            errorMsg: 'Volume(s) creation failed',\n            errorCode: ``\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Create Volume',\n                errorMsg: 'Volume(s) creation failed',\n                errorCode: ``\n            }))\n        }\n        else {\n            let alert_type = vol_successful === 0 ? 'alert' : 'info'\n            let error_msg\n            if(vol_successful == action.payload.count)\n            {\n                if(action.payload.count === 1)\n                    error_msg = 'Volume created successfully'\n                else\n                    error_msg = 'Status: ' + vol_successful + ' volumes created successfully'\n            }\n            else\n            {\n                if(action.payload.count === 1)\n                    error_msg = 'Volume creation failed'\n                else\n                    error_msg = 'Status: ' + vol_successful + \"/\" + action.payload.count + ' volume(s) created successfully'\n            }\n\n            yield put(actionCreators.showStorageAlert({\n                alertType: alert_type,\n                alertTitle: 'Create Volume',\n                errorMsg: error_msg,\n                errorCode: '',\n            }));\n        }\n        yield put(actionCreators.toggleCreateVolumeButton(false));\n        yield fetchVolumes();\n    }\n}\n*/\n\n// function* createVolume(action) {\n//     try {\n//         yield put(actionCreators.startStorageLoader('Creating Volume'));\n//         const response = yield call([axios, axios.post], '/api/v1.0/save-volume/', {\n//             ...action.payload\n//         }, {\n//             headers: {\n//                 Accept: 'application/json',\n//                 'Content-Type': 'application/json',\n//                 'x-access-token': localStorage.getItem('token'),\n//             }\n//         });\n//         if (response.status === 200) {\n//             if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {\n//                 yield put(actionCreators.showStorageAlert({\n//                     alertType: 'info',\n//                     alertTitle: 'Create Volume',\n//                     errorMsg: 'Volume(s) created successfully',\n//                     errorCode: '',\n//                 }));\n//             } else {\n//                 yield put(actionCreators.showStorageAlert({\n//                     alertType: 'alert',\n//                     alertTitle: 'Create Volume',\n//                     errorMsg: 'Volume(s) creation failed',\n//                     errorCode: `Message from server: ${response.data.result && response.data.result.status ? response.data.result.status.description : ''}`\n//                 }))\n//             }\n//             yield fetchVolumes();\n//         } else {\n//             yield put(actionCreators.showStorageAlert({\n//                 alertType: 'alert',\n//                 alertTitle: 'Create Volume',\n//                 errorMsg: 'Volume(s) creation failed',\n//                 errorCode: `Message from server: ${response.data ? response.data.result : ''}`\n//             }))\n//         }\n//     } catch (error) {\n//         yield put(actionCreators.showStorageAlert({\n//             alertType: 'alert',\n//             alertTitle: 'Create Volume',\n//             errorMsg: 'Volume(s) creation failed',\n//             errorCode: ``\n//         }))\n//     } finally {\n//         if (yield cancelled()) {\n//             yield put(actionCreators.showStorageAlert({\n//                 alertType: 'alert',\n//                 alertTitle: 'Create Volume',\n//                 errorMsg: 'Volume(s) creation failed',\n//                 errorCode: ``\n//             }))\n//         }\n//         yield put(actionCreators.stopStorageLoader());\n//     }\n\n// }\n\nfunction* updateVolume(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Updating Volume'));\n        if (action.payload.maxiops < 0 || action.payload.maxbw < 0 ||\n            (action.payload.maxiops > 0 && action.payload.maxiops < 10)) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Update Volume',\n                errorMsg: 'Please give valid values',\n                errorCode: ''\n            }));\n            return;\n        }\n        const data = {\n            maxiops: parseInt(action.payload.maxiops,10),\n            maxbw: parseInt(action.payload.maxbw,10),\n            name: action.payload.name\n        }\n        const response = yield call([axios, axios.put], '/api/v1.0/update-volume/', data, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            if (response.data.result && response.data.result.status && (response.data.result.status.code === 2000 || response.data.result.status.code === 0)) {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'info',\n                    alertTitle: 'Update Volume',\n                    errorMsg: 'Volume Updated successfully',\n                    errorCode: '',\n                }));\n            } else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    alertTitle: 'Update Volume',\n                    errorMsg: 'Volume Updation failed',\n                    errorCode: `Description: ${response.data.result && response.data.result.status ? `${response.data.result.status.description }, Error code:${ response.data.result.status.code}` : ''}`\n\n                }))\n            }\n            yield fetchVolumes();\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Update Volume',\n                errorMsg: 'Volume Updation failed',\n                errorCode: `Message from server: ${response.data ? response.data.result : ''}`\n            }))\n        }\n    } catch (error) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            alertTitle: 'Update Volume',\n            errorMsg: 'Volume Updation failed',\n            errorCode: ``\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                alertTitle: 'Update Volume',\n                errorMsg: 'Volume Updation failed',\n                errorCode: ``\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\nfunction* fetchMaxVolumeCount() {\n    try {\n        const response = yield call([axios, axios.get], `/api/v1.0/max_volume_count/?ts=${Date.now()}`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data) {\n            yield put(actionCreators.fetchMaxVolumeCount(response.data));\n        }\n    }\n    catch (e) {\n        yield put(actionCreators.fetchMaxVolumeCount(256));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.fetchMaxVolumeCount(256));\n        }\n    }\n}\n\n\nfunction* deleteArray(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Deleting Array'));\n        const response = yield call([axios, axios.post], '/api/v1.0/delete_array/', {\n            ...action.payload\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data && response.data.return !== -1) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'info',\n                alertTitle: 'Delete Array',\n                errorMsg: 'Array deleted successfully',\n                errorCode: '',\n            }))\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Array deletion failed',\n                alertType: 'alert',\n                alertTitle: 'Delete Array',\n                errorCode: `Message from server: ${response.data.result}`\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            errorMsg: 'Array deletion failed',\n            alertType: 'alert',\n            alertTitle: 'Delete Array',\n            errorCode: ''\n        }));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Array deletion failed',\n                alertType: 'alert',\n                alertTitle: 'Delete Array',\n                errorCode: ``\n            }));\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\nfunction* deleteVolumes(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Deleting Volume(s)'));\n        const response = yield call([axios, axios.post], '/api/v1.0/delete_volumes', action.payload, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data) {\n            if (response.data.return !== -1) {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'info',\n                    alertTitle: 'Delete Volume',\n                    errorMsg: 'Volume(s) deleted successfully',\n                    errorCode: '',\n                }));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    errorMsg: `Deletion failed for volume :  ${ response.data.vol_name}`,\n                    alertType: 'alert',\n                    alertTitle: 'Delete Volume',\n                    errorCode: `Description:${`${response.data.result.description }, Error Code:${ response.data.result.code}`}`,\n                }));\n            }\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Volume deletion failed',\n                alertType: 'alert',\n                alertTitle: 'Delete Volume',\n                errorCode: `Message from server:${response.data.result}`,\n            }));\n        }\n        yield fetchVolumes();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            errorMsg: 'Volume deletion failed',\n            alertType: 'alert',\n            alertTitle: 'Delete Volume',\n            errorCode: ''\n        }));\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Volume deletion failed',\n                alertType: 'alert',\n                alertTitle: 'Delete Volume',\n                errorCode: ''\n            }));\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n\n}\n\nfunction* createArray(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Creating Array'));\n        const response = yield call([axios, axios.post], '/api/v1.0/create_arrays/', {\n            ...action.payload\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            if (response.data.return !== -1 && response.data.result.status.code === 0 ) {\n                yield put(actionCreators.showStorageAlert({\n                    errorMsg: 'Array created successfully',\n                    alertTitle: 'Create Array',\n                    alertType: 'info',\n                    errorCode: '',\n                }));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    errorMsg: 'Error in Array Creation',\n                    errorCode: `Description:${ response.data.result.status.description }, Error Code: ${ response.data.result.status.code}`,\n                    alertTitle: 'Create Array'\n                }));\n            }\n\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error in Array Creation',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Array Creation failed',\n                alertTitle: 'Create Array'\n            }));\n        }\n        yield fetchArray();\n        yield fetchMaxVolumeCount();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error in Array Creation',\n            errorCode: '',\n            alertTitle: 'Create Array'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error in Array Creation',\n                errorCode: '',\n                alertTitle: 'Create Array'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\nfunction* attachDisk(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Attaching Device'));\n        const response = yield call([axios, axios.post], '/api/v1.0/attach_device/', {\n            name: action.payload.name\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data.return !== -1) {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Device Attached successfully',\n                alertTitle: 'Attach Device',\n                alertType: 'info',\n                errorCode: '',\n            }));\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Attaching Device',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Device Attaching failed',\n                alertTitle: 'Device Attach'\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error in Attaching Device',\n            errorCode: '',\n            alertTitle: 'Attach Device'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error in Attaching Device',\n                errorCode: '',\n                alertTitle: 'Attach Device'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\nfunction* addSpareDisk(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Adding Spare Device'));\n        const response = yield call([axios, axios.post], '/api/v1.0/add_spare_device/', {\n            name: action.payload.name\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            if (response.data.return !== -1) {\n                yield put(actionCreators.showStorageAlert({\n                    errorMsg: 'Spare Device Added successfully',\n                    alertTitle: 'Add Spare Device',\n                    alertType: 'info',\n                    errorCode: '',\n                }));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    errorMsg: 'Error while Adding Spare Device',\n                    errorCode: `Description:${ response.data.result.description }, Error Code:${ response.data.result.code}`,\n                    alertTitle: 'Add Spare Device'\n                }));\n            }\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Adding Spare Device',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Adding Spare Device Failed',\n                alertTitle: 'Add Spare Device'\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error while Adding Spare Device',\n            errorCode: '',\n            alertTitle: 'Add Spare Device'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Adding Spare Device',\n                errorCode: '',\n                alertTitle: 'Add Spare Device'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\nfunction* detachDisk(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Detaching Device'));\n        const response = yield call([axios, axios.post], '/api/v1.0/detach_device/', {\n            name: action.payload.name\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data.return !== -1) {\n            yield put(actionCreators.showStorageAlert({\n                errorMsg: 'Device Detached successfully',\n                alertTitle: 'Detach Device',\n                alertType: 'info',\n                errorCode: '',\n            }));\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Detaching Device',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Device Detaching failed',\n                alertTitle: 'Device Detach'\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error in Detaching Device',\n            errorCode: '',\n            alertTitle: 'Detach Device'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error in Detaching Device',\n                errorCode: '',\n                alertTitle: 'Detach Device'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\nfunction* removeSpareDisk(action) {\n    try {\n        yield put(actionCreators.startStorageLoader('Removing Spare Device'));\n        const response = yield call([axios, axios.post], '/api/v1.0/remove_spare_device/', {\n            name: action.payload.name\n        }, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200) {\n            if (response.data.return !== -1) {\n                yield put(actionCreators.showStorageAlert({\n                    errorMsg: 'Spare Device Removed successfully',\n                    alertTitle: 'Remove Spare Device',\n                    alertType: 'info',\n                    errorCode: '',\n                }));\n            }\n            else {\n                yield put(actionCreators.showStorageAlert({\n                    alertType: 'alert',\n                    errorMsg: 'Error while Removing Spare Device',\n                    errorCode: `Description:${ response.data.result.description }, Error Code:${ response.data.result.code}`,\n                    alertTitle: 'Remove Spare Device'\n                }));\n            }\n        } else {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Removing Spare Device',\n                errorCode: response.data && response.data.result ?\n                    response.data.result :\n                    'Removing Spare Device failed',\n                alertTitle: 'Remove Spare Device'\n            }));\n        }\n        yield fetchArray();\n    } catch (e) {\n        yield put(actionCreators.showStorageAlert({\n            alertType: 'alert',\n            errorMsg: 'Error while Removing Spare Device',\n            errorCode: '',\n            alertTitle: 'Remove Spare Device'\n        }))\n    } finally {\n        if (yield cancelled()) {\n            yield put(actionCreators.showStorageAlert({\n                alertType: 'alert',\n                errorMsg: 'Error while Removing Spare Device',\n                errorCode: '',\n                alertTitle: 'Remove Spare Device'\n            }))\n        }\n        yield put(actionCreators.stopStorageLoader());\n    }\n}\n\n\n\nfunction* fetchDeviceDetails(action) {\n    const defaultDiskDetails = {\n        DevicePath: 'NA',\n        SerialNumber: 'NA',\n        ModelNumber: 'NA',\n        PhysicalSize: 'NA',\n        UsedBytes: 'NA',\n        Firmware: 'NA',\n        critical_warning: 'NA',\n        temperature: 'NA',\n        avail_spare: 'NA',\n        spare_thresh: 'NA',\n        precent_used: 'NA',\n        data_units_read: 'NA',\n        data_units_written: 'NA',\n        critical_comp_time: 'NA',\n        warning_temp_time: 'NA',\n        percent_used: 'NA',\n    }\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/get_device_details/', action.payload, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        if (response.status === 200 && response.data) {\n            yield put(actionCreators.fetchDeviceDetails({\n                ...response.data.Device,\n                ...response.data.smartStatus\n            }));\n        } else {\n            yield put(actionCreators.fetchDeviceDetails(defaultDiskDetails));\n        }\n    } catch (e) {\n        yield put(actionCreators.fetchDeviceDetails(defaultDiskDetails));\n    }\n\n\n}\n\nexport default function* storageWatcher() {\n    yield takeEvery(actionTypes.SAGA_FETCH_DEVICE_INFO, fetchDevices);\n    yield takeEvery(actionTypes.SAGA_SAVE_VOLUME, createVolume);\n    yield takeEvery(actionTypes.SAGA_FETCH_ARRAY_SIZE, fetchArraySize);\n    yield takeEvery(actionTypes.SAGA_FETCH_ARRAY, fetchArray);\n    yield takeEvery(actionTypes.SAGA_DELETE_ARRAY, deleteArray);\n    yield takeEvery(actionTypes.SAGA_FETCH_VOLUMES, fetchVolumes);\n    yield takeEvery(actionTypes.SAGA_DELETE_VOLUMES, deleteVolumes);\n    yield takeEvery(actionTypes.SAGA_CREATE_ARRAY, createArray);\n    yield takeEvery(actionTypes.SAGA_FETCH_DEVICE_DETAILS, fetchDeviceDetails);\n    yield takeEvery(actionTypes.SAGA_UPDATE_VOLUME, updateVolume);\n    yield takeEvery(actionTypes.SAGA_ATTACH_DISK, attachDisk);\n    yield takeEvery(actionTypes.SAGA_DETACH_DISK, detachDisk);\n    yield takeEvery(actionTypes.SAGA_ADD_SPARE_DISK, addSpareDisk);\n    yield takeEvery(actionTypes.SAGA_REMOVE_SPARE_DISK, removeSpareDisk);\n    yield takeEvery(actionTypes.SAGA_FETCH_MAX_VOLUME_COUNT, fetchMaxVolumeCount);\n}\n"]}