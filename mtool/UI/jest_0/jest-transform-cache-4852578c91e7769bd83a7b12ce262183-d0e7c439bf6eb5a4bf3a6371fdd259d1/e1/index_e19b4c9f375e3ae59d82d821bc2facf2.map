{"version":3,"sources":["index.js"],"names":["styles","theme","multilineColor","color","root","flexGrow","Paper","marginTop","spacing","width","maxHeight","tempParentGrid","maxWidth","flexBasis","minHeight","tempOuterGrid","border","overflowY","overflowX","background","TemperatureSensor","Component","constructor","props","overrides","MuiSvgIcon","MuiTablePagination","menuItem","fontSize","select","toolbar","palette","primary","main","secondary","state","columns","title","field","cellStyle","fontFamily","render","rowData","Status","Health","Health_OK_Icon","Health_NOT_OK_Icon","UpperThresholdNonCritical","componentDidMount","fetchTemperatureSensorInfo","classes","Check","FirstPage","LastPage","NextPage","ChevronRight","PreviousPage","ChevronLeft","Search","ThirdStateCheck","Remove","DetailPanel","Export","SaveAlt","Filter","FilterList","Add","Edit","EditIcon","Delete","TrashIcon","SortArrow","ArrowUpward","Clear","temp_sensor_info","actionsColumnIndex","selection","sorting","rowStyle","search","paginationType","loadingType","maxBodyHeight","headerStyle","backgroundColor","height","paddingTop","paddingBottom","mapStateToProps","hardwareSensorReducer","temperature_sensor_info","mapDispatchToProps","dispatch","type","actionTypes","SAGA_HARDWARE_SENSORS_FETCH_TEMPERATURE_SENSOR_INFORMATION"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: Sensor Page Temperature Component\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi\n@Version : 1.0 \n@REVISION HISTORY\n[03/11/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport MaterialTable from 'material-table';\nimport { Paper, createMuiTheme, } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport Search from '@material-ui/icons/Search';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Add from '@material-ui/icons/Add';\nimport Check from '@material-ui/icons/Check';\nimport FilterList from '@material-ui/icons/FilterList';\nimport Remove from '@material-ui/icons/Remove';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TrashIcon from '@material-ui/icons/Delete';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Clear from '@material-ui/icons/Clear';\nimport Health_OK_Icon from '../../../assets/images/Ok14x14.png'\nimport Health_NOT_OK_Icon from '../../../assets/images/Not-Ok14x14.png'\nimport * as actionTypes from '../../../store/actions/actionTypes';\n\nconst styles = theme => ({\n    multilineColor: {\n        color: 'black'\n    },\n    root: {\n        flexGrow: 1,\n    },\n\n    Paper: {\n        marginTop: theme.spacing(2),\n        width: '100%',\n        maxHeight: '100%'\n    },\n    tempParentGrid: {\n        maxWidth: '100%',\n        flexBasis: '100%',\n        minHeight: '100%'\n    },\n\n    tempOuterGrid: {\n        border: '1px solid gray',\n        maxWidth: '100%',\n        flexBasis: '100%',\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        background: '#fff',\n    },\n});\n\n\nclass TemperatureSensor extends Component {\n    constructor(props) {\n        super(props);\n        this.theme = createMuiTheme({\n            overrides: {\n                MuiSvgIcon: {\n                    //  stylesheet name\n                    root: {\n                        //  rule name\n                        color: '#808080',\n                    },\n                },\n                MuiTablePagination: {\n                    menuItem: {\n                        fontSize: \"12px\",\n                        minHeight: \"0px\"\n                    },\n                    select: {\n                        width: \"45px\"\n                    },\n                    toolbar: {\n                        maxHeight: '50px',\n                        minHeight: '20px'\n                    },\n                },\n            },\n\n            palette: {\n                primary: {\n                    main: '#4caf50',\n                },\n                secondary: {\n                    main: '#808080',\n                },\n            },\n\n        });\n\n        this.state = {\n            columns: [\n                {\n                    title: 'Sensor name',\n                    field: 'Name',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                },\n                {\n                    title: 'Health',\n                    field: 'Status.Health',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                    (\n                        <img src={rowData.Status.Health === 'OK' ? Health_OK_Icon : Health_NOT_OK_Icon} alt={rowData.Status.Health === 'OK' ? \"Sit and Relax\" : 'Mayday'} />\n                    ), \n                },\n                {\n                    title: 'Current Temperature (C)',\n                    field: 'ReadingCelsius',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                },\n                {\n                    title: 'Max Temperature Threshold (C)',\n                    field: 'UpperThresholdNonCritical',\n                    cellStyle: {\n                        fontFamily: 'Arial',\n                        fontSize: '12px',\n                    },\n                    render: rowData =>\n                    (\n                        <p> {rowData.UpperThresholdNonCritical ? rowData.UpperThresholdNonCritical : \"NA\"} </p>\n                    ),\n                },\n               \n            ],\n        };\n    }\n\n    componentDidMount() {\n        this.props.fetchTemperatureSensorInfo();\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Paper className={classes.Paper}>\n                <Grid sm={6} xs={12} item container className={classes.tempParentGrid}>\n                    <Grid xs={12} item className={classes.tempOuterGrid}>\n                        <ThemeProvider theme={this.theme}>\n                            <MaterialTable\n                                icons={{\n                                    Check,\n                                    FirstPage,\n                                    LastPage,\n                                    NextPage: ChevronRight,\n                                    PreviousPage: ChevronLeft,\n                                    Search,\n                                    ThirdStateCheck: Remove,\n                                    DetailPanel: ChevronRight,\n                                    Export: SaveAlt,\n                                    Filter: FilterList,\n                                    Add,\n                                    Edit: EditIcon,\n                                    Delete: TrashIcon,\n                                    SortArrow: ArrowUpward,\n                                    Clear,\n                                }}\n                                columns={this.state.columns}\n                                data={this.props.temp_sensor_info}\n                                options={{\n                                    actionsColumnIndex: -1,\n                                    selection: false,\n                                    sorting: true,\n                                    toolbar: false,\n                                    rowStyle: {\n                                        fontSize: '4px',\n                                    },\n                                    search: false,\n                                    paginationType: 'normal',\n                                    loadingType: 'linear',\n                                    maxBodyHeight: '500px',\n                                    headerStyle: {\n                                        backgroundColor: '#788595',\n                                        color: 'rgba(255, 255, 255, 0.87)',\n                                        fontSize: '14px',\n                                        height: '10%',\n                                        paddingTop: '2px',\n                                        paddingBottom: '2px',\n                                    },\n                                }}\n\n                            />\n                        </ThemeProvider>\n                    </Grid>\n                </Grid>\n            </Paper>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        temp_sensor_info: state.hardwareSensorReducer.temperature_sensor_info,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchTemperatureSensorInfo: () => dispatch({ type: actionTypes.SAGA_HARDWARE_SENSORS_FETCH_TEMPERATURE_SENSOR_INFORMATION, }),\n    };\n}\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(((TemperatureSensor))));"]}