{"version":3,"sources":["index.test.js"],"names":["jest","unmock","describe","wrapper","history","store","beforeEach","sagaMiddleware","rootReducers","alertManagementReducer","userManagementReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","run","rootSaga","route","initialEntries","renderComponent","i18n","afterEach","cleanup","it","mock","MockAdapter","axios","response","onGet","reply","getByText","asFragment","expect","toBeDefined","getByTestId","username","password","confirmPassword","phno","email","confirmBtn","fireEvent","keyDown","key","code","charCode","change","target","value","click","cancelBtn","nameElement","toMatchSnapshot","getAllByTitle","getAllByPlaceholderText","editBtn","spy","spyOn","mockReturnValue","saveBtn","Promise","resolve","setTimeout","toHaveBeenCalledTimes","alertText","deleteBtn","disableBtn","toBeCalled","queryByText","toBeNull"],"mappings":";;AAqDAA,IAAI,CAACC,MAAL,CAAY,OAAZ;;;;AA1BA;;AACA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAIAC,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACrC,MAAIC,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,KAAJ,CAHqC,CAIrC;;AACAC,EAAAA,UAAU,CAAC,MAAM;AACf,UAAMC,cAAc,GAAG,yBAAvB;AACA,UAAMC,YAAY,GAAG,4BAAgB;AACnC;AACF;AACEC,MAAAA,sBAAsB,EAAtBA,+BAHmC;AAInCC,MAAAA,qBAAqB,EAArBA;AAJmC,KAAhB,CAArB;AAMA,UAAMC,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+CC,cADjD;AAEAT,IAAAA,KAAK,GAAG,wBACNG,YADM,EAENG,gBAAgB,CAAC,4BAAgBJ,cAAhB,CAAD,CAFV,CAAR;AAIAA,IAAAA,cAAc,CAACQ,GAAf,CAAmBC,kBAAnB;AACA,UAAMC,KAAK,GAAG,4BAAd;AACAb,IAAAA,OAAO,GAAG,kCAAoB;AAAEc,MAAAA,cAAc,EAAE,CAACD,KAAD;AAAlB,KAApB,CAAV,CAhBe,CAiBf;AACD,GAlBS,CAAV;;AAoBA,QAAME,eAAe,GAAG,MAAM;AAC5BhB,IAAAA,OAAO,GAAG,oBACR,6BAAC,sBAAD;AAAQ,MAAA,OAAO,EAAEC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,6BAAD;AAAiB,MAAA,IAAI,EAAEgB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,oBAAD;AAAU,MAAA,KAAK,EAAEf,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,6BAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADQ,CAAV;AASD,GAVD;;AAYAgB,EAAAA,SAAS,CAACC,eAAD,CAAT;AAEAC,EAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAY;AACxC,UAAMC,IAAI,GAAG,IAAIC,yBAAJ,CAAgBC,cAAhB,CAAb;AACA,QAAIC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,sBAAX,EAAmCC,KAAnC,CAAyC,GAAzC,EAA8C,IAA9C,CAAf;AACAV,IAAAA,eAAe;AAHyB,qBAINhB,OAJM;AAAA,UAIhC2B,SAJgC,YAIhCA,SAJgC;AAAA,UAIrBC,UAJqB,YAIrBA,UAJqB;AAKxCC,IAAAA,MAAM,CAACF,SAAS,CAAC,WAAD,CAAV,CAAN,CAA+BG,WAA/B;AACD,GANC,CAAF;AAQAV,EAAAA,EAAE,CAAC,uBAAD,EAA0B,MAAM;AAChCJ,IAAAA,eAAe;AADiB,sBAEehB,OAFf;AAAA,UAExB4B,UAFwB,aAExBA,UAFwB;AAAA,UAEZG,WAFY,aAEZA,WAFY;AAAA,UAECJ,SAFD,aAECA,SAFD;AAGhC,UAAMK,QAAQ,GAAGD,WAAW,CAAC,eAAD,CAA5B;AACA,UAAME,QAAQ,GAAGF,WAAW,CAAC,mBAAD,CAA5B;AACA,UAAMG,eAAe,GAAGH,WAAW,CAAC,2BAAD,CAAnC;AACA,UAAMI,IAAI,GAAGJ,WAAW,CAAC,eAAD,CAAxB;AACA,UAAMK,KAAK,GAAGL,WAAW,CAAC,gBAAD,CAAzB;AACA,UAAMM,UAAU,GAAGV,SAAS,CAAC,QAAD,CAA5B;;AACAW,sBAAUC,OAAV,CAAkBP,QAAlB,EAA4B;AAACQ,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA5B;;AACAJ,sBAAUC,OAAV,CAAkBP,QAAlB,EAA4B;AAACQ,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA5B;;AACAJ,sBAAUK,MAAV,CAAiBX,QAAjB,EAA2B;AAACY,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAT,KAA3B;;AACAP,sBAAUC,OAAV,CAAkBN,QAAlB,EAA4B;AAACO,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA5B;;AACAJ,sBAAUC,OAAV,CAAkBP,QAAlB,EAA4B;AAACQ,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA5B;;AACAJ,sBAAUK,MAAV,CAAiBV,QAAjB,EAA2B;AAACW,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAT,KAA3B;;AACAP,sBAAUC,OAAV,CAAkBL,eAAlB,EAAmC;AAACM,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAAnC;;AACAJ,sBAAUC,OAAV,CAAkBP,QAAlB,EAA4B;AAACQ,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA5B;;AACAJ,sBAAUK,MAAV,CAAiBT,eAAjB,EAAkC;AAACU,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAT,KAAlC;;AACAP,sBAAUC,OAAV,CAAkBH,KAAlB,EAAyB;AAACI,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAAzB;;AACAJ,sBAAUC,OAAV,CAAkBP,QAAlB,EAA4B;AAACQ,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA5B;;AACAJ,sBAAUK,MAAV,CAAiBP,KAAjB,EAAwB;AAACQ,MAAAA,MAAM,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAT,KAAxB;;AACAP,sBAAUK,MAAV,CAAiBR,IAAjB,EAAuB;AAACS,MAAAA,MAAM,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR;AAAT,KAAvB;;AACAP,sBAAUQ,KAAV,CAAgBT,UAAhB;;AACAR,IAAAA,MAAM,CAACF,SAAS,CAAC,KAAD,CAAV,CAAN,CAAyBG,WAAzB;;AACAQ,sBAAUQ,KAAV,CAAgBnB,SAAS,CAAC,KAAD,CAAzB,EAxBgC,CAyBhC;;AACD,GA1BC,CAAF;AA4BAP,EAAAA,EAAE,CAAC,6BAAD,EAAgC,MAAM;AACtCJ,IAAAA,eAAe;AADuB,sBAEShB,OAFT;AAAA,UAE9B4B,UAF8B,aAE9BA,UAF8B;AAAA,UAElBG,WAFkB,aAElBA,WAFkB;AAAA,UAELJ,SAFK,aAELA,SAFK;AAGtC,UAAMK,QAAQ,GAAGD,WAAW,CAAC,eAAD,CAA5B;AACA,UAAMgB,SAAS,GAAGpB,SAAS,CAAC,QAAD,CAA3B;;AACAW,sBAAUC,OAAV,CAAkBP,QAAlB,EAA4B;AAACQ,MAAAA,GAAG,EAAE,GAAN;AAAWC,MAAAA,IAAI,EAAE,EAAjB;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA5B;;AACAJ,sBAAUK,MAAV,CAAiBX,QAAjB,EAA2B;AAACY,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAAT,KAA3B;;AACAP,sBAAUQ,KAAV,CAAgBC,SAAhB;;AACAlB,IAAAA,MAAM,CAACF,SAAS,CAAC,KAAD,CAAV,CAAN,CAAyBG,WAAzB;;AACAQ,sBAAUQ,KAAV,CAAgBnB,SAAS,CAAC,IAAD,CAAzB,EATsC,CAUtC;;AACD,GAXC,CAAF;AAaAP,EAAAA,EAAE,CAAC,iDAAD,EAAoD,MAAM;AAC1DJ,IAAAA,eAAe;AAD2C,sBAEpChB,OAFoC;AAAA,UAElD2B,SAFkD,aAElDA,SAFkD;AAG1D,UAAMU,UAAU,GAAGV,SAAS,CAAC,QAAD,CAA5B;;AACAW,sBAAUQ,KAAV,CAAgBT,UAAhB;;AACAR,IAAAA,MAAM,CAACF,SAAS,CAAC,+BAAD,CAAV,CAAN,CAAmDG,WAAnD;AACD,GANC,CAAF;AAQAV,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAY;AAC9C,UAAMC,IAAI,GAAG,IAAIC,yBAAJ,CAAgBC,cAAhB,CAAb;AACA,QAAIC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,sBAAX,EACZC,KADY,CACN,GADM,EACD,CACV;AACE,aAAO,MADT;AAEE,eAAS,eAFX;AAGE,kBAAY,MAHd;AAIE,sBAAgB,IAJlB;AAKE,cAAQ,OALV;AAME,gBAAU,IANZ;AAOE,oBAAc;AAPhB,KADU,CADC,CAAf;AAYEV,IAAAA,eAAe;AAd6B,sBAeVhB,OAfU;AAAA,UAepC2B,SAfoC,aAepCA,SAfoC;AAAA,UAezBC,UAfyB,aAezBA,UAfyB;AAgB5C,UAAM,oBAAI,YAAY;AACpB,YAAMoB,WAAW,GAAG,MAAM,4BAAe,MAAMrB,SAAS,CAAC,MAAD,CAA9B,CAA1B;AACAE,MAAAA,MAAM,CAACmB,WAAD,CAAN,CAAoBlB,WAApB;AACAD,MAAAA,MAAM,CAACD,UAAU,EAAX,CAAN,CAAqBqB,eAArB;AACD,KAJK,CAAN;AAKH,GArBC,CAAF;AAuBA7B,EAAAA,EAAE,CAAC,oBAAD,EAAuB,YAAY;AACnC,UAAMC,IAAI,GAAG,IAAIC,yBAAJ,CAAgBC,cAAhB,CAAb;AACA,QAAIC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,sBAAX,EACZC,KADY,CACN,GADM,EACD,CACV;AACE,aAAO,MADT;AAEE,eAAS,eAFX;AAGE,kBAAY,MAHd;AAIE,sBAAgB,IAJlB;AAKE,cAAQ,OALV;AAME,gBAAU,IANZ;AAOE,oBAAc;AAPhB,KADU,CADC,CAAf;AAYEV,IAAAA,eAAe;AAdkB,sBAeyChB,OAfzC;AAAA,UAezB2B,SAfyB,aAezBA,SAfyB;AAAA,UAedC,UAfc,aAedA,UAfc;AAAA,UAeFsB,aAfE,aAeFA,aAfE;AAAA,UAeaC,uBAfb,aAeaA,uBAfb;AAgBjC,UAAM,oBAAI,YAAY;AACpB,YAAMH,WAAW,GAAG,MAAM,4BAAe,MAAMrB,SAAS,CAAC,MAAD,CAA9B,CAA1B;AACAE,MAAAA,MAAM,CAACmB,WAAD,CAAN,CAAoBlB,WAApB;AACA,YAAMsB,OAAO,GAAG,MAAM,4BAAe,MAAMF,aAAa,CAAC,MAAD,CAAb,CAAsB,CAAtB,CAArB,CAAtB;;AACAZ,wBAAUQ,KAAV,CAAgBM,OAAhB;;AACA,YAAMjB,IAAI,GAAG,MAAM,4BAAe,MAAMgB,uBAAuB,CAAC,mBAAD,CAAvB,CAA6C,CAA7C,CAArB,CAAnB;;AACAb,wBAAUK,MAAV,CAAiBR,IAAjB,EAAuB;AACrBS,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AADa,OAAvB;;AAGA,YAAMT,KAAK,GAAG,MAAM,4BAAe,MAAMe,uBAAuB,CAAC,OAAD,CAAvB,CAAiC,CAAjC,CAArB,CAApB;;AACAb,wBAAUK,MAAV,CAAiBP,KAAjB,EAAwB;AACtBQ,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AADc,OAAxB;;AAGA,UAAIQ,GAAG,GAAGxD,IAAI,CAACyD,KAAL,CAAW/B,cAAX,EAAkB,MAAlB,EAA0BgC,eAA1B,CAA0C,GAA1C,CAAV;AACA,YAAMC,OAAO,GAAG,MAAM,4BAAe,MAAMN,aAAa,CAAC,MAAD,CAAb,CAAsB,CAAtB,CAArB,CAAtB;;AACAZ,wBAAUQ,KAAV,CAAgBU,OAAhB;;AACA,YAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAjC,CAAN;AACA7B,MAAAA,MAAM,CAACwB,GAAD,CAAN,CAAYO,qBAAZ,CAAkC,CAAlC;AACD,KAlBK,CAAN;AAmBH,GAnCC,CAAF;AAqCAxC,EAAAA,EAAE,CAAC,mDAAD,EAAsD,YAAY;AAClE,UAAMC,IAAI,GAAG,IAAIC,yBAAJ,CAAgBC,cAAhB,CAAb;AACA,QAAIC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,sBAAX,EACZC,KADY,CACN,GADM,EACD,CACV;AACE,aAAO,MADT;AAEE,eAAS,eAFX;AAGE,kBAAY,MAHd;AAIE,sBAAgB,IAJlB;AAKE,cAAQ,OALV;AAME,gBAAU,IANZ;AAOE,oBAAc;AAPhB,KADU,CADC,CAAf;AAYEV,IAAAA,eAAe;AAdiD,sBAeUhB,OAfV;AAAA,UAexD2B,SAfwD,aAexDA,SAfwD;AAAA,UAe7CC,UAf6C,aAe7CA,UAf6C;AAAA,UAejCsB,aAfiC,aAejCA,aAfiC;AAAA,UAelBC,uBAfkB,aAelBA,uBAfkB;AAgBhE,UAAM,oBAAI,YAAY;AACpB,YAAMH,WAAW,GAAG,MAAM,4BAAe,MAAMrB,SAAS,CAAC,MAAD,CAA9B,CAA1B;AACAE,MAAAA,MAAM,CAACmB,WAAD,CAAN,CAAoBlB,WAApB;AACA,YAAMsB,OAAO,GAAG,MAAM,4BAAe,MAAMF,aAAa,CAAC,MAAD,CAAb,CAAsB,CAAtB,CAArB,CAAtB;;AACAZ,wBAAUQ,KAAV,CAAgBM,OAAhB;;AACA,YAAMjB,IAAI,GAAG,MAAM,4BAAe,MAAMgB,uBAAuB,CAAC,mBAAD,CAAvB,CAA6C,CAA7C,CAArB,CAAnB;;AACAb,wBAAUK,MAAV,CAAiBR,IAAjB,EAAuB;AACrBS,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AADa,OAAvB;;AAGA,YAAMT,KAAK,GAAG,MAAM,4BAAe,MAAMe,uBAAuB,CAAC,OAAD,CAAvB,CAAiC,CAAjC,CAArB,CAApB;;AACAb,wBAAUK,MAAV,CAAiBP,KAAjB,EAAwB;AACtBQ,QAAAA,MAAM,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AADc,OAAxB;;AAGA,UAAIQ,GAAG,GAAGxD,IAAI,CAACyD,KAAL,CAAW/B,cAAX,EAAkB,MAAlB,EAA0BgC,eAA1B,CAA0C,GAA1C,CAAV;AACA,YAAMC,OAAO,GAAG,MAAM,4BAAe,MAAMN,aAAa,CAAC,MAAD,CAAb,CAAsB,CAAtB,CAArB,CAAtB;;AACAZ,wBAAUQ,KAAV,CAAgBU,OAAhB;;AACA,YAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAjC,CAAN;AACA,YAAMG,SAAS,GAAG,MAAM,4BAAe,MAAMlC,SAAS,CAAC,4BAAD,CAA9B,CAAxB;AACAE,MAAAA,MAAM,CAACgC,SAAD,CAAN,CAAkB/B,WAAlB;AACD,KAnBK,CAAN;AAoBH,GApCC,CAAF;AAsCAV,EAAAA,EAAE,CAAC,sBAAD,EAAyB,YAAY;AACrC,UAAMC,IAAI,GAAG,IAAIC,yBAAJ,CAAgBC,cAAhB,CAAb;AACA,QAAIC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,sBAAX,EACZC,KADY,CACN,GADM,EACD,CACV;AACE,aAAO,MADT;AAEE,eAAS,eAFX;AAGE,kBAAY,MAHd;AAIE,sBAAgB,IAJlB;AAKE,cAAQ,OALV;AAME,gBAAU,IANZ;AAOE,oBAAc;AAPhB,KADU,CADC,CAAf;AAYEV,IAAAA,eAAe;AAdoB,sBAeuChB,OAfvC;AAAA,UAe3B2B,SAf2B,aAe3BA,SAf2B;AAAA,UAehBC,UAfgB,aAehBA,UAfgB;AAAA,UAeJsB,aAfI,aAeJA,aAfI;AAAA,UAeWC,uBAfX,aAeWA,uBAfX;AAgBnC,UAAM,oBAAI,YAAY;AACpB,YAAMH,WAAW,GAAG,MAAM,4BAAe,MAAMrB,SAAS,CAAC,MAAD,CAA9B,CAA1B;AACAE,MAAAA,MAAM,CAACmB,WAAD,CAAN,CAAoBlB,WAApB;AACA,YAAMgC,SAAS,GAAG,MAAM,4BAAe,MAAMZ,aAAa,CAAC,QAAD,CAAb,CAAwB,CAAxB,CAArB,CAAxB;;AACAZ,wBAAUQ,KAAV,CAAgBgB,SAAhB;;AACA,YAAMN,OAAO,GAAG,MAAM,4BAAe,MAAMN,aAAa,CAAC,MAAD,CAAb,CAAsB,CAAtB,CAArB,CAAtB;;AACAZ,wBAAUQ,KAAV,CAAgBU,OAAhB;;AACA,YAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAjC,CAAN;AACA7B,MAAAA,MAAM,CAACD,UAAU,EAAX,CAAN,CAAqBqB,eAArB;AACD,KATK,CAAN;AAUH,GA1BC,CAAF;AA4BA7B,EAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAY;AACtC,UAAMC,IAAI,GAAG,IAAIC,yBAAJ,CAAgBC,cAAhB,CAAb;AACA,QAAIC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,sBAAX,EACZC,KADY,CACN,GADM,EACD,CACV;AACE,aAAO,MADT;AAEE,eAAS,eAFX;AAGE,kBAAY,MAHd;AAIE,sBAAgB,IAJlB;AAKE,cAAQ,OALV;AAME,gBAAU,IANZ;AAOE,oBAAc;AAPhB,KADU,CADC,CAAf;AAYEV,IAAAA,eAAe;AAdqB,sBAesChB,OAftC;AAAA,UAe5B2B,SAf4B,aAe5BA,SAf4B;AAAA,UAejBC,UAfiB,aAejBA,UAfiB;AAAA,UAeLsB,aAfK,aAeLA,aAfK;AAAA,UAeUC,uBAfV,aAeUA,uBAfV;AAgBpC,UAAM,oBAAI,YAAY;AACpB,YAAMH,WAAW,GAAG,MAAM,4BAAe,MAAMrB,SAAS,CAAC,MAAD,CAA9B,CAA1B;AACAE,MAAAA,MAAM,CAACmB,WAAD,CAAN,CAAoBlB,WAApB;AACA,YAAMiC,UAAU,GAAG,MAAM,4BAAe,MAAMb,aAAa,CAAC,YAAD,CAAb,CAA4B,CAA5B,CAArB,CAAzB;AACA,UAAIG,GAAG,GAAGxD,IAAI,CAACyD,KAAL,CAAW/B,cAAX,EAAkB,MAAlB,EAA0BgC,eAA1B,CAA0C,GAA1C,CAAV;;AACAjB,wBAAUQ,KAAV,CAAgBiB,UAAhB;;AACA,YAAM,IAAIN,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAU,IAAV,CAAjC,CAAN;;AACApB,wBAAUQ,KAAV,CAAgBiB,UAAhB;;AACAlC,MAAAA,MAAM,CAACwB,GAAD,CAAN,CAAYW,UAAZ;AACD,KATK,CAAN;AAUH,GA1BC,CAAF;AA4BA5C,EAAAA,EAAE,CAAC,yBAAD,EAA4B,YAAY;AACxC,UAAMC,IAAI,GAAG,IAAIC,yBAAJ,CAAgBC,cAAhB,CAAb;AACA,QAAIC,QAAQ,GAAGH,IAAI,CAACI,KAAL,CAAW,sBAAX,EACZC,KADY,CACN,GADM,EACD,CACV;AACE,aAAO,MADT;AAEE,eAAS,eAFX;AAGE,kBAAY,MAHd;AAIE,sBAAgB,IAJlB;AAKE,cAAQ,IALV;AAME,gBAAU,IANZ;AAOE,oBAAc;AAPhB,KADU,CADC,CAAf;AAYEV,IAAAA,eAAe;AAduB,uBAeHhB,OAfG;AAAA,UAe9BiE,WAf8B,cAe9BA,WAf8B;AAAA,UAejBtC,SAfiB,cAejBA,SAfiB;AAgBtC,UAAM,oBAAI,YAAY;AACpB,YAAMqB,WAAW,GAAG,MAAM,4BAAe,MAAMrB,SAAS,CAAC,MAAD,CAA9B,CAA1B;AACAE,MAAAA,MAAM,CAACmB,WAAD,CAAN,CAAoBlB,WAApB;AACAD,MAAAA,MAAM,CAACoC,WAAW,CAAC,QAAD,CAAZ,CAAN,CAA8BC,QAA9B;AACD,KAJK,CAAN;AAKH,GArBC,CAAF;AAsBD,CAhRO,CAAR","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: User Management Test File\n@NAME : index.test.js\n@AUTHORS: Aswin K K\n@Version : 1.0 *\n@REVISION HISTORY\n[29/11/2019] [Aswin K K] : Prototyping..........////////////////////\n*/\n\nimport React from \"react\";\nimport {\n  render,\n  fireEvent,\n  cleanup,\n  waitForElement,\n  getAllByPlaceholderText,\n  queryByText\n} from \"@testing-library/react\";\nimport { Provider } from \"react-redux\";\nimport { act } from \"react-dom/test-utils\";\nimport { I18nextProvider } from \"react-i18next\";\nimport axios from \"axios\";\nimport \"@testing-library/jest-dom/extend-expect\";\nimport MockAdapter from \"axios-mock-adapter\";\nimport { createMemoryHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../../../sagas/indexSaga\";\nimport headerReducer from \"../../../store/reducers/headerReducer\";\nimport alertManagementReducer from \"../../../store/reducers/alertManagementReducer\";\nimport userManagementReducer from \"../../../store/reducers/userManagementReducer\";\nimport i18n from \"../../../i18n\";\nimport UserManagement from \"./index\";\n\njest.unmock(\"axios\");\n\ndescribe(\"ConfigurationSetting\", () => {\n  let wrapper;\n  let history;\n  let store;\n  // let mock;\n  beforeEach(() => {\n    const sagaMiddleware = createSagaMiddleware();\n    const rootReducers = combineReducers({\n      // headerLanguageReducer,\n    //   headerReducer,\n      alertManagementReducer,\n      userManagementReducer\n    });\n    const composeEnhancers =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    store = createStore(\n      rootReducers,\n      composeEnhancers(applyMiddleware(sagaMiddleware))\n    );\n    sagaMiddleware.run(rootSaga);\n    const route = \"/ConfigurationSetting/user\";\n    history = createMemoryHistory({ initialEntries: [route] });\n    // mock = new MockAdapter(axios);\n  });\n\n  const renderComponent = () => {\n    wrapper = render(\n      <Router history={history}>\n        <I18nextProvider i18n={i18n}>\n          <Provider store={store}>\n            <UserManagement />\n          </Provider>\n        </I18nextProvider>\n      </Router>\n    );\n  };\n\n  afterEach(cleanup);\n\n  it('renders user management', async () => {\n    const mock = new MockAdapter(axios);\n    let response = mock.onGet('/api/v1.0/get_users/').reply(200, null);\n    renderComponent();\n    const { getByText, asFragment } = wrapper;\n    expect(getByText(\"User List\")).toBeDefined();\n  });\n\n  it('should add a new user', () => {\n    renderComponent();\n    const { asFragment, getByTestId, getByText } = wrapper;\n    const username = getByTestId('add-user-name');\n    const password = getByTestId('add-user-password');\n    const confirmPassword = getByTestId('add-user-confirm-password');\n    const phno = getByTestId('add-user-phno');\n    const email = getByTestId('add-user-email');\n    const confirmBtn = getByText('Submit');\n    fireEvent.keyDown(username, {key: 'A', code: 65, charCode: 65});\n    fireEvent.keyDown(username, {key: '+', code: 43, charCode: 43});\n    fireEvent.change(username, {target: { value: 'abcd'}});\n    fireEvent.keyDown(password, {key: 'A', code: 65, charCode: 65});\n    fireEvent.keyDown(username, {key: '+', code: 43, charCode: 43});\n    fireEvent.change(password, {target: { value: 'test'}});\n    fireEvent.keyDown(confirmPassword, {key: 'A', code: 65, charCode: 65});\n    fireEvent.keyDown(username, {key: '+', code: 43, charCode: 43});\n    fireEvent.change(confirmPassword, {target: { value: 'test'}});\n    fireEvent.keyDown(email, {key: 'A', code: 65, charCode: 65});\n    fireEvent.keyDown(username, {key: '+', code: 43, charCode: 43});\n    fireEvent.change(email, {target: {value: 'abcd@abc.com'}});\n    fireEvent.change(phno, {target: {value: '123457890'}});\n    fireEvent.click(confirmBtn);\n    expect(getByText('Yes')).toBeDefined();\n    fireEvent.click(getByText('Yes'));\n    // expect(username.value).toBe('');\n  });\n\n  it('should cancel adding a user', () => {\n    renderComponent();\n    const { asFragment, getByTestId, getByText } = wrapper;\n    const username = getByTestId('add-user-name');\n    const cancelBtn = getByText('Cancel');\n    fireEvent.keyDown(username, {key: 'A', code: 65, charCode: 65});\n    fireEvent.change(username, {target: { value: 'abcd'}});\n    fireEvent.click(cancelBtn);\n    expect(getByText('Yes')).toBeDefined();\n    fireEvent.click(getByText('No'));\n    // expect(username.value).toBe('');\n  });\n\n  it('should throw error when username is not present', () => {\n    renderComponent();\n    const { getByText } = wrapper;\n    const confirmBtn = getByText('Submit');\n    fireEvent.click(confirmBtn);\n    expect(getByText(\"Please Enter a Valid Username\")).toBeDefined();\n  });\n\n  it('should add list all the users', async () => {\n    const mock = new MockAdapter(axios);\n    let response = mock.onGet('/api/v1.0/get_users/')\n      .reply(200, [\n        {\n          \"_id\": \"abcd\",\n          \"email\": \"abcd@corp.com\",\n          \"password\": \"Defg\",\n          \"phone_number\": \"xx\",\n          \"role\": \"admin\",\n          \"active\": true,\n          \"privileges\": \"Create, Read, Edit, Delete\"\n        }\n      ]);\n      renderComponent();\n      const { getByText, asFragment } = wrapper;\n      await act(async () => {\n        const nameElement = await waitForElement(() => getByText(\"abcd\"));\n        expect(nameElement).toBeDefined();\n        expect(asFragment()).toMatchSnapshot();\n      });\n  });\n\n  it('should edit a user', async () => {\n    const mock = new MockAdapter(axios);\n    let response = mock.onGet('/api/v1.0/get_users/')\n      .reply(200, [\n        {\n          \"_id\": \"abcd\",\n          \"email\": \"abcd@corp.com\",\n          \"password\": \"Defg\",\n          \"phone_number\": \"xx\",\n          \"role\": \"admin\",\n          \"active\": true,\n          \"privileges\": \"Create, Read, Edit, Delete\"\n        }\n      ])\n      renderComponent();\n      const { getByText, asFragment, getAllByTitle, getAllByPlaceholderText } = wrapper;\n      await act(async () => {\n        const nameElement = await waitForElement(() => getByText(\"abcd\"));\n        expect(nameElement).toBeDefined();\n        const editBtn = await waitForElement(() => getAllByTitle(\"Edit\")[0]);\n        fireEvent.click(editBtn);\n        const phno = await waitForElement(() => getAllByPlaceholderText(\"+1 (702) 123-4567\")[0]);\n        fireEvent.change(phno, {\n          target: { value: \"+1 (702) 123-4578\" }\n        });\n        const email = await waitForElement(() => getAllByPlaceholderText(\"Email\")[0]);\n        fireEvent.change(email, {\n          target: { value: \"test@abc.com\" }\n        });\n        let spy = jest.spyOn(axios, \"post\").mockReturnValue(200);\n        const saveBtn = await waitForElement(() => getAllByTitle(\"Save\")[0]);\n        fireEvent.click(saveBtn);\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        expect(spy).toHaveBeenCalledTimes(1);\n      });\n  })\n\n  it('should throw an error if the emailid is not valid', async () => {\n    const mock = new MockAdapter(axios);\n    let response = mock.onGet('/api/v1.0/get_users/')\n      .reply(200, [\n        {\n          \"_id\": \"abcd\",\n          \"email\": \"abcd@corp.com\",\n          \"password\": \"Defg\",\n          \"phone_number\": \"xx\",\n          \"role\": \"admin\",\n          \"active\": true,\n          \"privileges\": \"Create, Read, Edit, Delete\"\n        }\n      ]);\n      renderComponent();\n      const { getByText, asFragment, getAllByTitle, getAllByPlaceholderText } = wrapper;\n      await act(async () => {\n        const nameElement = await waitForElement(() => getByText(\"abcd\"));\n        expect(nameElement).toBeDefined();\n        const editBtn = await waitForElement(() => getAllByTitle(\"Edit\")[0]);\n        fireEvent.click(editBtn);\n        const phno = await waitForElement(() => getAllByPlaceholderText(\"+1 (702) 123-4567\")[0]);\n        fireEvent.change(phno, {\n          target: { value: \"+1 (702) 123-4578\" }\n        });\n        const email = await waitForElement(() => getAllByPlaceholderText(\"Email\")[0]);\n        fireEvent.change(email, {\n          target: { value: \"test\" }\n        });\n        let spy = jest.spyOn(axios, \"post\").mockReturnValue(200);\n        const saveBtn = await waitForElement(() => getAllByTitle(\"Save\")[0]);\n        fireEvent.click(saveBtn);\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const alertText = await waitForElement(() => getByText(\"Please enter a valid input\"));\n        expect(alertText).toBeDefined();\n      });\n  });\n\n  it('should delete a user', async () => {\n    const mock = new MockAdapter(axios);\n    let response = mock.onGet('/api/v1.0/get_users/')\n      .reply(200, [\n        {\n          \"_id\": \"abcd\",\n          \"email\": \"abcd@corp.com\",\n          \"password\": \"Defg\",\n          \"phone_number\": \"xx\",\n          \"role\": \"admin\",\n          \"active\": true,\n          \"privileges\": \"Create, Read, Edit, Delete\"\n        }\n      ])\n      renderComponent();\n      const { getByText, asFragment, getAllByTitle, getAllByPlaceholderText } = wrapper;\n      await act(async () => {\n        const nameElement = await waitForElement(() => getByText(\"abcd\"));\n        expect(nameElement).toBeDefined();\n        const deleteBtn = await waitForElement(() => getAllByTitle(\"Delete\")[0]);\n        fireEvent.click(deleteBtn);\n        const saveBtn = await waitForElement(() => getAllByTitle(\"Save\")[0]);\n        fireEvent.click(saveBtn);\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        expect(asFragment()).toMatchSnapshot();\n      });\n  })\n\n  it('should disable a user', async () => {\n    const mock = new MockAdapter(axios);\n    let response = mock.onGet('/api/v1.0/get_users/')\n      .reply(200, [\n        {\n          \"_id\": \"abcd\",\n          \"email\": \"abcd@corp.com\",\n          \"password\": \"Defg\",\n          \"phone_number\": \"xx\",\n          \"role\": \"admin\",\n          \"active\": true,\n          \"privileges\": \"Create, Read, Edit, Delete\"\n        }\n      ])\n      renderComponent();\n      const { getByText, asFragment, getAllByTitle, getAllByPlaceholderText } = wrapper;\n      await act(async () => {\n        const nameElement = await waitForElement(() => getByText(\"abcd\"));\n        expect(nameElement).toBeDefined();\n        const disableBtn = await waitForElement(() => getAllByTitle(\"api-enable\")[0]);\n        let spy = jest.spyOn(axios, \"post\").mockReturnValue(200);\n        fireEvent.click(disableBtn);\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        fireEvent.click(disableBtn);\n        expect(spy).toBeCalled();\n      });\n  })\n\n  it('should not display role', async () => {\n    const mock = new MockAdapter(axios);\n    let response = mock.onGet('/api/v1.0/get_users/')\n      .reply(200, [\n        {\n          \"_id\": \"abcd\",\n          \"email\": \"abcd@corp.com\",\n          \"password\": \"Defg\",\n          \"phone_number\": \"xx\",\n          \"role\": null,\n          \"active\": true,\n          \"privileges\": \"\"\n        }\n      ])\n      renderComponent();\n      const { queryByText, getByText } = wrapper;\n      await act(async () => {\n        const nameElement = await waitForElement(() => getByText(\"abcd\"));\n        expect(nameElement).toBeDefined();\n        expect(queryByText(\"Create\")).toBeNull();\n      });\n  })\n});\n"]}