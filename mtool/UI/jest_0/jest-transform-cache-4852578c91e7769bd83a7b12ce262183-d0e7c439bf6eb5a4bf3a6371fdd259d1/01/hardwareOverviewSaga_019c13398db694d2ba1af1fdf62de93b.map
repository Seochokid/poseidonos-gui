{"version":3,"sources":["hardwareOverviewSaga.js"],"names":["fetchChassisFrontInfo","action","response","axios","get","headers","Accept","localStorage","getItem","result","data","actionCreators","front_info","error","openAlertBox","alertOpen","istypealert","alerttype","alerttitle","alertdescription","fetchChassisRearInfo","chassisList","forEach","chassis","push","fetchServerInfo","model","manufacturer","mac","ip","firmwareversion","serialno","host","fetchPowerInfo","stopLoader","powerconsumption","powercap","powerstatus","rebootSystem","post","status","shutdownSystem","powerOnSystem","forceShutdownSystem","hardwareOverviewWatcher","actionTypes","SAGA_HARDWARE_OVERVIEW_FETCH_SERVER_INFORMATION","SAGA_HARDWARE_OVERVIEW_FETCH_POWER_INFORMATION","SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_FRONT_INFORMATION","SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_REAR_INFORMATION","SAGA_HARDWARE_OVERVIEW_REBOOT_SYSTEM","SAGA_HARDWARE_OVERVIEW_SHUTDOWN_SYSTEM","SAGA_HARDWARE_OVERVIEW_FORCE_SHUTDOWN_SYSTEM","SAGA_HARDWARE_OVERVIEW_POWER_ON_SYSTEM"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: <Contains Generator Functions for hardware container> *\n@NAME : hardwareOverviewSaga.js\n@AUTHORS: Jay Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/11/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport axios from 'axios';\nimport { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actionTypes from '../store/actions/actionTypes';\nimport * as actionCreators from '../store/actions/exportActionCreators';\n\nexport function* fetchChassisFrontInfo(action) {\n    try {\n        const response = yield call([axios, axios.get], '/api/v1.0/get_chassis_front_info/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchChassisFrontInfo(result.front_info));\n        }\n    } catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Hardware',\n            alertdescription: 'Unable to retrieve data',\n        }));\n        yield put(actionCreators.fetchChassisFrontInfo([]));\n    }\n    finally {\n        ;\n    }\n}\n\n\nexport function* fetchChassisRearInfo() {\n    try {\n        const response = yield call([axios, axios.get], '/api/v1.0/get_chassis_rear_info/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n\n        const result = response.data;\n        if (result) {\n            const chassisList = [];\n            result.forEach(chassis => {\n                chassisList.push({\n                    ...chassis,\n                });\n            });\n            yield put(actionCreators.fetchChassisRearInfo(chassisList));\n        }\n    } catch (error) {\n        yield put(actionCreators.fetchChassisRearInfo([]));\n    }\n}\n\nexport function* fetchServerInfo() {\n    try {\n        const response = yield call([axios, axios.get], '/api/v1.0/get_server_info/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchServerInfo(result));\n        }\n    } catch (error) {\n        yield put(actionCreators.fetchServerInfo({model:'',manufacturer:'',mac:'',ip:'',firmwareversion:'',serialno:'',host:'',}));\n    }\n}\n\nexport function* fetchPowerInfo(action) {\n    try {\n        // if(action.param == null || action.param != \"doNotStartLoader\")\n        //     yield put(actionCreators.startLoader('Fetching BMC Information'));\n\n        const response = yield call([axios, axios.get], '/api/v1.0/get_power_info/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        yield put(actionCreators.stopLoader());\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchPowerInfo(result));\n        }\n    } catch (error) {\n        yield put(actionCreators.stopLoader());\n        yield put(actionCreators.fetchPowerInfo({powerconsumption:'',powercap:'',powerstatus:'Off'}));\n    }\n}\n\n\nexport function* rebootSystem(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/reboot_system/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n\n        const { status } = response;\n        if (status === 200) {\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'info',\n                alerttitle: 'Reboot System',\n                alertdescription: 'System Reboot Successful',\n            }));\n        }\n        else if (response === 400)\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Reboot System',\n                alertdescription: 'System Reboot Failed',\n            }));\n        else\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Reboot System',\n                alertdescription: 'System Reboot Failed',\n            }));\n            yield put(actionCreators.fetchChassisFrontInfo([]));\n            yield put(actionCreators.fetchPowerInfo({powerconsumption:'',powercap:'',powerstatus:'Off'}));\n            yield put(actionCreators.fetchServerInfo({model:'',manufacturer:'',mac:'',ip:'',firmwareversion:'',serialno:'',host:'',}));\n    }\n    catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Reboot System',\n            alertdescription: 'System Reboot Failed',\n        }));\n    }\n}\n\nexport function* shutdownSystem(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/shutdown_system/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const { status } = response;\n        if (status === 200) {\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'info',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Successful',\n            }));\n        }\n        else if (response === 400)\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Failed',\n            }));\n        else\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Failed',\n            }));\n    }\n    catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Shutdown System',\n            alertdescription: 'System Shutdown Failed',\n        }));\n    }\n}\n\nexport function* powerOnSystem(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/power_on_system/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const { status } = response;\n        if (status === 200) {\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'info',\n                alerttitle: 'Power On System',\n                alertdescription: 'Power On Successful',\n            }));\n        }\n        else if (response === 400)\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Power On System',\n                alertdescription: 'Power On Failed',\n            }));\n        else\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Power On System',\n                alertdescription: 'Power On Failed',\n            }));\n    }\n    catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Power On System',\n            alertdescription: 'Power On Failed',\n        }));;\n    }\n}\n\nexport function* forceShutdownSystem(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/force_shutdown_system/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const { status } = response;\n        if (status === 200) {\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'info',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Successful',\n            }));\n        }\n        else if (response === 400)\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Failed',\n            }));\n        else\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Failed',\n            }));\n    }\n    catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Shutdown System',\n            alertdescription: 'System Shutdown Failed',\n        }));\n    }\n}\n\nexport function* hardwareOverviewWatcher() {\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_SERVER_INFORMATION, fetchServerInfo);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_POWER_INFORMATION, fetchPowerInfo);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_FRONT_INFORMATION, fetchChassisFrontInfo);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_REAR_INFORMATION, fetchChassisRearInfo);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_REBOOT_SYSTEM, rebootSystem);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_SHUTDOWN_SYSTEM, shutdownSystem);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FORCE_SHUTDOWN_SYSTEM, forceShutdownSystem);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_POWER_ON_SYSTEM, powerOnSystem);\n\n}\n"]}