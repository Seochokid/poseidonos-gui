2658340719aa504e2bac6f83ed0ee420
/* istanbul ignore next */
"use strict";

var cov_bj2kiz4r5 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/AlertManagementComponents/AddNewAlerts/index.js";
  var hash = "63b6c0afd0e92bde96387610f5285689d755ab56";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/AlertManagementComponents/AddNewAlerts/index.js",
    statementMap: {
      "0": {
        start: {
          line: 32,
          column: 16
        },
        end: {
          line: 114,
          column: 1
        }
      },
      "1": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 113,
          column: 4
        }
      },
      "2": {
        start: {
          line: 117,
          column: 21
        },
        end: {
          line: 197,
          column: 1
        }
      },
      "3": {
        start: {
          line: 118,
          column: 22
        },
        end: {
          line: 118,
          column: 27
        }
      },
      "4": {
        start: {
          line: 119,
          column: 2
        },
        end: {
          line: 196,
          column: 4
        }
      },
      "5": {
        start: {
          line: 133,
          column: 26
        },
        end: {
          line: 133,
          column: 73
        }
      },
      "6": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 166
        }
      },
      "7": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 174,
          column: 71
        }
      },
      "8": {
        start: {
          line: 190,
          column: 91
        },
        end: {
          line: 190,
          column: 113
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 17
          }
        },
        loc: {
          start: {
            line: 32,
            column: 25
          },
          end: {
            line: 114,
            column: 1
          }
        },
        line: 32
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 117,
            column: 21
          },
          end: {
            line: 117,
            column: 22
          }
        },
        loc: {
          start: {
            line: 117,
            column: 30
          },
          end: {
            line: 197,
            column: 1
          }
        },
        line: 117
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 133,
            column: 21
          },
          end: {
            line: 133,
            column: 22
          }
        },
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 73
          }
        },
        line: 133
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 154,
            column: 65
          },
          end: {
            line: 154,
            column: 66
          }
        },
        loc: {
          start: {
            line: 154,
            column: 80
          },
          end: {
            line: 156,
            column: 11
          }
        },
        line: 154
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 174,
            column: 21
          },
          end: {
            line: 174,
            column: 22
          }
        },
        loc: {
          start: {
            line: 174,
            column: 26
          },
          end: {
            line: 174,
            column: 71
          }
        },
        line: 174
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 190,
            column: 83
          },
          end: {
            line: 190,
            column: 84
          }
        },
        loc: {
          start: {
            line: 190,
            column: 89
          },
          end: {
            line: 190,
            column: 115
          }
        },
        line: 190
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 26
          },
          end: {
            line: 133,
            column: 51
          }
        }, {
          start: {
            line: 133,
            column: 55
          },
          end: {
            line: 133,
            column: 73
          }
        }],
        line: 133
      },
      "1": {
        loc: {
          start: {
            line: 154,
            column: 11
          },
          end: {
            line: 156,
            column: 19
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 37
          },
          end: {
            line: 156,
            column: 12
          }
        }, {
          start: {
            line: 156,
            column: 15
          },
          end: {
            line: 156,
            column: 19
          }
        }],
        line: 154
      },
      "2": {
        loc: {
          start: {
            line: 174,
            column: 26
          },
          end: {
            line: 174,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 26
          },
          end: {
            line: 174,
            column: 49
          }
        }, {
          start: {
            line: 174,
            column: 53
          },
          end: {
            line: 174,
            column: 71
          }
        }],
        line: 174
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "63b6c0afd0e92bde96387610f5285689d755ab56"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var
/* istanbul ignore next */
_react = _interopRequireDefault(require("react"));

var
/* istanbul ignore next */
_core = require("@material-ui/core");

/* istanbul ignore next */
require("./AddNewAlerts.css");

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/AlertManagementComponents/AddNewAlerts/index.js";
cov_bj2kiz4r5.s[0]++;

const styles = theme => {
  /* istanbul ignore next */
  cov_bj2kiz4r5.f[0]++;
  cov_bj2kiz4r5.s[1]++;
  return {
    addNewAlertsOuterGrid: {
      border: '1px solid gray',
      maxWidth: '100%',
      minHeight: '140px',
      maxHeight: '140px',
      overflowY: 'auto',
      justifyContent: 'center',
      background: '#fff'
    },
    addNewAlertsFirstInnerGrid: {
      maxWidth: '58%',
      flexBasis: '58%',
      marginTop: theme.spacing(2)
    },
    addNewAlertsSecondInnerGrid: {
      maxWidth: '42%',
      marginTop: theme.spacing(2)
    },
    addNewAlertsThirdInnerGrid: {
      maxWidth: '100%',
      flexBasis: '100%',
      marginBottom: theme.spacing(2)
    },
    container: {
      display: 'flex',
      flexWrap: 'wrap',
      maxWidth: '100%'
    },
    textField: {
      marginLeft: theme.spacing(2),
      width: '36%'
    },
    formLabel: {
      marginTop: theme.spacing(2.7),
      marginLeft: theme.spacing(1.7),
      marginRight: theme.spacing(1.7),
      display: 'inline-flex',
      justifyContent: 'center',
      width: '18%',
      fontSize: 12
    },
    description: {
      marginLeft: theme.spacing(2),
      marginRight: theme.spacing(2),
      marginTop: theme.spacing(1),
      width: '90%',
      overflowY: 'auto'
    },
    formLabelIs: {
      marginTop: theme.spacing(2.7),
      marginRight: theme.spacing(1.7),
      display: 'inline-flex',
      justifyContent: 'center',
      width: '5%',
      marginLeft: '0px'
    },
    selectFieldItem: {
      color: 'black',
      width: '50%'
    },
    selectMenuItem: {
      color: 'black'
    },
    button: {
      float: 'right',
      marginTop: theme.spacing(3.5),
      marginLeft: theme.spacing(2),
      textTransform: 'none',
      paddingTop: '1px',
      background: '#788595',
      minWidth: '55px',
      maxHeight: '25px',
      color: 'white',
      '&:hover': {
        background: 'rgb(94,104,116)',
        // borderColor: 'black',
        color: 'white'
      }
    }
  };
};

/* istanbul ignore next */
cov_bj2kiz4r5.s[2]++;

const AddNewAlerts = props => {
  /* istanbul ignore next */
  cov_bj2kiz4r5.f[1]++;

  const _ref = (cov_bj2kiz4r5.s[3]++, props),
        classes = _ref.classes;

  /* istanbul ignore next */
  cov_bj2kiz4r5.s[4]++;
  return (
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Grid,
    /* istanbul ignore next */
    {
      container:
      /* istanbul ignore next */
      true,
      spacing: 1 / 2,
      direction: "row",
      className: classes.addNewAlertsOuterGrid,

      /* istanbul ignore next */
      "data-testid": "addNewAlertsTag",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 120
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Grid,
    /* istanbul ignore next */
    {
      sm: 6,
      xs: 12,
      item:
      /* istanbul ignore next */
      true,
      container:
      /* istanbul ignore next */
      true,
      className: classes.addNewAlertsFirstInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 121
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    TextField,
    /* istanbul ignore next */
    {
      className: classes.textField,
      required:
      /* istanbul ignore next */
      true,
      multiline:
      /* istanbul ignore next */
      true,
      rowsMax: "1",
      id: "standard-required",
      margin: "none",
      value: props.alertName,
      name: "alertName",
      label: "Alert Name",
      placeholder: "Enter Alert Name",
      onChange: props.onHandleChange,
      onKeyDown: e => {
        /* istanbul ignore next */
        cov_bj2kiz4r5.f[2]++;
        cov_bj2kiz4r5.s[5]++;
        return (
          /* istanbul ignore next */
          (cov_bj2kiz4r5.b[0][0]++, /[+-.,#, ,]$/.test(e.key)) &&
          /* istanbul ignore next */
          (cov_bj2kiz4r5.b[0][1]++, e.preventDefault())
        );
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 122
      },
      __self: void 0
    }),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Typography,
    /* istanbul ignore next */
    {
      className: classes.formLabel,
      variant: "caption",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 135
      },
      __self: void 0
    },
    /* istanbul ignore next */
    " -Send Alert Where"),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    TextField,
    /* istanbul ignore next */
    {
      required:
      /* istanbul ignore next */
      true,
      disabled:
      /* istanbul ignore next */
      true,
      label: "Alert Field",
      id: "standard-name",
      value: props.alertRadioButton,
      className: classes.textField,
      margin: "none",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 136
      },
      __self: void 0
    })),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Grid,
    /* istanbul ignore next */
    {
      sm: 6,
      xs: 12,
      item:
      /* istanbul ignore next */
      true,
      className: classes.addNewAlertsSecondInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 146
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Typography,
    /* istanbul ignore next */
    {
      className: classes.formLabelIs,
      variant: "caption",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 147
      },
      __self: void 0
    },
    /* istanbul ignore next */
    "Is"),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Select,
    /* istanbul ignore next */
    {
      className: classes.selectFieldItem,
      onChange: props.onHandleDropdownChange,
      value: props.alertCondition,
      SelectDisplayProps: {
        'data-testid': "selectAddNewAlertsTag"
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 148
      },
      __self: void 0
    }, props.dropdownCondition ?
    /* istanbul ignore next */
    (cov_bj2kiz4r5.b[1][0]++, props.dropdownCondition.map(eachValue => {
      /* istanbul ignore next */
      cov_bj2kiz4r5.f[3]++;
      cov_bj2kiz4r5.s[6]++;
      return (
        /* istanbul ignore next */
        _react.default.createElement(
        /* istanbul ignore next */
        _core.
        /* istanbul ignore next */
        MenuItem,
        /* istanbul ignore next */
        {
          className: classes.selectMenuItem,
          key: eachValue,
          value: eachValue,

          /* istanbul ignore next */
          "data-testid": "selectMenuItemAddNewAlertsTag",
          __source: {
            fileName: _jsxFileName,
            lineNumber: 155
          },
          __self: void 0
        }, eachValue)
      );
    })) :
    /* istanbul ignore next */
    (cov_bj2kiz4r5.b[1][1]++, null)),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    TextField,
    /* istanbul ignore next */
    {
      inputProps: {
        'data-testid': "Alert_Range_TextField"
      },
      required:
      /* istanbul ignore next */
      true,
      multiline:
      /* istanbul ignore next */
      true,
      rowsMax: "1",
      name: "alertRange",
      onChange: props.onHandleChange,
      placeholder: "Please specify a value in % eg.10",
      id: "standard-required",
      value: props.alertRange,
      className: classes.textField,
      label: "Value",
      margin: "none",
      onKeyDown: f => {
        /* istanbul ignore next */
        cov_bj2kiz4r5.f[4]++;
        cov_bj2kiz4r5.s[7]++;
        return (
          /* istanbul ignore next */
          (cov_bj2kiz4r5.b[2][0]++, /[+-,.,#]$/.test(f.key)) &&
          /* istanbul ignore next */
          (cov_bj2kiz4r5.b[2][1]++, f.preventDefault())
        );
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 159
      },
      __self: void 0
    })),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Grid,
    /* istanbul ignore next */
    {
      sm: 6,
      xs: 12,
      item:
      /* istanbul ignore next */
      true,
      className: classes.addNewAlertsThirdInnerGrid,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 177
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    TextField,
    /* istanbul ignore next */
    {
      id: "standard-multiline-flexible",
      label: "Description",
      multiline:
      /* istanbul ignore next */
      true,
      rowsMax: "1",
      className: classes.description,
      margin: "none",
      onChange: props.onHandleChange,
      placeholder: "Enter your message here - This will be the subject of your email",
      value: props.description,
      name: "description",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 178
      },
      __self: void 0
    }),
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    ButtonGroup,
    /* istanbul ignore next */
    {
      /* istanbul ignore next */
      "data-testid": "ButtonTag",
      size: "small",
      color: "primary",
      onClick: () => {
        /* istanbul ignore next */
        cov_bj2kiz4r5.f[5]++;
        cov_bj2kiz4r5.s[8]++;
        props.openAlert('Add');
      },
      __source: {
        fileName: _jsxFileName,
        lineNumber: 190
      },
      __self: void 0
    },
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    Button,
    /* istanbul ignore next */
    {
      variant: "contained",
      className: classes.button,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 191
      },
      __self: void 0
    },
    /* istanbul ignore next */
    "Add"))))
  );
};

/* istanbul ignore next */
var _default =
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_core.
/* istanbul ignore next */
withStyles)(styles)(AddNewAlerts);

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,