020b22bd3114c019ea1b2f159e7922ea
/* istanbul ignore next */
"use strict";

var cov_28p3jxjz42 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/SensorComponents/TemperatureSensor/index.js";
  var hash = "d1c48dd3e4bf706a7001f5faa6b35af09f2e4ea5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/SensorComponents/TemperatureSensor/index.js",
    statementMap: {
      "0": {
        start: {
          line: 53,
          column: 15
        },
        end: {
          line: 80,
          column: 2
        }
      },
      "1": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 80,
          column: 1
        }
      },
      "2": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 21
        }
      },
      "3": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "4": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 165,
          column: 10
        }
      },
      "5": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 140,
          column: 172
        }
      },
      "6": {
        start: {
          line: 160,
          column: 24
        },
        end: {
          line: 160,
          column: 111
        }
      },
      "7": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 48
        }
      },
      "8": {
        start: {
          line: 173,
          column: 28
        },
        end: {
          line: 173,
          column: 38
        }
      },
      "9": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 226,
          column: 10
        }
      },
      "10": {
        start: {
          line: 231,
          column: 24
        },
        end: {
          line: 235,
          column: 1
        }
      },
      "11": {
        start: {
          line: 232,
          column: 4
        },
        end: {
          line: 234,
          column: 6
        }
      },
      "12": {
        start: {
          line: 237,
          column: 27
        },
        end: {
          line: 241,
          column: 1
        }
      },
      "13": {
        start: {
          line: 238,
          column: 4
        },
        end: {
          line: 240,
          column: 6
        }
      },
      "14": {
        start: {
          line: 239,
          column: 42
        },
        end: {
          line: 239,
          column: 133
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 16
          }
        },
        loc: {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 53
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 84
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 138,
            column: 28
          },
          end: {
            line: 138,
            column: 29
          }
        },
        loc: {
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 172
          }
        },
        line: 140
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 158,
            column: 28
          },
          end: {
            line: 158,
            column: 29
          }
        },
        loc: {
          start: {
            line: 160,
            column: 24
          },
          end: {
            line: 160,
            column: 111
          }
        },
        line: 160
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 168,
            column: 4
          },
          end: {
            line: 168,
            column: 5
          }
        },
        loc: {
          start: {
            line: 168,
            column: 24
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 168
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 5
          }
        },
        loc: {
          start: {
            line: 172,
            column: 13
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 172
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 231,
            column: 24
          },
          end: {
            line: 231,
            column: 25
          }
        },
        loc: {
          start: {
            line: 231,
            column: 33
          },
          end: {
            line: 235,
            column: 1
          }
        },
        line: 231
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 237,
            column: 27
          },
          end: {
            line: 237,
            column: 28
          }
        },
        loc: {
          start: {
            line: 237,
            column: 39
          },
          end: {
            line: 241,
            column: 1
          }
        },
        line: 237
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 239,
            column: 36
          },
          end: {
            line: 239,
            column: 37
          }
        },
        loc: {
          start: {
            line: 239,
            column: 42
          },
          end: {
            line: 239,
            column: 133
          }
        },
        line: 239
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 140,
            column: 34
          },
          end: {
            line: 140,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 67
          },
          end: {
            line: 140,
            column: 81
          }
        }, {
          start: {
            line: 140,
            column: 84
          },
          end: {
            line: 140,
            column: 102
          }
        }],
        line: 140
      },
      "1": {
        loc: {
          start: {
            line: 140,
            column: 109
          },
          end: {
            line: 140,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 142
          },
          end: {
            line: 140,
            column: 157
          }
        }, {
          start: {
            line: 140,
            column: 160
          },
          end: {
            line: 140,
            column: 168
          }
        }],
        line: 140
      },
      "2": {
        loc: {
          start: {
            line: 160,
            column: 29
          },
          end: {
            line: 160,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 65
          },
          end: {
            line: 160,
            column: 98
          }
        }, {
          start: {
            line: 160,
            column: 101
          },
          end: {
            line: 160,
            column: 105
          }
        }],
        line: 160
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "d1c48dd3e4bf706a7001f5faa6b35af09f2e4ea5"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));

var
/* istanbul ignore next */
_reactRedux = require("react-redux");

var
/* istanbul ignore next */
_styles = require("@material-ui/core/styles");

var
/* istanbul ignore next */
_materialTable = _interopRequireDefault(require("material-table"));

var
/* istanbul ignore next */
_core = require("@material-ui/core");

var
/* istanbul ignore next */
_Grid = _interopRequireDefault(require("@material-ui/core/Grid"));

var
/* istanbul ignore next */
_MuiThemeProvider = _interopRequireDefault(require("@material-ui/core/styles/MuiThemeProvider"));

var
/* istanbul ignore next */
_Search = _interopRequireDefault(require("@material-ui/icons/Search"));

var
/* istanbul ignore next */
_SaveAlt = _interopRequireDefault(require("@material-ui/icons/SaveAlt"));

var
/* istanbul ignore next */
_ChevronLeft = _interopRequireDefault(require("@material-ui/icons/ChevronLeft"));

var
/* istanbul ignore next */
_ChevronRight = _interopRequireDefault(require("@material-ui/icons/ChevronRight"));

var
/* istanbul ignore next */
_FirstPage = _interopRequireDefault(require("@material-ui/icons/FirstPage"));

var
/* istanbul ignore next */
_LastPage = _interopRequireDefault(require("@material-ui/icons/LastPage"));

var
/* istanbul ignore next */
_Add = _interopRequireDefault(require("@material-ui/icons/Add"));

var
/* istanbul ignore next */
_Check = _interopRequireDefault(require("@material-ui/icons/Check"));

var
/* istanbul ignore next */
_FilterList = _interopRequireDefault(require("@material-ui/icons/FilterList"));

var
/* istanbul ignore next */
_Remove = _interopRequireDefault(require("@material-ui/icons/Remove"));

var
/* istanbul ignore next */
_Edit = _interopRequireDefault(require("@material-ui/icons/Edit"));

var
/* istanbul ignore next */
_Delete = _interopRequireDefault(require("@material-ui/icons/Delete"));

var
/* istanbul ignore next */
_ArrowUpward = _interopRequireDefault(require("@material-ui/icons/ArrowUpward"));

var
/* istanbul ignore next */
_Clear = _interopRequireDefault(require("@material-ui/icons/Clear"));

var
/* istanbul ignore next */
_Ok14x = _interopRequireDefault(require("../../../assets/images/Ok14x14.png"));

var
/* istanbul ignore next */
_NotOk14x = _interopRequireDefault(require("../../../assets/images/Not-Ok14x14.png"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../../../store/actions/actionTypes"));

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/SensorComponents/TemperatureSensor/index.js";
cov_28p3jxjz42.s[0]++;

const styles = theme => {
  /* istanbul ignore next */
  cov_28p3jxjz42.f[0]++;
  cov_28p3jxjz42.s[1]++;
  return {
    multilineColor: {
      color: 'black'
    },
    root: {
      flexGrow: 1
    },
    Paper: {
      marginTop: theme.spacing(2),
      width: '100%',
      maxHeight: '100%'
    },
    tempParentGrid: {
      maxWidth: '100%',
      flexBasis: '100%',
      minHeight: '100%'
    },
    tempOuterGrid: {
      border: '1px solid gray',
      maxWidth: '100%',
      flexBasis: '100%',
      overflowY: 'auto',
      overflowX: 'hidden',
      background: '#fff'
    }
  };
};

class TemperatureSensor extends
/* istanbul ignore next */
_react.
/* istanbul ignore next */
Component {
  constructor(props) {
    /* istanbul ignore next */
    cov_28p3jxjz42.f[1]++;
    cov_28p3jxjz42.s[2]++;
    super(props);

    /* istanbul ignore next */
    cov_28p3jxjz42.s[3]++;
    this.theme =
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    createMuiTheme)({
      overrides: {
        MuiSvgIcon: {
          //  stylesheet name
          root: {
            //  rule name
            color: '#808080'
          }
        },
        MuiTablePagination: {
          menuItem: {
            fontSize: "12px",
            minHeight: "0px"
          },
          select: {
            width: "45px"
          },
          toolbar: {
            maxHeight: '50px',
            minHeight: '20px'
          }
        }
      },
      palette: {
        primary: {
          main: '#4caf50'
        },
        secondary: {
          main: '#808080'
        }
      }
    });

    /* istanbul ignore next */
    cov_28p3jxjz42.s[4]++;
    this.state = {
      columns: [{
        title: 'Sensor name',
        field: 'Name',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        }
      }, {
        title: 'Health',
        field: 'Status.Health',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        },
        render: rowData => {
          /* istanbul ignore next */
          cov_28p3jxjz42.f[2]++;
          cov_28p3jxjz42.s[5]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "img",
            /* istanbul ignore next */
            {
              src: rowData.Status.Health === 'OK' ?
              /* istanbul ignore next */
              (cov_28p3jxjz42.b[0][0]++,
              /* istanbul ignore next */
              _Ok14x.
              /* istanbul ignore next */
              default) :
              /* istanbul ignore next */
              (cov_28p3jxjz42.b[0][1]++,
              /* istanbul ignore next */
              _NotOk14x.
              /* istanbul ignore next */
              default),
              alt: rowData.Status.Health === 'OK' ?
              /* istanbul ignore next */
              (cov_28p3jxjz42.b[1][0]++, "Sit and Relax") :
              /* istanbul ignore next */
              (cov_28p3jxjz42.b[1][1]++, 'Mayday'),
              __source: {
                fileName: _jsxFileName,
                lineNumber: 140
              },
              __self: this
            })
          );
        }
      }, {
        title: 'Current Temperature (C)',
        field: 'ReadingCelsius',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        }
      }, {
        title: 'Max Temperature Threshold (C)',
        field: 'UpperThresholdNonCritical',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        },
        render: rowData => {
          /* istanbul ignore next */
          cov_28p3jxjz42.f[3]++;
          cov_28p3jxjz42.s[6]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "p",
            /* istanbul ignore next */
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 160
              },
              __self: this
            },
            /* istanbul ignore next */
            " ", rowData.UpperThresholdNonCritical ?
            /* istanbul ignore next */
            (cov_28p3jxjz42.b[2][0]++, rowData.UpperThresholdNonCritical) :
            /* istanbul ignore next */
            (cov_28p3jxjz42.b[2][1]++, "NA"),
            /* istanbul ignore next */
            " ")
          );
        }
      }]
    };
  }

  componentDidMount() {
    /* istanbul ignore next */
    cov_28p3jxjz42.f[4]++;
    cov_28p3jxjz42.s[7]++;
    this.props.fetchTemperatureSensorInfo();
  }

  render() {
    /* istanbul ignore next */
    cov_28p3jxjz42.f[5]++;

    const _ref = (cov_28p3jxjz42.s[8]++, this.props),
          classes = _ref.classes;

    /* istanbul ignore next */
    cov_28p3jxjz42.s[9]++;
    return (
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Paper,
      /* istanbul ignore next */
      {
        className: classes.Paper,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 175
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        className: classes.tempParentGrid,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 176
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        className: classes.tempOuterGrid,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 177
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _MuiThemeProvider.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        theme: this.theme,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 178
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _materialTable.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        icons: {
          Check:
          /* istanbul ignore next */
          _Check.
          /* istanbul ignore next */
          default,
          FirstPage:
          /* istanbul ignore next */
          _FirstPage.
          /* istanbul ignore next */
          default,
          LastPage:
          /* istanbul ignore next */
          _LastPage.
          /* istanbul ignore next */
          default,
          NextPage:
          /* istanbul ignore next */
          _ChevronRight.
          /* istanbul ignore next */
          default,
          PreviousPage:
          /* istanbul ignore next */
          _ChevronLeft.
          /* istanbul ignore next */
          default,
          Search:
          /* istanbul ignore next */
          _Search.
          /* istanbul ignore next */
          default,
          ThirdStateCheck:
          /* istanbul ignore next */
          _Remove.
          /* istanbul ignore next */
          default,
          DetailPanel:
          /* istanbul ignore next */
          _ChevronRight.
          /* istanbul ignore next */
          default,
          Export:
          /* istanbul ignore next */
          _SaveAlt.
          /* istanbul ignore next */
          default,
          Filter:
          /* istanbul ignore next */
          _FilterList.
          /* istanbul ignore next */
          default,
          Add:
          /* istanbul ignore next */
          _Add.
          /* istanbul ignore next */
          default,
          Edit:
          /* istanbul ignore next */
          _Edit.
          /* istanbul ignore next */
          default,
          Delete:
          /* istanbul ignore next */
          _Delete.
          /* istanbul ignore next */
          default,
          SortArrow:
          /* istanbul ignore next */
          _ArrowUpward.
          /* istanbul ignore next */
          default,
          Clear:
          /* istanbul ignore next */
          _Clear.
          /* istanbul ignore next */
          default
        },
        columns: this.state.columns,
        data: this.props.temp_sensor_info,
        options: {
          actionsColumnIndex: -1,
          selection: false,
          sorting: true,
          toolbar: false,
          rowStyle: {
            fontSize: '4px'
          },
          search: false,
          paginationType: 'normal',
          loadingType: 'linear',
          maxBodyHeight: '500px',
          headerStyle: {
            backgroundColor: '#788595',
            color: 'rgba(255, 255, 255, 0.87)',
            fontSize: '14px',
            height: '10%',
            paddingTop: '2px',
            paddingBottom: '2px'
          }
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 179
        },
        __self: this
      })))))
    );
  }

}

/* istanbul ignore next */
cov_28p3jxjz42.s[10]++;

const mapStateToProps = state => {
  /* istanbul ignore next */
  cov_28p3jxjz42.f[6]++;
  cov_28p3jxjz42.s[11]++;
  return {
    temp_sensor_info: state.hardwareSensorReducer.temperature_sensor_info
  };
};

/* istanbul ignore next */
cov_28p3jxjz42.s[12]++;

const mapDispatchToProps = dispatch => {
  /* istanbul ignore next */
  cov_28p3jxjz42.f[7]++;
  cov_28p3jxjz42.s[13]++;
  return {
    fetchTemperatureSensorInfo: () => {
      /* istanbul ignore next */
      cov_28p3jxjz42.f[8]++;
      cov_28p3jxjz42.s[14]++;
      return dispatch({
        type: actionTypes.SAGA_HARDWARE_SENSORS_FETCH_TEMPERATURE_SENSOR_INFORMATION
      });
    }
  };
};

/* istanbul ignore next */
var _default =
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
withStyles)(styles)(
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_reactRedux.
/* istanbul ignore next */
connect)(mapStateToProps, mapDispatchToProps)(TemperatureSensor));

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,