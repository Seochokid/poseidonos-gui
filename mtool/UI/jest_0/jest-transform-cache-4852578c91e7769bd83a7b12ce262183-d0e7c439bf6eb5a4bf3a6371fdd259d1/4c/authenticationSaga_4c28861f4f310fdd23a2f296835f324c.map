{"version":3,"sources":["authenticationSaga.js"],"names":["login","action","localStorage","setItem","response","call","axios","post","payload","data","username","token","put","actionCreators","setIsLoggedIn","history","push","error","setLoginFailed","authenticationWatcher","takeEvery","actionTypes","SAGA_LOGIN"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;;AAIO,UAAUA,KAAV,CAAgBC,MAAhB,EAAwB;AAAA;AAAA;AAAA;;AAC7B,MAAI;AAAA;AAAA;AACFC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAArC,EADE,CAC2C;;AAC7C,UAAMC,QAAQ;AAAA;AAAA,4BAAG,MAAM;AAAA;AAAA;AAAAC;AAAAA;AAAAA;AAAAA,YACrB;AAACC;AAAAA;AAAAA;AAAAA,aAAD;AAAQA;AAAAA;AAAAA;AAAAA,cAAMC,IAAd,CADqB,EAErB,kBAFqB,EAGrBN,MAAM,CAACO,OAHc;AAAN,KAAH,CAAd;;AAFE;AAAA;;AAOF,QAAIJ,QAAQ,CAACK,IAAb,EAAmB;AAAA;AAAA;AAAA;AACfP,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,IAAnC;;AADe;AAAA;AAEfD,MAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BC,QAAQ,CAACK,IAAT,CAAcC,QAA7C;;AAFe;AAAA;AAGfR,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,QAAQ,CAACK,IAAT,CAAcE,KAA5C;;AAHe;AAAA;AAIf,YAAM;AAAA;AAAA;AAAAC;AAAAA;AAAAA;AAAAA,aAAIC,cAAc,CAACC,aAAf,EAAJ;AAAN;;AAJe;AAAA;AAKfb,MAAAA,MAAM,CAACc,OAAP,CAAeC,IAAf,CAAoB,YAApB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAOC,GAdH,CAcI,OAAOC,KAAP,EAAc;AAAA;AAAA;AACZ,UAAM;AAAA;AAAA;AAAAL;AAAAA;AAAAA;AAAAA,WAAIC,cAAc,CAACK,cAAf,EAAJ;AAAN;;AADY;AAAA;AAEZhB,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,KAAnC;;AAFY;AAAA;AAGZD,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqC,KAArC;AACL;AACF;;AAGM,UAAUgB,qBAAV,GAAkC;AAAA;AAAA;AAAA;AACvC,QAAM;AAAA;AAAA;AAAAC;AAAAA;AAAAA;AAAAA,eAAUC,WAAW,CAACC,UAAtB,EAAkCtB,KAAlC;AAAN;AAED","sourcesContent":["import axios from 'axios';\nimport { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actionTypes from '../store/actions/actionTypes';\nimport * as actionCreators from '../store/actions/exportActionCreators';\n\n\n\nexport function* login(action) {\n  try {\n    localStorage.setItem('BMC_LoggedIn', false); // Set bmc_isLoggedIn false once the user logs in again\n    const response = yield call(\n      [axios, axios.post],\n      '/api/v1.0/login/',\n      action.payload\n    );  \n    if (response.data) {\n        localStorage.setItem('isLoggedIn', true);\n        localStorage.setItem('userid', response.data.username);\n        localStorage.setItem('token', response.data.token);\n        yield put(actionCreators.setIsLoggedIn());\n        action.history.push('/dashboard');\n      }\n    } catch (error) {\n        yield put(actionCreators.setLoginFailed());\n        localStorage.setItem('isLoggedIn', false);\n        localStorage.setItem('BMC_LoggedIn', false);\n  }\n}\n\n\nexport function* authenticationWatcher() {\n  yield takeEvery(actionTypes.SAGA_LOGIN, login);\n  \n}\n"]}