{"version":3,"sources":["index.js"],"names":["styles","theme","radioGroup","display","flexDirection","marginLeft","spacing","alertTypesOuterGrid","border","maxWidth","minHeight","maxHeight","overflowY","overflowX","background","alertTypesInnerGrid","alertTypesHeader","backgroundColor","color","paddingLeft","paddingTop","fontSize","height","radioButtonClass","margin","AlertFields","props","classes","onHandleChange","alertClusterList","radioindex","alertFields","alertClusterName","selectedAlertSubCluster","alertType","map","alertField","alertRadioButton","withStyles"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Alert Management Component for selecting Alert Fields\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport React from 'react';\nimport { FormControlLabel, Radio, RadioGroup, Grid, Typography, withStyles } from '@material-ui/core';\nimport './AlertFields.css';\n\n\nconst styles = (theme => {\n  return ({\n    radioGroup:{\n      display:'flex',\n      flexDirection:'column',\n      marginLeft:theme.spacing(1)\n    },\n    alertTypesOuterGrid: {\n      border: '1px solid gray',\n      maxWidth: '100%',\n      minHeight: '130px',\n      maxHeight: '130px',\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      background: '#fff'\n    },\n    alertTypesInnerGrid: {\n      maxWidth: '100%',\n    },\n    alertTypesHeader: {\n      backgroundColor: '#788595',\n      color: 'white',\n      paddingLeft: '5px',\n      paddingTop: '3px',\n      fontSize: '14px',\n      height: '25px',\n    },\n    radioButtonClass: {\n      margin: theme.spacing(1, 0),\n    }\n  })\n});\n\nconst AlertFields = props => {\n  const { classes } = props;\n  return (\n    <Grid sm={6} xs={12} item container data-testid = \"AlertFieldsTag\">\n      <Grid xs={12} item className={classes.alertTypesOuterGrid}>\n        <Typography className={classes.alertTypesHeader} variant=\"h6\">Alert Fields</Typography>\n        <Grid sm={6} xs={12} item className={classes.alertTypesInnerGrid}>\n          <RadioGroup\n            name=\"alertRadioButton\"\n            className={classes.radioGroup}\n            onChange={props.onHandleChange}\n          >\n            {props.alertClusterList[props.radioindex].alertFields &&\n              props.alertClusterName &&\n              props.selectedAlertSubCluster &&\n              props.alertType\n              ? props.alertClusterList[props.radioindex].alertFields.map(\n                (alertField) => {\n                  return (\n                    alertField !== 'NA' ?\n                      (\n                        <FormControlLabel\n                          key = {alertField}\n                          control={<Radio data-testid = \"alertFieldRadioTag\" />}\n                          checked={props.alertRadioButton === alertField}\n                          value={alertField}\n                          label={alertField}\n                          labelPlacement=\"end\"\n                        />\n                      )\n                      : alertField);\n                }\n              )\n              : null}\n          </RadioGroup>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(AlertFields);\n"]}