{"version":3,"sources":["index.test.js"],"names":["jest","unmock","wrapper","dropDownValues","alerts","beforeEach","rootReducers","alertManagementReducer","store","myMock","fn","i18n","test","getByLabelText","queryAllByText","getByTestId","getByText","getAllByText","asFragment","expect","toMatchSnapshot","input","querySelector","fireEvent","click","change","target","value","afterEach","cleanup"],"mappings":";;AAwCAA,IAAI,CAACC,MAAL,CAAY,OAAZ;;;;AAbA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAGA,IAAIC,OAAJ;AACA,IAAIC,cAAc,GAAG,IAArB;AACA,IAAIC,MAAM,GAAG,CAAC;AAAE,SAAO;AAAE,YAAQ;AAAV,GAAT;AAAiD,eAAa,UAA9D;AAA0E,kBAAgB,KAA1F;AAAiG,qBAAmB,QAApH;AAA8H,eAAa,WAA3I;AAAwJ,oBAAkB,IAA1K;AAAgL,gBAAc,cAA9L;AAA8M,iBAAe,MAA7N;AAAqO,gBAAc,KAAnP;AAA0P,YAAU;AAApQ,CAAD,CAAb;AACAC,UAAU,CAAC,MAAM;AACb,QAAMC,YAAY,GAAG,4BAAgB;AACjCC,IAAAA,sBAAsB,EAAtBA;AADiC,GAAhB,CAArB;AAGA,QAAMC,KAAK,GAAG,wBAAYF,YAAZ,CAAd;AACA,QAAMG,MAAM,GAAGT,IAAI,CAACU,EAAL,EAAf;AACAR,EAAAA,OAAO,GAAG,oBACN,6BAAC,6BAAD;AAAiB,IAAA,IAAI,EAAES,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,oBAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,cAAD;AAAY,IAAA,iBAAiB,EAAEL,cAA/B;AAA+C,IAAA,MAAM,EAAEC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADM,CAAV;AAMAD,EAAAA,cAAc,GAAG,IAAjB;AACH,CAbS,CAAV;AAgBAS,IAAI,CAAC,8DAAD,EAAiE,MAAM;AAAA,mBACsBV,OADtB;AAAA,QAC/DW,cAD+D,YAC/DA,cAD+D;AAAA,QAC/CC,cAD+C,YAC/CA,cAD+C;AAAA,QAC/BC,WAD+B,YAC/BA,WAD+B;AAAA,QAClBC,SADkB,YAClBA,SADkB;AAAA,QACPC,YADO,YACPA,YADO;AAAA,QACOC,UADP,YACOA,UADP;AAEvEC,EAAAA,MAAM,CAACD,UAAU,EAAX,CAAN,CAAqBE,eAArB;AACAL,EAAAA,WAAW,CAAC,gBAAD,CAAX;AAEA,QAAMM,KAAK,GAAGN,WAAW,CAAC,gBAAD,CAAX,CAA8BO,aAA9B,CAA4C,QAA5C,CAAd;;AACAC,oBAAUC,KAAV,CAAgBH,KAAhB;;AACAE,oBAAUE,MAAV,CAAiBJ,KAAjB,EAAwB;AAAEK,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAV,GAAxB;AACH,CARG,CAAJ;AAUAC,SAAS,CAACC,eAAD,CAAT","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Alert Table Test File\n@NAME : index.test.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport React from 'react';\nimport { Provider } from 'react-redux'\nimport { ReactDOM, findDOMNode } from 'react-dom'\nimport { act } from 'react-dom/test-utils'\nimport MockAdapter from 'axios-mock-adapter'\nimport axios from 'axios'\nimport { I18nextProvider } from \"react-i18next\";\nimport { combineReducers, createStore } from 'redux'\nimport { render, fireEvent, cleanup, getByText, getByTitle, getAllByTitle, waitForElement } from '@testing-library/react';\nimport alertManagementReducer from \"../../../store/reducers/alertManagementReducer\"\nimport i18n from \"../../../i18n\";\nimport AlertTable from './index';\n\njest.unmock('axios');\nlet wrapper;\nlet dropDownValues = null;\nlet alerts = [{ \"_id\": { \"$oid\": \"5d5e67b7f082d4c68c98f58b\" }, \"alertName\": \"NewAlert\", \"alertCluster\": \"cpu\", \"alertSubCluster\": \"device\", \"alertType\": \"cpu-total\", \"alertCondition\": null, \"alertField\": \"usage_system\", \"description\": \"last\", \"alertRange\": \"109\", \"active\": true },]\nbeforeEach(() => {\n    const rootReducers = combineReducers({\n        alertManagementReducer,\n    });\n    const store = createStore(rootReducers)\n    const myMock = jest.fn();\n    wrapper = render(\n        <I18nextProvider i18n={i18n}>\n            <Provider store={store}>\n                <AlertTable dropdownCondition={dropDownValues} alerts={alerts} />\n            </Provider>\n        </I18nextProvider>);\n    dropDownValues = null;\n});\n\n  \ntest('renders alert table component with null for ternary operator', () => {\n    const { getByLabelText, queryAllByText, getByTestId, getByText, getAllByText, asFragment } = wrapper;\n    expect(asFragment()).toMatchSnapshot();\n    getByTestId(\"AlertsTableTag\");\n\n    const input = getByTestId(\"AlertsTableTag\").querySelector('button')\n    fireEvent.click(input);\n    fireEvent.change(input, { target: { value: \"Samsung # \\n\" } });\n});\n\nafterEach(cleanup)\n"]}