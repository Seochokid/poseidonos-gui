8360fe6d92c0c8e27dc05de0f4952f2d
/* istanbul ignore next */
"use strict";

var cov_284cadka1 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/BMCAuthenticationActions.js";
  var hash = "8c51539396fcb45d3daf935952cab4606f372f1d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/BMCAuthenticationActions.js",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 36
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "1": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "2": {
        start: {
          line: 36,
          column: 34
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "3": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 6
        }
      },
      "4": {
        start: {
          line: 42,
          column: 36
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "5": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 6
        }
      },
      "6": {
        start: {
          line: 48,
          column: 35
        },
        end: {
          line: 52,
          column: 3
        }
      },
      "7": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 36
          },
          end: {
            line: 29,
            column: 37
          }
        },
        loc: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 35
          }
        },
        loc: {
          start: {
            line: 36,
            column: 40
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 42,
            column: 36
          },
          end: {
            line: 42,
            column: 37
          }
        },
        loc: {
          start: {
            line: 42,
            column: 42
          },
          end: {
            line: 46,
            column: 3
          }
        },
        line: 42
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 35
          },
          end: {
            line: 48,
            column: 36
          }
        },
        loc: {
          start: {
            line: 48,
            column: 41
          },
          end: {
            line: 52,
            column: 3
          }
        },
        line: 48
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "8c51539396fcb45d3daf935952cab4606f372f1d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BMCSetLoginFailed = exports.BMCResetIsLoggedIn = exports.BMCSetIsLoggedIn = exports.BMCChangeCredentials = void 0;

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("./actionTypes"));

/* istanbul ignore next */
cov_284cadka1.s[0]++;

const BMCChangeCredentials = payload => {
  /* istanbul ignore next */
  cov_284cadka1.f[0]++;
  cov_284cadka1.s[1]++;
  return {
    type: actionTypes.BMC_CHANGE_CREDENTIALS,
    payload
  };
};

/* istanbul ignore next */
exports.BMCChangeCredentials = BMCChangeCredentials;
cov_284cadka1.s[2]++;

const BMCSetIsLoggedIn = () => {
  /* istanbul ignore next */
  cov_284cadka1.f[1]++;
  cov_284cadka1.s[3]++;
  return {
    type: actionTypes.BMC_SET_IS_LOGGED_IN
  };
};

/* istanbul ignore next */
exports.BMCSetIsLoggedIn = BMCSetIsLoggedIn;
cov_284cadka1.s[4]++;

const BMCResetIsLoggedIn = () => {
  /* istanbul ignore next */
  cov_284cadka1.f[2]++;
  cov_284cadka1.s[5]++;
  return {
    type: actionTypes.BMC_RESET_IS_LOGGED_IN
  };
};

/* istanbul ignore next */
exports.BMCResetIsLoggedIn = BMCResetIsLoggedIn;
cov_284cadka1.s[6]++;

const BMCSetLoginFailed = () => {
  /* istanbul ignore next */
  cov_284cadka1.f[3]++;
  cov_284cadka1.s[7]++;
  return {
    type: actionTypes.BMC_SET_LOGIN_FAILED
  };
};

/* istanbul ignore next */
exports.BMCSetLoginFailed = BMCSetLoginFailed;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJNQ0F1dGhlbnRpY2F0aW9uQWN0aW9ucy5qcyJdLCJuYW1lcyI6WyJCTUNDaGFuZ2VDcmVkZW50aWFscyIsInBheWxvYWQiLCJ0eXBlIiwiYWN0aW9uVHlwZXMiLCJCTUNfQ0hBTkdFX0NSRURFTlRJQUxTIiwiQk1DU2V0SXNMb2dnZWRJbiIsIkJNQ19TRVRfSVNfTE9HR0VEX0lOIiwiQk1DUmVzZXRJc0xvZ2dlZEluIiwiQk1DX1JFU0VUX0lTX0xPR0dFRF9JTiIsIkJNQ1NldExvZ2luRmFpbGVkIiwiQk1DX1NFVF9MT0dJTl9GQUlMRUQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMEJBO0FBQUE7QUFBQTs7Ozs7QUFFTyxNQUFNQSxvQkFBb0IsR0FBR0MsT0FBTyxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQzNDLFNBQU87QUFDTEMsSUFBQUEsSUFBSSxFQUFFQyxXQUFXLENBQUNDLHNCQURiO0FBRUxILElBQUFBO0FBRkssR0FBUDtBQUlELENBTEk7Ozs7OztBQU9FLE1BQU1JLGdCQUFnQixHQUFHLE1BQU07QUFBQTtBQUFBO0FBQUE7QUFDcEMsU0FBTztBQUNMSCxJQUFBQSxJQUFJLEVBQUVDLFdBQVcsQ0FBQ0c7QUFEYixHQUFQO0FBR0QsQ0FKTTs7Ozs7O0FBTUEsTUFBTUMsa0JBQWtCLEdBQUcsTUFBTTtBQUFBO0FBQUE7QUFBQTtBQUN0QyxTQUFPO0FBQ0xMLElBQUFBLElBQUksRUFBRUMsV0FBVyxDQUFDSztBQURiLEdBQVA7QUFHRCxDQUpNOzs7Ozs7QUFNQSxNQUFNQyxpQkFBaUIsR0FBRyxNQUFNO0FBQUE7QUFBQTtBQUFBO0FBQ3JDLFNBQU87QUFDTFAsSUFBQUEsSUFBSSxFQUFFQyxXQUFXLENBQUNPO0FBRGIsR0FBUDtBQUdELENBSk0iLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgIENPUFlSSUdIVCAoYykgMjAxOSBTQU1TVU5HIEVMRUNUUk9OSUNTIENPLiwgTFRELiAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICBBTEwgUklHSFRTIFJFU0VSVkVEICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQgdG8gbGljZW5zZWVzIG9mIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuICAgICAgICAvXG4vICAgcHJvZHVjdHMgdG8gdXNlIG9yIGFic3RyYWN0IHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiAgICAgICAgIC9cbi8gICBpbXBsZW1lbnRpbmcgYSBwcm9kdWN0IGJhc2VkIG9uIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIHByb2R1Y3RzLiAgICAgICAgICAgL1xuLyAgIE5vIG90aGVyIHJpZ2h0cyB0byByZXByb2R1Y2UsIHVzZSwgb3IgZGlzc2VtaW5hdGUgdGhpcyBjb21wdXRlciBwcm9ncmFtLCAgICAgICAgICAvXG4vICAgd2hldGhlciBpbiBwYXJ0IG9yIGluIHdob2xlLCBhcmUgZ3JhbnRlZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8gXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBtYWtlcyBubyByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50aWVzIHdpdGggICAgICAgICAgL1xuLyAgIHJlc3BlY3QgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgYW5kIHNwZWNpZmljYWxseSBkaXNjbGFpbXMgICAvXG4vICAgYW55IHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgZGFtYWdlcywgc3BlY2lhbCBvciBjb25zZXF1ZW50aWFsLCBjb25uZWN0ZWQgICAgICAgICAgIC9cbi8gICB3aXRoIHRoZSB1c2Ugb2YgdGhpcyBwcm9ncmFtLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cblxuREVTQ1JJUFRJT046IDxDb250YWlucyBBY3Rpb25zIGZvciBCTUMgQXV0aGVudGljYXRpb24gY29udGFpbmVyPiAqXG5ATkFNRSA6IEJNQ0F1dGhlbnRpY2F0aW9uQWN0aW9ucy5qc1xuQEFVVEhPUlM6IEpheSBTYW5naGF2aSBcbkBWZXJzaW9uIDogMS4wICpcbkBSRVZJU0lPTiBISVNUT1JZXG5bMjEvMDIvMjAyMF0gW0pheV0gOiBQcm90b3R5cGluZy4uLi4uLi4uLi4vLy8vLy8vLy8vLy8vLy8vLy8vL1xuKi9cblxuaW1wb3J0ICogYXMgYWN0aW9uVHlwZXMgZnJvbSAnLi9hY3Rpb25UeXBlcyc7XG5cbmV4cG9ydCBjb25zdCBCTUNDaGFuZ2VDcmVkZW50aWFscyA9IHBheWxvYWQgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBhY3Rpb25UeXBlcy5CTUNfQ0hBTkdFX0NSRURFTlRJQUxTLFxuICAgICAgcGF5bG9hZCxcbiAgICB9O1xuICB9O1xuXG4gIGV4cG9ydCBjb25zdCBCTUNTZXRJc0xvZ2dlZEluID0gKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBhY3Rpb25UeXBlcy5CTUNfU0VUX0lTX0xPR0dFRF9JTixcbiAgICB9O1xuICB9O1xuXG4gIGV4cG9ydCBjb25zdCBCTUNSZXNldElzTG9nZ2VkSW4gPSAoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IGFjdGlvblR5cGVzLkJNQ19SRVNFVF9JU19MT0dHRURfSU4sXG4gICAgfTtcbiAgfTtcblxuICBleHBvcnQgY29uc3QgQk1DU2V0TG9naW5GYWlsZWQgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IGFjdGlvblR5cGVzLkJNQ19TRVRfTE9HSU5fRkFJTEVELFxuICAgIH07XG4gIH07Il19