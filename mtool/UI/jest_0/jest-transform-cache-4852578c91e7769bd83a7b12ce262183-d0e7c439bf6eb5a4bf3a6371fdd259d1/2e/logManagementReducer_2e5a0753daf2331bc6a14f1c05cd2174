e9e5ed4963f469de63dc0e606bd30708
/* istanbul ignore next */
"use strict";

var cov_2womi3xie = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/logManagementReducer.js";
  var hash = "2e76adcfc8915c1b89bffe75a201e411dd7a8afa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/logManagementReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 36,
          column: 1
        }
      },
      "1": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 75,
          column: 1
        }
      },
      "2": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "3": {
        start: {
          line: 42,
          column: 18
        },
        end: {
          line: 42,
          column: 20
        }
      },
      "4": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 43,
          column: 19
        }
      },
      "5": {
        start: {
          line: 44,
          column: 18
        },
        end: {
          line: 44,
          column: 19
        }
      },
      "6": {
        start: {
          line: 45,
          column: 18
        },
        end: {
          line: 45,
          column: 32
        }
      },
      "7": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 57,
          column: 7
        }
      },
      "8": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 46,
          column: 18
        }
      },
      "9": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 32
        }
      },
      "10": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "11": {
        start: {
          line: 49,
          column: 10
        },
        end: {
          line: 53,
          column: 11
        }
      },
      "12": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 51
        }
      },
      "13": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 59
        }
      },
      "14": {
        start: {
          line: 54,
          column: 10
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "15": {
        start: {
          line: 55,
          column: 10
        },
        end: {
          line: 55,
          column: 16
        }
      },
      "16": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 64,
          column: 8
        }
      },
      "17": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 70,
          column: 8
        }
      },
      "18": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 73,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 38,
            column: 30
          }
        },
        loc: {
          start: {
            line: 38,
            column: 63
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 38
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 30
          },
          end: {
            line: 38,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 38,
            column: 38
          },
          end: {
            line: 38,
            column: 50
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 74,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 73,
            column: 19
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 34
          }
        }, {
          start: {
            line: 48,
            column: 38
          },
          end: {
            line: 48,
            column: 60
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 10
          },
          end: {
            line: 53,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 10
          },
          end: {
            line: 53,
            column: 11
          }
        }, {
          start: {
            line: 49,
            column: 10
          },
          end: {
            line: 53,
            column: 11
          }
        }],
        line: 49
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "2e76adcfc8915c1b89bffe75a201e411dd7a8afa"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_2womi3xie.s[0]++, {
  logList: [],
  showLiveLogs: "yes",
  label: "",
  value: "",
  entries: 0
});

/* istanbul ignore next */
cov_2womi3xie.s[1]++;

const logManagementReducer = (state =
/* istanbul ignore next */
(cov_2womi3xie.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_2womi3xie.f[0]++;
  cov_2womi3xie.s[2]++;

  switch (action.type) {
    case actionTypes.GET_IBOFOS_LOGS:
      /* istanbul ignore next */
      cov_2womi3xie.b[1][0]++;
      {
        let value =
        /* istanbul ignore next */
        (cov_2womi3xie.s[3]++, "");
        let label =
        /* istanbul ignore next */
        (cov_2womi3xie.s[4]++, "");
        let entries =
        /* istanbul ignore next */
        (cov_2womi3xie.s[5]++, 0);
        const log =
        /* istanbul ignore next */
        (cov_2womi3xie.s[6]++, action.logList);

        /* istanbul ignore next */
        cov_2womi3xie.s[7]++;

        for (let i =
        /* istanbul ignore next */
        (cov_2womi3xie.s[8]++, 0); i < log.length; i += 1) {
          /* istanbul ignore next */
          cov_2womi3xie.s[9]++;
          entries = log[i].entries;

          /* istanbul ignore next */
          cov_2womi3xie.s[10]++;

          if (
          /* istanbul ignore next */
          (cov_2womi3xie.b[3][0]++, log[i].code === "2804") ||
          /* istanbul ignore next */
          (cov_2womi3xie.b[3][1]++, log[i].code === "1234")) {
            /* istanbul ignore next */
            cov_2womi3xie.b[2][0]++;
            cov_2womi3xie.s[11]++;

            if (log[i].code === "2804") {
              /* istanbul ignore next */
              cov_2womi3xie.b[4][0]++;
              cov_2womi3xie.s[12]++;
              label = "Poseidon OS Rebuild Progress: ";
            } else {
              /* istanbul ignore next */
              cov_2womi3xie.b[4][1]++;
              cov_2womi3xie.s[13]++;
              label = "Poseidon OS System Recovery Progress: ";
            }

            /* istanbul ignore next */
            cov_2womi3xie.s[14]++;
            value = log[i].value;

            /* istanbul ignore next */
            cov_2womi3xie.s[15]++;
            break;
          } else
          /* istanbul ignore next */
          {
            cov_2womi3xie.b[2][1]++;
          }
        }

        /* istanbul ignore next */
        cov_2womi3xie.s[16]++;
        return {
          showLiveLogs: state.showLiveLogs,
          logList: action.logList,
          value,
          label,
          entries
        };
      }

    case actionTypes.SET_LIVE_LOGS:
      /* istanbul ignore next */
      cov_2womi3xie.b[1][1]++;
      {
        /* istanbul ignore next */
        cov_2womi3xie.s[17]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            showLiveLogs: action.setLiveLogs
          })
        );
      }

    default:
      /* istanbul ignore next */
      cov_2womi3xie.b[1][2]++;
      cov_2womi3xie.s[18]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = logManagementReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ01hbmFnZW1lbnRSZWR1Y2VyLmpzIl0sIm5hbWVzIjpbImluaXRpYWxTdGF0ZSIsImxvZ0xpc3QiLCJzaG93TGl2ZUxvZ3MiLCJsYWJlbCIsInZhbHVlIiwiZW50cmllcyIsImxvZ01hbmFnZW1lbnRSZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJ0eXBlIiwiYWN0aW9uVHlwZXMiLCJHRVRfSUJPRk9TX0xPR1MiLCJsb2ciLCJpIiwibGVuZ3RoIiwiY29kZSIsIlNFVF9MSVZFX0xPR1MiLCJzZXRMaXZlTG9ncyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkE7QUFBQTtBQUFBOzs7Ozs7QUFFQSxNQUFNQSxZQUFZO0FBQUE7QUFBQSx1QkFBRztBQUNuQkMsRUFBQUEsT0FBTyxFQUFFLEVBRFU7QUFFbkJDLEVBQUFBLFlBQVksRUFBRSxLQUZLO0FBR25CQyxFQUFBQSxLQUFLLEVBQUUsRUFIWTtBQUluQkMsRUFBQUEsS0FBSyxFQUFFLEVBSlk7QUFLbkJDLEVBQUFBLE9BQU8sRUFBRTtBQUxVLENBQUgsQ0FBbEI7Ozs7O0FBUUEsTUFBTUMsb0JBQW9CLEdBQUcsQ0FBQ0MsS0FBSztBQUFBO0FBQUEsMEJBQUdQLFlBQUgsQ0FBTixFQUF1QlEsTUFBdkIsS0FBa0M7QUFBQTtBQUFBO0FBQUE7O0FBQzdELFVBQVFBLE1BQU0sQ0FBQ0MsSUFBZjtBQUVFLFNBQUtDLFdBQVcsQ0FBQ0MsZUFBakI7QUFBQTtBQUFBO0FBQWtDO0FBQ2hDLFlBQUlQLEtBQUs7QUFBQTtBQUFBLCtCQUFHLEVBQUgsQ0FBVDtBQUNBLFlBQUlELEtBQUs7QUFBQTtBQUFBLCtCQUFFLEVBQUYsQ0FBVDtBQUNBLFlBQUlFLE9BQU87QUFBQTtBQUFBLCtCQUFDLENBQUQsQ0FBWDtBQUNBLGNBQU1PLEdBQUc7QUFBQTtBQUFBLCtCQUFHSixNQUFNLENBQUNQLE9BQVYsQ0FBVDs7QUFKZ0M7QUFBQTs7QUFLaEMsYUFBSyxJQUFJWSxDQUFDO0FBQUE7QUFBQSwrQkFBQyxDQUFELENBQVYsRUFBY0EsQ0FBQyxHQUFFRCxHQUFHLENBQUNFLE1BQXJCLEVBQTRCRCxDQUFDLElBQUksQ0FBakMsRUFBb0M7QUFBQTtBQUFBO0FBQ2xDUixVQUFBQSxPQUFPLEdBQUdPLEdBQUcsQ0FBQ0MsQ0FBRCxDQUFILENBQU9SLE9BQWpCOztBQURrQztBQUFBOztBQUVsQztBQUFJO0FBQUEsb0NBQUFPLEdBQUcsQ0FBQ0MsQ0FBRCxDQUFILENBQU9FLElBQVAsS0FBZ0IsTUFBaEI7QUFBQTtBQUFBLG9DQUEwQkgsR0FBRyxDQUFDQyxDQUFELENBQUgsQ0FBT0UsSUFBUCxLQUFnQixNQUExQyxDQUFKLEVBQXNEO0FBQUE7QUFBQTtBQUFBOztBQUNwRCxnQkFBSUgsR0FBRyxDQUFDQyxDQUFELENBQUgsQ0FBT0UsSUFBUCxLQUFnQixNQUFwQixFQUE0QjtBQUFBO0FBQUE7QUFBQTtBQUMxQlosY0FBQUEsS0FBSyxHQUFFLGdDQUFQO0FBQ0QsYUFGRCxNQUVPO0FBQUE7QUFBQTtBQUFBO0FBQ0xBLGNBQUFBLEtBQUssR0FBRSx3Q0FBUDtBQUNEOztBQUxtRDtBQUFBO0FBTXBEQyxZQUFBQSxLQUFLLEdBQUdRLEdBQUcsQ0FBQ0MsQ0FBRCxDQUFILENBQU9ULEtBQWY7O0FBTm9EO0FBQUE7QUFPcEQ7QUFDRCxXQVJEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFTRDs7QUFoQitCO0FBQUE7QUFpQmhDLGVBQU87QUFDTEYsVUFBQUEsWUFBWSxFQUFFSyxLQUFLLENBQUNMLFlBRGY7QUFFTEQsVUFBQUEsT0FBTyxFQUFFTyxNQUFNLENBQUNQLE9BRlg7QUFHTEcsVUFBQUEsS0FISztBQUlMRCxVQUFBQSxLQUpLO0FBS0xFLFVBQUFBO0FBTEssU0FBUDtBQU9EOztBQUNELFNBQUtLLFdBQVcsQ0FBQ00sYUFBakI7QUFBQTtBQUFBO0FBQWdDO0FBQUE7QUFBQTtBQUM5QjtBQUFBO0FBQUEsNEJBQ0tULEtBREw7QUFFRUwsWUFBQUEsWUFBWSxFQUFFTSxNQUFNLENBQUNTO0FBRnZCO0FBQUE7QUFJRDs7QUFDRDtBQUFBO0FBQUE7QUFBQTtBQUNFLGFBQU9WLEtBQVA7QUFsQ0o7QUFvQ0QsQ0FyQ0Q7OztlQXVDZUQsb0IiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgIENPUFlSSUdIVCAoYykgMjAxOSBTQU1TVU5HIEVMRUNUUk9OSUNTIENPLiwgTFRELiAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICBBTEwgUklHSFRTIFJFU0VSVkVEICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQgdG8gbGljZW5zZWVzIG9mIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuICAgICAgICAvXG4vICAgcHJvZHVjdHMgdG8gdXNlIG9yIGFic3RyYWN0IHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiAgICAgICAgIC9cbi8gICBpbXBsZW1lbnRpbmcgYSBwcm9kdWN0IGJhc2VkIG9uIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIHByb2R1Y3RzLiAgICAgICAgICAgL1xuLyAgIE5vIG90aGVyIHJpZ2h0cyB0byByZXByb2R1Y2UsIHVzZSwgb3IgZGlzc2VtaW5hdGUgdGhpcyBjb21wdXRlciBwcm9ncmFtLCAgICAgICAgICAvXG4vICAgd2hldGhlciBpbiBwYXJ0IG9yIGluIHdob2xlLCBhcmUgZ3JhbnRlZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8gXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBtYWtlcyBubyByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50aWVzIHdpdGggICAgICAgICAgL1xuLyAgIHJlc3BlY3QgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgYW5kIHNwZWNpZmljYWxseSBkaXNjbGFpbXMgICAvXG4vICAgYW55IHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgZGFtYWdlcywgc3BlY2lhbCBvciBjb25zZXF1ZW50aWFsLCBjb25uZWN0ZWQgICAgICAgICAgIC9cbi8gICB3aXRoIHRoZSB1c2Ugb2YgdGhpcyBwcm9ncmFtLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cblxuXG5ERVNDUklQVElPTjogPENvbnRhaW5zIHJlZHVjZXIgZnVuY3Rpb24gZm9yIExvZyBNYW5hZ2VtZW50IHBhZ2U+ICpcbkBOQU1FIDogbG9nTWFuYWdlbWVudFJlZHVjZXIuanNcbkBBVVRIT1JTOiBQYWxhayBLYXBvb3JcbkBWZXJzaW9uIDogMS4wICpcbkBSRVZJU0lPTiBISVNUT1JZXG5bMDgvMjIvMjAxOV0gW1BhbGFrXSA6IFByb3RvdHlwaW5nLi4uLi4uLi4uLi8vLy8vLy8vLy8vLy8vLy8vLy8vXG4qL1xuXG5pbXBvcnQgKiBhcyBhY3Rpb25UeXBlcyBmcm9tICcuLi9hY3Rpb25zL2FjdGlvblR5cGVzJztcblxuY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICBsb2dMaXN0OiBbXSxcbiAgc2hvd0xpdmVMb2dzOiBcInllc1wiLFxuICBsYWJlbDogXCJcIixcbiAgdmFsdWU6IFwiXCIsXG4gIGVudHJpZXM6IDAsXG59O1xuXG5jb25zdCBsb2dNYW5hZ2VtZW50UmVkdWNlciA9IChzdGF0ZSA9IGluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgIFxuICAgIGNhc2UgYWN0aW9uVHlwZXMuR0VUX0lCT0ZPU19MT0dTOiB7XG4gICAgICBsZXQgdmFsdWUgPSBcIlwiO1xuICAgICAgbGV0IGxhYmVsPSBcIlwiO1xuICAgICAgbGV0IGVudHJpZXM9MDtcbiAgICAgIGNvbnN0IGxvZyA9IGFjdGlvbi5sb2dMaXN0O1xuICAgICAgZm9yIChsZXQgaT0wOyBpPCBsb2cubGVuZ3RoO2kgKz0gMSkge1xuICAgICAgICBlbnRyaWVzID0gbG9nW2ldLmVudHJpZXNcbiAgICAgICAgaWYgKGxvZ1tpXS5jb2RlID09PSBcIjI4MDRcIiB8fCBsb2dbaV0uY29kZSA9PT0gXCIxMjM0XCIpIHtcbiAgICAgICAgICBpZiAobG9nW2ldLmNvZGUgPT09IFwiMjgwNFwiKSB7XG4gICAgICAgICAgICBsYWJlbD0gXCJQb3NlaWRvbiBPUyBSZWJ1aWxkIFByb2dyZXNzOiBcIlxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsYWJlbD0gXCJQb3NlaWRvbiBPUyBTeXN0ZW0gUmVjb3ZlcnkgUHJvZ3Jlc3M6IFwiXG4gICAgICAgICAgfVxuICAgICAgICAgIHZhbHVlID0gbG9nW2ldLnZhbHVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzaG93TGl2ZUxvZ3M6IHN0YXRlLnNob3dMaXZlTG9ncyxcbiAgICAgICAgbG9nTGlzdDogYWN0aW9uLmxvZ0xpc3QsXG4gICAgICAgIHZhbHVlLFxuICAgICAgICBsYWJlbCxcbiAgICAgICAgZW50cmllc1xuICAgICAgfTtcbiAgICB9XG4gICAgY2FzZSBhY3Rpb25UeXBlcy5TRVRfTElWRV9MT0dTOiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgc2hvd0xpdmVMb2dzOiBhY3Rpb24uc2V0TGl2ZUxvZ3MsXG4gICAgICB9O1xuICAgIH1cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBsb2dNYW5hZ2VtZW50UmVkdWNlcjtcbiJdfQ==