{"version":3,"sources":["performanceSaga.js"],"names":["extractValues","data","length","push","value","time","Date","now","fetchInputPowerVariation","action","response","axios","get","payload","result","message","actionCreators","res","error","fetchCpuUsage","values","forEach","r","mean_usage_user","fetchReadBandwidth","level","fetchVolReadBandwidth","fetchWriteBandwidth","fetchVolWriteBandwidth","fetchReadIops","fetchVolReadIops","fetchWriteIops","fetchVolWriteIops","fetchLatency","fetchVolLatency","performanceWatcher","actionTypes","SAGA_FETCH_CPU_USAGE","SAGA_FETCH_READ_BANDWIDTH","SAGA_FETCH_WRITE_BANDWIDTH","SAGA_FETCH_READ_IOPS","SAGA_FETCH_WRITE_IOPS","SAGA_FETCH_LATENCY","SAGA_FETCH_INPUT_POWER_VARIATION"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <Contains Generator Functions for Performance component> *\n@NAME : performanceSaga.js\n@AUTHORS: Aswin K K \n@Version : 1.0 *\n@REVISION HISTORY\n[27/08/2019] [Aswin K K] : Prototyping..........////////////////////\n*/\n\nimport axios from \"axios\";\nimport { call, takeEvery, put, cancelled } from \"redux-saga/effects\";\nimport * as actionTypes from \"../store/actions/actionTypes\";\nimport * as actionCreators from \"../store/actions/exportActionCreators\";\n\nfunction extractValues(data) {\n  if (data.length === 0) {\n    data.push({\n      value: 0,\n      time: new Date()\n    });\n    data.push({\n        value: 0,\n        time: new Date(Date.now() - 10000)\n    });\n  }\n  return data;\n}\n\n// function* fetchDiskUsed(action) {\n//     try {\n//         const response = yield call([axios, axios.get], `/api/v1.0/disk_used_percent/${action.payload.time}/array`);\n\n//         const result = response.data;\n//         if (result && !result.message) {\n//             const values = [];\n//             result.forEach((r) => {\n//                 if (r.used_percent !== null) {\n//                     values.push({\n//                         value: r.used_percent,\n//                         time: r.time\n//                     })\n//                 }\n//             });\n//             yield put(actionCreators.fetchDiskUsed(result));\n//         } else {\n//             yield put(actionCreators.fetchDiskUsed([]));\n//         }\n//     }\n//     catch (error) {\n//         yield put(actionCreators.fetchDiskUsed([]));\n//     }\n//     finally {\n//         if (yield cancelled()) {\n//             yield put(actionCreators.fetchDiskUsed([]));\n//         }\n//     }\n// }\n\n// function* fetchDiskWrite(action) {\n//     try {\n//         const response = yield call([axios, axios.get], `/api/v1.0/disk_write_mbps/${action.payload.time}/array`);\n\n//         const result = response.data;\n//         if (result && !result.message) {\n//             const values = [];\n//             result.forEach((r) => {\n//                 if (r.write_megabytes_per_second !== null) {\n//                     values.push({\n//                         value: r.write_megabytes_per_second,\n//                         time: r.time\n//                     })\n//                 }\n//             });\n//             yield put(actionCreators.fetchDiskWrite(values));\n//         } else {\n//             yield put(actionCreators.fetchDiskWrite([]));\n//         }\n//     }\n//     catch (error) {\n//         yield put(actionCreators.fetchDiskWrite([]));\n//     }\n//     finally {\n//         if (yield cancelled()) {\n//             yield put(actionCreators.fetchDiskWrite([]));\n//         }\n//     }\n// }\n\nexport function* fetchInputPowerVariation(action) {\n    try {\n      const response = yield call(\n        [axios, axios.get],\n        `/api/v1.0/get_input_power_variation/${action.payload.time}`\n      );\n      const result = response.data;\n      if (result && !result.message) {\n        yield put(actionCreators.fetchInputPowerVariation(extractValues(result.res)));\n      } else {\n        yield put(actionCreators.fetchInputPowerVariation([]));\n      }\n    } catch (error) {\n      yield put(actionCreators.fetchInputPowerVariation([]));\n    } finally {\n      if (yield cancelled()) {\n        yield put(actionCreators.fetchInputPowerVariation([]));\n      }\n    }\n  }\n\nexport function* fetchCpuUsage(action) {\n  // console.log(\"fetchCpuUsage\")\n  try {\n    const response = yield call(\n      [axios, axios.get],\n      `/api/v1.0/usage_user/${action.payload.time}`\n    );\n    const result = response.data;\n    if (result && !result.message) {\n      const values = [];\n      result.forEach(r => {\n        if (r.mean_usage_user !== null) {\n          values.push({\n            value: r.mean_usage_user,\n            time: r.time\n          });\n        }\n      });\n      yield put(actionCreators.fetchCpuUsage(values));\n    } else {\n      yield put(actionCreators.fetchCpuUsage([]));\n    }\n  } catch (error) {\n    yield put(actionCreators.fetchCpuUsage([]));\n  } finally {\n    if (yield cancelled()) {\n      yield put(actionCreators.fetchCpuUsage([]));\n    }\n  }\n}\n\nexport function* fetchReadBandwidth(action) {\n  try {\n    const response = yield call(\n      [axios, axios.get],\n      `/api/v1.0/bw_read/${action.payload.time}/${action.payload.level}`\n    );\n\n        const result = response.data;\n        if (result && !result.message) {\n            if (action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadBandwidth(extractValues(result.res)));\n            } else {\n                yield put(actionCreators.fetchVolReadBandwidth({values: extractValues(result.res), ...action.payload}));\n            }\n        } else if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadBandwidth([]));\n            } else {\n                yield put(actionCreators.fetchVolReadBandwidth({values: [], ...action.payload}));\n            }\n    }\n    catch (error) {\n        if(action.payload.level === \"array\") {\n            yield put(actionCreators.fetchReadBandwidth([]));\n        } else {\n            yield put(actionCreators.fetchVolReadBandwidth({values: [], ...action.payload}));\n        }\n    }\n    finally {\n        if (yield cancelled()) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadBandwidth([]));\n            } else {\n                yield put(actionCreators.fetchVolReadBandwidth({values: [], ...action.payload}));\n            }\n        }\n    }\n}\n\nfunction* fetchWriteBandwidth(action) {\n    try {\n        const response = yield call([axios, axios.get], `/api/v1.0/bw_write/${action.payload.time}/${action.payload.level}`);\n\n        const result = response.data;\n        if (result && !result.message) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteBandwidth(extractValues(result.res)));\n            } else {\n                yield put(actionCreators.fetchVolWriteBandwidth({values: extractValues(result.res), ...action.payload}));\n            }\n        } else if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteBandwidth([]));\n            } else {\n                yield put(actionCreators.fetchVolWriteBandwidth({values: [], ...action.payload}))\n            }\n    }\n    catch (error) {\n        if(action.payload.level === \"array\") {\n            yield put(actionCreators.fetchWriteBandwidth([]));\n        } else {\n            yield put(actionCreators.fetchVolWriteBandwidth({values: [], ...action.payload}))\n        }\n    }\n    finally {\n        // console.log(\"finally\")\n        if (yield cancelled()) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteBandwidth([]));\n            } else {\n                yield put(actionCreators.fetchVolWriteBandwidth({values: [], ...action.payload}))\n            }\n        }\n    }\n}\n\nexport function* fetchReadIops(action) {\n  try {\n    const response = yield call(\n      [axios, axios.get],\n      `/api/v1.0/iops_read/${action.payload.time}/${action.payload.level}`\n    );\n\n        const result = response.data;\n        if (result && !result.message) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadIops(extractValues(result.res)));\n            } else {\n                yield put(actionCreators.fetchVolReadIops({values: extractValues(result.res), ...action.payload}));\n            }\n        } else if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadIops([]));\n            } else {\n                yield put(actionCreators.fetchVolReadIops({values: [], ...action.payload}))\n            }\n    }\n    catch (error) {\n        if(action.payload.level === \"array\") {\n            yield put(actionCreators.fetchReadIops([]));\n        } else {\n            yield put(actionCreators.fetchVolReadIops({values: [], ...action.payload}))\n        }\n    }\n    finally {\n        if (yield cancelled()) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchReadIops([]));\n            } else {\n                yield put(actionCreators.fetchVolReadIops({values: [], ...action.payload}))\n            }\n        }\n    }\n}\n\nexport function* fetchWriteIops(action) {\n  try {\n    const response = yield call(\n      [axios, axios.get],\n      `/api/v1.0/iops_write/${action.payload.time}/${action.payload.level}`\n    );\n\n        const result = response.data;\n        if (result && !result.message) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteIops(extractValues(result.res)));\n            } else {\n                yield put(actionCreators.fetchVolWriteIops({values: extractValues(result.res), ...action.payload}));\n            }\n        } else if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteIops([]));\n            } else {\n                yield put(actionCreators.fetchVolWriteIops({values: [], ...action.payload}))\n            }\n    }\n    catch (error) {\n        if(action.payload.level === \"array\") {\n            yield put(actionCreators.fetchWriteIops([]));\n        } else {\n            yield put(actionCreators.fetchVolWriteIops({values: [], ...action.payload}))\n        }\n    }\n    finally {\n        if (yield cancelled()) {\n            if(action.payload.level === \"array\") {\n                yield put(actionCreators.fetchWriteIops([]));\n            } else {\n                yield put(actionCreators.fetchVolWriteIops({values: [], ...action.payload}))\n            }\n        }\n    }\n}\n\n\nexport function* fetchLatency(action) {\n    try {\n      const response = yield call(\n        [axios, axios.get],\n        `/api/v1.0/latency/${action.payload.time}/${action.payload.level}`\n      );\n  \n          const result = response.data;\n          if (result && !result.message) {\n              if(action.payload.level === \"array\") {\n                  yield put(actionCreators.fetchLatency(extractValues(result.res)));\n              } else {\n                  yield put(actionCreators.fetchVolLatency({values: extractValues(result.res), ...action.payload}));\n              }\n          } else if(action.payload.level === \"array\") {\n                  yield put(actionCreators.fetchLatency([]));\n              } else {\n                  yield put(actionCreators.fetchVolLatency({values: [], ...action.payload}))\n              }\n      }\n      catch (error) {\n          if(action.payload.level === \"array\") {\n              yield put(actionCreators.fetchLatency([]));\n          } else {\n              yield put(actionCreators.fetchVolLatency({values: [], ...action.payload}))\n          }\n      }\n      finally {\n          if (yield cancelled()) {\n              if(action.payload.level === \"array\") {\n                  yield put(actionCreators.fetchLatency([]));\n              } else {\n                  yield put(actionCreators.fetchVolLatency({values: [], ...action.payload}))\n              }\n          }\n      }\n  }\n  \n\nexport default function* performanceWatcher() {\n  // yield takeEvery(actionTypes.SAGA_FETCH_DISK_USED, fetchDiskUsed);\n  // yield takeEvery(actionTypes.SAGA_FETCH_DISK_WRITE, fetchDiskWrite);\n  yield takeEvery(actionTypes.SAGA_FETCH_CPU_USAGE, fetchCpuUsage);\n  yield takeEvery(actionTypes.SAGA_FETCH_READ_BANDWIDTH, fetchReadBandwidth);\n  yield takeEvery(actionTypes.SAGA_FETCH_WRITE_BANDWIDTH, fetchWriteBandwidth);\n  yield takeEvery(actionTypes.SAGA_FETCH_READ_IOPS, fetchReadIops);\n  yield takeEvery(actionTypes.SAGA_FETCH_WRITE_IOPS, fetchWriteIops);\n  yield takeEvery(actionTypes.SAGA_FETCH_LATENCY, fetchLatency);\n  yield takeEvery(actionTypes.SAGA_FETCH_INPUT_POWER_VARIATION, fetchInputPowerVariation);\n}\n"]}