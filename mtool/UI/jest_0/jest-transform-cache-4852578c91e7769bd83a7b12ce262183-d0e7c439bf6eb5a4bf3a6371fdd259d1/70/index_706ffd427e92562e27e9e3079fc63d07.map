{"version":3,"sources":["index.js"],"names":["styles","theme","configurationContainer","display","GeneralContainer","padding","spacing","pageHeader","customTheme","page","title","content","flexGrow","width","boxSizing","paddingLeft","paddingRight","toolbar","EmailTableContainer","margin","selectedTab","color","borderBottom","fontWeight","ConfigurationSetting","Component","constructor","props","selectEmail","bind","editEmail","deleteEmails","saveEmail","sendEmail","testserver","deleteConfiguredSmtpServer","toggleEmailStatus","savesmtpserverdetails","openAlert","handleAlertClose","handleClose","triggerCommand","handleDrawerToggle","OnHandleChange","applyIbofOSTimeInterval","deleteIbofOSTimeInterval","handleTabChange","state","add_delete_send","mobileOpen","ibofostimeinterval","timeinterval","open","value","event","target","name","setState","componentDidMount","fetchEmailList","index","emaillist","selected","changeEmailList","newValue","history","push","i","edit","emailentry","newEntry","email","indexOf","payload","alertOpen","istypealert","alerttype","alerttitle","alertdescription","setAlertBox","j","length","_id","active","newEmail","oldid","updateEmail","ids","forEach","data","deleteEmailIds","configuredsmtpserver","arr","split","smtpserverip","smtpserverport","document","getElementsByTagName","style","cursor","preventDefault","smtpserver","testEmail","setSmtpServer","emailid","status","toggleActiveStatus","operationType","setIbofOSTimeInterval","render","classes","MToolTheme","window","location","href","updateEmailIDList","downloadLogs","mapStateToProps","configurationsettingReducer","mapDispatchToProps","dispatch","type","actionTypes","SAGA_FETCH_EMAIL_LIST","newemail","actionCreators","SAGA_UPDATE_EMAIL","SAGA_TOGGLE_ACTIVE_STATUS","SAGA_SEND_EMAIL","SAGA_TEST_EMAIL","SAGA_DELETE_EMAIL_IDS","SAGA_DOWNLOAD_LOGS","SAGA_SET_IBOFOS_TIME_INTERVAL"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Configuration Page Container for rendering Configuration Page\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi, Palak Kapoor \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[08/21/2019] [Palak]: Material UI & Redux.///////////////////\n*/\nimport React, { Component } from 'react';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, AppBar, Tabs, Tab } from '@material-ui/core';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport MToolTheme , { customTheme } from '../../theme';\nimport EmailAlerts from '../../components/EmailAlerts';\nimport './ConfigurationSetting.css';\nimport AlertDialog from '../../components/Dialog';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport * as actionTypes from '../../store/actions/actionTypes';\nimport * as actionCreators from '../../store/actions/exportActionCreators';\n\nimport LogConfiguration from '../../components/LogConfiguration';\nimport AlertManagement from './Alert-Management';\nimport UserManagement from './User-Management';\n\nconst styles = theme => ({\n  configurationContainer: {\n    display: 'flex',\n  },\n  GeneralContainer: {\n    padding: theme.spacing(2, 0)\n  },\n  pageHeader: customTheme.page.title,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    width: '100%',\n    boxSizing: 'border-box',\n    paddingLeft: '24px',\n    paddingRight: '13px',\n  },\n  toolbar: customTheme.toolbar,\n  EmailTableContainer: {\n    margin: 0\n  },\n  selectedTab: {\n    color: 'rgb(33, 34, 37)',\n    borderBottom: `2px solid ${'rgb(33, 34, 37)'}`,\n    fontWeight: 600\n  }\n});\nclass ConfigurationSetting extends Component {\n  constructor(props) {\n    super(props);\n    this.selectEmail = this.selectEmail.bind(this);\n    this.editEmail = this.editEmail.bind(this);\n    this.deleteEmails = this.deleteEmails.bind(this);\n    this.saveEmail = this.saveEmail.bind(this);\n    this.sendEmail = this.sendEmail.bind(this);\n    this.testserver = this.testserver.bind(this);\n    this.deleteConfiguredSmtpServer = this.deleteConfiguredSmtpServer.bind(this);\n    this.toggleEmailStatus = this.toggleEmailStatus.bind(this);\n    this.savesmtpserverdetails = this.savesmtpserverdetails.bind(this);\n    this.openAlert = this.openAlert.bind(this);\n    this.handleAlertClose = this.handleAlertClose.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.triggerCommand = this.triggerCommand.bind(this);\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\n    this.OnHandleChange = this.OnHandleChange.bind(this);\n    this.applyIbofOSTimeInterval = this.applyIbofOSTimeInterval.bind(this);\n    this.deleteIbofOSTimeInterval = this.deleteIbofOSTimeInterval.bind(this);\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.state = {\n      add_delete_send: '',\n      mobileOpen: false,\n      ibofostimeinterval: this.props.timeinterval,\n      open: false,\n      value: 0\n    };\n  }\n\n  OnHandleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      ...this.state,\n      [name]: value\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchEmailList();\n    this.setState({\n      ibofostimeinterval: this.props.timeinterval\n    });\n  }\n\n  // Change the checked state after selection\n  selectEmail(index) {\n    const emaillist = [...this.props.emaillist];\n    emaillist[index].selected = true;\n    this.props.changeEmailList(emaillist);\n  }\n\n  handleTabChange(event, newValue) {\n    if (newValue === 'general') {\n      this.componentDidMount();\n    }\n    this.props.history.push(`/ConfigurationSetting/${newValue}`);\n  }\n\n  deleteConfiguredSmtpServer() {\n    this.props.deleteConfiguredSmtpServer();\n  }\n\n  editEmail(i) {\n    const emaillist = [...this.props.emaillist];\n    emaillist[i].edit = !emaillist[i].edit;\n    this.props.changeEmailList(emaillist);\n  }\n\n  // Update an existing email id or add another email id\n  saveEmail(emailentry, i, newEntry) {\n    if (\n      emailentry.email === '' ||\n      !emailentry.email ||\n      (emailentry.email && !(emailentry.email.indexOf('@') > -1)) ||\n      (emailentry.email && !(emailentry.email.indexOf('.') > -1))\n    ) {\n      const payload = {\n        alertOpen: true,\n        istypealert: true,\n        alerttype: 'alert',\n        alerttitle: 'Save Email',\n        alertdescription: 'Please enter a valid email id',\n      };\n      this.props.setAlertBox(payload);\n      return;\n    }\n    for (let j = 0; j < this.props.emaillist.length; j += 1) {\n      if (this.props.emaillist[j].email === emailentry.email && j !== i) {\n        const payload = {\n          alertOpen: true,\n          istypealert: true,\n          alerttype: 'alert',\n          alerttitle: 'Save Email',\n          alertdescription: 'This email id exists',\n        };\n        this.props.setAlertBox(payload);\n        return;\n      }\n    }\n\n    if (newEntry === true) {\n      const email = [...this.props.emaillist];\n      email.push({\n        _id: 'Wassup',\n        email: emailentry.email,\n        selected: false,\n        active: 1,\n      });\n      this.props.changeEmailList(email);\n      i = this.props.emaillist.length - 1;\n    }\n\n    const newEmail = {\n      ...emailentry,\n      oldid: this.props.emaillist[i].email,\n    };\n    this.props.updateEmail(newEmail);\n  }\n\n  // Delete all selected email ids\n  deleteEmails() {\n    const ids = [];\n    this.props.emaillist.forEach((email, index) => {\n      if (email.selected) {\n        ids.push(email.email);\n        const emaillist = [...this.props.emaillist];\n        emaillist[index].selected = false;\n        this.props.changeEmailList(emaillist);\n      }\n    });\n\n    const data = {\n      ids,\n    };\n    this.props.deleteEmailIds(data);\n  }\n\n  // Send email to all the active email ids\n  sendEmail() {\n    const ids = [];\n    this.props.emaillist.forEach((email, index) => {\n      if (email.selected && email.active) {\n        const emaillist = [...this.props.emaillist];\n        emaillist[index].selected = false;\n        this.props.changeEmailList(emaillist);\n        ids.push(email.email);\n      }\n    });\n    if (ids.length <= 0) {\n      const payload = {\n        alertOpen: true,\n        istypealert: true,\n        alerttype: 'alert',\n        alerttitle: 'Send Email',\n        alertdescription: 'Please select an email id to send',\n      };\n      this.props.setAlertBox(payload);\n      return;\n    }\n    if (this.props.configuredsmtpserver === '') {\n      const payload = {\n        alertOpen: true,\n        istypealert: true,\n        alerttype: 'alert',\n        alerttitle: 'Send Email',\n        alertdescription: 'Please configure smtp server',\n      };\n      this.props.setAlertBox(payload);\n      return;\n    }\n    const arr = this.props.configuredsmtpserver.split(':');\n    const data = {\n      smtpserverip: arr[0],\n      smtpserverport: arr[1],\n      ids,\n    };\n    document.getElementsByTagName('body')[0].style.cursor = 'wait';\n    this.props.sendEmail(data);\n  }\n\n  // Test whether smtp server is working as expected\n  testserver(event) {\n    event.preventDefault();\n    document.getElementsByTagName('body')[0].style.cursor = 'wait';\n    const payload = {\n      smtpserver: this.props.smtpserver,\n      smtpserverip: this.props.smtpserverip,\n      smtpserverport: this.props.smtpserverport,\n    };\n    this.props.testEmail(payload);\n  }\n\n  savesmtpserverdetails(event) {\n    const { value } = event.target;\n    const arr = event.target.value.split(':');\n\n    const payload = {\n      smtpserver: value,\n      smtpserverip: arr[0],\n      smtpserverport: arr[1],\n    };\n    this.props.setSmtpServer(payload);\n  }\n\n  // Enable/Disable an email id but do not delete from DB\n  toggleEmailStatus(i) {\n    const email = {\n      emailid: this.props.emaillist[i].email,\n      status: !this.props.emaillist[i].active,\n    };\n    this.props.toggleActiveStatus(email);\n  }\n\n  openAlert(operationType) {\n    this.setState({\n      ...this.state,\n      add_delete_send: operationType,\n    });\n    const payload = {\n      alertOpen: true,\n      istypealert: false,\n      alerttype: 'delete',\n      alerttitle: `${operationType} Email`,\n      alertdescription: `Are you sure you want to ${operationType} the email?`,\n    };\n    this.props.setAlertBox(payload);\n  }\n\n  handleAlertClose() {\n    const payload = {\n      alertOpen: false\n    };\n    this.props.setAlertBox(payload);\n  }\n\n  handleClose() {\n    this.setState({\n      ...this.state,\n      open: false\n    })\n  }\n\n  triggerCommand() {\n    // if (this.state.add_delete_send === 'Delete') {\n    //   this.deleteEmails();\n    // } \n    // else if (this.state.add_delete_send === 'Send') {\n    //   this.sendEmail();\n    // }\n\n    this.deleteEmails();\n  }\n\n  handleDrawerToggle() {\n    this.setState({\n      mobileOpen: !this.state.mobileOpen,\n    });\n  }\n\n  applyIbofOSTimeInterval() {\n    if(this.state.ibofostimeinterval >= 0) {\n      this.props.setIbofOSTimeInterval({timeinterval:this.state.ibofostimeinterval});\n    } else {\n      this.setState({\n        ...this.state,\n        open: true\n      })\n    }\n  }\n\n  deleteIbofOSTimeInterval() {\n    this.props.setIbofOSTimeInterval({timeinterval:4});\n  }\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <ThemeProvider theme={MToolTheme}>\n        <div className={classes.configurationContainer}>\n          <Header toggleDrawer={this.handleDrawerToggle} />\n          <Sidebar\n            mobileOpen={this.state.mobileOpen}\n            toggleDrawer={this.handleDrawerToggle}\n          />\n          <main className={classes.content}>\n            <div className={classes.toolbar} />\n            <AppBar position=\"static\" color=\"default\">\n              <Tabs\n                value={this.state.value}\n                onChange={this.handleTabChange}\n              >\n                <Tab label=\"General\" key=\"general\" value=\"general\" className={(window.location.href.indexOf('general') > 0 ? classes.selectedTab : null)} />\n                <Tab label=\"Alert\" key=\"alert\" value=\"alert\" className={(window.location.href.indexOf('alert') > 0 ? classes.selectedTab : null)} />\n                <Tab label=\"User\" key=\"user\" value=\"user\" className={(window.location.href.indexOf('user') > 0 ? classes.selectedTab : null)} />\n              </Tabs>\n            </AppBar>\n            <Switch>\n                <Route exact path=\"/ConfigurationSetting/general\">\n                  <Grid container spacing={1} className={classes.GeneralContainer}>\n\n                    <Grid item container spacing={1} xs={12} sm={6} className={classes.EmailTableContainer}>\n                      <EmailAlerts\n                        emailids={this.props.emaillist}\n                        IP={this.props.smtpserverip}\n                        Port={this.props.smtpserverport}\n                        addemailids={this.updateEmailIDList}\n                        editEmail={this.editEmail}\n                        selectEmail={this.selectEmail}\n                        saveChange={this.saveEmail}\n                        deleteEmails={this.deleteEmails}\n                        sendEmail={this.sendEmail}\n                        configuredsmtpserver={this.props.configuredsmtpserver}\n                        deleteConfiguredSmtpServer={this.deleteConfiguredSmtpServer}\n                        testserver={this.testserver}\n                        savesmtpserverdetails={this.savesmtpserverdetails}\n                        toggleEmailStatus={this.toggleEmailStatus}\n                        openAlert={this.openAlert}\n                      />\n                      <AlertDialog\n                        title={this.props.alerttitle}\n                        description={this.props.alertdescription}\n                        open={this.props.alertOpen}\n                        type={this.props.alerttype}\n                        handleClose={this.handleAlertClose}\n                        onConfirm={this.triggerCommand}\n                      />\n                    </Grid>\n                    <Grid item container spacing={1} xs={12} sm={6} className={classes.EmailTableContainer}>\n                      <LogConfiguration\n                        downloadLogs={this.props.downloadLogs}\n                        OnHandleChange={this.OnHandleChange}\n                        ibofostimeintervalvalue={this.props.timeinterval}\n                        ibofostimeinterval={this.state.ibofostimeinterval}\n                        applyIbofOSTimeInterval={this.applyIbofOSTimeInterval}\n                        deleteIbofOSTimeInterval={this.deleteIbofOSTimeInterval}\n                      />\n                    </Grid>\n                  </Grid>\n                </Route>\n              <Route path=\"/ConfigurationSetting/alert\">\n                <AlertManagement />\n              </Route>\n              <Route path=\"/ConfigurationSetting/user\">\n                <UserManagement />\n              </Route>\n            </Switch>\n            <AlertDialog\n              title=\"Update Interval\"\n              description=\"Invalid input. Please enter a valid interval\"\n              type=\"alert\"\n              open={this.state.open}\n              handleClose={this.handleClose}\n            />\n          </main>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    emaillist: state.configurationsettingReducer.emaillist,\n    alertOpen: state.configurationsettingReducer.alertOpen,\n    istypealert: state.configurationsettingReducer.istypealert,\n    alerttitle: state.configurationsettingReducer.alerttitle,\n    alerttype: state.configurationsettingReducer.alerttype,\n    alertdescription: state.configurationsettingReducer.alertdescription,\n    configuredsmtpserver:\n      state.configurationsettingReducer.configuredsmtpserver,\n    smtpserverip: state.configurationsettingReducer.smtpserverip,\n    smtpserverport: state.configurationsettingReducer.smtpserverport,\n    smtpserver: state.configurationsettingReducer.smtpserver,\n    timeinterval: state.configurationsettingReducer.timeinterval,\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchEmailList: () => dispatch({ type: actionTypes.SAGA_FETCH_EMAIL_LIST }),\n    changeEmailList: newemail =>\n      dispatch(actionCreators.changeEmailList(newemail)),\n    setAlertBox: payload => dispatch(actionCreators.setAlertBox(payload)),\n    updateEmail: newemail =>\n      dispatch({ type: actionTypes.SAGA_UPDATE_EMAIL, payload: newemail }),\n    toggleActiveStatus: email =>\n      dispatch({ type: actionTypes.SAGA_TOGGLE_ACTIVE_STATUS, payload: email }),\n    sendEmail: data =>\n      dispatch({ type: actionTypes.SAGA_SEND_EMAIL, payload: data }),\n    testEmail: data =>\n      dispatch({ type: actionTypes.SAGA_TEST_EMAIL, payload: data }),\n    setSmtpServer: payload => dispatch(actionCreators.setSmtpServer(payload)),\n    deleteConfiguredSmtpServer: () =>\n      dispatch(actionCreators.deleteConfiguredSmtpServer()),\n    deleteEmailIds: data =>\n      dispatch({ type: actionTypes.SAGA_DELETE_EMAIL_IDS, payload: data }),\n    downloadLogs: data =>\n      dispatch({ type: actionTypes.SAGA_DOWNLOAD_LOGS, payload: data }),\n    setIbofOSTimeInterval: data =>\n      dispatch({ type: actionTypes.SAGA_SET_IBOFOS_TIME_INTERVAL, payload: data }),\n  };\n};\n\nexport default withStyles(styles)(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withRouter(ConfigurationSetting))\n);\n"]}