{"version":3,"sources":["index.test.js"],"names":["jest","unmock","describe","wrapper","mock","history","store","beforeEach","sagaMiddleware","rootReducers","storageReducer","headerReducer","configurationsettingReducer","BMCAuthenticationReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","run","rootSaga","route","initialEntries","MockAdapter","axios","renderComponent","afterEach","cleanup","it","onGet","reply","onAny","getByTestId","expect","toHaveTextContent","devices","array","arraySize","onPost","asFragment","resolvedThing","toBeDefined","name","size","metadevices","global","innerWidth","dispatchEvent","Event","fireEvent","click","getByText","getAllByText","querySelector","wb","change","target","value","dev1","dev2","dev3","dev4","success","getSpy","spyOn","queryByText","raidSelect","dev2_","setTimeout","getByDisplayValue","console","log","toHaveBeenCalledWith","arrayname","RAIDLevel","storageDisks","deviceName","spareDisks","writeBufferDisk","metaDisk","deleteButton","getByLabelText","volName","volCount","volSuffix","volSize","volUnit","volBW","volIOPS","createVolButton","Members","Name","Id","Capacity","Data","AllocatedBytes","ConsumedBytes","Oem","MaxIOPS","MaxBW","Status","VolumeStatus","getByTitle","checkBox2","deleteBtn","yesBtn","deleteTxt","editBtn","maxBw","maxIops","saveBtn","saveTxt","queryByTestId","cancelBtn","toBeNull","document","createRange","html","setStart","setEnd","commonAncestorContainer","nodeName","ownerDocument","createContextualFragment","div","createElement","innerHTML","children","MouseEvent","bubbles","cancelable","moreDetails"],"mappings":"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","sourcesContent":["/* eslint-disable import/imports-first */\n/* eslint-disable import/first */\n\njest.unmock('axios');\n\nimport axios from \"axios\";\nimport MockAdapter from \"axios-mock-adapter\";\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { render, fireEvent, cleanup, waitForElement } from '@testing-library/react';\nimport { createMemoryHistory } from 'history';\nimport '@testing-library/jest-dom/extend-expect';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { act } from \"react-dom/test-utils\";\nimport Volume from './index';\nimport storageReducer from '../../store/reducers/storageReducer';\nimport headerReducer from '../../store/reducers/headerReducer';\nimport configurationsettingReducer from '../../store/reducers/configurationsettingReducer';\nimport BMCAuthenticationReducer from '../../store/reducers/BMCAuthenticationReducer';\nimport rootSaga from \"../../sagas/indexSaga\";\nimport { async } from \"q\";\n\n\ndescribe('<Storage Management />', () => {\n  let wrapper;\n  let mock;\n  let history;\n  let store;\n  beforeEach(() => {\n    const sagaMiddleware = createSagaMiddleware();\n    const rootReducers = combineReducers({\n      storageReducer,\n      headerReducer,\n      configurationsettingReducer,\n      BMCAuthenticationReducer\n    });\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    store = createStore(rootReducers, composeEnhancers(applyMiddleware(sagaMiddleware)))\n    sagaMiddleware.run(rootSaga);\n    const route = '/';\n    history = createMemoryHistory({ initialEntries: [route] })\n    mock = new MockAdapter(axios);\n  });\n\n  const renderComponent = () => {\n    wrapper = render(\n      <Router history={history}>\n        <Provider store={store}>\n          <Volume />\n        </Provider>\n      </Router>\n    );\n  }\n\n  afterEach(cleanup);\n\n  it(\"should render array create view\", () => {\n    mock.onGet('/*').reply(200, [])\n      .onAny().reply(200, []);\n    mock.onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, []);\n    renderComponent();\n    const { getByTestId } = wrapper;\n    expect(getByTestId('title')).toHaveTextContent('Array Management');\n  });\n\n  const devices = [{\n    \"name\": \"intel-unvmens-0\",\n    \"size\": 390703446,\n    \"mn\": \"SAMSUNG MZWLL1T6HAJQ-00005\",\n    \"sn\": \"S4C9NF0M500037\"\n  }, {\n    \"name\": \"intel-unvmens-1\",\n    \"size\": 390703446,\n    \"mn\": \"SAMSUNG MZWLL1T6HAJQ-00005\",\n    \"sn\": \"S4C9NF0M500027\"\n  }, {\n    \"name\": \"intel-unvmens-2\",\n    \"size\": 390703446,\n    \"mn\": \"SAMSUNG MZWLL1T6HAJQ-00005\",\n    \"sn\": \"S4C9NF0M500044\"\n  }, {\n    \"name\": \"intel-unvmens-3\",\n    \"size\": 390703446,\n    \"mn\": \"SAMSUNG MZWLL1T6HAJQ-00005\",\n    \"sn\": \"S4C9NF0M500031\"\n  }, {\n    \"name\": \"intel-unvmens-4\",\n    \"size\": 390703446,\n    \"mn\": \"SAMSUNG MZWLL1T6HAJQ-00005\",\n    \"sn\": \"S4C9NF0M500041\"\n  }, {\n    \"name\": \"intel-unvmens-5\",\n    \"size\": 390703446,\n    \"mn\": \"SAMSUNG MZWLL1T6HAJQ-00005\",\n    \"sn\": \"S4C9NF0M500042\"\n  }];\n\n  const array = {\n    \"RAIDLevel\": \"5\",\n    \"_id\": \"ibofArray\",\n    \"metadiskpath\": [\n      {\n        \"deviceName\": \"uram0\"\n      }\n    ],\n    \"sparedisks\": [\n      {\n        \"deviceName\": \"intel-unvmens-3\"\n      }\n    ],\n    \"storagedisks\": [\n      {\n        \"deviceName\": \"intel-unvmens-0\"\n      },\n      {\n        \"deviceName\": \"intel-unvmens-1\"\n      },\n      {\n        \"deviceName\": \"intel-unvmens-2\"\n      },\n      {\n        \"deviceName\": \"intel-unvmens-4\"\n      }\n    ],\n    \"totalsize\": 6357625339904,\n    \"usedspace\": 0\n  }\n\n  it(\"should render array created view\", async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1.0\\/get_volumes\\/*/).reply(200, [])\n      .onGet(/api\\/v1.0\\/max_volume_count\\/*/).reply(200, 256)\n      .onGet(/api\\/v1.0\\/available_storage\\/*/).reply(200, [{\n        arraySize: 10\n      }])\n      .onPost(/api\\/v1.0\\/delete_array\\/*/).reply(200, {})\n      .onAny().reply(200, []);\n    renderComponent();\n    const { getByTestId, asFragment } = wrapper;\n    const resolvedThing = await waitForElement(() => getByTestId(\"arrayshow\"))\n    expect(resolvedThing).toBeDefined();\n\n  });\n\n  it(\"should render devices\", async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices: [{ name: 'intel-unvmens-0', size: 100 }, { name: 'intel-unvmens-1', size: 100 }],\n      metadevices: ['uram0', 'uram1']\n    })\n      .onAny().reply(200, []);\n    renderComponent();\n    const { getByTestId } = wrapper;\n    await waitForElement(() => getByTestId(\"arraycreate\"))\n  });\n\n  it('should render button on resize', () => {\n    // Change the viewport to 500px.\n    global.innerWidth = 500;\n\n    // Trigger the window resize event.\n    global.dispatchEvent(new Event('resize'));\n\n    renderComponent();\n    const { getByTestId } = wrapper;\n    expect(getByTestId(\"sidebar-toggle\")).toBeDefined();\n    fireEvent.click(getByTestId(\"sidebar-toggle\"));\n    expect(getByTestId(\"help-link\")).toHaveTextContent(\"Help\");\n  });\n\n  it('should create an array', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      metadevices: ['uram0', 'uram1']\n    })\n      .onPost('/api/v1.0/create_arrays/').reply(200, {})\n      .onAny().reply(200, []);\n    renderComponent();\n    const { getByTestId, getByText, getAllByText, asFragment } = wrapper;\n    fireEvent.click(getByTestId('raid-select'));\n    fireEvent.click(getByTestId('raid-select').querySelector('p'));\n    const wb = await waitForElement(() => getByTestId('writebuffer-input'));\n    fireEvent.change(wb, {\n      target: {value: \"uram0\"}\n    });\n    fireEvent.click(getByTestId('disktype'));\n    fireEvent.click(getAllByText('Storage Disk')[0]);\n    const dev1 = await waitForElement(() => getByTestId('diskselect-0'));\n    fireEvent.click(dev1);\n    const dev2 = await waitForElement(() => getByTestId('diskselect-1'));\n    fireEvent.click(dev2);\n    const dev3 = await waitForElement(() => getByTestId('diskselect-2'));\n    fireEvent.click(dev3);\n    fireEvent.change(getByTestId('disktype-input'), {\n      target: {value: \"Spare Disk\"}\n    });\n    const dev4 = await waitForElement(() => getByTestId('diskselect-3'));\n    fireEvent.click(dev4);\n    fireEvent.click(getByTestId('createarray-btn'));\n    const success = await waitForElement(() => getByTestId('alertDescription'));\n    expect(success).toBeDefined();\n    fireEvent.click(getByText('OK'));\n  })\n\n  it('should not create array if devices are not selected', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      metadevices: ['uram0', 'uram1']\n    })\n      .onPost('/api/v1.0/create_arrays/').reply(200, {})\n      .onAny().reply(200, []);\n    renderComponent();\n    const getSpy = jest.spyOn(axios, 'post');\n    const { getByTestId, getByText, getAllByText, queryByText } = wrapper;\n    const raidSelect = await waitForElement(() => getByTestId('raid-select-input'));\n    fireEvent.change(raidSelect, { target: { value: \"5\" } });\n    fireEvent.change(getByTestId('writebuffer-input'), {\n      target: {value: \"uram0\"}\n    });\n    fireEvent.click(getByTestId('disktype'));\n    fireEvent.click(getAllByText('Storage Disk')[0]);\n    fireEvent.click(getByTestId('createarray-btn'));\n    expect(queryByText(/Select at least/i)).toBeDefined();\n  })\n\n  it('should not create array if spare devices are not selected', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      metadevices: ['uram0', 'uram1']\n    })\n      .onPost('/api/v1.0/create_arrays/').reply(200, {})\n      .onAny().reply(200, []);\n    renderComponent();\n    const getSpy = jest.spyOn(axios, 'post');\n    const { getByTestId, getByText, getAllByText, queryByText } = wrapper;\n    const raidSelect = await waitForElement(() => getByTestId('raid-select-input'));\n    fireEvent.change(raidSelect, { target: { value: \"5\" } });\n    fireEvent.change(getByTestId('writebuffer-input'), {\n      target: {value: \"uram0\"}\n    });\n    fireEvent.click(getByTestId('disktype'));\n    fireEvent.click(getAllByText('Storage Disk')[0]);\n    const dev1 = await waitForElement(() => getByTestId('diskselect-0'));\n    fireEvent.click(dev1);\n    const dev2 = await waitForElement(() => getByTestId('diskselect-1'));\n    fireEvent.click(dev2);\n    const dev3 = await waitForElement(() => getByTestId('diskselect-2'));\n    fireEvent.click(dev3);\n    const dev2_ = await waitForElement(() => getByTestId('diskselect-1'));\n    fireEvent.click(dev2_);\n    const dev4 = await waitForElement(() => getByTestId('diskselect-3'));\n    fireEvent.click(dev4);\n    fireEvent.click(getByTestId('createarray-btn'));\n    expect(queryByText(/Select at least/i)).toBeDefined();\n  })\n\n  it('should not create array if meta disk is not selected', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      metadevices: ['uram0', 'uram1']\n    })\n      .onPost('/api/v1.0/create_arrays/').reply(200, {})\n      .onAny().reply(200, []);\n    renderComponent();\n    const getSpy = jest.spyOn(axios, 'post');\n    const { getByTestId, getByText, getAllByText, queryByText } = wrapper;\n    const raidSelect = await waitForElement(() => getByTestId('raid-select-input'));\n    fireEvent.change(raidSelect, { target: { value: \"5\" } });\n    fireEvent.click(getByTestId('disktype'));\n    fireEvent.click(getAllByText('Storage Disk')[0]);\n    const dev1 = await waitForElement(() => getByTestId('diskselect-0'));\n    fireEvent.click(dev1);\n    const dev2 = await waitForElement(() => getByTestId('diskselect-1'));\n    fireEvent.click(dev2);\n    const dev3 = await waitForElement(() => getByTestId('diskselect-2'));\n    fireEvent.click(dev3);\n    const dev2_ = await waitForElement(() => getByTestId('diskselect-1'));\n    fireEvent.click(dev2_);\n    const dev4 = await waitForElement(() => getByTestId('diskselect-3'));\n    fireEvent.click(dev4);\n    fireEvent.change(getByTestId('disktype-input'), {\n      target: {value: \"Spare Disk\"}\n    });\n    fireEvent.click(dev2);\n    fireEvent.click(getByTestId('createarray-btn'));\n    expect(queryByText(/Select a Write Buffer/i)).toBeDefined();\n  })\n\n  it('should create an array with selected devices', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      metadevices: ['uram0', 'uram1']\n    })\n      .onPost('/api/v1.0/create_arrays/').reply(200, {})\n      .onAny().reply(200, []);\n    renderComponent();\n         jest.setTimeout(30000)\n    const getSpy = jest.spyOn(axios, 'post');\n    const { getByTestId, getByText, getAllByText, getByDisplayValue, asFragment } = wrapper;\n    const raidSelect = await waitForElement(() => getByTestId('raid-select-input'));\n    fireEvent.change(raidSelect, { target: { value: \"5\" } });\n    fireEvent.change(getByTestId('writebuffer'), {\n            target: {value: \"uram0\"}\n    });\n    fireEvent.click(getByTestId('disktype'));\n    fireEvent.click(getAllByText('Storage Disk')[0]);\n    const dev1 = await waitForElement(() => getByTestId('diskselect-0'));\n    fireEvent.click(dev1);\n    const dev2 = await waitForElement(() => getByTestId('diskselect-1'));\n    fireEvent.click(dev2);\n    const dev3 = await waitForElement(() => getByTestId('diskselect-2'));\n    fireEvent.click(dev3);\n    fireEvent.click(dev2);\n    const dev4 = await waitForElement(() => getByTestId('diskselect-3'));\n    fireEvent.click(dev4);\n    //fireEvent.click(getByTestId('disktype'));\n    fireEvent.change(getByTestId('disktype'), {\n            target: {value: \"Spare Disk\"}\n    });\nconsole.log(\"Clicking Spare Disk\")\n    fireEvent.click(await waitForElement(() => getByTestId('diskselect-1')));\n    fireEvent.click(getByTestId('createarray-btn'));\n    expect(getSpy).toHaveBeenCalledWith('/api/v1.0/create_arrays/', {\n      size: 1172110338,\n      arrayname: \"\",\n      RAIDLevel: \"5\",\n      storageDisks: [\n        { deviceName: 'intel-unvmens-0' },\n        { deviceName: 'intel-unvmens-2' },\n        { deviceName: 'intel-unvmens-3' }\n      ],\n      spareDisks: [{\n        deviceName: 'intel-unvmens-1'\n      }],\n      writeBufferDisk: [],\n      metaDisk: 'uram0'\n    }, {\n      \"headers\": {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": null\n      }\n    }\n    )\n    const success = await waitForElement(() => getByTestId(\"alertDescription\"));\n    expect(success).toBeDefined();\n    fireEvent.click(getByText('OK'));\n  })\n\n  it('should delete the array', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1.0\\/get_volumes\\/*/).reply(200, [])\n      .onGet(/api\\/v1.0\\/available_storage\\/*/).reply(200, [{\n        arraySize: 10\n      }])\n      .onPost(/api\\/v1.0\\/delete_array\\/*/).reply(200, {})\n      .onAny().reply(200, []);\n    renderComponent();\n    const { getByText } = wrapper;\n    const deleteButton = await waitForElement(() => getByText('Delete Array'));\n    fireEvent.click(deleteButton);\n    expect(getByText('Yes')).toBeDefined();\n    fireEvent.click(getByText('Yes'));\n  });\n\n  it('should create a volume', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1.0\\/get_volumes\\/*/).reply(200, [])\n      .onGet(/api\\/v1.0\\/available_storage\\/*/).reply(200, [{\n        arraySize: 10\n      }])\n      .onPost(/api\\/v1.0\\/delete_array\\/*/).reply(200, {})\n      .onAny().reply(200, []);\n    renderComponent();\n    const { getByTestId, getByLabelText, getByText } = wrapper;\n    const volName = await waitForElement(() => getByTestId('create-vol-name'));\n    fireEvent.change(volName, { target: { value: 'vol1' } });\n    const volCount = await waitForElement(() => getByTestId('create-vol-count'));\n    fireEvent.change(volCount, { target: { value: 2 } });\n    const volSuffix = await waitForElement(() => getByLabelText('Suffix Start Value'));\n    fireEvent.change(volSuffix, { target: { value: 0 } });\n    const volSize = await waitForElement(() => getByTestId('create-vol-size'));\n    fireEvent.change(volSize, { target: { value: '10' } });\n    const volUnit = await waitForElement(() => getByTestId('volume-unit'));\n    fireEvent.click(volUnit);\n    //fireEvent.click(await waitForElement(() => getByText('TB')));\n    const volBW = await waitForElement(() => getByLabelText('Maximum Bandwidth (MB/s)'));\n    fireEvent.change(volBW, { target: { value: '10' } });\n    const volIOPS = await waitForElement(() => getByLabelText('Maximum IOPS (KIOPS)'));\n    fireEvent.change(volIOPS, { target: { value: '10' } });\n    const createVolButton = await waitForElement(() => getByTestId('createvolume-btn'));\n    fireEvent.click(createVolButton);\n    fireEvent.click(await waitForElement(() => getByText('OK')))\n  });\n\n  it('should throw error if creating volume is not possible because of missing volume name', async () => {\n    \n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1\\.0\\/available_storage\\/\\?ts=*/).reply(200, [{\n        arraySize: 20\n      }])\n      .onPost('/api/v1.0/save-volume/').reply(200, {})\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes$/).reply(200, {\n              Members: [{\n                      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/0\",\n                      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/1\"\n              }]\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/0$/).reply(200, {\n              Name: \"vol1\",\n              Id: \"0\",\n              Capacity: {\n                      Data: {\n                              AllocatedBytes: 100,\n                              ConsumedBytes: 10\n                      }\n              },\n              Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n              },\n              Status: {\n                      Oem: {\n                              VolumeStatus: \"Mounted\"\n                      }\n              }\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/1$/).reply(200, {\n              Name: \"vol2\",\n              Id: \"1\",\n              Capacity: {\n                      Data: {\n                              AllocatedBytes: 100,\n                              ConsumedBytes: 10\n                      }\n              },\n              Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n              },\n              Status: {\n                      Oem: {\n                              VolumeStatus: \"Mounted\"\n                      }\n              }\n      })\n      .onAny().reply(200, []);\n\n\t  renderComponent();\n    const { getByTestId, getByLabelText, getByText, asFragment } = wrapper;\n    const volCount = await waitForElement(() => getByTestId('create-vol-count'));\n    fireEvent.change(volCount, { target: { value: 1 } });\n    const volName = await waitForElement(() => getByTestId('create-vol-name'));\n    fireEvent.change(volName, { target: { value: '' } });\n    const createVolButton = await waitForElement(() => getByTestId('createvolume-btn'));\n    fireEvent.click(createVolButton);\n    expect(await waitForElement(() => getByText('Please Enter Volume Name'))).toBeDefined();\n    fireEvent.click(await waitForElement(() => getByText('OK')));\n  })\n\n  it('should throw error if creating volume is not possible because of missing volume count', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1\\.0\\/available_storage\\/\\?ts=*/).reply(200, [{\n        arraySize: 20\n      }])\n      .onPost('/api/v1.0/save-volume/').reply(200, {})\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes$/).reply(200, {\n              Members: [{\n                      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/0\",\n                      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/1\"\n              }]\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/0$/).reply(200, {\n              Name: \"vol1\",\n              Id: \"0\",\n              Capacity: {\n                      Data: {\n                              AllocatedBytes: 100,\n                              ConsumedBytes: 10\n                      }\n              },\n              Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n              },\n              Status: {\n                      Oem: {\n                              VolumeStatus: \"Mounted\"\n                      }\n              }\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/1$/).reply(200, {\n              Name: \"vol2\",\n              Id: \"1\",\n              Capacity: {\n                      Data: {\n                              AllocatedBytes: 100,\n                              ConsumedBytes: 10\n                      }\n              },\n              Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n              },\n              Status: {\n                      Oem: {\n                              VolumeStatus: \"Mounted\"\n                      }\n              }\n      })\n      .onAny().reply(200, []);\n\n     jest.setTimeout(30000);\n    renderComponent();\n    const { getByTestId, getByLabelText, getByText, asFragment } = wrapper;\n\t  await waitForElement(() => getByTestId('vol-edit-btn-vol2'))\n    const volCount = await waitForElement(() => getByTestId('create-vol-count'));\n    fireEvent.change(volCount, { target: { value: '' } });\n    const createVolButton = await waitForElement(() => getByTestId('createvolume-btn'));\n    fireEvent.click(createVolButton);\n    expect(await waitForElement(() => getByText('Please Enter Volume Count'))).toBeDefined();\n    fireEvent.click(await waitForElement(() => getByText('OK')));\n  })\n\n  it('should select and delete a volume', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1\\.0\\/available_storage\\/\\?ts=*/).reply(200, [{\n        arraySize: 20\n      }])\n      .onPost('/api/v1.0/save-volume/').reply(200, {})\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes$/).reply(200, {\n              Members: [{\n                      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/0\",\n                      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/1\"\n              }]\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/0$/).reply(200, {\n              Name: \"vol1\",\n              Id: \"0\",\n              Capacity: {\n                      Data: {\n                              AllocatedBytes: 100,\n                              ConsumedBytes: 10\n                      }\n              },\n              Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n              },\n              Status: {\n                      Oem: {\n                              VolumeStatus: \"Mounted\"\n                      }\n              }\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/1$/).reply(200, {\n              Name: \"vol2\",\n              Id: \"1\",\n              Capacity: {\n                      Data: {\n                              AllocatedBytes: 100,\n                              ConsumedBytes: 10\n                      }\n              },\n              Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n              },\n              Status: {\n                      Oem: {\n                              VolumeStatus: \"Mounted\"\n                      }\n              }\n      })\n      .onAny().reply(200, []);\n\n\t  jest.setTimeout(30000)\n    renderComponent();\n    const { getByText, getByTitle, asFragment } = wrapper;\n    const checkBox2 = await waitForElement(() => getByTitle('vol2'));\n    fireEvent.click(checkBox2);\n    const deleteBtn = await waitForElement(() => getByTitle('Delete'));\n    fireEvent.click(deleteBtn);\n    const yesBtn = await waitForElement(() => getByText(\"Yes\"));\n    fireEvent.click(yesBtn);\n    const deleteTxt = await waitForElement(() => getByText(\"Deleting Volume(s)\"));\n    expect(deleteTxt).toBeDefined();\n  });\n\n  it('should edit a volume', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1\\.0\\/available_storage\\/\\?ts=*/).reply(200, [{\n        arraySize: 20\n      }])\n      .onPost('/api/v1.0/save-volume/').reply(200, {})\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes$/).reply(200, {\n              Members: [{\n                      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/0\",\n                      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/1\"\n              }]\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/0$/).reply(200, {\n              Name: \"vol1\",\n              Id: \"0\",\n              Capacity: {\n                      Data: {\n                              AllocatedBytes: 100,\n                              ConsumedBytes: 10\n                      }\n              },\n              Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n              },\n              Status: {\n                      Oem: {\n                              VolumeStatus: \"Mounted\"\n                      }\n              }\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/1$/).reply(200, {\n              Name: \"vol2\",\n              Id: \"1\",\n              Capacity: {\n                      Data: {\n                              AllocatedBytes: 100,\n                              ConsumedBytes: 10\n                      }\n              },\n              Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n              },\n              Status: {\n                      Oem: {\n                              VolumeStatus: \"Mounted\"\n                      }\n              }\n      })\n      .onAny().reply(200, []);\n    renderComponent();\n    const { getByText, getByTitle, getByTestId, asFragment } = wrapper;\n    const editBtn = await waitForElement(() => getByTestId('vol-edit-btn-vol2'));\n    fireEvent.click(editBtn);\n    const maxBw = await waitForElement(() => getByTestId('list-vol-maxbw-vol2'));\n    fireEvent.change(maxBw, { target: { value: '0' } });\n    const maxIops = await waitForElement(() => getByTestId('list-vol-maxiops-vol2'));\n    fireEvent.change(maxIops, { target: { value: '0' } });\n    const saveBtn = await waitForElement(() => getByTestId('vol-edit-save-btn-vol2'));\n    fireEvent.click(saveBtn);\n    const saveTxt = await waitForElement(() => getByText(\"Updating Volume\"));\n    expect(saveTxt).toBeDefined();\n  });\n\n  it('should cancel editing a volume', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1\\.0\\/available_storage\\/\\?ts=*/).reply(200, [{\n        arraySize: 20\n      }])\n      .onPost('/api/v1.0/save-volume/').reply(200, {})\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes$/).reply(200, {\n              Members: [{\n\t\t      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/0\",\n\t\t      \"@odata.id\": \"/redfish/v1/StorageServices/1/Volumes/1\"\n\t      }]\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/0$/).reply(200, {\n\t      Name: \"vol1\",\n              Id: \"0\",\n              Capacity: {\n\t\t      Data: {\n\t\t\t      AllocatedBytes: 100,\n                              ConsumedBytes: 10\n\t\t      }\n\t      },\n\t      Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n              },\n              Status: {\n                      Oem: {\n                              VolumeStatus: \"Mounted\"\n                      }\n              }\n      })\n      .onGet(/redfish\\/v1\\/StorageServices\\/1\\/Volumes\\/1$/).reply(200, {\n              Name: \"vol2\",\n              Id: \"1\",\n              Capacity: {\n                      Data: {\n                              AllocatedBytes: 100,\n                              ConsumedBytes: 10\n                      }\n              },\n              Oem: {\n                      MaxIOPS: 10,\n                      MaxBW: 10,\n\t      },\n\t      Status: {\n\t\t      Oem: {\n\t\t\t      VolumeStatus: \"Mounted\"\n\t\t      }\n              }\n      })\n      .onAny().reply(200, []);\n    jest.setTimeout(30000)\n    renderComponent();\n    const { queryByTestId, getByTitle, getByTestId, asFragment } = wrapper;\n\t  await waitForElement(() => getByTestId('arrayshow'))\n\t  const editBtn = await waitForElement(() => getByTestId('vol-edit-btn-vol2'));\n    fireEvent.click(editBtn);\n    const maxBw = await waitForElement(() => getByTestId('list-vol-maxbw-vol2'));\n    fireEvent.change(maxBw, { target: { value: '0' } });\n    const maxIops = await waitForElement(() => getByTestId('list-vol-maxiops-vol2'));\n    fireEvent.change(maxIops, { target: { value: '0' } });\n    const cancelBtn = await waitForElement(() => getByTestId('vol-edit-cancel-btn-vol2'));\n    fireEvent.click(cancelBtn);\n    await waitForElement(() => getByTestId('vol-edit-btn-vol2'));\n    expect(queryByTestId(/list-vol-maxiops-vol2/i)).toBeNull();\n  });\n\n  it('should show device details when array is created', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1\\.0\\/available_storage\\/\\?ts=*/).reply(200, [{\n        arraySize: 20\n      }])\n      .onAny().reply(200, []);\n    renderComponent();\n    const { getByTestId, asFragment, getByText } = wrapper;\n    global.document.createRange = (html) => ({\n      setStart: () => { },\n      setEnd: () => { },\n      commonAncestorContainer: {\n        nodeName: 'BODY',\n        ownerDocument: document,\n      },\n      createContextualFragment: (html) => {\n        const div = document.createElement('div');\n        div.innerHTML = html;\n        return div.children[0];\n\n      }\n    });\n    await waitForElement(() => getByTestId(\"arrayshow\"));\n    await act(async () => {\n      fireEvent(\n        getByTestId('diskshow-0'),\n        new MouseEvent('mouseover', {\n          bubbles: true,\n          cancelable: true,\n        })\n      );\n      const moreDetails = await waitForElement(() => getByText('More Details'));\n      fireEvent.click(moreDetails);\n      fireEvent.click(getByTestId('diskdetails-close'));\n    });\n  });\n\n  it('should show device details when array is not created', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      metadevices: ['uram0', 'uram1']\n    })\n      .onAny().reply(200, []);\n    renderComponent();\n    const { getByTestId, queryByTestId, getByText } = wrapper;\n    global.document.createRange = (html) => ({\n      setStart: () => { },\n      setEnd: () => { },\n      commonAncestorContainer: {\n        nodeName: 'BODY',\n        ownerDocument: document,\n      },\n      createContextualFragment: (html) => {\n        const div = document.createElement('div');\n        div.innerHTML = html;\n        return div.children[0];\n      }\n    });\n    await waitForElement(() => getByTestId(\"arraycreate\"));\n    await act(async () => {\n      fireEvent(\n        getByTestId('diskselect-0'),\n        new MouseEvent('mouseover', {\n          bubbles: true,\n          cancelable: true,\n        })\n      );\n      const moreDetails = await waitForElement(() => getByText('More Details'));\n      fireEvent.click(moreDetails);\n      fireEvent.click(getByTestId('diskdetails-close'));\n    });\n  });\n\n  it('should cancel deleting array', async () => {\n    mock.onGet(/api\\/v1.0\\/get_devices\\/*/).reply(200, {\n      devices,\n      \"metadevices\": [\"uram0\"]\n    })\n      .onGet(/api\\/v1.0\\/get_arrays\\/*/).reply(200, [array])\n      .onGet(/api\\/v1\\.0\\/available_storage\\/\\?ts=*/).reply(200, [{\n        arraySize: 20\n      }])\n      .onAny().reply(200, []);\n    renderComponent();\n    const { getByTestId, asFragment, getByText } = wrapper;\n    fireEvent.click(await waitForElement(() => getByText('Delete Array')));\n    fireEvent.click(await waitForElement(() => getByText('No')));\n  });\n});\n"]}