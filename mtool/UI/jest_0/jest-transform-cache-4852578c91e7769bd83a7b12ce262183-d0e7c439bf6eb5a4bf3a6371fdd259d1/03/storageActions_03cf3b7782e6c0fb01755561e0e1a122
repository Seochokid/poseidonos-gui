48847412a60bb94810966e845777c551
/* istanbul ignore next */
"use strict";

var cov_9e7ptd8r3 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/storageActions.js";
  var hash = "800a4017ab5adb8d6b9dab7fd822d7d9736782dd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/storageActions.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 34
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "1": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 34,
          column: 6
        }
      },
      "2": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "3": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "4": {
        start: {
          line: 43,
          column: 32
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "5": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "6": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "7": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 55,
          column: 6
        }
      },
      "8": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 63,
          column: 1
        }
      },
      "9": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "10": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "11": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "12": {
        start: {
          line: 71,
          column: 32
        },
        end: {
          line: 76,
          column: 1
        }
      },
      "13": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "14": {
        start: {
          line: 78,
          column: 30
        },
        end: {
          line: 83,
          column: 1
        }
      },
      "15": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "16": {
        start: {
          line: 85,
          column: 35
        },
        end: {
          line: 90,
          column: 1
        }
      },
      "17": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "18": {
        start: {
          line: 92,
          column: 39
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "19": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "20": {
        start: {
          line: 99,
          column: 35
        },
        end: {
          line: 104,
          column: 1
        }
      },
      "21": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "22": {
        start: {
          line: 106,
          column: 34
        },
        end: {
          line: 111,
          column: 1
        }
      },
      "23": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "24": {
        start: {
          line: 113,
          column: 33
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "25": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "26": {
        start: {
          line: 119,
          column: 34
        },
        end: {
          line: 124,
          column: 1
        }
      },
      "27": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 30,
            column: 35
          }
        },
        loc: {
          start: {
            line: 30,
            column: 47
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 30
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 37,
            column: 29
          }
        },
        loc: {
          start: {
            line: 37,
            column: 34
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 32
          },
          end: {
            line: 43,
            column: 33
          }
        },
        loc: {
          start: {
            line: 43,
            column: 44
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 43
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 29
          }
        },
        loc: {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 50
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 26
          },
          end: {
            line: 58,
            column: 27
          }
        },
        loc: {
          start: {
            line: 58,
            column: 39
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 27
          }
        },
        loc: {
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 33
          }
        },
        loc: {
          start: {
            line: 71,
            column: 45
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 71
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 78,
            column: 31
          }
        },
        loc: {
          start: {
            line: 78,
            column: 43
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 78
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 85,
            column: 35
          },
          end: {
            line: 85,
            column: 36
          }
        },
        loc: {
          start: {
            line: 85,
            column: 48
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 85
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 92,
            column: 39
          },
          end: {
            line: 92,
            column: 40
          }
        },
        loc: {
          start: {
            line: 92,
            column: 52
          },
          end: {
            line: 97,
            column: 1
          }
        },
        line: 92
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 99,
            column: 35
          },
          end: {
            line: 99,
            column: 36
          }
        },
        loc: {
          start: {
            line: 99,
            column: 48
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 99
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 106,
            column: 34
          },
          end: {
            line: 106,
            column: 35
          }
        },
        loc: {
          start: {
            line: 106,
            column: 47
          },
          end: {
            line: 111,
            column: 1
          }
        },
        line: 106
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 113,
            column: 33
          },
          end: {
            line: 113,
            column: 34
          }
        },
        loc: {
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 117,
            column: 1
          }
        },
        line: 113
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 119,
            column: 34
          },
          end: {
            line: 119,
            column: 35
          }
        },
        loc: {
          start: {
            line: 119,
            column: 47
          },
          end: {
            line: 124,
            column: 1
          }
        },
        line: 119
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "800a4017ab5adb8d6b9dab7fd822d7d9736782dd"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchDeviceDetails = exports.stopStorageLoader = exports.startStorageLoader = exports.fetchStorageVolumes = exports.toggleCreateVolumeButton = exports.fetchMaxVolumeCount = exports.fetchArraySize = exports.showStorageAlert = exports.setNoArray = exports.fetchArray = exports.fetchDevices = exports.addVolumeDetails = exports.clearVolumes = exports.fetchVolumeDetails = void 0;

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("./actionTypes"));

/* istanbul ignore next */
cov_9e7ptd8r3.s[0]++;

const fetchVolumeDetails = volumes => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[0]++;
  cov_9e7ptd8r3.s[1]++;
  return {
    type: actionTypes.FETCH_VOLUME_INFO,
    volumes
  };
};

/* istanbul ignore next */
exports.fetchVolumeDetails = fetchVolumeDetails;
cov_9e7ptd8r3.s[2]++;

const clearVolumes = () => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[1]++;
  cov_9e7ptd8r3.s[3]++;
  return {
    type: actionTypes.CLEAR_VOLUMES
  };
};

/* istanbul ignore next */
exports.clearVolumes = clearVolumes;
cov_9e7ptd8r3.s[4]++;

const addVolumeDetails = volume => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[2]++;
  cov_9e7ptd8r3.s[5]++;
  return {
    type: actionTypes.ADD_VOLUME,
    volume
  };
};

/* istanbul ignore next */
exports.addVolumeDetails = addVolumeDetails;
cov_9e7ptd8r3.s[6]++;

const fetchDevices = disks => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[3]++;
  cov_9e7ptd8r3.s[7]++;
  return {
    type: actionTypes.FETCH_DEVICE_INFO,
    ssds: disks.devices,
    metadisks: disks.metadevices
  };
};

/* istanbul ignore next */
exports.fetchDevices = fetchDevices;
cov_9e7ptd8r3.s[8]++;

const fetchArray = payload => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[4]++;
  cov_9e7ptd8r3.s[9]++;
  return {
    type: actionTypes.FETCH_ARRAY,
    payload
  };
};

/* istanbul ignore next */
exports.fetchArray = fetchArray;
cov_9e7ptd8r3.s[10]++;

const setNoArray = () => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[5]++;
  cov_9e7ptd8r3.s[11]++;
  return {
    type: actionTypes.SET_NO_ARRAY
  };
};

/* istanbul ignore next */
exports.setNoArray = setNoArray;
cov_9e7ptd8r3.s[12]++;

const showStorageAlert = payload => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[6]++;
  cov_9e7ptd8r3.s[13]++;
  return {
    type: actionTypes.STORAGE_SHOW_ALERT,
    payload
  };
};

/* istanbul ignore next */
exports.showStorageAlert = showStorageAlert;
cov_9e7ptd8r3.s[14]++;

const fetchArraySize = payload => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[7]++;
  cov_9e7ptd8r3.s[15]++;
  return {
    type: actionTypes.FETCH_ARRAY_SIZE,
    payload
  };
};

/* istanbul ignore next */
exports.fetchArraySize = fetchArraySize;
cov_9e7ptd8r3.s[16]++;

const fetchMaxVolumeCount = payload => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[8]++;
  cov_9e7ptd8r3.s[17]++;
  return {
    type: actionTypes.FETCH_MAX_VOLUME_COUNT,
    payload
  };
};

/* istanbul ignore next */
exports.fetchMaxVolumeCount = fetchMaxVolumeCount;
cov_9e7ptd8r3.s[18]++;

const toggleCreateVolumeButton = payload => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[9]++;
  cov_9e7ptd8r3.s[19]++;
  return {
    type: actionTypes.TOGGLE_CREATE_VOLUME_BUTTON,
    payload
  };
};

/* istanbul ignore next */
exports.toggleCreateVolumeButton = toggleCreateVolumeButton;
cov_9e7ptd8r3.s[20]++;

const fetchStorageVolumes = payload => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[10]++;
  cov_9e7ptd8r3.s[21]++;
  return {
    type: actionTypes.FETCH_VOLUMES,
    payload
  };
};

/* istanbul ignore next */
exports.fetchStorageVolumes = fetchStorageVolumes;
cov_9e7ptd8r3.s[22]++;

const startStorageLoader = payload => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[11]++;
  cov_9e7ptd8r3.s[23]++;
  return {
    type: actionTypes.STORAGE_START_LOADER,
    payload
  };
};

/* istanbul ignore next */
exports.startStorageLoader = startStorageLoader;
cov_9e7ptd8r3.s[24]++;

const stopStorageLoader = () => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[12]++;
  cov_9e7ptd8r3.s[25]++;
  return {
    type: actionTypes.STORAGE_STOP_LOADER
  };
};

/* istanbul ignore next */
exports.stopStorageLoader = stopStorageLoader;
cov_9e7ptd8r3.s[26]++;

const fetchDeviceDetails = payload => {
  /* istanbul ignore next */
  cov_9e7ptd8r3.f[13]++;
  cov_9e7ptd8r3.s[27]++;
  return {
    type: actionTypes.FETCH_DEVICE_DETAILS,
    payload
  };
};

/* istanbul ignore next */
exports.fetchDeviceDetails = fetchDeviceDetails;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,