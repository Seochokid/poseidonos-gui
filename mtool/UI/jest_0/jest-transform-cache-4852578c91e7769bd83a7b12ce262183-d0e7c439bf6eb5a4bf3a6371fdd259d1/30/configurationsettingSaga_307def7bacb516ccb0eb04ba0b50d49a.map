{"version":3,"sources":["configurationsettingSaga.js"],"names":["fetchEmailList","response","call","axios","get","headers","Accept","localStorage","getItem","result","data","emailList","forEach","email","push","selected","edit","put","actionCreators","error","updateEmail","action","post","payload","status","toggleActiveStatus","deleteEmailIds","alertOpen","istypealert","alerttype","alerttitle","alertdescription","setAlertBox","sendEmail","document","getElementsByTagName","style","cursor","testEmail","changeSmtpServer","downloadLogs","params","responseType","url","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","getIbofOSTimeInterval","setIbofOSTimeInterval","configurationsettingWatcher","takeEvery","actionTypes","SAGA_FETCH_EMAIL_LIST","SAGA_UPDATE_EMAIL","SAGA_TOGGLE_ACTIVE_STATUS","SAGA_SEND_EMAIL","SAGA_TEST_EMAIL","SAGA_DELETE_EMAIL_IDS","SAGA_DOWNLOAD_LOGS","SAGA_GET_IBOFOS_TIME_INTERVAL","SAGA_SET_IBOFOS_TIME_INTERVAL"],"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: <Contains Generator Functions for Configuration container> *\n@NAME : configurationsettingSaga.js\n@AUTHORS: Palak Kapoor \n@Version : 1.0 *\n@REVISION HISTORY\n[08/22/2019] [Palak] : Prototyping..........////////////////////\n*/\n\nimport axios from 'axios';\nimport { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actionTypes from '../store/actions/actionTypes';\nimport * as actionCreators from '../store/actions/exportActionCreators';\n\nexport function* fetchEmailList() {\n  try {\n    const response = yield call([axios, axios.get], '/api/v1.0/get_email_ids/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token'),\n      }\n    });\n\n    const result = response.data;\n    const emailList = [];\n    if (result) {\n      result.forEach(email => {\n        emailList.push({\n          ...email,\n          selected: false,\n          edit: false,\n        });\n      });\n    }\n    yield put(actionCreators.fetchEmailList(emailList));\n  } catch (error) {\n    ;\n  }\n}\n\nexport function* updateEmail(action) {\n  try {\n    const response = yield call(\n      [axios, axios.post],\n      '/api/v1.0/update_email/',\n      action.payload, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token'),\n      }\n    }\n    );\n    const { status } = response;\n    if (status === 200) {\n      yield fetchEmailList();\n    }\n  } catch (error) {\n    //  console.log(error);\n  }\n}\n\nexport function* toggleActiveStatus(action) {\n  try {\n    yield call(\n      [axios, axios.post],\n      '/api/v1.0/toggle_email_status/',\n      action.payload, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token'),\n      }\n    }\n    );\n    yield fetchEmailList();\n  } catch (error) {\n    yield fetchEmailList();\n  }\n}\n\nexport function* deleteEmailIds(action) {\n  try {\n    const response = yield call(\n      [axios, axios.post],\n      '/api/v1.0/delete_emailids/',\n      action.payload, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token'),\n      }\n    }\n    );\n    const { status } = response;\n    if (status === 200) {\n      const payload = {\n        alertOpen: true,\n        istypealert: true,\n        alerttype: 'info',\n        alerttitle: 'Delete Email',\n        alertdescription: 'Email ID deleted successfully',\n      };\n      yield put(actionCreators.setAlertBox(payload));\n      yield fetchEmailList();\n    }\n  } catch (error) {\n    const payload = {\n      alertOpen: true,\n      istypealert: true,\n      alerttype: 'alert',\n      alerttitle: 'Delete Email',\n      alertdescription: 'Error in deleting email id',\n    };\n    yield put(actionCreators.setAlertBox(payload));\n  }\n}\n\nexport function* sendEmail(action) {\n  try {\n    const response = yield call(\n      [axios, axios.post],\n      '/api/v1.0/send_email/',\n      action.payload, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token'),\n      }\n    }\n    );\n    const { status } = response;\n    document.getElementsByTagName('body')[0].style.cursor = 'default';\n\n    if (status === 200) {\n      const payload = {\n        alertOpen: true,\n        istypealert: true,\n        alerttype: 'info',\n        alerttitle: 'Send Email',\n        alertdescription: 'Email sent successfully',\n      };\n      yield put(actionCreators.setAlertBox(payload));\n    }\n  } catch (error) {\n    document.getElementsByTagName('body')[0].style.cursor = 'default';\n    const payload = {\n      alertOpen: true,\n      istypealert: true,\n      alerttype: 'alert',\n      alerttitle: 'Send Email',\n      alertdescription: 'Email sending failed',\n    };\n    yield put(actionCreators.setAlertBox(payload));\n  }\n}\n\nexport function* testEmail(action) {\n  try {\n    const response = yield call(\n      [axios, axios.post],\n      '/api/v1.0/test_smtpserver/',\n      action.payload, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token'),\n      }\n    }\n    );\n    const { status } = response;\n    document.getElementsByTagName('body')[0].style.cursor = 'default';\n    if (status === 200) {\n      yield put(actionCreators.changeSmtpServer());\n      const payload = {\n        alertOpen: true,\n        istypealert: true,\n        alerttype: 'info',\n        alerttitle: 'Test SMTP Server',\n        alertdescription: 'SMTP server is working',\n      };\n      yield put(actionCreators.setAlertBox(payload));\n    }\n  } catch (error) {\n    document.getElementsByTagName('body')[0].style.cursor = 'default';\n    const payload = {\n      alertOpen: true,\n      istypealert: true,\n      alerttype: 'alert',\n      alerttitle: 'Test SMTP Server',\n      alertdescription: 'SMTP server is not working',\n    };\n    yield put(actionCreators.setAlertBox(payload));\n  }\n}\n\nfunction* downloadLogs(action) {\n  try {\n    const response = yield call(\n      [axios, axios.get],\n      '/api/v1.0/download_logs', {\n      headers: {\n        'x-access-token': localStorage.getItem('token'),\n      },\n      params: action.payload,\n      responseType: 'blob'\n    }\n    );\n    const { status } = response;\n    if (status === 200) {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'log.zip');\n      // 3. Append to html page\n      document.body.appendChild(link);\n      // 4. Force download\n      link.click();\n      // 5. Clean up and remove the link\n      link.parentNode.removeChild(link);\n    }\n  } catch (error) {\n    ;\n  }\n}\n\nexport function* getIbofOSTimeInterval() {\n  try {\n    const response = yield call([axios, axios.get], '/api/v1.0/get_ibofos_time_interval', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token'),\n      }\n    });\n\n    const result = response.data;\n    if (result) {\n      yield put(actionCreators.setIbofOSTimeInterval(result));\n    }\n    else yield put(actionCreators.setIbofOSTimeInterval(4)); // Default Value should be 4 seconds\n  } catch (error) {\n    ;\n  }\n}\n\nexport function* setIbofOSTimeInterval(action) {\n  try {\n    yield call(\n      [axios, axios.post],\n      '/api/v1.0/set_ibofos_time_interval',\n      action.payload, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token'),\n      }\n    }\n    );\n    yield getIbofOSTimeInterval();\n  } catch (error) {\n    yield getIbofOSTimeInterval();\n  }\n}\n\nexport function* configurationsettingWatcher() {\n  yield takeEvery(actionTypes.SAGA_FETCH_EMAIL_LIST, fetchEmailList);\n  yield takeEvery(actionTypes.SAGA_UPDATE_EMAIL, updateEmail);\n  yield takeEvery(actionTypes.SAGA_TOGGLE_ACTIVE_STATUS, toggleActiveStatus);\n  yield takeEvery(actionTypes.SAGA_SEND_EMAIL, sendEmail);\n  yield takeEvery(actionTypes.SAGA_TEST_EMAIL, testEmail);\n  yield takeEvery(actionTypes.SAGA_DELETE_EMAIL_IDS, deleteEmailIds);\n  yield takeEvery(actionTypes.SAGA_DOWNLOAD_LOGS, downloadLogs);\n  yield takeEvery(actionTypes.SAGA_GET_IBOFOS_TIME_INTERVAL, getIbofOSTimeInterval);\n  yield takeEvery(actionTypes.SAGA_SET_IBOFOS_TIME_INTERVAL, setIbofOSTimeInterval)\n}\n"]}