e1c78992cfc43d4c461b66bffaf65596
/* istanbul ignore next */
"use strict";

var cov_1901057xkn = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/storageReducer.js";
  var hash = "42fc50bc80fbfab67f5698c30aff82fb49fc51b5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/storageReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 70,
          column: 1
        }
      },
      "1": {
        start: {
          line: 72,
          column: 18
        },
        end: {
          line: 74,
          column: 1
        }
      },
      "2": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 50
        }
      },
      "3": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 220,
          column: 1
        }
      },
      "4": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "5": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 83,
          column: 13
        }
      },
      "6": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "7": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "8": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "9": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "10": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 110,
          column: 13
        }
      },
      "11": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "12": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "13": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "14": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "15": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 156,
          column: 13
        }
      },
      "16": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 166,
          column: 13
        }
      },
      "17": {
        start: {
          line: 161,
          column: 20
        },
        end: {
          line: 164,
          column: 21
        }
      },
      "18": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 171,
          column: 13
        }
      },
      "19": {
        start: {
          line: 173,
          column: 28
        },
        end: {
          line: 181,
          column: 14
        }
      },
      "20": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 180,
          column: 22
        }
      },
      "21": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 185,
          column: 13
        }
      },
      "22": {
        start: {
          line: 188,
          column: 28
        },
        end: {
          line: 195,
          column: 14
        }
      },
      "23": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 194,
          column: 22
        }
      },
      "24": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "25": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 206,
          column: 13
        }
      },
      "26": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "27": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 216,
          column: 13
        }
      },
      "28": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 25
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 72,
            column: 19
          }
        },
        loc: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 72
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 76,
            column: 24
          }
        },
        loc: {
          start: {
            line: 76,
            column: 57
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 76
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 160,
            column: 43
          },
          end: {
            line: 160,
            column: 44
          }
        },
        loc: {
          start: {
            line: 160,
            column: 50
          },
          end: {
            line: 165,
            column: 17
          }
        },
        line: 160
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 173,
            column: 46
          },
          end: {
            line: 173,
            column: 47
          }
        },
        loc: {
          start: {
            line: 173,
            column: 55
          },
          end: {
            line: 181,
            column: 13
          }
        },
        line: 173
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 188,
            column: 46
          },
          end: {
            line: 188,
            column: 47
          }
        },
        loc: {
          start: {
            line: 188,
            column: 55
          },
          end: {
            line: 195,
            column: 13
          }
        },
        line: 188
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 76,
            column: 24
          },
          end: {
            line: 76,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 32
          },
          end: {
            line: 76,
            column: 44
          }
        }],
        line: 76
      },
      "1": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 78,
            column: 8
          },
          end: {
            line: 83,
            column: 13
          }
        }, {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 110,
            column: 13
          }
        }, {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: 122,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 156,
            column: 13
          }
        }, {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 166,
            column: 13
          }
        }, {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 171,
            column: 13
          }
        }, {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 200,
            column: 9
          }
        }, {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 206,
            column: 13
          }
        }, {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 211,
            column: 13
          }
        }, {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 216,
            column: 13
          }
        }, {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 218,
            column: 25
          }
        }],
        line: 77
      },
      "2": {
        loc: {
          start: {
            line: 174,
            column: 23
          },
          end: {
            line: 180,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 174,
            column: 54
          },
          end: {
            line: 177,
            column: 17
          }
        }, {
          start: {
            line: 177,
            column: 20
          },
          end: {
            line: 180,
            column: 21
          }
        }],
        line: 174
      },
      "3": {
        loc: {
          start: {
            line: 189,
            column: 23
          },
          end: {
            line: 194,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 54
          },
          end: {
            line: 192,
            column: 17
          }
        }, {
          start: {
            line: 192,
            column: 20
          },
          end: {
            line: 194,
            column: 21
          }
        }],
        line: 189
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "42fc50bc80fbfab67f5698c30aff82fb49fc51b5"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.initialState = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_1901057xkn.s[0]++, {
  ssds: [],
  volumes: [],
  metadisks: [],
  loading: false,
  alertOpen: false,
  alertType: 'alert',
  alertTitle: '',
  errorMsg: '',
  errorCode: '',
  arraySize: 0,
  maxVolumeCount: 256,
  createVolumeButton: false,
  totalVolSize: 0,
  storagedisks: [],
  sparedisks: [],
  writebufferdisks: [],
  metadiskpath: '',
  slots: [],
  arrayExists: false,
  RAIDLevel: '',
  loadText: 'Loading...',
  diskDetails: {
    DevicePath: 'NA',
    SerialNumber: 'NA',
    ModelNumber: 'NA',
    PhysicalSize: 'NA',
    UsedBytes: 'NA',
    Firmware: 'NA',
    critical_warning: 'NA',
    temperature: 'NA',
    avail_spare: 'NA',
    spare_thresh: 'NA',
    precent_used: 'NA',
    data_units_read: 'NA',
    data_units_written: 'NA',
    critical_comp_time: 'NA',
    warning_temp_time: 'NA',
    percent_used: 'NA'
  }
});

/* istanbul ignore next */
exports.initialState = initialState;
cov_1901057xkn.s[1]++;

const bytesToGB = size => {
  /* istanbul ignore next */
  cov_1901057xkn.f[0]++;
  cov_1901057xkn.s[2]++;
  return parseInt(size / (1024 * 1024 * 1024), 10);
};

/* istanbul ignore next */
cov_1901057xkn.s[3]++;

const storageReducer = (state =
/* istanbul ignore next */
(cov_1901057xkn.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_1901057xkn.f[1]++;
  cov_1901057xkn.s[4]++;

  switch (action.type) {
    case actionTypes.FETCH_DEVICE_INFO:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][0]++;
      cov_1901057xkn.s[5]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          ssds: action.ssds,
          metadisks: action.metadisks
        })
      );

    case actionTypes.STORAGE_SHOW_ALERT:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][1]++;
      cov_1901057xkn.s[6]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          alertOpen: true
        }, action.payload)
      );

    case actionTypes.FETCH_ARRAY_SIZE:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][2]++;
      cov_1901057xkn.s[7]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          arraySize: action.payload
        })
      );

    case actionTypes.FETCH_MAX_VOLUME_COUNT:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][3]++;
      cov_1901057xkn.s[8]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          maxVolumeCount: action.payload
        })
      );

    case actionTypes.TOGGLE_CREATE_VOLUME_BUTTON:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][4]++;
      cov_1901057xkn.s[9]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          createVolumeButton: action.payload
        })
      );

    case actionTypes.FETCH_ARRAY:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][5]++;
      cov_1901057xkn.s[10]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {}, action.payload, {
          arrayExists: true
        })
      );

    case actionTypes.SET_NO_ARRAY:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][6]++;
      cov_1901057xkn.s[11]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          arrayExists: false
        })
      );

    case actionTypes.FETCH_VOLUMES:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][7]++;
      {
        /* istanbul ignore next */
        cov_1901057xkn.s[12]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {}, action.payload)
        );
      }

    case actionTypes.CLEAR_VOLUMES:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][8]++;
      {
        /* istanbul ignore next */
        cov_1901057xkn.s[13]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            volumes: []
          })
        );
      }

    case actionTypes.ADD_VOLUME:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][9]++;
      {
        /* istanbul ignore next */
        cov_1901057xkn.s[14]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            volumes: [...state.volumes, {
              name: action.volume.Name,
              id: action.volume.Id,
              size: bytesToGB(action.volume.Capacity.Data.AllocatedBytes),
              usedspace: bytesToGB(action.volume.Capacity.Data.ConsumedBytes),
              maxiops: action.volume.Oem.MaxIOPS,
              maxbw: action.volume.Oem.MaxBandwidth,
              status: action.volume.Status.Oem.VolumeStatus
            }]
          })
        );
      }

    case actionTypes.SELECT_VOLUME:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][10]++;
      cov_1901057xkn.s[15]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          volumes: [...state.volumes.slice(0, action.payload.index),
          /* istanbul ignore next */
          _objectSpread({}, state.volumes[action.payload.index], {
            selected: action.payload.value
          }), ...state.volumes.slice(action.payload.index + 1)]
        })
      );

    case actionTypes.SELECT_ALL_VOLUMES:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][11]++;
      cov_1901057xkn.s[16]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          volumes: state.volumes.map(vol => {
            /* istanbul ignore next */
            cov_1901057xkn.f[2]++;
            cov_1901057xkn.s[17]++;
            return (
              /* istanbul ignore next */
              _objectSpread({}, vol, {
                selected: action.payload.value
              })
            );
          })
        })
      );

    case actionTypes.STORAGE_CLOSE_ALERT:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][12]++;
      cov_1901057xkn.s[18]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          alertOpen: false
        })
      );

    case actionTypes.EDIT_VOLUME:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][13]++;
      {
        const volumes =
        /* istanbul ignore next */
        (cov_1901057xkn.s[19]++, state.volumes.map(vol => {
          /* istanbul ignore next */
          cov_1901057xkn.f[3]++;
          cov_1901057xkn.s[20]++;
          return vol.id === action.payload.id ?
          /* istanbul ignore next */
          (cov_1901057xkn.b[2][0]++, _objectSpread({}, vol, {
            edit: true
          })) :
          /* istanbul ignore next */
          (cov_1901057xkn.b[2][1]++, _objectSpread({}, vol, {
            edit: false
          }));
        }));

        /* istanbul ignore next */
        cov_1901057xkn.s[21]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            volumes
          })
        );
      }

    case actionTypes.CHANGE_VOLUME_FIELD:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][14]++;
      {
        const volumes =
        /* istanbul ignore next */
        (cov_1901057xkn.s[22]++, state.volumes.map(vol => {
          /* istanbul ignore next */
          cov_1901057xkn.f[4]++;
          cov_1901057xkn.s[23]++;
          return vol.id === action.payload.id ?
          /* istanbul ignore next */
          (cov_1901057xkn.b[3][0]++, _objectSpread({}, vol, {
            [action.payload.name]: action.payload.value
          })) :
          /* istanbul ignore next */
          (cov_1901057xkn.b[3][1]++, _objectSpread({}, vol));
        }));

        /* istanbul ignore next */
        cov_1901057xkn.s[24]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            volumes
          })
        );
      }

    case actionTypes.STORAGE_START_LOADER:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][15]++;
      cov_1901057xkn.s[25]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          loading: true,
          loadText: action.payload
        })
      );

    case actionTypes.STORAGE_STOP_LOADER:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][16]++;
      cov_1901057xkn.s[26]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          loading: false
        })
      );

    case actionTypes.FETCH_DEVICE_DETAILS:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][17]++;
      cov_1901057xkn.s[27]++;
      return (
        /* istanbul ignore next */
        _objectSpread({}, state, {
          diskDetails: action.payload
        })
      );

    default:
      /* istanbul ignore next */
      cov_1901057xkn.b[1][18]++;
      cov_1901057xkn.s[28]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = storageReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,