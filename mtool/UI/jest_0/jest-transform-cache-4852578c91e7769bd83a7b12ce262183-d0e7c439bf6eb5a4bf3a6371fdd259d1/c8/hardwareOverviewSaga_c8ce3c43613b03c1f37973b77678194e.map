{"version":3,"sources":["hardwareOverviewSaga.js"],"names":["fetchChassisFrontInfo","action","response","call","axios","get","headers","Accept","localStorage","getItem","result","data","put","actionCreators","front_info","error","openAlertBox","alertOpen","istypealert","alerttype","alerttitle","alertdescription","fetchChassisRearInfo","chassisList","forEach","chassis","push","fetchServerInfo","model","manufacturer","mac","ip","firmwareversion","serialno","host","fetchPowerInfo","stopLoader","powerconsumption","powercap","powerstatus","rebootSystem","post","status","shutdownSystem","powerOnSystem","forceShutdownSystem","hardwareOverviewWatcher","takeEvery","actionTypes","SAGA_HARDWARE_OVERVIEW_FETCH_SERVER_INFORMATION","SAGA_HARDWARE_OVERVIEW_FETCH_POWER_INFORMATION","SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_FRONT_INFORMATION","SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_REAR_INFORMATION","SAGA_HARDWARE_OVERVIEW_REBOOT_SYSTEM","SAGA_HARDWARE_OVERVIEW_SHUTDOWN_SYSTEM","SAGA_HARDWARE_OVERVIEW_FORCE_SHUTDOWN_SYSTEM","SAGA_HARDWARE_OVERVIEW_POWER_ON_SYSTEM"],"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\nDESCRIPTION: <Contains Generator Functions for hardware container> *\n@NAME : hardwareOverviewSaga.js\n@AUTHORS: Jay Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/11/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport axios from 'axios';\nimport { call, takeEvery, put } from 'redux-saga/effects';\nimport * as actionTypes from '../store/actions/actionTypes';\nimport * as actionCreators from '../store/actions/exportActionCreators';\n\nexport function* fetchChassisFrontInfo(action) {\n    try {\n        const response = yield call([axios, axios.get], '/api/v1.0/get_chassis_front_info/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchChassisFrontInfo(result.front_info));\n        }\n    } catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Hardware',\n            alertdescription: 'Unable to retrieve data',\n        }));\n        yield put(actionCreators.fetchChassisFrontInfo([]));\n    }\n    finally {\n        ;\n    }\n}\n\n\nexport function* fetchChassisRearInfo() {\n    try {\n        const response = yield call([axios, axios.get], '/api/v1.0/get_chassis_rear_info/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n\n        const result = response.data;\n        if (result) {\n            const chassisList = [];\n            result.forEach(chassis => {\n                chassisList.push({\n                    ...chassis,\n                });\n            });\n            yield put(actionCreators.fetchChassisRearInfo(chassisList));\n        }\n    } catch (error) {\n        yield put(actionCreators.fetchChassisRearInfo([]));\n    }\n}\n\nexport function* fetchServerInfo() {\n    try {\n        const response = yield call([axios, axios.get], '/api/v1.0/get_server_info/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchServerInfo(result));\n        }\n    } catch (error) {\n        yield put(actionCreators.fetchServerInfo({model:'',manufacturer:'',mac:'',ip:'',firmwareversion:'',serialno:'',host:'',}));\n    }\n}\n\nexport function* fetchPowerInfo(action) {\n    try {\n        // if(action.param == null || action.param != \"doNotStartLoader\")\n        //     yield put(actionCreators.startLoader('Fetching BMC Information'));\n\n        const response = yield call([axios, axios.get], '/api/v1.0/get_power_info/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            }\n        });\n        yield put(actionCreators.stopLoader());\n        const result = response.data;\n        if (result) {\n            yield put(actionCreators.fetchPowerInfo(result));\n        }\n    } catch (error) {\n        yield put(actionCreators.stopLoader());\n        yield put(actionCreators.fetchPowerInfo({powerconsumption:'',powercap:'',powerstatus:'Off'}));\n    }\n}\n\n\nexport function* rebootSystem(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/reboot_system/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n\n        const { status } = response;\n        if (status === 200) {\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'info',\n                alerttitle: 'Reboot System',\n                alertdescription: 'System Reboot Successful',\n            }));\n        }\n        else if (response === 400)\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Reboot System',\n                alertdescription: 'System Reboot Failed',\n            }));\n        else\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Reboot System',\n                alertdescription: 'System Reboot Failed',\n            }));\n            yield put(actionCreators.fetchChassisFrontInfo([]));\n            yield put(actionCreators.fetchPowerInfo({powerconsumption:'',powercap:'',powerstatus:'Off'}));\n            yield put(actionCreators.fetchServerInfo({model:'',manufacturer:'',mac:'',ip:'',firmwareversion:'',serialno:'',host:'',}));\n    }\n    catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Reboot System',\n            alertdescription: 'System Reboot Failed',\n        }));\n    }\n}\n\nexport function* shutdownSystem(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/shutdown_system/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const { status } = response;\n        if (status === 200) {\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'info',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Successful',\n            }));\n        }\n        else if (response === 400)\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Failed',\n            }));\n        else\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Failed',\n            }));\n    }\n    catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Shutdown System',\n            alertdescription: 'System Shutdown Failed',\n        }));\n    }\n}\n\nexport function* powerOnSystem(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/power_on_system/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const { status } = response;\n        if (status === 200) {\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'info',\n                alerttitle: 'Power On System',\n                alertdescription: 'Power On Successful',\n            }));\n        }\n        else if (response === 400)\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Power On System',\n                alertdescription: 'Power On Failed',\n            }));\n        else\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Power On System',\n                alertdescription: 'Power On Failed',\n            }));\n    }\n    catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Power On System',\n            alertdescription: 'Power On Failed',\n        }));;\n    }\n}\n\nexport function* forceShutdownSystem(action) {\n    try {\n        const response = yield call([axios, axios.post], '/api/v1.0/force_shutdown_system/', {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'x-access-token': localStorage.getItem('token'),\n            },\n        });\n        const { status } = response;\n        if (status === 200) {\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'info',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Successful',\n            }));\n        }\n        else if (response === 400)\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Failed',\n            }));\n        else\n            yield put(actionCreators.openAlertBox({\n                alertOpen: true,\n                istypealert: true,\n                alerttype: 'alert',\n                alerttitle: 'Shutdown System',\n                alertdescription: 'System Shutdown Failed',\n            }));\n    }\n    catch (error) {\n        yield put(actionCreators.openAlertBox({\n            alertOpen: true,\n            istypealert: true,\n            alerttype: 'alert',\n            alerttitle: 'Shutdown System',\n            alertdescription: 'System Shutdown Failed',\n        }));\n    }\n}\n\nexport function* hardwareOverviewWatcher() {\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_SERVER_INFORMATION, fetchServerInfo);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_POWER_INFORMATION, fetchPowerInfo);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_FRONT_INFORMATION, fetchChassisFrontInfo);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_REAR_INFORMATION, fetchChassisRearInfo);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_REBOOT_SYSTEM, rebootSystem);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_SHUTDOWN_SYSTEM, shutdownSystem);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_FORCE_SHUTDOWN_SYSTEM, forceShutdownSystem);\n    yield takeEvery(actionTypes.SAGA_HARDWARE_OVERVIEW_POWER_ON_SYSTEM, powerOnSystem);\n\n}\n"]}