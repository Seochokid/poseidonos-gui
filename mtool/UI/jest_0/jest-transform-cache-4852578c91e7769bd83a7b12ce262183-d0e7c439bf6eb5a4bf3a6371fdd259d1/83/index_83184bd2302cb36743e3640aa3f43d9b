aa0e2282c210cd485b618ab49f632d2f
"use strict";

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactRouterDom = require("react-router-dom");

var _core = require("@material-ui/core");

var _styles = require("@material-ui/core/styles");

var _MuiThemeProvider = _interopRequireDefault(require("@material-ui/core/styles/MuiThemeProvider"));

var _reactRedux = require("react-redux");

var _SamsungLogoBlue = _interopRequireDefault(require("../../assets/images/Samsung-logo-blue.png"));

var _DashboardDIS = _interopRequireDefault(require("../../assets/images/Dashboard-DIS.png"));

var _DashboardSEL = _interopRequireDefault(require("../../assets/images/Dashboard-SEL.png"));

var _StorageDIS = _interopRequireDefault(require("../../assets/images/Storage-DIS.png"));

var _StorageSEL = _interopRequireDefault(require("../../assets/images/Storage-SEL.png"));

var _ConfigurationDIS = _interopRequireDefault(require("../../assets/images/Configuration-DIS.png"));

var _ConfigurationSEL = _interopRequireDefault(require("../../assets/images/Configuration-SEL.png"));

var _PerformanceDIS = _interopRequireDefault(require("../../assets/images/Performance-DIS.png"));

var _PerformanceSEL = _interopRequireDefault(require("../../assets/images/Performance-SEL.png"));

var _theme = _interopRequireDefault(require("../../theme"));

require("./Sidebar.css");

var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/Sidebar/index.js";
const ulStyle = {
  textDecoration: 'none',
  color: 'rbga(255, 255, 255, 0.8)',
  marginTop: '0px',
  paddingTop: '0px'
};
const drawerWidth = 250;
const useStyles = (0, _styles.makeStyles)(theme => ({
  root: {
    display: 'flex'
  },
  list: {
    marginTop: theme.spacing(1)
  },
  link: {
    color: 'rgba(255, 255, 255)',
    '&>li:hover': {
      background: 'rgb(57, 62, 69)',
      color: '#fff',
      opacity: 1
    }
  },
  sidebarLink: {
    '&:hover': {
      '&>p': {
        color: '#fff',
        opacity: 0.8
      },
      '&>span>img': {
        opacity: 0.8
      }
    }
  },
  drawer: {
    width: drawerWidth,
    flexShrink: 0
  },
  drawerPaper: {
    width: drawerWidth,
    backgroundColor: '#424850',
    color: theme.palette.text.light
  },
  logoContainer: {
    display: 'flex',
    flexGrow: 1,
    justifyContent: 'center',
    alignItems: 'flex-end'
  },
  logoPaper: {
    marginBottom: '5px',
    borderRadius: 0,
    width: '100%',
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#424850',
    boxShadow: "none"
  },
  activeLink: {
    backgroundColor: 'rgb(33, 34, 37)',
    display: 'flex',
    color: '#fff',
    opacity: 1,
    '&>li:hover': {
      backgroundColor: 'rgb(33, 34, 37)',
      opacity: 1,
      color: '#fff'
    },
    '&>li>p': {
      color: '#fff',
      backgroundColor: 'rgb(33, 34, 37)',
      opacity: '1 !important'
    },
    '&>li>span>img': {
      color: '#fff',
      backgroundColor: 'rgb(33, 34, 37)',
      opacity: '1 !important'
    }
  },
  toolbar: theme.mixins.toolbar,
  listDivider: {
    backgroundColor: 'rgb(92, 97, 119)'
  },
  sidebarText: {
    marginLeft: '4px',
    color: 'rgba(185, 188, 197)',
    opacity: 1
  },
  sidebarIcon: {
    display: 'block',
    float: 'left',
    marginRight: theme.spacing(1),
    opacity: 1
  }
}));

const Sidebar = props => {
  const classes = useStyles();

  const drawer = _react.default.createElement(_MuiThemeProvider.default, {
    "data-testid": "sidebarTag",
    theme: _theme.default,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148
    },
    __self: void 0
  }, _react.default.createElement("div", {
    className: classes.toolbar,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149
    },
    __self: void 0
  }), _react.default.createElement(_core.List, {
    className: classes.list,
    style: ulStyle,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150
    },
    __self: void 0
  }, _react.default.createElement(_core.Divider, {
    className: classes.listDivider,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151
    },
    __self: void 0
  }), _react.default.createElement(_reactRouterDom.NavLink, {
    className: classes.link,
    activeClassName: classes.activeLink,
    to: "/dashboard",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152
    },
    __self: void 0
  }, _react.default.createElement(_core.ListItem, {
    className: classes.sidebarLink,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 153
    },
    __self: void 0
  }, _react.default.createElement("span", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154
    },
    __self: void 0
  }, _react.default.createElement("img", {
    className: classes.sidebarIcon,
    src: window.location.href.indexOf('dashboard') > 0 ? _DashboardSEL.default : _DashboardDIS.default,
    alt: "l",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155
    },
    __self: void 0
  })), _react.default.createElement(_core.Typography, {
    className: classes.sidebarText,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 165
    },
    __self: void 0
  }, "Dashboard"))), _react.default.createElement(_core.Divider, {
    className: classes.listDivider,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 168
    },
    __self: void 0
  }), _react.default.createElement(_reactRouterDom.NavLink, {
    style: ulStyle,
    to: "/volume",
    className: classes.link,
    activeClassName: classes.activeLink,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 169
    },
    __self: void 0
  }, _react.default.createElement(_core.ListItem, {
    className: classes.sidebarLink,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 170
    },
    __self: void 0
  }, _react.default.createElement("span", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171
    },
    __self: void 0
  }, _react.default.createElement("img", {
    className: classes.sidebarIcon,
    src: window.location.href.indexOf('volume') > 0 ? _StorageSEL.default : _StorageDIS.default,
    alt: "l",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 172
    },
    __self: void 0
  })), _react.default.createElement(_core.Typography, {
    className: classes.sidebarText,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 182
    },
    __self: void 0
  }, "Storage"))), _react.default.createElement(_core.Divider, {
    className: classes.listDivider,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 185
    },
    __self: void 0
  }), _react.default.createElement(_reactRouterDom.NavLink, {
    style: ulStyle,
    to: "/performance",
    className: classes.link,
    activeClassName: classes.activeLink,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 186
    },
    __self: void 0
  }, _react.default.createElement(_core.ListItem, {
    className: classes.sidebarLink,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 187
    },
    __self: void 0
  }, _react.default.createElement("span", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188
    },
    __self: void 0
  }, _react.default.createElement("img", {
    className: classes.sidebarIcon,
    src: window.location.href.indexOf('performance') > 0 ? _PerformanceSEL.default : _PerformanceDIS.default,
    alt: "l",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 189
    },
    __self: void 0
  })), _react.default.createElement(_core.Typography, {
    className: classes.sidebarText,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 199
    },
    __self: void 0
  }, "Performance"))), _react.default.createElement(_core.Divider, {
    className: classes.listDivider,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 202
    },
    __self: void 0
  }), _react.default.createElement(_reactRouterDom.NavLink, {
    style: ulStyle,
    className: classes.link,
    activeClassName: classes.activeLink,
    to: "/ConfigurationSetting/general",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 221
    },
    __self: void 0
  }, _react.default.createElement(_core.ListItem, {
    className: classes.sidebarLink,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 226
    },
    __self: void 0
  }, _react.default.createElement("span", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 227
    },
    __self: void 0
  }, _react.default.createElement("img", {
    className: classes.sidebarIcon,
    src: window.location.href.indexOf('ConfigurationSetting') > 0 ? _ConfigurationSEL.default : _ConfigurationDIS.default,
    alt: "l",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 228
    },
    __self: void 0
  })), _react.default.createElement(_core.Typography, {
    className: classes.sidebarText,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 238
    },
    __self: void 0
  }, "Configuration"))), _react.default.createElement(_core.Divider, {
    className: classes.listDivider,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 241
    },
    __self: void 0
  })), _react.default.createElement("div", {
    className: classes.logoContainer,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 266
    },
    __self: void 0
  }, _react.default.createElement(_core.Paper, {
    className: classes.logoPaper,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 267
    },
    __self: void 0
  }, _react.default.createElement("img", {
    src: _SamsungLogoBlue.default,
    style: {
      width: '170px'
    },
    alt: "Samsung Logo",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 268
    },
    __self: void 0
  }))));

  if (localStorage.getItem('isLoggedIn')) {
    return _react.default.createElement(_MuiThemeProvider.default, {
      theme: _theme.default,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 279
      },
      __self: void 0
    }, _react.default.createElement(_core.Hidden, {
      mdUp: true,
      implementation: "css",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 280
      },
      __self: void 0
    }, _react.default.createElement(_core.Drawer, {
      className: classes.drawer,
      anchor: "left",
      variant: "temporary",
      classes: {
        paper: classes.drawerPaper
      },
      open: props.mobileOpen,
      ModalProps: {
        keepMounted: true // Better open performance on mobile.

      },
      onClose: props.toggleDrawer,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 281
      },
      __self: void 0
    }, drawer)), _react.default.createElement(_core.Hidden, {
      smDown: true,
      implementation: "css",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 297
      },
      __self: void 0
    }, _react.default.createElement(_core.Drawer, {
      className: classes.drawer,
      variant: "permanent",
      classes: {
        paper: classes.drawerPaper
      },
      open: true,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 298
      },
      __self: void 0
    }, drawer)));
  }

  return null;
};

const mapStateToProps = state => {
  return {
    bmc_isLoggedIn: state.BMCAuthenticationReducer.bmc_isLoggedIn
  };
};

const mapDispatchToProps = () => {
  return {};
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Sidebar);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,