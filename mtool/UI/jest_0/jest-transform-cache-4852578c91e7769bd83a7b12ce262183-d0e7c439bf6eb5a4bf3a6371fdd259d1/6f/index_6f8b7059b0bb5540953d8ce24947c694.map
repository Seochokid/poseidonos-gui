{"version":3,"sources":["index.js"],"names":["defaultDiskDetails","DevicePath","SerialNumber","Model","PhysicalSize","UsedBytes","Firmware","critical_warning","temperature","avail_spare","spare_thresh","precent_used","data_units_read","data_units_written","critical_comp_time","warning_temp_time","percent_used","styles","theme","root","display","flexWrap","width","padding","spacing","breakpoints","down","tooltip","backgroundColor","opacity","color","maxWidth","fontSize","typography","pxToRem","border","fontWeight","fontWeightMedium","formControl","margin","minWidth","gridList","transform","flexGrow","gridTile","justifyContent","alignItems","height","gridTileDisabled","diskGridContainer","overflowX","diskContainer","overflow","palette","background","paper","legendButtonGrid","marginBottom","legendContainer","button","textTransform","buttonContainer","marginTop","legendItem","inputGrid","partOfArray","notSelectedShow","corrupted","removeA","slot","disk","arr","size","i","length","deviceName","name","push","ArrayCreate","Component","constructor","props","state","arrayname","raids","label","minStorage","minSpare","minWriteBUffer","value","raid","slots","diskType","metaDisk","loading","errorMsg","alertOpen","popupOpen","totalSize","alertType","diskDetails","toggleRowSelect","bind","createArray","onSelectRaid","onSelectDiskType","onSelectWriteBuffer","showPopup","closePopup","getDiskDetails","event","target","setState","preventDefault","console","log","RAIDLevel","storageDisks","spareDisks","writeBufferDisk","position","diskColorMap","el","document","getElementById","style","spareSlots","storageSlots","updatedSlots","Object","keys","forEach","key","x","render","classes","diskTypes","freedisks","disks","PageTheme","id","map","metadisks","type","formatBytes","cursor","textAlign","withStyles"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <File description> *\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[11/06/2019] [Aswin] : Removed Write Buffer disk from dropdown\n[12/06/2019] [Aswin] : Fixed Spare disk selection bug. Default disk details set to NA\n*/\nimport React, { Component } from 'react';\nimport 'react-dropdown/style.css';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { FormControl, InputLabel, Select, MenuItem, Typography, Grid, GridList, GridListTile, Button } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport formatBytes from '../../../utils/format-bytes';\nimport MToolLoader from '../../MToolLoader';\nimport AlertDialog from '../../Dialog';\nimport DiskDetails from '../../DiskDetails';\nimport './ArrayCreate.css';\nimport { PageTheme } from '../../../theme';\nimport Legend from '../../Legend';\n\nconst defaultDiskDetails = {\n  DevicePath: 'NA',\n  SerialNumber: 'NA',\n  Model: 'NA',\n  PhysicalSize: 'NA',\n  UsedBytes: 'NA',\n  Firmware: 'NA',\n  critical_warning: 'NA',\n  temperature: 'NA',\n  avail_spare: 'NA',\n  spare_thresh: 'NA',\n  precent_used: 'NA',\n  data_units_read: 'NA',\n  data_units_written: 'NA',\n  critical_comp_time: 'NA',\n  warning_temp_time: 'NA',\n  percent_used: 'NA',\n};\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    padding: theme.spacing(0, 3),\n    [theme.breakpoints.down('sm')]: {\n      padding: theme.spacing(0, 1)\n    }\n  },\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    opacity: 1,\n    color: 'rgba(0, 0, 0, 1)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n    '& b': {\n      fontWeight: theme.typography.fontWeightMedium,\n    },\n  },\n  formControl: {\n    margin: theme.spacing(0.5, 2),\n    minWidth: 170,\n    [theme.breakpoints.down('xs')]: {\n      margin: theme.spacing(1, 0)\n    }\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n    flexGrow: 1,\n    padding: theme.spacing(1, 0)\n  },\n  gridTile: {\n    width: 200,\n    border: '2px solid lightgray',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    '&>div': {\n      height: 'auto'\n    }\n  },\n  gridTileDisabled: {\n    backgroundColor: '#e2e1e1'\n  },\n  diskGridContainer: {\n    width: '100%',\n    overflowX: 'auto',\n    [theme.breakpoints.down('xs')]: {\n      width: 'calc(100% - 32px)'\n    }\n  },\n  diskContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 2, 0, 2),\n    minWidth: 800\n  },\n  legendButtonGrid: {\n    marginBottom: theme.spacing(1)\n  },\n  legendContainer: {\n    padding: theme.spacing(0, 2)\n  },\n  button: {\n    textTransform: 'none'\n  },\n  buttonContainer: {\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 2),\n    marginTop: theme.spacing(0.5),\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'center'\n    }\n  },\n  legendItem: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: theme.spacing(0.5)\n  },\n  inputGrid: {\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  },\n  partOfArray: {\n    backgroundColor: 'rgb(236, 219, 87)'\n  },\n  notSelectedShow: {\n    backgroundColor: 'rgb(137, 163, 196)'\n  },\n  corrupted: {\n    backgroundColor: 'rgb(232, 114, 114)'\n  }\n});\nconst removeA = (slot, disk) => {\n  const arr = [];\n  let size = 0;\n  for (let i = 0; i < slot.length; i += 1) {\n    if (slot[i].deviceName !== disk.name) {\n      arr.push(slot[i]);\n      size += disk.size;\n    }\n  }\n  return {\n    arr,\n    size,\n  };\n}\n\nclass ArrayCreate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrayname: '',\n      raids: [\n        {\n          label: 'RAID-5',\n          minStorage: 3,\n          minSpare: 1,\n          minWriteBUffer: 1,\n          value: '5',\n        }\n      ],\n      minStorage: 3,\n      minSpare: 1,\n      minWriteBUffer: 1,\n      raid: '5',\n      slots: { 'Storage Disk': [], 'Write Buffer Disk': [], 'Spare Disk': [] },\n      diskType: 'Storage Disk',\n      metaDisk: '',\n      loading: false,\n      errorMsg: '',\n      alertOpen: false,\n      popupOpen: false,\n      totalSize: 0,\n      alertType: 'error',\n      diskDetails: { ...defaultDiskDetails },\n    };\n    this.toggleRowSelect = this.toggleRowSelect.bind(this);\n    this.createArray = this.createArray.bind(this);\n    this.onSelectRaid = this.onSelectRaid.bind(this);\n    this.onSelectDiskType = this.onSelectDiskType.bind(this);\n    this.onSelectWriteBuffer = this.onSelectWriteBuffer.bind(this);\n    this.showPopup = this.showPopup.bind(this);\n    this.closePopup = this.closePopup.bind(this);\n    this.getDiskDetails = this.getDiskDetails.bind(this);\n  }\n\n  onSelectRaid(event) {\n    for (let i = 0; i < this.state.raids.length; i += 1) {\n      if (this.state.raids[i].value === event.target.value) {\n        this.setState({\n          ...this.state,\n          raid: event.target.value,\n          minStorage: this.state.raids[i].minStorage,\n          minSpare: this.state.raids[i].minSpare,\n          minWriteBUffer: this.state.raids[i].minWriteBUffer,\n        });\n        return;\n      }\n    }\n  }\n\n  onSelectDiskType(event) {\n    this.setState({\n      ...this.state,\n      diskType: (event && event.target) ?\n        event.target.value : '',\n    });\n  }\n\n  onSelectWriteBuffer(event) {\n    this.setState({\n      ...this.state,\n      metaDisk: event.target.value,\n    });\n  }\n\n  getDiskDetails(name) {\n    this.props.getDiskDetails({ name });\n  }\n\n  showPopup(name) {\n    this.getDiskDetails(name);\n    this.setState({\n      ...this.state,\n      popupOpen: true,\n    });\n  }\n\n  closePopup() {\n    this.setState({\n      ...this.state,\n      popupOpen: false,\n      alertOpen: false,\n    });\n  }\n\n  createArray(event) {\n    event.preventDefault();\n    console.log(\"Creating Array\", this.state)\n    if (this.state.minStorage > this.state.slots['Storage Disk'].length) {\n      this.setState({\n        ...this.state,\n        alertType: 'alert',\n        errorMsg: `Select at least ${this.state.minStorage} storage disk`,\n        alertOpen: true,\n      });\n      return;\n    }\n    if (this.state.minSpare > this.state.slots['Spare Disk'].length) {\n      this.setState({\n        ...this.state,\n        alertType: 'alert',\n        errorMsg: `Select at least ${this.state.minSpare} Spare disk`,\n        alertOpen: true,\n      });\n      return;\n    }\n    if (this.state.metaDisk === '') {\n      this.setState({\n        ...this.state,\n        alertType: 'alert',\n        errorMsg: 'Select a Write Buffer',\n        alertOpen: true,\n      });\n      return;\n    }\n    this.setState({\n      ...this.state,\n      loading: true,\n    });\n    console.log(\"Calling Backend\")\n\n    this.props.createArray({\n        size: this.state.totalSize,\n        arrayname: this.state.arrayname,\n        RAIDLevel: this.state.raid,\n        storageDisks: this.state.slots['Storage Disk'],\n        spareDisks: this.state.slots['Spare Disk'],\n        writeBufferDisk: this.state.slots['Write Buffer Disk'],\n        metaDisk: this.state.metaDisk\n    });\n  }\n\n  toggleRowSelect(position, disk) {\n    const diskColorMap = {\n      'Storage Disk': '#51ce46',\n      '': 'white',\n      'Spare Disk': '#339EFF',\n      'Write Buffer Disk': '#FFEC33',\n    };\n    const el = document.getElementById(position);\n    if (\n      (el.style.backgroundColor === 'white' ||\n        el.style.backgroundColor === '') &&\n      this.state.diskType !== ''\n    ) {\n      if (\n        this.state.diskType === 'Spare Disk' &&\n        this.state.slots[this.state.diskType].length < 1\n      ) {\n        el.style.backgroundColor = diskColorMap[this.state.diskType];\n        const spareSlots = [...this.state.slots[this.state.diskType]];\n        spareSlots.push({ deviceName: disk.name });\n        this.setState({\n          ...this.state,\n          slots: {\n            ...this.state.slots,\n            'Spare Disk': spareSlots,\n          },\n        });\n      } else if (this.state.diskType === 'Storage Disk') {\n        el.style.backgroundColor = diskColorMap[this.state.diskType];\n        const storageSlots = [...this.state.slots[this.state.diskType]];\n        storageSlots.push({ deviceName: disk.name });\n        this.setState({\n          ...this.state,\n          slots: {\n            ...this.state.slots,\n            'Storage Disk': storageSlots,\n          },\n          totalSize: this.state.totalSize + disk.size,\n        });\n      // } else if (\n      //   this.state.diskType === 'Write Buffer Disk' &&\n      //   this.state.slots[this.state.diskType].length < 1 &&\n      //   this.state.metaDisk === ''\n      // ) {\n      //   el.style.backgroundColor = diskColorMap[this.state.diskType];\n      //   const joined = this.state.slots[this.state.diskType].push({\n      //     deviceName: position,\n      //   });\n      //   this.setState({\n      //     ...this.state,\n      //     slots: {\n      //       ...this.state.slots,\n      //       'Write Disk Buffer': joined,\n      //     },\n      //   });\n      }\n    } else {\n      el.style.backgroundColor = 'white';\n      const updatedSlots = { ...this.state.slots };\n      let size = this.state.totalSize;\n      Object.keys(this.state.slots).forEach((key) => {\n        const x = removeA(this.state.slots[key], disk);\n        updatedSlots[key] = x.arr;\n        if (key === 'Storage Disk') {\n          size = x.size;\n        }\n      });\n      this.setState({\n        ...this.state,\n        slots: {\n          ...updatedSlots,\n        },\n        totalSize: size,\n      });\n      // }\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const diskTypes = ['Storage Disk', 'Spare Disk'];\n\n    const freedisks = [];\n    if (this.props.disks) {\n      for (let i = this.props.disks.length; i < 32; i += 1) {\n        freedisks.push(\n          <GridListTile className={`${classes.gridTile} ${classes.gridTileDisabled}`}>\n            <Typography color=\"secondary\">{i + 1}</Typography>\n          </GridListTile>\n        );\n      }\n    }\n    \n    return (\n      <ThemeProvider theme={PageTheme}>\n      <form className={classes.root} data-testid=\"arraycreate\">\n      <Grid item xs={12} sm={6} className={classes.inputGrid}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"raid\">Fault tolerance Level</InputLabel>\n        <Select\n          value={this.state.raid}\n          onChange={this.onSelectRaid}\n          inputProps={{\n            name: 'Fault Tolerance Type',\n            id: 'raid',\n            'data-testid': 'raid-select-input'\n          }}\n          SelectDisplayProps={{\n            'data-testid': 'raid-select'\n          }}\n        >\n          {this.state.raids.map((raid) => (\n             <MenuItem value={raid.value}><Typography color=\"secondary\">{raid.label}</Typography></MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      </Grid>\n      <Grid item xs={12} sm={6} className={classes.inputGrid}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"writebuffer\">Write Buffer Path</InputLabel>\n        <Select\n          value={this.state.metaDisk}\n          onChange={this.onSelectWriteBuffer}\n          inputProps={{\n            name: 'Write Buffer Path',\n            id: 'writebuffer',\n            'data-testid': \"writebuffer-input\"\n          }}\n          SelectDisplayProps={{\n            'data-testid': 'writebuffer'\n          }}\n          disabled={!this.props.metadisks}\n        >\n          {this.props.metadisks ? this.props.metadisks.map((disk) => (\n             <MenuItem value={disk}><Typography color=\"secondary\">{disk}</Typography></MenuItem>\n          )): null}\n        </Select>\n      </FormControl>\n      </Grid>\n      <Grid item xs={12} className={classes.inputGrid}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"disktype\">Disk Type</InputLabel>\n        <Select\n          value={this.state.diskType}\n          onChange={this.onSelectDiskType}\n          inputProps={{\n            name: 'Disk Type',\n            id: 'disktype',\n            'data-testid': \"disktype-input\"\n          }}\n          SelectDisplayProps={{\n            'data-testid': 'disktype'\n          }}\n        >\n          {diskTypes ? diskTypes.map((type) => (\n             <MenuItem value={type}><Typography color=\"secondary\">{type}</Typography></MenuItem>\n          )): null}\n        </Select>\n      </FormControl>\n      </Grid>\n      <div className={classes.diskGridContainer}>\n      <Grid container className={classes.diskContainer}>\n      <GridList cellHeight={110} className={classes.gridList} cols={32}>\n          {this.props.disks\n            ? this.props.disks.map((disk, i) => {\n                return (\n                  <Tooltip\n                    classes={{\n                      tooltip: classes.tooltip,\n                    }}\n                    title={(\n                      <React.Fragment>\n                        <div style={{ margin: '10px' }}>\n                          Name:\n                          {disk.name}\n                        </div>\n                        <div style={{ margin: '10px' }}>\n                          Size: {formatBytes(disk.size * 4 * 1024)}\n                        </div>\n                        <div\n                          onClick={() => this.showPopup(disk.name)}\n\t\t\t  aria-hidden=\"true\"\n                          style={{\n                            cursor: 'pointer',\n                            textAlign: 'right',\n                            margin: '10px',\n                          }}\n                        >\n                          <u>More Details</u>\n                        </div>\n                      </React.Fragment>\n                    )}\n                    interactive\n                  >\n                    <GridListTile\n                      className={classes.gridTile}\n                      id={i}\n                      onClick={() => {\n                        this.toggleRowSelect(i, disk);\n                      }}\n                      data-testid={`diskselect-${i}`}\n                    >\n                      <Typography color=\"secondary\">{ i + 1 }</Typography>\n                    </GridListTile>\n                  </Tooltip>\n                );\n              })\n            : null}\n          {freedisks}\n      </GridList>\n      </Grid>\n      </div>\n        <Grid container xs={12} className={classes.legendButtonGrid}>\n          <Grid item container sm={8} xs={12} wrap=\"wrap\" className={classes.legendContainer}>\n            <Legend bgColor=\"#51ce46\" title=\"Selected Storage disk\" />\n            <Legend bgColor=\"#339eff\" title=\"Selected Spare disk\" />\n            <Legend bgColor=\"#ffffff\" title=\"Not Selected\" />\n            <Legend bgColor=\"#e2e1e1\" title=\"Empty Slot\" />\n          </Grid>\n          <Grid item container sm={4} xs={12} className={classes.buttonContainer}>\n            <Button\n              onClick={this.createArray}\n              variant=\"contained\"\n              color=\"primary\"\n              data-testid=\"createarray-btn\"\n              className={classes.button}\n            >\n              Create Array\n            </Button>\n          </Grid>\n        </Grid>\n        {this.props.loading ? <MToolLoader /> : null}\n        <AlertDialog\n          type={this.state.alertType}\n          title=\"Create Array\"\n          description={this.state.errorMsg}\n          open={this.state.alertOpen}\n          onConfirm={this.closePopup}\n          handleClose={this.closePopup}\n        />\n        <DiskDetails\n          title=\"Disk Details\"\n          details={this.props.diskDetails}\n          open={this.state.popupOpen}\n          onConfirm={this.closePopup}\n          handleClose={this.closePopup}\n          note_msg=\"Note: Currently SPDK NVME cli cannot retrieve disk details while Poseidon is running. Details will be displayed at a later stage.\"\n        />\n      </form>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(ArrayCreate);\n"]}