{"version":3,"sources":["index.js"],"names":["styles","theme","dashboardContainer","display","content","flexGrow","padding","spacing","paddingLeft","paddingRight","width","boxSizing","toolbar","customTheme","titleContainer","marginTop","tableContainer","minHeight","loadWrapper","alignItems","justifyContent","metricContainer","marginBottom","metricBox","height","borderRadius","metricTxt","color","spaced","topGrid","cardHeader","card","header","marginLeft","pageHeader","textAlign","fontSize","fontWeight","textOverflow","whiteSpace","overflow","metricsPaper","icons","FirstPage","LastPage","NextPage","PreviousPage","ThirdStateCheck","Remove","DetailPanel","ChevronRight","SortArrow","ArrowUpward","alertIcons","Dashboard","Component","constructor","props","state","time","mobileOpen","interval","handleDrawerToggle","bind","componentDidMount","fetchVolumes","fetchStorageInfo","fetchPerformance","fetchIpAndMacInfo","fetchAlertsInfo","today","Date","months","date","getMonth","getDate","getFullYear","getHours","getMinutes","getSeconds","dateTime","setState","enableFetchingAlerts","setInterval","componentWillUnmount","clearInterval","render","volUsedSpace","volSpace","volumes","forEach","vol","usedspace","total","volFilledStyle","arraySize","backgroundColor","float","volUsedStyle","storageFreeStyle","overflowY","position","storageDangerStyle","right","borderLeft","alertColumns","title","field","sorting","defaultSort","row","level","volumeTableColumns","rowData","Math","round","classes","PageTheme","ip","host","mac","bw","read_iops","write_iops","margin","headerStyle","maxBodyHeight","search","alerts","length","fetchingAlerts","mapStateToProps","dashboardReducer","ibofs","unusedSpace","used","unused","mapDispatchToProps","dispatch","flag","actionCreators","type","actionTypes","SAGA_FETCH_VOLUME_INFO","SAGA_FETCH_ALERTS_INFO","SAGA_FETCH_STORAGE_INFO","SAGA_FETCH_PERFORMANCE_INFO","SAGA_FETCH_IPANDMAC_INFO"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <File description> *\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport MaterialTable from 'material-table';\nimport 'react-dropdown/style.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport 'react-table/react-table.css';\nimport 'core-js/es/number';\nimport 'core-js/es/array';\nimport Loader from 'react-loader-spinner';\nimport { Paper, Grid, Typography } from '@material-ui/core';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { customTheme, PageTheme } from '../../theme';\nimport Header from '../../components/Header';\nimport Sidebar from '../../components/Sidebar';\nimport './Dashboard.css';\nimport * as actionTypes from \"../../store/actions/actionTypes\";\nimport * as actionCreators from \"../../store/actions/exportActionCreators\";\nimport Legend from '../../components/Legend';\nimport bytesToTB from '../../utils/bytes-to-tb';\n\nconst styles = (theme) => {\n  return ({\n  dashboardContainer: {\n    display: 'flex',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(1),\n    paddingLeft:\"35px\",\n    paddingRight:\"35px\",\n    width: '100%',\n    boxSizing: 'border-box'\n  },\n  toolbar: customTheme.toolbar,\n  titleContainer: {\n    marginTop: theme.spacing(1)\n  },\n  tableContainer: {\n    minHeight: '372px'\n  },\n  loadWrapper: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  metricContainer: {\n    marginBottom: theme.spacing(1)\n  },\n  metricBox: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    height: '110px',\n    justifyContent: 'center',\n    borderRadius: '4px'\n  },\n  metricTxt: {\n    color: '#fff'\n  },\n  spaced: {\n    marginTop: theme.spacing(1)\n  },\n  topGrid:{\n    marginBottom: '-8px'\n  },\n  cardHeader: {\n    ...customTheme.card.header,\n    marginLeft: 0\n  },\n  pageHeader: {\n    textAlign: 'left',\n    fontSize: '16px',\n    fontWeight: 'bold',\n    // color: 'rgb(53, 85, 142)',\n    color: '#424850',\n  },\n  textOverflow: {\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden'\n  },\n  metricsPaper: {\n    minHeight: 203,\n    display: 'flex',\n    alignItems: 'center'\n  }\n})\n};\n\nconst icons = {\n  FirstPage: () => <FirstPage id=\"Dashboard-icon-vol-firstpage\" /> ,\n  LastPage: () => <LastPage id=\"Dashboard-icon-vol-lastpage\" />,\n  NextPage: () => <ChevronRight id=\"Dashboard-icon-vol-nextpage\" />,\n  PreviousPage: () => <ChevronLeft id=\"Dashboard-icon-vol-previouspage\" />,\n  ThirdStateCheck: Remove,\n  DetailPanel: ChevronRight,\n  SortArrow: ArrowUpward\n};\n\nconst alertIcons = {\n  ...icons,\n  FirstPage: () => <FirstPage id=\"Dashboard-alert-vol-firstpage\" /> ,\n  LastPage: () => <LastPage id=\"Dashboard-alert-vol-lastpage\" />,\n  NextPage: () => <ChevronRight id=\"Dashboard-alert-vol-nextpage\" />,\n  PreviousPage: () => <ChevronLeft id=\"Dashboard-alert-vol-previouspage\" />,\n};\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: '',\n      mobileOpen: false\n    };\n    this.interval = null;\n    this.handleDrawerToggle = this.handleDrawerToggle.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchVolumes();\n    this.props.fetchStorageInfo();\n    this.props.fetchPerformance();\n    this.props.fetchIpAndMacInfo();\n    this.props.fetchAlertsInfo();\n    const today = new Date();\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const date = `${months[today.getMonth()]} ${today.getDate()}, ${today.getFullYear()},`;\n    const time = `${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}`;\n    const dateTime = `${date} ${time}`;\n    this.setState({ time: dateTime });\n    this.props.enableFetchingAlerts(true);\n    this.interval = setInterval(() => {\n      this.props.fetchPerformance();\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n  handleDrawerToggle() {\n    this.setState({\n      mobileOpen: !this.state.mobileOpen\n    });\n  }\n\n  render() {\n    let volUsedSpace = 0; let volSpace = 0;\n    this.props.volumes.forEach((vol) => {\n      volUsedSpace += vol.usedspace;\n      volSpace += vol.total;\n    });\n    const volFilledStyle = {\n      width: `${(volSpace * 100/this.props.arraySize)}%`,\n      height: '100%',\n      backgroundColor: '#e0e0e0',\n      float: 'left',\n    };\n    const volUsedStyle = {\n      width: `${(volUsedSpace * 100/volSpace)}%`,\n      height: '100%',\n      backgroundColor: 'rgba(0, 186, 0,0.6)',\n      float: 'left',\n    };\n    const storageFreeStyle = {\n      width: `${100 - (volSpace * 100/this.props.arraySize)}%`,\n      height: '100%',\n      color: 'black',\n      marginLeft: '0px',\n      float: 'left',\n      overflowY: 'auto',\n      display: 'inline-block',\n      textAlign: 'center',\n      position: 'relative',\n      backgroundColor: '#fff',\n    };\n    const storageDangerStyle = {\n      width: '10%',\n      right: '0px',\n      backgroundColor: \t'#fff',\n      height: '100%',\n      float: 'right',\n      position: 'absolute',\n      display: 'inline-block',\n      borderLeft: '2px solid rgb(255, 173, 173)'\n    };\n\n    const alertColumns = [\n      {\n        title: 'Alert Name',\n        field: 'alertName',\n        sorting: false,\n      },\n      {\n        title: 'Time Stamp',\n        field: 'time',\n        defaultSort: 'desc',\n        sorting: false,\n      },\n      {\n        title: 'Status',\n        field: 'level',\n        width: 100,\n        sorting: false,\n        render: row => {\n          if (row.level === 'CRITICAL') {\n            return <span style={{ color: 'red' }}>{row.level}</span>;\n          }\n          return <span style={{ color: 'green' }}>{row.level}</span>;\n        },\n      },\n      {\n        title: 'Description',\n        field: 'message',\n        sorting: false,\n      },\n      {\n        title: 'Duration(sec)',\n        field: 'duration',\n        width: 150,\n        sorting: false,\n      },\n     // {\n      //  title: 'Node',\n       // field: 'host',\n        // sorting: false,\n     // },\n    ];\n    const volumeTableColumns = [\n      {\n        title: 'Name',\n        field: 'name',\n      },\n      {\n        title: 'Used Space (GB)',\n        field: 'usedspace',\n\trender: rowData => rowData.usedspace ?\n            Math.round(rowData.usedspace * 100) / 100 : 0\n      },\n      {\n        title: 'Total Space (GB)',\n        field: 'size'\n      },\n    ];\n    const { classes } = this.props;\n    return (\n      <ThemeProvider theme={PageTheme}>\n      <div className={classes.dashboardContainer}>\n        <Header toggleDrawer={this.handleDrawerToggle} />\n        <Sidebar mobileOpen={this.state.mobileOpen} toggleDrawer={this.handleDrawerToggle} />\n        <main className={classes.content}>  \n          <div className={classes.toolbar} />\n          <Grid container spacing={3}>\n          <Grid container spacing={3} className={classes.titleContainer}>\n            <Grid sm={6} xs={12} item>\n              <Typography className={classes.pageHeader} variant=\"h6\">Dashboard</Typography>\n            </Grid>\n            <Grid md={6} xs={12} item container direction=\"row\" justify=\"space-between\">\n              <Typography data-testid=\"dashboard-ip\" variant=\"body1\" component=\"span\">\n                  IP : {this.props.ip}\n              </Typography>\n              <Typography data-testid=\"dashboard-host\" variant=\"body1\" component=\"span\">\n                  Poseidon Name : {this.props.host}\n              </Typography>\n              <Typography data-testid=\"dashboard-mac\" variant=\"body1\" component=\"span\">\n                  MAC : {this.props.mac}\n              </Typography>\n            </Grid>\n          </Grid>\n          <Grid container spacing={1} className={classes.topGrid}>\n            <Grid xs={12} md={6} item>\n              <Paper spacing={3} className={classes.metricsPaper}>\n                <Grid container justify=\"space-around\">\n                     <Grid xs={10} md={3} className={classes.metricContainer} item spacing-xs-1=\"true\">\n                       <Typography align=\"center\" className={classes.textOverflow} color=\"secondary\">BANDWIDTH</Typography>\n                       <Grid item xs={12} className={classes.metricBox} style={{backgroundColor: 'rgba(58, 108, 255,0.6'}}>\n                        <Typography variant=\"h2\" data-testid=\"dashboard-bandwidth\" className={classes.metricTxt}>{this.props.bw} MBps</Typography>\n                       </Grid>\n                     </Grid>\n                     <Grid xs={10} md={3} className={classes.metricContainer} item spacing-xs-1=\"true\">\n                       <Typography align=\"center\" className={classes.textOverflow} color=\"secondary\">READ IOPS</Typography>\n                       <Grid item xs={12} className={classes.metricBox} style={{backgroundColor: 'rgba(59, 189, 179,0.7'}}>\n                       <Typography \n                       variant=\"h2\" \n                       data-testid= \"read-iops\"\n                       className={classes.metricTxt}\n                       >\n                       {this.props.read_iops}\n                       </Typography>\n                       </Grid>\n                     </Grid>\n                     <Grid xs={10} md={3} className={classes.metricContainer} item spacing-xs-1=\"true\">\n                       <Typography align=\"center\" className={classes.textOverflow} color=\"secondary\">WRITE IOPS</Typography>\n                       <Grid item xs={12} className={classes.metricBox} style={{backgroundColor: 'rgba(228, 148, 42,0.6'}}>\n                       <Typography variant=\"h2\" data-testid= \"write-iops\" className={classes.metricTxt}>{this.props.write_iops}</Typography>\n                       </Grid>\n                     </Grid>\n                </Grid>\n              </Paper>\n              <Paper spacing={3} style={{height: \"203px\"}} className={classes.spaced}>\n                <Grid container justify=\"space-between\">\n                  <Typography className={classes.cardHeader} style={{marginLeft: \"24px\"}}>\n                    Storage Details\n                  </Typography>\n                </Grid>\n                <Grid container justify=\"center\" alignContent=\"center\">\n                {this.props.arraySize === 0 ? (\n                  <Typography data-testid=\"dashboard-no-array\"color=\"secondary\">No Array Created</Typography>\n                ) : (\n                  <React.Fragment>\n                    <div className=\"dashboard-size-label-container\">\n                      <span className=\"dashboard-min-label\">0TB</span>\n                      <span className=\"dashboard-max-label\">\n                        {bytesToTB(this.props.arraySize)}\n                      </span>\n                    </div>\n                    <div className=\"storage-detail-container\">\n                      <div style={volFilledStyle}>\n                        <div style={volUsedStyle} />\n                      </div>\n                      <div style={storageFreeStyle}>\n                        <div style={storageDangerStyle}>\n                          <div className=\"dashboard-threshold-label\">80%</div>\n                        </div>\n                      </div>\n                    </div>\n                    <div\n                      style={{\n                        width: '94%',\n                        margin: '5px auto auto',\n                        height: '38px',\n                        position: 'relative',\n                      }}\n                    >\n                      <Grid item container xs={12} wrap=\"wrap\">\n                      <Legend\n                        bgColor=\"rgba(0, 186, 0, 0.6)\"\n                        title={`Data Written: ${bytesToTB(volUsedSpace)}`}\n                      />\n                      <Legend\n                        bgColor=\"#e0e0e0\"\n                        title={`Volume Space Allocated: ${bytesToTB(volSpace)}`}\n                      />\n                      <Legend\n                        bgColor=\"#fff\"\n                        title={`Available for Volume Creation: ${(bytesToTB(this.props.arraySize - volSpace))}`}\n                      />\n                      <Legend\n                        bgColor=\"rgb(255, 173, 173)\"\n                        title=\"Threshold\"\n                      />\n                      </Grid>\n                      <span\n                        style={{\n                          width: '100%',\n                          marginTop: '10px',\n                          float: 'left',\n                          textAlign: 'left',\n                        }}\n                      >\n                        As of {this.state.time}\n                      </span>\n                    </div>\n                  </React.Fragment>\n                )}\n                </Grid>\n              </Paper>\n            </Grid>\n\n            <Grid xs={12} md={6} item>\n              <Paper spacing={3} style={{minHeight: \"413px\"}}>\n                <MaterialTable\n                  title={(\n                    <Typography className={classes.cardHeader}>Volume Summary</Typography>\n                  )}\n                  columns={volumeTableColumns}\n                  data={this.props.volumes}\n                  options={{\n                    headerStyle: {\n                      backgroundColor: '#788595',\n                      color: '#FFF'\n                    },\n                    maxBodyHeight: 297,\n                    search: false\n                  }}\n                  style={{\n                    minHeight: '413px'\n                  }}\n                  icons={icons}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Grid container spacing={1} className={classes.spaced}>\n            <Grid xs={12} item>\n            <Paper>\n              {this.props.alerts.length > 0 ||\n                this.props.fetchingAlerts === false ? (\n                <MaterialTable\n                  title={(\n                    <Typography className={classes.cardHeader}>Storage Alerts</Typography>\n                  )}\n                  data-testid=\"Dashboard-table-alert\"\n                  options={{\n                    headerStyle: {\n                      backgroundColor: '#788595',\n                      color: '#FFF'\n                    },\n                    search: false\n                  }}\n                  data={this.props.alerts}\n                  columns={alertColumns}\n                  icons={alertIcons}\n                />\n              ) : (\n                <div className={classes.loadWrapper}>\n                  <Loader\n                    type=\"Bars\"\n                    color=\"#788595\"\n                    marginTop=\"100px\"\n                    width=\"50\"\n                  />\n                </div>\n              )}\n            </Paper>\n            </Grid>\n          </Grid>\n          </Grid>\n        </main>\n      </div>\n      </ThemeProvider>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    volumes: state.dashboardReducer.volumes,\n    alerts: state.dashboardReducer.alerts,\n    ibofs: state.dashboardReducer.ibofs,\n    unusedSpace: state.dashboardReducer.unusedSpace,\n    used: state.dashboardReducer.used,\n    unused: state.dashboardReducer.unused,\n    read_iops: state.dashboardReducer.read_iops,\n    write_iops: state.dashboardReducer.write_iops,\n    bw: state.dashboardReducer.bw,\n    fetchingAlerts: state.dashboardReducer.fetchingAlerts,\n    ip: state.dashboardReducer.ip,\n    mac: state.dashboardReducer.mac,\n    host: state.dashboardReducer.host,\n    arraySize: state.dashboardReducer.arraySize\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    enableFetchingAlerts: (flag) => dispatch(actionCreators.enableFetchingAlerts(flag)),\n    fetchVolumes: () => dispatch({ type: actionTypes.SAGA_FETCH_VOLUME_INFO }),\n    fetchAlertsInfo: () => dispatch({ type: actionTypes.SAGA_FETCH_ALERTS_INFO }),\n    fetchStorageInfo: () => dispatch({ type: actionTypes.SAGA_FETCH_STORAGE_INFO }),\n    fetchPerformance: () => dispatch({ type: actionTypes.SAGA_FETCH_PERFORMANCE_INFO }),\n    fetchIpAndMacInfo: () => dispatch({ type: actionTypes.SAGA_FETCH_IPANDMAC_INFO }),\n  };\n}\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(((Dashboard))));\n"]}