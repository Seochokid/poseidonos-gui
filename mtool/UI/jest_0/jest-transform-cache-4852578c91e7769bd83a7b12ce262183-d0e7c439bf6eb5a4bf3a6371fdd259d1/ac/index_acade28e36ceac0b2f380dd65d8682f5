a1d4ef75ec23bae64c6830dbb32b864f
/* istanbul ignore next */
"use strict";

var cov_1p8zljyod3 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/OverviewComponents/Chassis/index.js";
  var hash = "e517b032f9bf360a06c5e58076ea44b2acfdfde3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/OverviewComponents/Chassis/index.js",
    statementMap: {
      "0": {
        start: {
          line: 55,
          column: 15
        },
        end: {
          line: 147,
          column: 2
        }
      },
      "1": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 147,
          column: 1
        }
      },
      "2": {
        start: {
          line: 149,
          column: 27
        },
        end: {
          line: 170,
          column: 1
        }
      },
      "3": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 17
        }
      },
      "4": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 175,
          column: 47
        }
      },
      "5": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 176,
          column: 49
        }
      },
      "6": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 57
        }
      },
      "7": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 211,
          column: 7
        }
      },
      "8": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 252,
          column: 6
        }
      },
      "9": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 265,
          column: 7
        }
      },
      "10": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 39
        }
      },
      "11": {
        start: {
          line: 273,
          column: 4
        },
        end: {
          line: 276,
          column: 7
        }
      },
      "12": {
        start: {
          line: 280,
          column: 4
        },
        end: {
          line: 280,
          column: 39
        }
      },
      "13": {
        start: {
          line: 285,
          column: 24
        },
        end: {
          line: 285,
          column: 34
        }
      },
      "14": {
        start: {
          line: 286,
          column: 22
        },
        end: {
          line: 286,
          column: 24
        }
      },
      "15": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 295,
          column: 5
        }
      },
      "16": {
        start: {
          line: 288,
          column: 6
        },
        end: {
          line: 294,
          column: 7
        }
      },
      "17": {
        start: {
          line: 288,
          column: 19
        },
        end: {
          line: 288,
          column: 55
        }
      },
      "18": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 293,
          column: 10
        }
      },
      "19": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 442,
          column: 6
        }
      },
      "20": {
        start: {
          line: 314,
          column: 26
        },
        end: {
          line: 358,
          column: 28
        }
      },
      "21": {
        start: {
          line: 333,
          column: 51
        },
        end: {
          line: 333,
          column: 84
        }
      },
      "22": {
        start: {
          line: 447,
          column: 24
        },
        end: {
          line: 452,
          column: 1
        }
      },
      "23": {
        start: {
          line: 448,
          column: 2
        },
        end: {
          line: 451,
          column: 4
        }
      },
      "24": {
        start: {
          line: 454,
          column: 27
        },
        end: {
          line: 459,
          column: 1
        }
      },
      "25": {
        start: {
          line: 455,
          column: 2
        },
        end: {
          line: 458,
          column: 4
        }
      },
      "26": {
        start: {
          line: 456,
          column: 33
        },
        end: {
          line: 456,
          column: 120
        }
      },
      "27": {
        start: {
          line: 457,
          column: 32
        },
        end: {
          line: 457,
          column: 117
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 55,
            column: 15
          },
          end: {
            line: 55,
            column: 16
          }
        },
        loc: {
          start: {
            line: 55,
            column: 25
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 55
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 173,
            column: 2
          },
          end: {
            line: 173,
            column: 3
          }
        },
        loc: {
          start: {
            line: 173,
            column: 21
          },
          end: {
            line: 253,
            column: 3
          }
        },
        line: 173
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 255,
            column: 2
          },
          end: {
            line: 255,
            column: 3
          }
        },
        loc: {
          start: {
            line: 255,
            column: 33
          },
          end: {
            line: 266,
            column: 3
          }
        },
        line: 255
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 268,
            column: 2
          },
          end: {
            line: 268,
            column: 3
          }
        },
        loc: {
          start: {
            line: 268,
            column: 28
          },
          end: {
            line: 270,
            column: 3
          }
        },
        line: 268
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 272,
            column: 2
          },
          end: {
            line: 272,
            column: 3
          }
        },
        loc: {
          start: {
            line: 272,
            column: 15
          },
          end: {
            line: 277,
            column: 3
          }
        },
        line: 272
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 279,
            column: 2
          },
          end: {
            line: 279,
            column: 3
          }
        },
        loc: {
          start: {
            line: 279,
            column: 22
          },
          end: {
            line: 282,
            column: 3
          }
        },
        line: 279
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 284,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        },
        loc: {
          start: {
            line: 284,
            column: 11
          },
          end: {
            line: 443,
            column: 3
          }
        },
        line: 284
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 313,
            column: 60
          },
          end: {
            line: 313,
            column: 61
          }
        },
        loc: {
          start: {
            line: 313,
            column: 77
          },
          end: {
            line: 359,
            column: 25
          }
        },
        line: 313
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 333,
            column: 45
          },
          end: {
            line: 333,
            column: 46
          }
        },
        loc: {
          start: {
            line: 333,
            column: 51
          },
          end: {
            line: 333,
            column: 84
          }
        },
        line: 333
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 447,
            column: 24
          },
          end: {
            line: 447,
            column: 25
          }
        },
        loc: {
          start: {
            line: 447,
            column: 33
          },
          end: {
            line: 452,
            column: 1
          }
        },
        line: 447
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 454,
            column: 27
          },
          end: {
            line: 454,
            column: 28
          }
        },
        loc: {
          start: {
            line: 454,
            column: 39
          },
          end: {
            line: 459,
            column: 1
          }
        },
        line: 454
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 456,
            column: 27
          },
          end: {
            line: 456,
            column: 28
          }
        },
        loc: {
          start: {
            line: 456,
            column: 33
          },
          end: {
            line: 456,
            column: 120
          }
        },
        line: 456
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 457,
            column: 26
          },
          end: {
            line: 457,
            column: 27
          }
        },
        loc: {
          start: {
            line: 457,
            column: 32
          },
          end: {
            line: 457,
            column: 117
          }
        },
        line: 457
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        }, {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 295,
            column: 5
          }
        }],
        line: 287
      },
      "1": {
        loc: {
          start: {
            line: 312,
            column: 23
          },
          end: {
            line: 360,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 313,
            column: 26
          },
          end: {
            line: 359,
            column: 26
          }
        }, {
          start: {
            line: 360,
            column: 26
          },
          end: {
            line: 360,
            column: 30
          }
        }],
        line: 312
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "e517b032f9bf360a06c5e58076ea44b2acfdfde3"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));

var
/* istanbul ignore next */
_reactRedux = require("react-redux");

var
/* istanbul ignore next */
_styles = require("@material-ui/core/styles");

var
/* istanbul ignore next */
_materialTable = _interopRequireDefault(require("material-table"));

var
/* istanbul ignore next */
_core = require("@material-ui/core");

var
/* istanbul ignore next */
_Grid = _interopRequireDefault(require("@material-ui/core/Grid"));

var
/* istanbul ignore next */
_MuiThemeProvider = _interopRequireDefault(require("@material-ui/core/styles/MuiThemeProvider"));

var
/* istanbul ignore next */
_Search = _interopRequireDefault(require("@material-ui/icons/Search"));

var
/* istanbul ignore next */
_SaveAlt = _interopRequireDefault(require("@material-ui/icons/SaveAlt"));

var
/* istanbul ignore next */
_ChevronLeft = _interopRequireDefault(require("@material-ui/icons/ChevronLeft"));

var
/* istanbul ignore next */
_ChevronRight = _interopRequireDefault(require("@material-ui/icons/ChevronRight"));

var
/* istanbul ignore next */
_FirstPage = _interopRequireDefault(require("@material-ui/icons/FirstPage"));

var
/* istanbul ignore next */
_LastPage = _interopRequireDefault(require("@material-ui/icons/LastPage"));

var
/* istanbul ignore next */
_Add = _interopRequireDefault(require("@material-ui/icons/Add"));

var
/* istanbul ignore next */
_Check = _interopRequireDefault(require("@material-ui/icons/Check"));

var
/* istanbul ignore next */
_FilterList = _interopRequireDefault(require("@material-ui/icons/FilterList"));

var
/* istanbul ignore next */
_Remove = _interopRequireDefault(require("@material-ui/icons/Remove"));

var
/* istanbul ignore next */
_Edit = _interopRequireDefault(require("@material-ui/icons/Edit"));

var
/* istanbul ignore next */
_Delete = _interopRequireDefault(require("@material-ui/icons/Delete"));

var
/* istanbul ignore next */
_ArrowUpward = _interopRequireDefault(require("@material-ui/icons/ArrowUpward"));

var
/* istanbul ignore next */
_Clear = _interopRequireDefault(require("@material-ui/icons/Clear"));

/* istanbul ignore next */
require("./Chassis.css");

var
/* istanbul ignore next */
_Legend = _interopRequireDefault(require("../../Legend"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../../../store/actions/actionTypes"));

var
/* istanbul ignore next */
_DiskDetails = _interopRequireDefault(require("../../DiskDetails"));

var
/* istanbul ignore next */
_ServerInformation = _interopRequireDefault(require("../ServerInformation"));

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/OverviewComponents/Chassis/index.js";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

cov_1p8zljyod3.s[0]++;

const styles = theme => {
  /* istanbul ignore next */
  cov_1p8zljyod3.f[0]++;
  cov_1p8zljyod3.s[1]++;
  return {
    multilineColor: {
      color: 'black'
    },
    root: {
      flexGrow: 1
    },
    overviewPaper: {
      marginTop: theme.spacing(2),
      width: '100%'
    },
    chassisOuterGrid: {
      // border: '1px solid gray',
      maxWidth: '100%',
      flexBasis: '100%',
      overflowY: 'auto',
      overflowX: 'hidden',
      background: '#fff'
    },
    chassisInnerGrid: {
      maxWidth: '100%'
    },
    label: {
      marginLeft: theme.spacing(1),
      marginTop: theme.spacing(3)
    },
    gridTile: {
      width: 450,
      minWidth: 10,
      border: '2px solid lightgray',
      display: 'flex',
      justifyContent: 'center',
      alignItems: 'center',
      position: 'relative',
      flexDirection: 'column',
      '&>div': {
        height: 'auto'
      }
    },
    gridTileDisabled: {
      backgroundColor: '#e2e1e1'
    },
    gridTileHealthy: {
      backgroundColor: 'green'
    },
    chassisGridContainer: {
      width: '100%',
      overflowX: 'auto',
      [theme.breakpoints.down('xs')]: {
        width: 'calc(100% - 32px)'
      }
    },
    chassisContainer: {
      margin: '20px',
      padding: '5px',
      border: '1px solid gray'
    },
    diskContainer: {
      display: 'flex',
      flexWrap: 'wrap',
      justifyContent: 'space-around',
      overflow: 'hidden',
      backgroundColor: theme.palette.background.paper,
      padding: theme.spacing(0, 2, 0, 2),
      minWidth: 120
    },
    gridList: {
      flexWrap: 'nowrap',
      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.
      transform: 'translateZ(0)',
      flexGrow: 1,
      padding: theme.spacing(0, 0)
    },
    legendContainer: {
      maxWidth: '100%',
      padding: theme.spacing(2, 2)
    },
    chassisLabel: {
      padding: '15px',
      width: '100%',
      textAlign: 'center'
    },
    powerParentGrid: {
      marginBottom: -theme.spacing(0.5)
    }
  };
};

const defaultDiskDetails =
/* istanbul ignore next */
(cov_1p8zljyod3.s[2]++, {
  DevicePath: 'NA',
  BuildDate: 'NA',
  Manufacturer: 'NA',
  PartNumber: 'NA',
  SerialNumber: 'NA',
  Model: 'NA',
  PredictedMediaLifeLeftPercent: 'NA',
  PhysicalSize: 'NA',
  UsedBytes: 'NA',
  Firmware: 'NA',
  critical_warning: 'NA',
  temperature: 'NA',
  avail_spare: 'NA',
  spare_thresh: 'NA',
  precent_used: 'NA',
  data_units_read: 'NA',
  data_units_written: 'NA',
  critical_comp_time: 'NA',
  warning_temp_time: 'NA',
  percent_used: 'NA'
});

class Chassis extends
/* istanbul ignore next */
_react.
/* istanbul ignore next */
Component {
  constructor(props) {
    /* istanbul ignore next */
    cov_1p8zljyod3.f[1]++;
    cov_1p8zljyod3.s[3]++;
    super(props);

    /* istanbul ignore next */
    cov_1p8zljyod3.s[4]++;
    this.showPopup = this.showPopup.bind(this);

    /* istanbul ignore next */
    cov_1p8zljyod3.s[5]++;
    this.closePopup = this.closePopup.bind(this);

    /* istanbul ignore next */
    cov_1p8zljyod3.s[6]++;
    this.getDiskDetails = this.getDiskDetails.bind(this);

    /* istanbul ignore next */
    cov_1p8zljyod3.s[7]++;
    this.theme =
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    createMuiTheme)({
      overrides: {
        MuiSvgIcon: {
          //  stylesheet name
          root: {
            //  rule name
            color: '#808080'
          }
        },
        MuiTablePagination: {
          menuItem: {
            fontSize: "12px",
            minHeight: "0px"
          },
          select: {
            width: "45px"
          },
          toolbar: {
            maxHeight: '50px',
            minHeight: '20px'
          }
        }
      },
      palette: {
        primary: {
          main: '#4caf50'
        },
        secondary: {
          main: '#808080'
        }
      }
    });

    /* istanbul ignore next */
    cov_1p8zljyod3.s[8]++;
    this.state = {
      disknameandslot: '',
      diskDetails:
      /* istanbul ignore next */
      _objectSpread({}, defaultDiskDetails),
      popupOpen: false,
      columns: [{
        title: 'Name',
        field: 'chassisname',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        }
      }, {
        title: 'Status',
        field: 'chassisstatus',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        }
      }, {
        title: 'Serial',
        field: 'chassisserial',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        }
      }, {
        title: 'Other',
        field: 'chassisother',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        }
      }],
      data: [{
        'chassisname': 'ETH0',
        'chassisstatus': 'Healthy',
        'chassisserial': 'CNGODYTRNHD',
        'chassisother': 'SPEED Slot 40GB'
      }, {
        'chassisname': 'ETH1',
        'chassisstatus': 'Healthy',
        'chassisserial': 'CNGODYTRNHDH',
        'chassisother': 'SPEED Slot 50GB'
      }, {
        'chassisname': 'PSU1',
        'chassisstatus': 'Healthy',
        'chassisserial': 'POWERCNGODYTRNHDH',
        'chassisother': ' - '
      }]
    };
  }

  getDiskDetails(name, slot, disk) {
    /* istanbul ignore next */
    cov_1p8zljyod3.f[2]++;
    cov_1p8zljyod3.s[9]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      diskDetails:
      /* istanbul ignore next */
      _objectSpread({}, defaultDiskDetails, {}, disk),
      disknameandslot: `Disk Details (Disk Name: ${name}${slot}, Slot Number: ${slot + 1})`,
      popupOpen: true
    }));
  }

  showPopup(name, slot, disk) {
    /* istanbul ignore next */
    cov_1p8zljyod3.f[3]++;
    cov_1p8zljyod3.s[10]++;
    this.getDiskDetails(name, slot, disk);
  }

  closePopup() {
    /* istanbul ignore next */
    cov_1p8zljyod3.f[4]++;
    cov_1p8zljyod3.s[11]++;
    this.setState(
    /* istanbul ignore next */
    _objectSpread({}, this.state, {
      popupOpen: false
    }));
  }

  componentDidMount() {
    /* istanbul ignore next */
    cov_1p8zljyod3.f[5]++;
    cov_1p8zljyod3.s[12]++;
    this.props.fetchChassisFrontInfo(); // this.props.fetchChassisRearInfo();
  }

  render() {
    /* istanbul ignore next */
    cov_1p8zljyod3.f[6]++;

    const _ref = (cov_1p8zljyod3.s[13]++, this.props),
          classes = _ref.classes;

    const freeSlots =
    /* istanbul ignore next */
    (cov_1p8zljyod3.s[14]++, []);

    /* istanbul ignore next */
    cov_1p8zljyod3.s[15]++;

    if (this.props.chassis_front_list) {
      /* istanbul ignore next */
      cov_1p8zljyod3.b[0][0]++;
      cov_1p8zljyod3.s[16]++;

      for (let i =
      /* istanbul ignore next */
      (cov_1p8zljyod3.s[17]++, this.props.chassis_front_list.length); i < 32; i += 1) {
        /* istanbul ignore next */
        cov_1p8zljyod3.s[18]++;
        freeSlots.push(
        /* istanbul ignore next */
        _react.default.createElement(
        /* istanbul ignore next */
        _Grid.
        /* istanbul ignore next */
        default,
        /* istanbul ignore next */
        {
          className: `${classes.gridTile} ${classes.gridTileDisabled}`,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 290
          },
          __self: this
        },
        /* istanbul ignore next */
        _react.default.createElement(
        /* istanbul ignore next */
        _core.
        /* istanbul ignore next */
        Typography,
        /* istanbul ignore next */
        {
          color: "secondary",
          className: classes.diskNo,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 291
          },
          __self: this
        }, i + 1)));
      }
    } else
    /* istanbul ignore next */
    {
      cov_1p8zljyod3.b[0][1]++;
    }

    cov_1p8zljyod3.s[19]++;
    return (// <Paper className={classes.overviewPaper}>

      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        item:
        /* istanbul ignore next */
        true,
        spacing: 2,
        container:
        /* istanbul ignore next */
        true,
        className: classes.powerParentGrid,

        /* istanbul ignore next */
        "data-testid": "Chassis_Component",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 299
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 300
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Paper,
      /* istanbul ignore next */
      {
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        className: classes.chassisOuterGrid,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 301
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      InputLabel,
      /* istanbul ignore next */
      {
        className: classes.chassisLabel,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 302
        },
        __self: this
      },
      /* istanbul ignore next */
      "Chassis Front View"),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        className: classes.chassisInnerGrid,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 303
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      "div",
      /* istanbul ignore next */
      {
        className: classes.chassisGridContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 305
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        container:
        /* istanbul ignore next */
        true,
        className: classes.diskContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 309
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      GridList,
      /* istanbul ignore next */
      {
        cellHeight: 150,
        className: classes.gridList,
        cols: 32,

        /* istanbul ignore next */
        "data-testid": "ChassisDiskPopUp",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 311
        },
        __self: this
      }, this.props.chassis_front_list ?
      /* istanbul ignore next */
      (cov_1p8zljyod3.b[1][0]++, this.props.chassis_front_list.map((disk, index) => {
        /* istanbul ignore next */
        cov_1p8zljyod3.f[7]++;
        cov_1p8zljyod3.s[20]++;
        return (
          /* istanbul ignore next */
          _react.default.createElement(
          /* istanbul ignore next */
          _core.
          /* istanbul ignore next */
          Tooltip,
          /* istanbul ignore next */
          {
            /* istanbul ignore next */
            "data-testid": "Tooltip",
            classes: {
              tooltip: classes.tooltip
            },
            title:
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */

            /* istanbul ignore next */
            _react.
            /* istanbul ignore next */
            default.Fragment,
            /* istanbul ignore next */
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 321
              },
              __self: this
            },
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "div",
            /* istanbul ignore next */
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 322
              },
              __self: this
            },
            /* istanbul ignore next */
            "Name:", `nvme${index}`),
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "div",
            /* istanbul ignore next */
            {
              /* istanbul ignore next */
              "data-testid": "POPUP",
              onClick: () => {
                /* istanbul ignore next */
                cov_1p8zljyod3.f[8]++;
                cov_1p8zljyod3.s[21]++;
                return this.showPopup('nvme', index, disk);
              },
              style: {
                cursor: 'pointer',
                textAlign: 'right',
                margin: '10px'
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 331
              },
              __self: this
            },
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "u",
            /* istanbul ignore next */
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 340
              },
              __self: this
            },
            /* istanbul ignore next */
            "More Details"))),
            interactive:
            /* istanbul ignore next */
            true,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 315
            },
            __self: this
          },
          /* istanbul ignore next */
          _react.default.createElement(
          /* istanbul ignore next */
          _Grid.
          /* istanbul ignore next */
          default,
          /* istanbul ignore next */
          {
            className: `${classes.gridTile} ${classes.gridTileHealthy}`,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 346
            },
            __self: this
          },
          /* istanbul ignore next */
          _react.default.createElement(
          /* istanbul ignore next */
          _core.
          /* istanbul ignore next */
          GridListTile,
          /* istanbul ignore next */
          {
            id: index // onClick={() => {
            //   this.toggleRowSelect(index, slot);
            // }}
            ,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 347
            },
            __self: this
          },
          /* istanbul ignore next */
          _react.default.createElement(
          /* istanbul ignore next */
          _core.
          /* istanbul ignore next */
          Typography,
          /* istanbul ignore next */
          {
            color: "secondary",
            __source: {
              fileName: _jsxFileName,
              lineNumber: 354
            },
            __self: this
          }, index + 1))))
        );
      })) :
      /* istanbul ignore next */
      (cov_1p8zljyod3.b[1][1]++, null), freeSlots))),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        sm: 8,
        xs: 12,
        wrap: "wrap",
        className: classes.legendContainer,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 366
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Legend.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        bgColor: "green",
        title: "Healthy",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 367
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Legend.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        bgColor: "yellow",
        title: "Warning",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 368
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Legend.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        bgColor: "orange",
        title: "Corrupt",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 369
        },
        __self: this
      }),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Legend.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        bgColor: "#e2e1e1",
        title: "No Disk",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 370
        },
        __self: this
      }))))),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 375
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Paper,
      /* istanbul ignore next */
      {
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        className: classes.chassisOuterGrid,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 376
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _ServerInformation.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 377
        },
        __self: this
      }))),
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _DiskDetails.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        title: this.state.disknameandslot,
        details: this.state.diskDetails,
        open: this.state.popupOpen,
        onConfirm: this.closePopup,
        handleClose: this.closePopup,
        note_msg: "Note: SMART Information cannot be retrieved from the disk as NVMe MI functionality is not implemented in BMC.",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 432
        },
        __self: this
      })) // </Paper>

    );
  }

}

/* istanbul ignore next */
cov_1p8zljyod3.s[22]++;

const mapStateToProps = state => {
  /* istanbul ignore next */
  cov_1p8zljyod3.f[9]++;
  cov_1p8zljyod3.s[23]++;
  return {
    chassis_front_list: state.hardwareOverviewReducer.chassis_front_list,
    chassis_rear_list: state.hardwareOverviewReducer.chassis_rear_list
  };
};

/* istanbul ignore next */
cov_1p8zljyod3.s[24]++;

const mapDispatchToProps = dispatch => {
  /* istanbul ignore next */
  cov_1p8zljyod3.f[10]++;
  cov_1p8zljyod3.s[25]++;
  return {
    fetchChassisFrontInfo: () => {
      /* istanbul ignore next */
      cov_1p8zljyod3.f[11]++;
      cov_1p8zljyod3.s[26]++;
      return dispatch({
        type: actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_FRONT_INFORMATION
      });
    },
    fetchChassisRearInfo: () => {
      /* istanbul ignore next */
      cov_1p8zljyod3.f[12]++;
      cov_1p8zljyod3.s[27]++;
      return dispatch({
        type: actionTypes.SAGA_HARDWARE_OVERVIEW_FETCH_CHASSIS_REAR_INFORMATION
      });
    }
  };
};

/* istanbul ignore next */
var _default =
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
withStyles)(styles)(
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_reactRedux.
/* istanbul ignore next */
connect)(mapStateToProps, mapDispatchToProps)(Chassis));

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,