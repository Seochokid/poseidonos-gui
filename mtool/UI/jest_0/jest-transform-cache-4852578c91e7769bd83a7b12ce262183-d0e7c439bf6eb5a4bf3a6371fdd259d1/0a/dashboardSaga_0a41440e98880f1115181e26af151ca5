0f7a2c716bebbb56f015ad11deeab024
/* istanbul ignore next */
"use strict";

var cov_2n9uyjhiix = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/dashboardSaga.js";
  var hash = "a78dfe7716dcf89ae6529430c09ff8dd5082fa09";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/dashboardSaga.js",
    statementMap: {
      "0": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "1": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "2": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "3": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "4": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 59
        }
      },
      "5": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 62
        }
      },
      "6": {
        start: {
          line: 50,
          column: 31
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "7": {
        start: {
          line: 51,
          column: 7
        },
        end: {
          line: 51,
          column: 63
        }
      },
      "8": {
        start: {
          line: 52,
          column: 7
        },
        end: {
          line: 52,
          column: 61
        }
      },
      "9": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "10": {
        start: {
          line: 57,
          column: 36
        },
        end: {
          line: 57,
          column: 38
        }
      },
      "11": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 68
        }
      },
      "12": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 66
        }
      },
      "13": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "14": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 72,
          column: 10
        }
      },
      "15": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 74,
          column: 36
        }
      },
      "16": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "17": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 65
        }
      },
      "18": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "19": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "20": {
        start: {
          line: 94,
          column: 23
        },
        end: {
          line: 94,
          column: 36
        }
      },
      "21": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "22": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 101,
          column: 15
        }
      },
      "23": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "24": {
        start: {
          line: 111,
          column: 25
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "25": {
        start: {
          line: 119,
          column: 23
        },
        end: {
          line: 119,
          column: 36
        }
      },
      "26": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "27": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 125,
          column: 15
        }
      },
      "28": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "29": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 142,
          column: 10
        }
      },
      "30": {
        start: {
          line: 144,
          column: 23
        },
        end: {
          line: 144,
          column: 36
        }
      },
      "31": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "32": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 15
        }
      },
      "33": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 157,
          column: 73
        }
      },
      "34": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 73
        }
      },
      "35": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 159,
          column: 75
        }
      },
      "36": {
        start: {
          line: 160,
          column: 4
        },
        end: {
          line: 160,
          column: 83
        }
      },
      "37": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 161,
          column: 77
        }
      }
    },
    fnMap: {
      "0": {
        name: "fetchVolumeInfo",
        decl: {
          start: {
            line: 33,
            column: 17
          },
          end: {
            line: 33,
            column: 32
          }
        },
        loc: {
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 33
      },
      "1": {
        name: "fetchAlertsInfo",
        decl: {
          start: {
            line: 64,
            column: 17
          },
          end: {
            line: 64,
            column: 32
          }
        },
        loc: {
          start: {
            line: 64,
            column: 35
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 64
      },
      "2": {
        name: "fetchStorageInfo",
        decl: {
          start: {
            line: 84,
            column: 10
          },
          end: {
            line: 84,
            column: 26
          }
        },
        loc: {
          start: {
            line: 84,
            column: 29
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 84
      },
      "3": {
        name: "fetchPerformanceInfo",
        decl: {
          start: {
            line: 109,
            column: 10
          },
          end: {
            line: 109,
            column: 30
          }
        },
        loc: {
          start: {
            line: 109,
            column: 33
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 109
      },
      "4": {
        name: "fetchIpAndMacInfo",
        decl: {
          start: {
            line: 134,
            column: 10
          },
          end: {
            line: 134,
            column: 27
          }
        },
        loc: {
          start: {
            line: 134,
            column: 30
          },
          end: {
            line: 154,
            column: 1
          }
        },
        line: 134
      },
      "5": {
        name: "dashboardWatcher",
        decl: {
          start: {
            line: 156,
            column: 17
          },
          end: {
            line: 156,
            column: 33
          }
        },
        loc: {
          start: {
            line: 156,
            column: 36
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 156
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 18
          }
        }, {
          start: {
            line: 44,
            column: 22
          },
          end: {
            line: 44,
            column: 37
          }
        }],
        line: 44
      },
      "2": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }],
        line: 55
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }],
        line: 95
      },
      "5": {
        loc: {
          start: {
            line: 97,
            column: 16
          },
          end: {
            line: 97,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 29
          },
          end: {
            line: 97,
            column: 80
          }
        }, {
          start: {
            line: 97,
            column: 84
          },
          end: {
            line: 97,
            column: 85
          }
        }],
        line: 97
      },
      "6": {
        loc: {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: 120,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }],
        line: 120
      },
      "7": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }],
        line: 145
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "a78dfe7716dcf89ae6529430c09ff8dd5082fa09"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchVolumeInfo = fetchVolumeInfo;
exports.fetchAlertsInfo = fetchAlertsInfo;
exports.dashboardWatcher = dashboardWatcher;

var
/* istanbul ignore next */
_axios = _interopRequireDefault(require("axios"));

var
/* istanbul ignore next */
_effects = require("redux-saga/effects");

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../store/actions/actionTypes"));

var
/* istanbul ignore next */
actionCreators = _interopRequireWildcard(require("../store/actions/exportActionCreators"));

function* fetchVolumeInfo() {
  /* istanbul ignore next */
  cov_2n9uyjhiix.f[0]++;
  cov_2n9uyjhiix.s[0]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[1]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], '/api/v1.0/get_volumes/', {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));
    const result =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[2]++, response.data);

    /* istanbul ignore next */
    cov_2n9uyjhiix.s[3]++;

    if (
    /* istanbul ignore next */
    (cov_2n9uyjhiix.b[1][0]++, result) &&
    /* istanbul ignore next */
    (cov_2n9uyjhiix.b[1][1]++, !result.message)) {
      /* istanbul ignore next */
      cov_2n9uyjhiix.b[0][0]++;
      cov_2n9uyjhiix.s[4]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchVolumes(result))
      );
    } else
    /* istanbul ignore next */
    {
      cov_2n9uyjhiix.b[0][1]++;
    }

    cov_2n9uyjhiix.s[5]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.enableFetchingAlerts(false))
    );
  } catch (error) {
    const defaultResponse =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[6]++, []);

    /* istanbul ignore next */
    cov_2n9uyjhiix.s[7]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.fetchVolumes(defaultResponse))
    );

    /* istanbul ignore next */
    cov_2n9uyjhiix.s[8]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.enableFetchingAlerts(false))
    );
  } finally {
    /* istanbul ignore next */
    cov_2n9uyjhiix.s[9]++;

    if (yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      cancelled)()
    )) {
      /* istanbul ignore next */
      cov_2n9uyjhiix.b[2][0]++;
      const defaultResponse =
      /* istanbul ignore next */
      (cov_2n9uyjhiix.s[10]++, []);

      /* istanbul ignore next */
      cov_2n9uyjhiix.s[11]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchVolumes(defaultResponse))
      );

      /* istanbul ignore next */
      cov_2n9uyjhiix.s[12]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.enableFetchingAlerts(false))
      );
    } else
    /* istanbul ignore next */
    {
      cov_2n9uyjhiix.b[2][1]++;
    }
  }
}

function* fetchAlertsInfo() {
  /* istanbul ignore next */
  cov_2n9uyjhiix.f[1]++;
  cov_2n9uyjhiix.s[13]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[14]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], "/api/v1.0/get_alert_info", {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));
    const result =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[15]++, response.data);

    /* istanbul ignore next */
    cov_2n9uyjhiix.s[16]++;

    if (result) {
      /* istanbul ignore next */
      cov_2n9uyjhiix.b[3][0]++;
      cov_2n9uyjhiix.s[17]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchAlerts(result.alerts))
      );
    } else
    /* istanbul ignore next */
    {
      cov_2n9uyjhiix.b[3][1]++;
    }
  } catch (error) {// console.log(error);
  }
}

function* fetchStorageInfo() {
  /* istanbul ignore next */
  cov_2n9uyjhiix.f[2]++;
  cov_2n9uyjhiix.s[18]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[19]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], `/api/v1.0/available_storage/?ts=${Date.now()}`, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));
    const result =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[20]++, response.data);

    /* istanbul ignore next */
    cov_2n9uyjhiix.s[21]++;

    if (result) {
      /* istanbul ignore next */
      cov_2n9uyjhiix.b[4][0]++;
      cov_2n9uyjhiix.s[22]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchStorage(result[0] ?
        /* istanbul ignore next */
        (cov_2n9uyjhiix.b[5][0]++, result[0].avail_size / result[0].total_size * 100) :
        /* istanbul ignore next */
        (cov_2n9uyjhiix.b[5][1]++, 0), result[0].total_size - result[0].avail_size, result[0].avail_size, result[0].arraySize))
      );
    } else
    /* istanbul ignore next */
    {
      cov_2n9uyjhiix.b[4][1]++;
    }
  } catch (error) {// console.log(error);
  }
}

function* fetchPerformanceInfo() {
  /* istanbul ignore next */
  cov_2n9uyjhiix.f[3]++;
  cov_2n9uyjhiix.s[23]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[24]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], `/api/v1.0/perf/all?ts=${Date.now()}`, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));
    const result =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[25]++, response.data);

    /* istanbul ignore next */
    cov_2n9uyjhiix.s[26]++;

    if (result) {
      /* istanbul ignore next */
      cov_2n9uyjhiix.b[6][0]++;
      cov_2n9uyjhiix.s[27]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchPerformance(Math.round(result.iops_read), Math.round(result.iops_write), Math.round(result.bw_total / (1000 * 1000) * 100) / 100))
      );
    } else
    /* istanbul ignore next */
    {
      cov_2n9uyjhiix.b[6][1]++;
    }
  } catch (error) {// console.log(error);
  }
}

function* fetchIpAndMacInfo() {
  /* istanbul ignore next */
  cov_2n9uyjhiix.f[4]++;
  cov_2n9uyjhiix.s[28]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[29]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], "/api/v1.0/get_ip_and_mac", {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));
    const result =
    /* istanbul ignore next */
    (cov_2n9uyjhiix.s[30]++, response.data);

    /* istanbul ignore next */
    cov_2n9uyjhiix.s[31]++;

    if (result) {
      /* istanbul ignore next */
      cov_2n9uyjhiix.b[7][0]++;
      cov_2n9uyjhiix.s[32]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.fetchIpAndMac(result.ip, result.mac, result.host))
      );
    } else
    /* istanbul ignore next */
    {
      cov_2n9uyjhiix.b[7][1]++;
    }
  } catch (error) {// console.log(error);
  }
}

function* dashboardWatcher() {
  /* istanbul ignore next */
  cov_2n9uyjhiix.f[5]++;
  cov_2n9uyjhiix.s[33]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_VOLUME_INFO, fetchVolumeInfo)
  );

  /* istanbul ignore next */
  cov_2n9uyjhiix.s[34]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_ALERTS_INFO, fetchAlertsInfo)
  );

  /* istanbul ignore next */
  cov_2n9uyjhiix.s[35]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_STORAGE_INFO, fetchStorageInfo)
  );

  /* istanbul ignore next */
  cov_2n9uyjhiix.s[36]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_PERFORMANCE_INFO, fetchPerformanceInfo)
  );

  /* istanbul ignore next */
  cov_2n9uyjhiix.s[37]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_FETCH_IPANDMAC_INFO, fetchIpAndMacInfo)
  ); // console.log("This is async operation");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,