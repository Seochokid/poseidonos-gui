{"version":3,"sources":["index.js"],"names":["io","require","styles","theme","formContainer","width","display","padding","spacing","flexWrap","boxSizing","volBtnContainer","margin","unitSelect","marginTop","height","unitText","justifyContent","breakpoints","down","formControl","button","lineHeight","volumeName","volumeUnit","minWidth","volumeCreatePaper","createHeader","customTheme","card","header","caption","color","marginBottom","labelCheckbox","CreateVolume","Component","constructor","props","state","volume_count","volume_name","volume_suffix","volume_size","volume_description","volume_units","form_valid","open","alert_description","maxbw","maxiops","stop_on_error_checkbox","mount_vol","setUnit","bind","handleChange","createVolumeInParent","handleClose","componentDidMount","createVolSocketEndPoint","createVolSocket","transports","query","localStorage","getItem","on","console","log","msg","totalCount","total_count","pass","description","errorMsg","toggleCreateVolumeButton","showStorageAlert","alertType","alertTitle","errorCode","fetchVolumes","event","setState","target","value","name","isError","errorDesc","length","parseInt","maxVolumeCount","createVolume","render","classes","volumeCountTitle","volCount","PageTheme","min","max","inputProps","id","createVolumeButton","propTypes","PropTypes","func","isRequired","mapStateToProps","storageReducer","mapDispatchToProps","dispatch","flag","actionCreators","alertParams","type","actionTypes","SAGA_FETCH_VOLUMES"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <File description> *\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport {\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  withStyles,\n  TextField,\n  FormControl,\n  Select,\n  MenuItem,\n  Checkbox,\n  FormControlLabel,\n  Tooltip\n} from '@material-ui/core';\nimport { customTheme, PageTheme } from '../../../theme';\nimport '../../../containers/Volume/Volume.css';\nimport './CreateVolume.css';\nimport AlertDialog from '../../Dialog';\nimport * as actionCreators from \"../../../store/actions/exportActionCreators\";\nimport * as actionTypes from \"../../../store/actions/actionTypes\";\n\nconst io = require('socket.io-client');\n\nconst styles = (theme) => ({\n  formContainer: {\n    width: '100%',\n    display: 'flex',\n    padding: theme.spacing(0, 4),\n    flexWrap: 'wrap',\n    boxSizing: 'border-box'\n  },\n  volBtnContainer: {\n    margin: theme.spacing(1, 0)\n  },\n  unitSelect: {\n    marginTop: theme.spacing(2),\n    height: 32\n  },\n  unitText: {\n    width: 'calc(80% - 60px)',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('xs')]: {\n      width: '60%'\n    }\n  },\n  formControl: {\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'center'\n    }\n  },\n  button: {\n    height: '1.8rem',\n    lineHeight: '0px'\n  },\n  volumeName: {\n    width: '80%'\n  },\n  volumeUnit: {\n    minWidth: 60,\n    [theme.breakpoints.down('xs')]: {\n      width: '20%'\n    }\n  },\n  volumeCreatePaper: {\n    height: 330,\n    [theme.breakpoints.down('xs')]: {\n      height: 470\n    }\n  },\n  createHeader: customTheme.card.header,\n  caption: {\n    color: '#424850',\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  labelCheckbox: {\n    marginTop: theme.spacing(3),\n  }\n});\n\nclass CreateVolume extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      volume_count: 1,\n      volume_name: 'vol',\n      volume_suffix: 0,\n      volume_size: 100,\n      volume_description: '',\n      volume_units: 'GB',\n      form_valid: true,\n      open: false,\n      alert_description: '',\n      maxbw: 0,\n      maxiops: 0,\n      stop_on_error_checkbox: false,\n      mount_vol: true,\n    };\n\n    this.setUnit = this.setUnit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.createVolumeInParent = this.createVolumeInParent.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n\n  componentDidMount() {\n\n    // namespace to connect to the websocket for multi-volume creation\n    const createVolSocketEndPoint = \":5000/create_vol\";\n\n    const createVolSocket = io(createVolSocketEndPoint, {\n      transports: ['websocket'],\n      query: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n\n    createVolSocket.on('connect', () => {\n      console.log(\"connected to create volume socket\")\n    })\n    // callback function for create multi-volume response\n    createVolSocket.on(\"create_multi_volume\", msg => {\n      const totalCount = msg.total_count\n      const {pass, description} = msg\n      const errorMsg = `Status: ${pass}/${totalCount} volume(s) created successfully`\n      this.props.toggleCreateVolumeButton(false);\n      this.props.showStorageAlert({\n        alertType: 'info',\n        alertTitle: 'Create Volume',\n        errorMsg,\n        errorCode: description,\n      });\n      this.props.fetchVolumes()\n    });\n  }\n\n  setUnit(event) {\n    this.setState({ volume_units: event.target.value });\n  }\n\n  handleChange(event) {\n\n    const { name, value } = event.target;\n    if (name === 'stop_on_error_checkbox') {\n      this.setState({ stop_on_error_checkbox: !this.state.stop_on_error_checkbox });\n    }\n    else if (name === 'mount_vol_checkbox') {\n      this.setState({ mount_vol: !this.state.mount_vol });\n    }\n    else\n      this.setState({ [name]: value });\n  }\n\n  handleClose() {\n    this.setState({ open: false });\n  }\n\n  createVolumeInParent() {\n    let isError = true\n    let errorDesc = ''\n    if (this.state.volume_size.length === 0)\n      errorDesc = \"Please Enter Volume Size\"\n    else if (this.state.volume_size < 1)\n      errorDesc = \"Volume Size Should be greater than 0\"\n    else if (this.state.volume_name.length < 1)\n      errorDesc = \"Please Enter Volume Name\"\n    else if (this.state.volume_count.length === 0)\n      errorDesc = \"Please Enter Volume Count\"\n    else if (this.state.volume_count < 1)\n      errorDesc = \"Volume Count should be greater than 0\"\n    else if (this.state.volume_count > parseInt(this.props.maxVolumeCount,10))\n      errorDesc = `Volume Count should not exceed ${ this.props.maxVolumeCount}`\n    else if (this.state.volume_count > 1 && this.state.volume_suffix < 0)\n      errorDesc = \"Suffix Value cannot be negative\"\n    else if (this.state.volume_count > 1 && this.state.volume_suffix === null)\n      errorDesc = \"Please Enter Suffix Start Value\"\n    else if (this.state.maxbw.length === 0)\n      errorDesc = \"Please Enter Maximum Bandwidth (MB/s) \"\n    else if (this.state.maxiops.length === 0)\n      errorDesc = \"Please Enter Maximum IOPS (KIOPS)\"\n    else if (this.state.maxbw < 0)\n      errorDesc = \"Max Bandwidth cannot be negative\"\n    else if (this.state.maxiops < 0)\n      errorDesc = \"Maximum IOPS be negative\"\n    else if (this.state.maxiops > 0 && this.state.maxiops < 10)\n      errorDesc = \"Invalid value for Maximum IOPS\"\n    else\n      isError = false\n\n    if (isError === true) {\n      this.setState({ open: true, alert_description: errorDesc });\n      return;\n    }\n\n    this.props.createVolume({ ...this.state });\n\n    this.setState({\n      ...this.state,\n      volume_count: 1,\n      volume_name: 'vol',\n      volume_suffix: 0,\n      volume_size: 100,\n      volume_description: '',\n      volume_units: 'GB',\n      maxbw: 0,\n      maxiops: 0,\n      stop_on_error_checkbox: false,\n      mount_vol: true,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    let volumeCountTitle\n    if (this.props.volCount > 1)\n      volumeCountTitle = `Specify the number of volumes to create. ${ this.props.volCount } volumes already exist. POS supports max ${ this.props.maxVolumeCount } volumes`\n    else if (this.props.volCount === 1)\n      volumeCountTitle = `Specify the number of volumes to create. ${ this.props.volCount } volume already exists. POS supports max ${ this.props.maxVolumeCount } volumes`\n    else\n      volumeCountTitle = `Specify the number of volumes to create. POS supports max ${ this.props.maxVolumeCount } volumes`\n\n    return (\n      <ThemeProvider theme={PageTheme}>\n        <Paper className={classes.volumeCreatePaper}>\n          <Grid item xs={12}>\n            <Typography className={classes.createHeader}>\n              Create Volume\n            </Typography>\n          </Grid>\n          <form className={classes.formContainer}>\n            <Grid item container xs={12} sm={6} justify=\"flex-start\" className={classes.formControl}>\n              <Tooltip\n                title={volumeCountTitle}\n                placement=\"bottom-start\"\n              >\n                <FormControl className={classes.volumeName}>\n                  <TextField\n                    id=\"create-vol-count\"\n                    name=\"volume_count\"\n                    label=\"Volume Count\"\n                    type=\"number\"\n                    inputProps={{\n                        min: 1,\n                        max: this.props.maxVolumeCount,\n                        'data-testid': \"create-vol-count\"\n                    }}\n                    value={this.state.volume_count}\n                    onChange={this.handleChange}\n                    required=\"true\"\n                  />\n                </FormControl>\n              </Tooltip>\n            </Grid>\n            <Grid item container xs={12} sm={6} justify=\"flex-end\" className={classes.formControl}>\n              <FormControl className={classes.volumeName}>\n                <FormControlLabel\n                  control={(\n<Checkbox name=\"mount_vol_checkbox\" color=\"primary\" id=\"mount-vol-checkbox\"\n                      checked={this.state.mount_vol}\n                      value=\"Mount Volume\"\n                      onChange={this.handleChange}\n/>\n)}\n\n                  label=\"Mount Volume\"\n                  className={classes.labelCheckbox}\n                />\n              </FormControl>\n            </Grid>\n            <Grid item container xs={12}>\n              <Typography variant=\"h4\" component=\"h4\" className={classes.caption} display=\"block\">\n                For Volume Count &gt; 1, please provide a seed in the Suffix Start Value field (e.g. 0,1)\n              </Typography>\n            </Grid>\n\n            <Grid item container xs={12} sm={6} justify=\"flex-start\" className={classes.formControl}>\n              <FormControl className={classes.volumeName}>\n                <TextField\n                  id=\"create-vol-name\"\n                  label=\"Volume Name\"\n                  name=\"volume_name\"\n                  value={this.state.volume_name}\n                  onChange={this.handleChange}\n                  inputProps={{\n                            'data-testid': \"create-vol-name\"\n                  }}\n                  required=\"true\"\n                />\n              </FormControl>\n            </Grid>\n            <Grid item container xs={12} sm={6} justify=\"flex-end\" className={classes.formControl}>\n              <Tooltip\n                title=\" Min suffix value allowed is 0.\n                        The suffix will be appended to the volume name to form the final volume name (e.g. vol_0, vol_1)\"\n                placement=\"bottom-start\"\n                disableFocusListener={this.state.volume_count < 2}\n                disableHoverListener={this.state.volume_count < 2}\n                disableTouchListener={this.state.volume_count < 2}\n              >\n                <FormControl className={classes.volumeName}>\n                  <TextField\n                    id=\"create-vol-suffix\"\n                    label=\"Suffix Start Value\"\n                    name=\"volume_suffix\"\n                    type=\"number\"\n\n                    InputProps={{ inputProps: { min: 0 } }}\n                    value={this.state.volume_suffix}\n                    onChange={this.handleChange}\n                    disabled={this.state.volume_count < 2}\n                  />\n                </FormControl>\n              </Tooltip>\n            </Grid>\n            <Grid item container xs={12} sm={6} justify=\"flex-start\" className={classes.formControl}>\n              <FormControl className={classes.unitText}>\n                <TextField\n                  id=\"create-vol-size\"\n                  label=\"Volume Size\"\n                  name=\"volume_size\"\n                  value={this.state.volume_size}\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  inputProps={{\n                            'data-testid': \"create-vol-size\"\n                  }}\n                  required=\"true\"\n                />\n              </FormControl>\n              <FormControl className={classes.volumeUnit}>\n                <Select\n                  value={this.state.volume_units}\n                  onChange={this.setUnit}\n                  inputProps={{\n                    name: 'Volume Unit',\n                    id: 'vol_unit'\n                  }}\n                  SelectDisplayProps={{\n                    'data-testid': 'volume-unit'\n                  }}\n                  className={classes.unitSelect}\n                >\n                  <MenuItem value=\"GB\">GB</MenuItem>\n                  <MenuItem value=\"TB\">TB</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n\n            <Grid item container xs={12} sm={6} justify=\"flex-end\" className={classes.formControl}>\n              <Tooltip title=\"Min Value 10. 0 means max\" placement=\"bottom-start\">\n                <FormControl className={classes.volumeName}>\n                  <TextField\n                    id=\"create-vol-maxiops\"\n                    label=\"Maximum IOPS (KIOPS)\"\n                    name=\"maxiops\"\n                    value={this.state.maxiops}\n                    onChange={this.handleChange}\n                    type=\"number\"\n                    // placeholder=\"Min Value 10. 0 means max\"\n                    inputProps={{ min: 0 }}\n                    required=\"true\"\n                  />\n                </FormControl>\n              </Tooltip>\n            </Grid>\n            <Grid item container xs={12} sm={6} justify=\"flex-start\" className={classes.formControl}>\n              <Tooltip title=\"0 means max\" placement=\"bottom-start\">\n                <FormControl className={classes.volumeName}>\n                  <TextField\n                    id=\"create-vol-maxbw\"\n                    label=\"Maximum Bandwidth (MB/s)\"\n                    name=\"maxbw\"\n                    value={this.state.maxbw}\n                    onChange={this.handleChange}\n                    type=\"number\"\n                    // placeholder=\"0 means max\"\n                    inputProps={{ min: 0 }}\n                    required=\"true\"\n                  />\n                </FormControl>\n              </Tooltip>\n            </Grid>\n\n\n            <Grid item container xs={12} sm={6} justify=\"flex-end\" className={classes.formControl}>\n              <FormControl className={classes.volumeName}>\n                <Tooltip\n                  title=\"Do you want to proceed with subsequent volume creation in case an error occurs or abort the remaining process?\"\n                  placement=\"top-start\"\n                  disableFocusListener={this.state.volume_count < 2}\n                  disableHoverListener={this.state.volume_count < 2}\n                  disableTouchListener={this.state.volume_count < 2}\n                >\n                  <FormControlLabel\n                    disabled={this.state.volume_count < 2}\n                    control={(\n<Checkbox name=\"stop_on_error_checkbox\" color=\"primary\" id=\"create-vol-stop-on-error-checkbox\"\n                        checked={this.state.stop_on_error_checkbox}\n                        value=\"Stop on error\"\n                        onChange={this.handleChange}\n/>\n)}\n                    label=\"Stop Multi-Volume Creation on Error\"\n                    className={classes.labelCheckbox}\n                  />\n                </Tooltip>\n              </FormControl>\n            </Grid>\n            {/* <Grid item container xs={12} sm={6} justify=\"flex-end\" className={classes.formControl}>\n              <FormControl className={classes.volumeName}>\n                  <FormControlLabel\n                    control={\n                      <Checkbox name=\"mount_vol_checkbox\" color=\"primary\" id=\"mount-vol-checkbox\"\n                        checked={this.state.mount_vol}\n                        value=\"Mount Volume\"\n                        onChange={this.handleChange}\n                      />\n                    }\n\n                    label=\"Mount Volume\"\n                    className={classes.labelCheckbox}\n                  />\n              </FormControl>\n            </Grid> */}\n            <Grid item container xs={12} display=\"flex\" justify=\"flex-start\" className={`${classes.volBtnContainer} ${classes.formControl}`}>\n              <Tooltip\n                title=\"Volume Creation is in progress. Please wait for sometime.\"\n                placement=\"right-start\"\n                open={this.props.createVolumeButton}\n              >\n                <Button\n                  onClick={this.createVolumeInParent}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  data-testid=\"createvolume-btn\"\n                  className={classes.button}\n                  disabled={this.props.createVolumeButton}\n                >\n                  Create Volume\n                </Button>\n              </Tooltip>\n            </Grid>\n          </form>\n          <AlertDialog\n            title=\"Create Volume\"\n            description={this.state.alert_description}\n            type=\"alert\"\n            open={this.state.open}\n            handleClose={this.handleClose}\n          />\n        </Paper>\n      </ThemeProvider>\n    );\n  }\n}\n\nCreateVolume.propTypes = {\n  createVolume: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    createVolumeButton: state.storageReducer.createVolumeButton,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleCreateVolumeButton: (flag) => dispatch(actionCreators.toggleCreateVolumeButton(flag)),\n    showStorageAlert: (alertParams) => dispatch(actionCreators.showStorageAlert(alertParams)),\n    fetchVolumes: () => dispatch({ type: actionTypes.SAGA_FETCH_VOLUMES }),\n  };\n}\n\n\nexport default withStyles(styles)((connect(mapStateToProps, mapDispatchToProps))(((CreateVolume))));\n"]}