eab2fe8ebc2ce90cd453bbbf561691a8
/* istanbul ignore next */
"use strict";

var cov_2gpgyeic3u = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/hardwareSensorActions.js";
  var hash = "6214f693af3cf9458711d376f9d9ab8ab77cffe1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/hardwareSensorActions.js",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 36
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "1": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "2": {
        start: {
          line: 36,
          column: 34
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "3": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 40,
          column: 6
        }
      },
      "4": {
        start: {
          line: 43,
          column: 42
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "5": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 47,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 36
          },
          end: {
            line: 29,
            column: 37
          }
        },
        loc: {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 34
          },
          end: {
            line: 36,
            column: 35
          }
        },
        loc: {
          start: {
            line: 36,
            column: 48
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 36
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 43,
            column: 42
          },
          end: {
            line: 43,
            column: 43
          }
        },
        loc: {
          start: {
            line: 43,
            column: 56
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 43
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "6214f693af3cf9458711d376f9d9ab8ab77cffe1"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchTemperatureSensorInfo = exports.fetchFanSensorInfo = exports.fetchPowerSensorInfo = void 0;

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("./actionTypes"));

/* istanbul ignore next */
cov_2gpgyeic3u.s[0]++;

const fetchPowerSensorInfo = serverinfo => {
  /* istanbul ignore next */
  cov_2gpgyeic3u.f[0]++;
  cov_2gpgyeic3u.s[1]++;
  return {
    type: actionTypes.HARDWARE_SENSORS_FETCH_POWER_SENSOR_INFORMATION,
    serverinfo
  };
};

/* istanbul ignore next */
exports.fetchPowerSensorInfo = fetchPowerSensorInfo;
cov_2gpgyeic3u.s[2]++;

const fetchFanSensorInfo = serverinfo => {
  /* istanbul ignore next */
  cov_2gpgyeic3u.f[1]++;
  cov_2gpgyeic3u.s[3]++;
  return {
    type: actionTypes.HARDWARE_SENSORS_FETCH_FAN_SENSOR_INFORMATION,
    serverinfo
  };
};

/* istanbul ignore next */
exports.fetchFanSensorInfo = fetchFanSensorInfo;
cov_2gpgyeic3u.s[4]++;

const fetchTemperatureSensorInfo = serverinfo => {
  /* istanbul ignore next */
  cov_2gpgyeic3u.f[2]++;
  cov_2gpgyeic3u.s[5]++;
  return {
    type: actionTypes.HARDWARE_SENSORS_FETCH_TEMPERATURE_SENSOR_INFORMATION,
    serverinfo
  };
};

/* istanbul ignore next */
exports.fetchTemperatureSensorInfo = fetchTemperatureSensorInfo;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhhcmR3YXJlU2Vuc29yQWN0aW9ucy5qcyJdLCJuYW1lcyI6WyJmZXRjaFBvd2VyU2Vuc29ySW5mbyIsInNlcnZlcmluZm8iLCJ0eXBlIiwiYWN0aW9uVHlwZXMiLCJIQVJEV0FSRV9TRU5TT1JTX0ZFVENIX1BPV0VSX1NFTlNPUl9JTkZPUk1BVElPTiIsImZldGNoRmFuU2Vuc29ySW5mbyIsIkhBUkRXQVJFX1NFTlNPUlNfRkVUQ0hfRkFOX1NFTlNPUl9JTkZPUk1BVElPTiIsImZldGNoVGVtcGVyYXR1cmVTZW5zb3JJbmZvIiwiSEFSRFdBUkVfU0VOU09SU19GRVRDSF9URU1QRVJBVFVSRV9TRU5TT1JfSU5GT1JNQVRJT04iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBCQTtBQUFBO0FBQUE7Ozs7O0FBRU8sTUFBTUEsb0JBQW9CLEdBQUdDLFVBQVUsSUFBSTtBQUFBO0FBQUE7QUFBQTtBQUM5QyxTQUFPO0FBQ0hDLElBQUFBLElBQUksRUFBRUMsV0FBVyxDQUFDQywrQ0FEZjtBQUVISCxJQUFBQTtBQUZHLEdBQVA7QUFJSCxDQUxNOzs7Ozs7QUFPQSxNQUFNSSxrQkFBa0IsR0FBR0osVUFBVSxJQUFJO0FBQUE7QUFBQTtBQUFBO0FBQzVDLFNBQU87QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxXQUFXLENBQUNHLDZDQURmO0FBRUhMLElBQUFBO0FBRkcsR0FBUDtBQUlILENBTE07Ozs7OztBQU9BLE1BQU1NLDBCQUEwQixHQUFHTixVQUFVLElBQUk7QUFBQTtBQUFBO0FBQUE7QUFDcEQsU0FBTztBQUNIQyxJQUFBQSxJQUFJLEVBQUVDLFdBQVcsQ0FBQ0sscURBRGY7QUFFSFAsSUFBQUE7QUFGRyxHQUFQO0FBSUgsQ0FMTSIsInNvdXJjZXNDb250ZW50IjpbIi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgQ09QWVJJR0hUIChjKSAyMDE5IFNBTVNVTkcgRUxFQ1RST05JQ1MgQ08uLCBMVEQuICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgIEFMTCBSSUdIVFMgUkVTRVJWRUQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCB0byBsaWNlbnNlZXMgb2YgU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gICAgICAgIC9cbi8gICBwcm9kdWN0cyB0byB1c2Ugb3IgYWJzdHJhY3QgdGhpcyBjb21wdXRlciBwcm9ncmFtIGZvciB0aGUgc29sZSBwdXJwb3NlIG9mICAgICAgICAgL1xuLyAgIGltcGxlbWVudGluZyBhIHByb2R1Y3QgYmFzZWQgb24gU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gcHJvZHVjdHMuICAgICAgICAgICAvXG4vICAgTm8gb3RoZXIgcmlnaHRzIHRvIHJlcHJvZHVjZSwgdXNlLCBvciBkaXNzZW1pbmF0ZSB0aGlzIGNvbXB1dGVyIHByb2dyYW0sICAgICAgICAgIC9cbi8gICB3aGV0aGVyIGluIHBhcnQgb3IgaW4gd2hvbGUsIGFyZSBncmFudGVkLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLyBcbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIG1ha2VzIG5vIHJlcHJlc2VudGF0aW9uIG9yIHdhcnJhbnRpZXMgd2l0aCAgICAgICAgICAvXG4vICAgcmVzcGVjdCB0byB0aGUgcGVyZm9ybWFuY2Ugb2YgdGhpcyBjb21wdXRlciBwcm9ncmFtLCBhbmQgc3BlY2lmaWNhbGx5IGRpc2NsYWltcyAgIC9cbi8gICBhbnkgcmVzcG9uc2liaWxpdHkgZm9yIGFueSBkYW1hZ2VzLCBzcGVjaWFsIG9yIGNvbnNlcXVlbnRpYWwsIGNvbm5lY3RlZCAgICAgICAgICAgL1xuLyAgIHdpdGggdGhlIHVzZSBvZiB0aGlzIHByb2dyYW0uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuXG5ERVNDUklQVElPTjogPENvbnRhaW5zIGFjdGlvbnMgZm9yIGhhcmR3YXJlIGNvbnRhaW5lcj4gKlxuQE5BTUUgOiBoYXJkd2FyZVNlbnNvckFjdGlvbnMuanNcbkBBVVRIT1JTOiBKYXkgU2FuZ2hhdmkgXG5AVmVyc2lvbiA6IDEuMCAqXG5AUkVWSVNJT04gSElTVE9SWVxuWzAzLzExLzIwMTldIFtKYXldIDogUHJvdG90eXBpbmcuLi4uLi4uLi4uLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiovXG5cbmltcG9ydCAqIGFzIGFjdGlvblR5cGVzIGZyb20gJy4vYWN0aW9uVHlwZXMnO1xuXG5leHBvcnQgY29uc3QgZmV0Y2hQb3dlclNlbnNvckluZm8gPSBzZXJ2ZXJpbmZvID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBhY3Rpb25UeXBlcy5IQVJEV0FSRV9TRU5TT1JTX0ZFVENIX1BPV0VSX1NFTlNPUl9JTkZPUk1BVElPTixcbiAgICAgICAgc2VydmVyaW5mbyxcbiAgICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGZldGNoRmFuU2Vuc29ySW5mbyA9IHNlcnZlcmluZm8gPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IGFjdGlvblR5cGVzLkhBUkRXQVJFX1NFTlNPUlNfRkVUQ0hfRkFOX1NFTlNPUl9JTkZPUk1BVElPTixcbiAgICAgICAgc2VydmVyaW5mbyxcbiAgICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGZldGNoVGVtcGVyYXR1cmVTZW5zb3JJbmZvID0gc2VydmVyaW5mbyA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogYWN0aW9uVHlwZXMuSEFSRFdBUkVfU0VOU09SU19GRVRDSF9URU1QRVJBVFVSRV9TRU5TT1JfSU5GT1JNQVRJT04sXG4gICAgICAgIHNlcnZlcmluZm8sXG4gICAgfTtcbn07XG4iXX0=