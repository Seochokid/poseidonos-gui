{"version":3,"sources":["index.test.js"],"names":["wrapper","alertClusterList","alertFields","radioindex","alertClusterName","selectedAlertSubCluster","alertType","beforeEach","rootReducers","alertManagementReducer","store","i18n","test","getByLabelText","queryAllByText","getByTestId","getAllByText","asFragment","expect","toMatchSnapshot","input","fireEvent","change","target","value","afterEach","cleanup"],"mappings":";;;;AA2BA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,IAAIA,OAAJ;AACA,IAAIC,gBAAgB,GAAC,CAAC;AAACC,EAAAA,WAAW,EAAC,CAAC,YAAD,EAAc,cAAd,EAA6B,IAA7B;AAAb,CAAD,CAArB;AACA,MAAMC,UAAU,GAAC,CAAjB;AACA,MAAMC,gBAAgB,GAAG,QAAzB;AACA,MAAMC,uBAAuB,GAAG,QAAhC;AACA,MAAMC,SAAS,GAAG,QAAlB;AAEAC,UAAU,CAAC,MAAM;AACb,QAAMC,YAAY,GAAG,4BAAgB;AACjCC,IAAAA,sBAAsB,EAAtBA;AADiC,GAAhB,CAArB;AAGA,QAAMC,KAAK,GAAG,wBAAYF,YAAZ,CAAd;AAEAR,EAAAA,OAAO,GAAG,oBACN,6BAAC,6BAAD;AAAiB,IAAA,IAAI,EAAEW,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,oBAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,cAAD;AAAa,IAAA,gBAAgB,EAAET,gBAA/B;AAAiD,IAAA,UAAU,EAAEE,UAA7D;AAAyE,IAAA,gBAAgB,EAAEC,gBAA3F;AAA6G,IAAA,uBAAuB,EAAEC,uBAAtI;AAA+J,IAAA,SAAS,EAAEC,SAA1K;AAAqL,IAAA,gBAAgB,EAAC,YAAtM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADM,CAAV;AAMAL,EAAAA,gBAAgB,CAAC,CAAD,CAAhB,CAAoBC,WAApB,GAAkC,IAAlC;AAAuC;AAC1C,CAbS,CAAV;AAeAU,IAAI,CAAC,gCAAD,EAAmC,MAAM;AAAA,mBACyCZ,OADzC;AAAA,QACjCa,cADiC,YACjCA,cADiC;AAAA,QACjBC,cADiB,YACjBA,cADiB;AAAA,QACDC,WADC,YACDA,WADC;AAAA,QACYC,YADZ,YACYA,YADZ;AAAA,QAC0BC,UAD1B,YAC0BA,UAD1B;AAEzCC,EAAAA,MAAM,CAACD,UAAU,EAAX,CAAN,CAAqBE,eAArB;AACAJ,EAAAA,WAAW,CAAC,gBAAD,CAAX;AACA,QAAMK,KAAK,GAAGP,cAAc,CAAC,aAAD,CAA5B;;AAEAQ,oBAAUC,MAAV,CAAiBF,KAAjB,EAAwB;AAAEG,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAV,GAAxB;AAEH,CARG,CAAJ;AAUAZ,IAAI,CAAC,+DAAD,EAAkE,MAAM;AAAA,oBACUZ,OADV;AAAA,QAChEa,cADgE,aAChEA,cADgE;AAAA,QAChDC,cADgD,aAChDA,cADgD;AAAA,QAChCC,WADgC,aAChCA,WADgC;AAAA,QACnBC,YADmB,aACnBA,YADmB;AAAA,QACLC,UADK,aACLA,UADK;AAExEC,EAAAA,MAAM,CAACD,UAAU,EAAX,CAAN,CAAqBE,eAArB;AACAJ,EAAAA,WAAW,CAAC,gBAAD,CAAX;AAEH,CALG,CAAJ;AAOAU,SAAS,CAACC,eAAD,CAAT","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Alert Fields Test File\n@NAME : index.test.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport React from 'react';\nimport { Provider } from 'react-redux'\nimport { ReactDOM, findDOMNode } from 'react-dom'\nimport { I18nextProvider } from \"react-i18next\";\nimport { combineReducers, createStore } from 'redux'\nimport { render, fireEvent, cleanup } from '@testing-library/react';\nimport alertManagementReducer from \"../../../store/reducers/alertManagementReducer\"\nimport i18n from \"../../../i18n\";\nimport AlertFields from './index';\n\nlet wrapper;\nlet alertClusterList=[{alertFields:['usage_idle','usage_system','NA']}];\nconst radioindex=0;\nconst alertClusterName = \"Random\";\nconst selectedAlertSubCluster = 'Random';\nconst alertType = 'Random';\n\nbeforeEach(() => {\n    const rootReducers = combineReducers({\n        alertManagementReducer,\n    });\n    const store = createStore(rootReducers)\n\n    wrapper = render(\n        <I18nextProvider i18n={i18n}>\n            <Provider store={store}>\n                <AlertFields alertClusterList={alertClusterList} radioindex={radioindex} alertClusterName={alertClusterName} selectedAlertSubCluster={selectedAlertSubCluster} alertType={alertType} alertRadioButton=\"usage_idle\" />\n            </Provider>\n        </I18nextProvider>);\n    alertClusterList[0].alertFields = null;;\n});\n\ntest('renders alert fields component', () => {\n    const { getByLabelText, queryAllByText, getByTestId, getAllByText, asFragment } = wrapper;\n    expect(asFragment()).toMatchSnapshot();\n    getByTestId(\"AlertFieldsTag\")\n    const input = getByLabelText(/usage_idle/i)\n\n    fireEvent.change(input, { target: { value: \"Samsung # \\n\" } });\n    \n});\n\ntest('renders alert fields component will null for ternary operator', () => {\n    const { getByLabelText, queryAllByText, getByTestId, getAllByText, asFragment } = wrapper;\n    expect(asFragment()).toMatchSnapshot();\n    getByTestId(\"AlertFieldsTag\");\n    \n});\n\nafterEach(cleanup,)\n"]}