ff0c3b75ea42f5cce36359cf3cf9ef87
/* istanbul ignore next */
"use strict";

var cov_wjda0lu7b = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/headerActions.js";
  var hash = "7292378036facd8a44eba315014c732af307661a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/actions/headerActions.js",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 31
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "1": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "2": {
        start: {
          line: 36,
          column: 36
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "3": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 41,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 29,
            column: 32
          }
        },
        loc: {
          start: {
            line: 29,
            column: 46
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 36,
            column: 36
          },
          end: {
            line: 36,
            column: 37
          }
        },
        loc: {
          start: {
            line: 36,
            column: 66
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 36
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "7292378036facd8a44eba315014c732af307661a"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asyncIsiBOFOSRunning = exports.updateTimestamp = void 0;

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("./actionTypes"));

/* istanbul ignore next */
cov_wjda0lu7b.s[0]++;

const updateTimestamp = timestamp => {
  /* istanbul ignore next */
  cov_wjda0lu7b.f[0]++;
  cov_wjda0lu7b.s[1]++;
  return {
    type: actionTypes.UPDATE_TIMESTAMP,
    timestamp
  };
};

/* istanbul ignore next */
exports.updateTimestamp = updateTimestamp;
cov_wjda0lu7b.s[2]++;

const asyncIsiBOFOSRunning = (status, OS_RUNNING_STATUS) => {
  /* istanbul ignore next */
  cov_wjda0lu7b.f[1]++;
  cov_wjda0lu7b.s[3]++;
  return {
    type: actionTypes.GET_IS_IBOF_OS_RUNNING,
    OS_Running_Status: OS_RUNNING_STATUS,
    status
  };
};

/* istanbul ignore next */
exports.asyncIsiBOFOSRunning = asyncIsiBOFOSRunning;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlckFjdGlvbnMuanMiXSwibmFtZXMiOlsidXBkYXRlVGltZXN0YW1wIiwidGltZXN0YW1wIiwidHlwZSIsImFjdGlvblR5cGVzIiwiVVBEQVRFX1RJTUVTVEFNUCIsImFzeW5jSXNpQk9GT1NSdW5uaW5nIiwic3RhdHVzIiwiT1NfUlVOTklOR19TVEFUVVMiLCJHRVRfSVNfSUJPRl9PU19SVU5OSU5HIiwiT1NfUnVubmluZ19TdGF0dXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEwQkE7QUFBQTtBQUFBOzs7OztBQUVPLE1BQU1BLGVBQWUsR0FBSUMsU0FBRCxJQUFlO0FBQUE7QUFBQTtBQUFBO0FBQzFDLFNBQU87QUFDSEMsSUFBQUEsSUFBSSxFQUFDQyxXQUFXLENBQUNDLGdCQURkO0FBRUhILElBQUFBO0FBRkcsR0FBUDtBQUlILENBTE07Ozs7OztBQU9BLE1BQU1JLG9CQUFvQixHQUFHLENBQUNDLE1BQUQsRUFBUUMsaUJBQVIsS0FBOEI7QUFBQTtBQUFBO0FBQUE7QUFDOUQsU0FBTztBQUNITCxJQUFBQSxJQUFJLEVBQUNDLFdBQVcsQ0FBQ0ssc0JBRGQ7QUFFSEMsSUFBQUEsaUJBQWlCLEVBQUVGLGlCQUZoQjtBQUdIRCxJQUFBQTtBQUhHLEdBQVA7QUFLSCxDQU5NIiwic291cmNlc0NvbnRlbnQiOlsiLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICBDT1BZUklHSFQgKGMpIDIwMTkgU0FNU1VORyBFTEVDVFJPTklDUyBDTy4sIExURC4gICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgQUxMIFJJR0hUUyBSRVNFUlZFRCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkIHRvIGxpY2Vuc2VlcyBvZiBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiAgICAgICAgL1xuLyAgIHByb2R1Y3RzIHRvIHVzZSBvciBhYnN0cmFjdCB0aGlzIGNvbXB1dGVyIHByb2dyYW0gZm9yIHRoZSBzb2xlIHB1cnBvc2Ugb2YgICAgICAgICAvXG4vICAgaW1wbGVtZW50aW5nIGEgcHJvZHVjdCBiYXNlZCBvbiBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBwcm9kdWN0cy4gICAgICAgICAgIC9cbi8gICBObyBvdGhlciByaWdodHMgdG8gcmVwcm9kdWNlLCB1c2UsIG9yIGRpc3NlbWluYXRlIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgICAgICAgICAgL1xuLyAgIHdoZXRoZXIgaW4gcGFydCBvciBpbiB3aG9sZSwgYXJlIGdyYW50ZWQuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvIFxuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgU2Ftc3VuZyBFbGVjdHJvbmljcyBDby4sIEx0ZC4gbWFrZXMgbm8gcmVwcmVzZW50YXRpb24gb3Igd2FycmFudGllcyB3aXRoICAgICAgICAgIC9cbi8gICByZXNwZWN0IHRvIHRoZSBwZXJmb3JtYW5jZSBvZiB0aGlzIGNvbXB1dGVyIHByb2dyYW0sIGFuZCBzcGVjaWZpY2FsbHkgZGlzY2xhaW1zICAgL1xuLyAgIGFueSByZXNwb25zaWJpbGl0eSBmb3IgYW55IGRhbWFnZXMsIHNwZWNpYWwgb3IgY29uc2VxdWVudGlhbCwgY29ubmVjdGVkICAgICAgICAgICAvXG4vICAgd2l0aCB0aGUgdXNlIG9mIHRoaXMgcHJvZ3JhbS4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0vXG5cblxuREVTQ1JJUFRJT046IDxDb250YWlucyBwdXJlIGFjdGlvbnMgZm9yIEhlYWRlciBDb21wb25lbnQ+ICpcbkBOQU1FIDogaGVhZGVyQWN0aW9ucy5qc1xuQEFVVEhPUlM6IEpheSBIaXRlc2ggU2FuZ2hhdmkgXG5AVmVyc2lvbiA6IDEuMCAqXG5AUkVWSVNJT04gSElTVE9SWVxuWzAzLzA2LzIwMTldIFtKYXldIDogUHJvdG90eXBpbmcuLi4uLi4uLi4uLy8vLy8vLy8vLy8vLy8vLy8vLy9cbiovXG5pbXBvcnQgKiBhcyBhY3Rpb25UeXBlcyBmcm9tIFwiLi9hY3Rpb25UeXBlc1wiXG5cbmV4cG9ydCBjb25zdCB1cGRhdGVUaW1lc3RhbXAgPSAodGltZXN0YW1wKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTphY3Rpb25UeXBlcy5VUERBVEVfVElNRVNUQU1QLFxuICAgICAgICB0aW1lc3RhbXBcbiAgICB9O1xufVxuXG5leHBvcnQgY29uc3QgYXN5bmNJc2lCT0ZPU1J1bm5pbmcgPSAoc3RhdHVzLE9TX1JVTk5JTkdfU1RBVFVTKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTphY3Rpb25UeXBlcy5HRVRfSVNfSUJPRl9PU19SVU5OSU5HLFxuICAgICAgICBPU19SdW5uaW5nX1N0YXR1czogT1NfUlVOTklOR19TVEFUVVMsXG4gICAgICAgIHN0YXR1cyxcbiAgICB9O1xufVxuXG5cbiJdfQ==