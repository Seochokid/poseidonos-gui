ae6f98cc136c8e676e8c1106a38f8b97
/* istanbul ignore next */
"use strict";

var cov_1gy099mpc4 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/configurationsettingReducer.js";
  var hash = "ae1e88fa5f1772bf1b9914a7608969a680399bc2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/store/reducers/configurationsettingReducer.js",
    statementMap: {
      "0": {
        start: {
          line: 30,
          column: 21
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "1": {
        start: {
          line: 44,
          column: 36
        },
        end: {
          line: 93,
          column: 1
        }
      },
      "2": {
        start: {
          line: 45,
          column: 2
        },
        end: {
          line: 92,
          column: 3
        }
      },
      "3": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 50,
          column: 8
        }
      },
      "4": {
        start: {
          line: 53,
          column: 6
        },
        end: {
          line: 56,
          column: 8
        }
      },
      "5": {
        start: {
          line: 59,
          column: 6
        },
        end: {
          line: 64,
          column: 8
        }
      },
      "6": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 70,
          column: 8
        }
      },
      "7": {
        start: {
          line: 73,
          column: 6
        },
        end: {
          line: 76,
          column: 8
        }
      },
      "8": {
        start: {
          line: 79,
          column: 6
        },
        end: {
          line: 82,
          column: 8
        }
      },
      "9": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 88,
          column: 8
        }
      },
      "10": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 91,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 44,
            column: 36
          },
          end: {
            line: 44,
            column: 37
          }
        },
        loc: {
          start: {
            line: 44,
            column: 70
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 44
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 45
          },
          end: {
            line: 44,
            column: 57
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 2
          },
          end: {
            line: 92,
            column: 3
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        }, {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 77,
            column: 5
          }
        }, {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        }, {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        }, {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 91,
            column: 19
          }
        }],
        line: 45
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0, 0, 0, 0, 0, 0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "ae1e88fa5f1772bf1b9914a7608969a680399bc2"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../actions/actionTypes"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

const initialState =
/* istanbul ignore next */
(cov_1gy099mpc4.s[0]++, {
  emaillist: [],
  istypealert: false,
  alerttype: '',
  alertOpen: false,
  alerttitle: '',
  alertdescription: '',
  configuredsmtpserver: '',
  smtpserverip: '',
  smtpserverport: '',
  smtpserver: '',
  timeinterval: null
});

/* istanbul ignore next */
cov_1gy099mpc4.s[1]++;

const configurationsettingReducer = (state =
/* istanbul ignore next */
(cov_1gy099mpc4.b[0][0]++, initialState), action) => {
  /* istanbul ignore next */
  cov_1gy099mpc4.f[0]++;
  cov_1gy099mpc4.s[2]++;

  switch (action.type) {
    case actionTypes.CHANGE_EMAIL_LIST:
      /* istanbul ignore next */
      cov_1gy099mpc4.b[1][0]++;
      {
        /* istanbul ignore next */
        cov_1gy099mpc4.s[3]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            emaillist: action.val
          })
        );
      }

    case actionTypes.SET_ALERT_BOX:
      /* istanbul ignore next */
      cov_1gy099mpc4.b[1][1]++;
      {
        /* istanbul ignore next */
        cov_1gy099mpc4.s[4]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {}, action.payload)
        );
      }

    case actionTypes.SET_SMTP_SERVER:
      /* istanbul ignore next */
      cov_1gy099mpc4.b[1][2]++;
      {
        /* istanbul ignore next */
        cov_1gy099mpc4.s[5]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            smtpserver: action.payload.smtpserver,
            smtpserverip: action.payload.smtpserverip,
            smtpserverport: action.payload.smtpserverport
          })
        );
      }

    case actionTypes.FETCH_EMAIL_LIST:
      /* istanbul ignore next */
      cov_1gy099mpc4.b[1][3]++;
      {
        /* istanbul ignore next */
        cov_1gy099mpc4.s[6]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            emaillist: action.emaillist
          })
        );
      }

    case actionTypes.CHANGE_SMTP_SERVER:
      /* istanbul ignore next */
      cov_1gy099mpc4.b[1][4]++;
      {
        /* istanbul ignore next */
        cov_1gy099mpc4.s[7]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            configuredsmtpserver: state.smtpserver
          })
        );
      }

    case actionTypes.DELETE_CONFIGURED_SMTP_SERVER:
      /* istanbul ignore next */
      cov_1gy099mpc4.b[1][5]++;
      {
        /* istanbul ignore next */
        cov_1gy099mpc4.s[8]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            configuredsmtpserver: ''
          })
        );
      }

    case actionTypes.SET_IBOFOS_TIME_INTERVAL:
      /* istanbul ignore next */
      cov_1gy099mpc4.b[1][6]++;
      {
        /* istanbul ignore next */
        cov_1gy099mpc4.s[9]++;
        return (
          /* istanbul ignore next */
          _objectSpread({}, state, {
            timeinterval: action.timeinterval
          })
        );
      }

    default:
      /* istanbul ignore next */
      cov_1gy099mpc4.b[1][7]++;
      cov_1gy099mpc4.s[10]++;
      return state;
  }
};

/* istanbul ignore next */
var _default = configurationsettingReducer;

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZ3VyYXRpb25zZXR0aW5nUmVkdWNlci5qcyJdLCJuYW1lcyI6WyJpbml0aWFsU3RhdGUiLCJlbWFpbGxpc3QiLCJpc3R5cGVhbGVydCIsImFsZXJ0dHlwZSIsImFsZXJ0T3BlbiIsImFsZXJ0dGl0bGUiLCJhbGVydGRlc2NyaXB0aW9uIiwiY29uZmlndXJlZHNtdHBzZXJ2ZXIiLCJzbXRwc2VydmVyaXAiLCJzbXRwc2VydmVycG9ydCIsInNtdHBzZXJ2ZXIiLCJ0aW1laW50ZXJ2YWwiLCJjb25maWd1cmF0aW9uc2V0dGluZ1JlZHVjZXIiLCJzdGF0ZSIsImFjdGlvbiIsInR5cGUiLCJhY3Rpb25UeXBlcyIsIkNIQU5HRV9FTUFJTF9MSVNUIiwidmFsIiwiU0VUX0FMRVJUX0JPWCIsInBheWxvYWQiLCJTRVRfU01UUF9TRVJWRVIiLCJGRVRDSF9FTUFJTF9MSVNUIiwiQ0hBTkdFX1NNVFBfU0VSVkVSIiwiREVMRVRFX0NPTkZJR1VSRURfU01UUF9TRVJWRVIiLCJTRVRfSUJPRk9TX1RJTUVfSU5URVJWQUwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkE7QUFBQTtBQUFBOzs7Ozs7QUFFQSxNQUFNQSxZQUFZO0FBQUE7QUFBQSx3QkFBRztBQUNuQkMsRUFBQUEsU0FBUyxFQUFFLEVBRFE7QUFFbkJDLEVBQUFBLFdBQVcsRUFBRSxLQUZNO0FBR25CQyxFQUFBQSxTQUFTLEVBQUUsRUFIUTtBQUluQkMsRUFBQUEsU0FBUyxFQUFFLEtBSlE7QUFLbkJDLEVBQUFBLFVBQVUsRUFBRSxFQUxPO0FBTW5CQyxFQUFBQSxnQkFBZ0IsRUFBRSxFQU5DO0FBT25CQyxFQUFBQSxvQkFBb0IsRUFBRSxFQVBIO0FBUW5CQyxFQUFBQSxZQUFZLEVBQUUsRUFSSztBQVNuQkMsRUFBQUEsY0FBYyxFQUFFLEVBVEc7QUFVbkJDLEVBQUFBLFVBQVUsRUFBRSxFQVZPO0FBV25CQyxFQUFBQSxZQUFZLEVBQUU7QUFYSyxDQUFILENBQWxCOzs7OztBQWNBLE1BQU1DLDJCQUEyQixHQUFHLENBQUNDLEtBQUs7QUFBQTtBQUFBLDJCQUFHYixZQUFILENBQU4sRUFBdUJjLE1BQXZCLEtBQWtDO0FBQUE7QUFBQTtBQUFBOztBQUNwRSxVQUFRQSxNQUFNLENBQUNDLElBQWY7QUFDRSxTQUFLQyxXQUFXLENBQUNDLGlCQUFqQjtBQUFBO0FBQUE7QUFBb0M7QUFBQTtBQUFBO0FBQ2xDO0FBQUE7QUFBQSw0QkFDS0osS0FETDtBQUVFWixZQUFBQSxTQUFTLEVBQUVhLE1BQU0sQ0FBQ0k7QUFGcEI7QUFBQTtBQUlEOztBQUNELFNBQUtGLFdBQVcsQ0FBQ0csYUFBakI7QUFBQTtBQUFBO0FBQWdDO0FBQUE7QUFBQTtBQUM5QjtBQUFBO0FBQUEsNEJBQ0tOLEtBREwsTUFFS0MsTUFBTSxDQUFDTSxPQUZaO0FBQUE7QUFJRDs7QUFDRCxTQUFLSixXQUFXLENBQUNLLGVBQWpCO0FBQUE7QUFBQTtBQUFrQztBQUFBO0FBQUE7QUFDaEM7QUFBQTtBQUFBLDRCQUNLUixLQURMO0FBRUVILFlBQUFBLFVBQVUsRUFBRUksTUFBTSxDQUFDTSxPQUFQLENBQWVWLFVBRjdCO0FBR0VGLFlBQUFBLFlBQVksRUFBRU0sTUFBTSxDQUFDTSxPQUFQLENBQWVaLFlBSC9CO0FBSUVDLFlBQUFBLGNBQWMsRUFBRUssTUFBTSxDQUFDTSxPQUFQLENBQWVYO0FBSmpDO0FBQUE7QUFNRDs7QUFDRCxTQUFLTyxXQUFXLENBQUNNLGdCQUFqQjtBQUFBO0FBQUE7QUFBbUM7QUFBQTtBQUFBO0FBQ2pDO0FBQUE7QUFBQSw0QkFDS1QsS0FETDtBQUVFWixZQUFBQSxTQUFTLEVBQUVhLE1BQU0sQ0FBQ2I7QUFGcEI7QUFBQTtBQUlEOztBQUNELFNBQUtlLFdBQVcsQ0FBQ08sa0JBQWpCO0FBQUE7QUFBQTtBQUFxQztBQUFBO0FBQUE7QUFDbkM7QUFBQTtBQUFBLDRCQUNLVixLQURMO0FBRUVOLFlBQUFBLG9CQUFvQixFQUFFTSxLQUFLLENBQUNIO0FBRjlCO0FBQUE7QUFJRDs7QUFDRCxTQUFLTSxXQUFXLENBQUNRLDZCQUFqQjtBQUFBO0FBQUE7QUFBZ0Q7QUFBQTtBQUFBO0FBQzlDO0FBQUE7QUFBQSw0QkFDS1gsS0FETDtBQUVFTixZQUFBQSxvQkFBb0IsRUFBRTtBQUZ4QjtBQUFBO0FBSUQ7O0FBQ0QsU0FBS1MsV0FBVyxDQUFDUyx3QkFBakI7QUFBQTtBQUFBO0FBQTJDO0FBQUE7QUFBQTtBQUN6QztBQUFBO0FBQUEsNEJBQ0taLEtBREw7QUFFRUYsWUFBQUEsWUFBWSxFQUFFRyxNQUFNLENBQUNIO0FBRnZCO0FBQUE7QUFJRDs7QUFDRDtBQUFBO0FBQUE7QUFBQTtBQUNFLGFBQU9FLEtBQVA7QUE5Q0o7QUFnREQsQ0FqREQ7OztlQW1EZUQsMkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tL1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgIENPUFlSSUdIVCAoYykgMjAxOSBTQU1TVU5HIEVMRUNUUk9OSUNTIENPLiwgTFRELiAgICAgICAgICAgICAgICAgICAgICAvXG4vICAgICAgICAgICAgICAgICAgICAgICAgICBBTEwgUklHSFRTIFJFU0VSVkVEICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQgdG8gbGljZW5zZWVzIG9mIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuICAgICAgICAvXG4vICAgcHJvZHVjdHMgdG8gdXNlIG9yIGFic3RyYWN0IHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSBmb3IgdGhlIHNvbGUgcHVycG9zZSBvZiAgICAgICAgIC9cbi8gICBpbXBsZW1lbnRpbmcgYSBwcm9kdWN0IGJhc2VkIG9uIFNhbXN1bmcgRWxlY3Ryb25pY3MgQ28uLCBMdGQuIHByb2R1Y3RzLiAgICAgICAgICAgL1xuLyAgIE5vIG90aGVyIHJpZ2h0cyB0byByZXByb2R1Y2UsIHVzZSwgb3IgZGlzc2VtaW5hdGUgdGhpcyBjb21wdXRlciBwcm9ncmFtLCAgICAgICAgICAvXG4vICAgd2hldGhlciBpbiBwYXJ0IG9yIGluIHdob2xlLCBhcmUgZ3JhbnRlZC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8gXG4vICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC9cbi8gICBTYW1zdW5nIEVsZWN0cm9uaWNzIENvLiwgTHRkLiBtYWtlcyBubyByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50aWVzIHdpdGggICAgICAgICAgL1xuLyAgIHJlc3BlY3QgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIHRoaXMgY29tcHV0ZXIgcHJvZ3JhbSwgYW5kIHNwZWNpZmljYWxseSBkaXNjbGFpbXMgICAvXG4vICAgYW55IHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgZGFtYWdlcywgc3BlY2lhbCBvciBjb25zZXF1ZW50aWFsLCBjb25uZWN0ZWQgICAgICAgICAgIC9cbi8gICB3aXRoIHRoZSB1c2Ugb2YgdGhpcyBwcm9ncmFtLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL1xuLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvXG4vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS9cblxuXG5ERVNDUklQVElPTjogPENvbnRhaW5zIHJlZHVjZXIgZnVuY3Rpb24gZm9yIGNvbmZpZ3VyYXRpb24gcGFnZT4gKlxuQE5BTUUgOiBjb25maWd1cmF0aW9uc2V0dGluZ1JlZHVjZXIuanNcbkBBVVRIT1JTOiBQYWxhayBLYXBvb3JcbkBWZXJzaW9uIDogMS4wICpcbkBSRVZJU0lPTiBISVNUT1JZXG5bMDgvMjIvMjAxOV0gW1BhbGFrXSA6IFByb3RvdHlwaW5nLi4uLi4uLi4uLi8vLy8vLy8vLy8vLy8vLy8vLy8vXG4qL1xuXG5pbXBvcnQgKiBhcyBhY3Rpb25UeXBlcyBmcm9tICcuLi9hY3Rpb25zL2FjdGlvblR5cGVzJztcblxuY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICBlbWFpbGxpc3Q6IFtdLFxuICBpc3R5cGVhbGVydDogZmFsc2UsXG4gIGFsZXJ0dHlwZTogJycsXG4gIGFsZXJ0T3BlbjogZmFsc2UsXG4gIGFsZXJ0dGl0bGU6ICcnLFxuICBhbGVydGRlc2NyaXB0aW9uOiAnJyxcbiAgY29uZmlndXJlZHNtdHBzZXJ2ZXI6ICcnLFxuICBzbXRwc2VydmVyaXA6ICcnLFxuICBzbXRwc2VydmVycG9ydDogJycsXG4gIHNtdHBzZXJ2ZXI6ICcnLFxuICB0aW1laW50ZXJ2YWw6IG51bGwsXG59O1xuXG5jb25zdCBjb25maWd1cmF0aW9uc2V0dGluZ1JlZHVjZXIgPSAoc3RhdGUgPSBpbml0aWFsU3RhdGUsIGFjdGlvbikgPT4ge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBhY3Rpb25UeXBlcy5DSEFOR0VfRU1BSUxfTElTVDoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGVtYWlsbGlzdDogYWN0aW9uLnZhbCxcbiAgICAgIH07XG4gICAgfVxuICAgIGNhc2UgYWN0aW9uVHlwZXMuU0VUX0FMRVJUX0JPWDoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIC4uLmFjdGlvbi5wYXlsb2FkXG4gICAgICB9O1xuICAgIH1cbiAgICBjYXNlIGFjdGlvblR5cGVzLlNFVF9TTVRQX1NFUlZFUjoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIHNtdHBzZXJ2ZXI6IGFjdGlvbi5wYXlsb2FkLnNtdHBzZXJ2ZXIsXG4gICAgICAgIHNtdHBzZXJ2ZXJpcDogYWN0aW9uLnBheWxvYWQuc210cHNlcnZlcmlwLFxuICAgICAgICBzbXRwc2VydmVycG9ydDogYWN0aW9uLnBheWxvYWQuc210cHNlcnZlcnBvcnQsXG4gICAgICB9O1xuICAgIH1cbiAgICBjYXNlIGFjdGlvblR5cGVzLkZFVENIX0VNQUlMX0xJU1Q6IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBlbWFpbGxpc3Q6IGFjdGlvbi5lbWFpbGxpc3QsXG4gICAgICB9O1xuICAgIH1cbiAgICBjYXNlIGFjdGlvblR5cGVzLkNIQU5HRV9TTVRQX1NFUlZFUjoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGNvbmZpZ3VyZWRzbXRwc2VydmVyOiBzdGF0ZS5zbXRwc2VydmVyLFxuICAgICAgfTtcbiAgICB9XG4gICAgY2FzZSBhY3Rpb25UeXBlcy5ERUxFVEVfQ09ORklHVVJFRF9TTVRQX1NFUlZFUjoge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGNvbmZpZ3VyZWRzbXRwc2VydmVyOiAnJyxcbiAgICAgIH07XG4gICAgfVxuICAgIGNhc2UgYWN0aW9uVHlwZXMuU0VUX0lCT0ZPU19USU1FX0lOVEVSVkFMOiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgdGltZWludGVydmFsOiBhY3Rpb24udGltZWludGVydmFsLFxuICAgICAgfTtcbiAgICB9XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY29uZmlndXJhdGlvbnNldHRpbmdSZWR1Y2VyO1xuIl19