{"version":3,"sources":["index.js"],"names":["useStyles","root","flexGrow","float","marginLeft","width","bar","color","backgroundColor","borderRadius","BorderLinearProgress","height","barColorPrimary","LinearProgress","LinearProgressBarComponent","props","classes","percent"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;AAEA,MAAMA,SAAS,GAAG,wBAAW;AAC3BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,KAAK,EAAE,MAFH;AAGJC,IAAAA,UAAU,EAAE,IAHR;AAIJC,IAAAA,KAAK,EAAC;AAJF,GADqB;AAO3BC,EAAAA,GAAG,EAAC;AACFC,IAAAA,KAAK,EAAC,OADJ;AAEFC,IAAAA,eAAe,EAAC,KAFd;AAGFC,IAAAA,YAAY,EAAE;AAHZ;AAPuB,CAAX,CAAlB;AAcA,MAAMC,oBAAoB,GAAG,wBAAW;AACtCT,EAAAA,IAAI,EAAE;AACJU,IAAAA,MAAM,EAAE,CADJ;AAEJH,IAAAA,eAAe,EAAE;AAFb,GADgC;AAKtCI,EAAAA,eAAe,EAAE;AACfJ,IAAAA,eAAe,EAAE;AADF,GALqB;AAQtCF,EAAAA,GAAG,EAAE;AACHG,IAAAA,YAAY,EAAE,EADX;AAEHD,IAAAA,eAAe,EAAE;AAFd;AARiC,CAAX,EAY1BK,uBAZ0B,CAA7B;;AAce,SAASC,0BAAT,CAAoCC,KAApC,EAA2C;AACxD,QAAMC,OAAO,GAAGhB,SAAS,EAAzB,CADwD,CAExD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,SAAS,EAAEgB,OAAO,CAACf,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,oBAAD;AAAsB,IAAA,SAAS,EAAEe,OAAO,CAACV,GAAzC;AAA8C,IAAA,OAAO,EAAC,aAAtD;AAAoE,IAAA,KAAK,EAAES,KAAK,CAACE,OAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAOD","sourcesContent":["import React from 'react';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    float: 'left',\n    marginLeft: '2%',\n    width:'20%',\n  },\n  bar:{\n    color:'black',\n    backgroundColor:'red',\n    borderRadius: 20,\n  },\n});\n\nconst BorderLinearProgress = withStyles({\n  root: {\n    height: 5,\n    backgroundColor: 'darkgray',\n  },\n  barColorPrimary: {\n    backgroundColor: 'white',\n  },\n  bar: {\n    borderRadius: 20,\n    backgroundColor: '#6fcd60',\n  },\n})(LinearProgress);\n\nexport default function LinearProgressBarComponent(props) {\n  const classes = useStyles();\n  //   const [completed, setCompleted] = [50,100]\n\n  //   React.useEffect(() => {\n  //     function progress() {\n  //       setCompleted(oldCompleted => {\n  //         if (oldCompleted === 100) {\n  //           return 0;\n  //         }\n  //         const diff = Math.random() * 10;\n  //         return Math.min(oldCompleted + diff, 100);\n  //       });\n  //     }\n\n  // const timer = setInterval(progress, 500);\n  //     return () => {\n  //       clearInterval(timer);\n  //     };\n  //   }, []);\n\n  return (\n    <div className={classes.root}>\n      <BorderLinearProgress className={classes.bar} variant=\"determinate\" value={props.percent} />\n      {/* <br />\n      <LinearProgress color=\"secondary\" variant=\"determinate\" value={completed} /> */}\n    </div>\n  );\n}\n"]}