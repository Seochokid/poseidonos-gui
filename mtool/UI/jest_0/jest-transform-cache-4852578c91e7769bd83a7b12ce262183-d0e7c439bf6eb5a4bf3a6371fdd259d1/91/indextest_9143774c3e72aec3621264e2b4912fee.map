{"version":3,"sources":["index.test.js"],"names":["jest","unmock","describe","wrapper","history","store","spyOn","global","mockImplementation","Promise","resolve","status","json","resp","timestamp","source","entryType","severity","description","count","page","source_filter_array","entryType_filter_array","severity_filter_array","beforeEach","sagaMiddleware","rootReducers","headerReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","run","rootSaga","route","initialEntries","renderComponent","i18n","afterEach","cleanup","it","asFragment","expect","toMatchSnapshot","getByTestId","fireEvent","click","sourceSelectAll","querySelector","sourceSelectAll2","target","name","bmc_journal_entry","journal_entry","event_log","severitySelectAll2","warning","error","entryTypeSelectAll","entryTypeSelectAll2","Oem","Oem2","severitySelectAll","sourceSelectAllSubheader","entryTypeSelectAllSubheader","severitySelectAllSubheader","getByTitle"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: BMC Log Table component Test File\n@NAME : index.test.js\n@AUTHORS: Palak Kapoor\n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Palak] : Prototyping..........////////////////////\n*/\n\nimport React from \"react\";\nimport {\n  render,\n  fireEvent,\n  cleanup,\n  waitForElement\n} from \"@testing-library/react\";\nimport { Provider } from \"react-redux\";\nimport { act } from \"react-dom/test-utils\";\nimport { I18nextProvider } from \"react-i18next\";\nimport axios from \"axios\";\nimport \"@testing-library/jest-dom/extend-expect\";\nimport MockAdapter from \"axios-mock-adapter\";\nimport { createMemoryHistory } from \"history\";\nimport { Router } from \"react-router-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../../../sagas/indexSaga\";\nimport headerReducer from \"../../../store/reducers/headerReducer\";\nimport BmcLogTable from \"./index\";\nimport i18n from \"../../../i18n\";\n\njest.unmock(\"axios\");\n\ndescribe(\"BmcLogTable\", () => {\n  let wrapper;\n  let history;\n  let store;\n  // let mock;\n  jest.spyOn(global, \"fetch\").mockImplementation(() =>\n    Promise.resolve({\n      status: 200,\n      json: () =>\n        Promise.resolve({\n          resp: [\n            {\n              timestamp: \"2019-12-17 21:35:58+09:00KST\",\n              source: \"BMC Journal Entry\",\n              entryType: \"Oem\",\n              severity: \"Warning\",\n              description: \"samplelog3\"\n            },\n            {\n              timestamp: \"2019-12-17 21:35:58+09:00KST\",\n              source: \"BMC Journal Entry\",\n              entryType: \"Oem\",\n              severity: \"Warning\",\n              description: \"samplelog2\"\n            },\n            {\n              timestamp: \"2019-12-17 22:35:59+09:00KST\",\n              source: \"Journal Entry\",\n              entryType: \"Oem\",\n              severity: \"Warning\",\n              description:\n                \"xyz.openbmc_project.Chassis.Control.Power.service: Cannot add dependency job, ignoring: Unit xyz.openbmc_project.Chassis.Control.Power.service failed to load properly: File exists\"\n            },\n            {\n              timestamp: \"2019-12-17 21:35:59+09:00KST\",\n              source: \"BMC Journal Entry\",\n              entryType: \"Oem\",\n              severity: \"Warning\",\n              description:\n                \"xyz.openbmc_project.Chassis.Control.Power.service: Cannot add dependency job, ignoring: Unit xyz.openbmc_project.Chassis.Control.Power.service failed to load properly: File exists\"\n            },\n            {\n              timestamp: \"2019-13-17 21:35:58+09:00KST\",\n              source: \"Event Log\",\n              entryType: \"Oem\",\n              severity: \"Warning\",\n              description:\n                \"xyz.openbmc_project.Chassis.Control.Power.service: Cannot add dependency job, ignoring: Unit xyz.openbmc_project.Chassis.Control.Power.service failed to load properly: File exists\"\n            },\n            {\n              timestamp: \"2019-13-17 21:35:58+10:00KST\",\n              source: \"Event Log\",\n              entryType: \"Oem2\",\n              severity: \"Warning\",\n              description:\n                \"xyz.openbmc_project.Chassis.Control.Power.service: Cannot add dependency job, ignoring: Unit xyz.openbmc_project.Chassis.Control.Power.service failed to load properly: File exists\"\n            },\n            {\n              timestamp: \"2019-12-17 21:35:58+09:00KST\",\n              source: \"BMC Journal Entry\",\n              entryType: \"Oem\",\n              severity: \"Error\",\n              description: \"samplelog4\"\n            },\n            {\n              timestamp: \"2019-13-17 21:35:58+09:00KST\",\n              source: \"Event Log\",\n              entryType: \"Oem\",\n              severity: \"Warning\",\n              description:\n                \"xyz.openbmc_project.Chassis.Control.Power.service: Cannot add dependency job, ignoring: Unit xyz.openbmc_project.Chassis.Control.Power.service failed to load properly: File exists\"\n            }\n          ],\n          count: 7,\n          page: 0,\n          source_filter_array: [\n            \"Event Log\",\n            \"BMC Journal Entry\",\n            \"Journal Entry\"\n          ],\n          entryType_filter_array: [\"Oem\", \"Oem2\"],\n          severity_filter_array: [\"Warning\", \"Error\"]\n        })\n    })\n  );\n  beforeEach(() => {\n    const sagaMiddleware = createSagaMiddleware();\n    const rootReducers = combineReducers({\n      // headerLanguageReducer,\n      headerReducer\n    });\n    const composeEnhancers =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    store = createStore(\n      rootReducers,\n      composeEnhancers(applyMiddleware(sagaMiddleware))\n    );\n    sagaMiddleware.run(rootSaga);\n\n    const route = \"/BmcLogTable/general\";\n    history = createMemoryHistory({ initialEntries: [route] });\n    // mock = new MockAdapter(axios);\n  });\n\n  const renderComponent = () => {\n    wrapper = render(\n      <Router history={history}>\n        <I18nextProvider i18n={i18n}>\n          <Provider store={store}>\n            {\" \"}\n            <BmcLogTable />\n          </Provider>\n        </I18nextProvider>\n      </Router>\n    );\n  };\n\n  afterEach(cleanup);\n\n  it(\"matches snapshot\", () => {\n    renderComponent();\n    const { asFragment } = wrapper;\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"selects source select all filter\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"sourceSelect\");\n    fireEvent.click(getByTestId(\"sourceSelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const sourceSelectAll = await waitForElement(() =>\n        // getByTestId(\"sourceSelectAll\")\n        getByTestId(\"sourceSelectAll\").querySelector('input[type=\"checkbox\"]')\n      );\n      const sourceSelectAll2 = getByTestId(\"sourceSelectAll\").querySelector(\n        'input[type=\"checkbox\"]'\n      );\n      fireEvent.click(sourceSelectAll2);\n      fireEvent.click(sourceSelectAll2, {\n        target: { name: \"source_select_all\" }\n      });\n    });\n\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"selects all source filters\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"sourceSelect\");\n    fireEvent.click(getByTestId(\"sourceSelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const bmc_journal_entry = await waitForElement(() =>\n        getByTestId(\"BMC Journal Entry\")\n      );\n      fireEvent.click(getByTestId(\"BMC Journal Entry\"));\n      const journal_entry = await waitForElement(() =>\n        getByTestId(\"Journal Entry\")\n      );\n      fireEvent.click(getByTestId(\"Journal Entry\"));\n    });\n    const event_log = await waitForElement(() => getByTestId(\"Event Log\"));\n    fireEvent.click(getByTestId(\"Event Log\"));\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n\n  it(\"selects severity select all filter\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"severitySelect\");\n    fireEvent.click(getByTestId(\"severitySelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const sourceSelectAll = await waitForElement(() =>\n        // getByTestId(\"sourceSelectAll\")\n        getByTestId(\"severitySelectAll\").querySelector('input[type=\"checkbox\"]')\n      );\n      const severitySelectAll2 = getByTestId(\"severitySelectAll\").querySelector(\n        'input[type=\"checkbox\"]'\n      );\n      fireEvent.click(severitySelectAll2);\n      fireEvent.click(severitySelectAll2, {\n        target: { name: \"severity_select_all\" }\n      });\n    });\n\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"selects all severity filters\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"severitySelect\");\n    fireEvent.click(getByTestId(\"severitySelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const warning = await waitForElement(() =>\n        getByTestId(\"Warning\")\n      );\n      fireEvent.click(getByTestId(\"Warning\"));\n      const error = await waitForElement(() =>\n        getByTestId(\"Error\")\n      );\n      fireEvent.click(getByTestId(\"Error\"));\n    });\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"selects entry type select all filter\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"entryTypeSelect\");\n    fireEvent.click(getByTestId(\"entryTypeSelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const entryTypeSelectAll = await waitForElement(() =>\n        // getByTestId(\"sourceSelectAll\")\n        getByTestId(\"entryTypeSelectAll\").querySelector(\n          'input[type=\"checkbox\"]'\n        )\n      );\n      const entryTypeSelectAll2 = getByTestId(\n        \"entryTypeSelectAll\"\n      ).querySelector('input[type=\"checkbox\"]');\n      fireEvent.click(entryTypeSelectAll2);\n      fireEvent.click(entryTypeSelectAll2, {\n        target: { name: \"entrytype_select_all\" }\n      });\n    });\n\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"selects all entry type filters\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"entryTypeSelect\");\n    fireEvent.click(getByTestId(\"entryTypeSelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const Oem = await waitForElement(() =>\n        getByTestId(\"Oem\")\n      );\n      fireEvent.click(getByTestId(\"Oem\"));\n      const Oem2 = await waitForElement(() =>\n        getByTestId(\"Oem2\")\n      );\n      fireEvent.click(getByTestId(\"Oem2\"));\n    });\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n\n  it(\"selects source BMC Journal Entry filter\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"sourceSelect\");\n    fireEvent.click(getByTestId(\"sourceSelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const sourceSelectAll = await waitForElement(() =>\n        getByTestId(\"BMC Journal Entry\")\n      );\n      fireEvent.click(getByTestId(\"BMC Journal Entry\"));\n    });\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"selects severity Warning filter\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"severitySelect\");\n    fireEvent.click(getByTestId(\"severitySelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const severitySelectAll = await waitForElement(() =>\n        getByTestId(\"Warning\")\n      );\n      fireEvent.click(getByTestId(\"Warning\"));\n    });\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"selects entry type Oem filter\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"entryTypeSelect\");\n    fireEvent.click(getByTestId(\"entryTypeSelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const entryTypeSelectAll = await waitForElement(() => getByTestId(\"Oem\"));\n      fireEvent.click(getByTestId(\"Oem\"));\n    });\n    expect(asFragment()).toMatchSnapshot();\n  });\n  it(\"selects source, severity and entry type filters, \", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    fireEvent.click(getByTestId(\"sourceSelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const sourceSelectAll = await waitForElement(() =>\n        getByTestId(\"BMC Journal Entry\")\n      );\n      fireEvent.click(getByTestId(\"BMC Journal Entry\"));\n    });\n    fireEvent.click(getByTestId(\"entryTypeSelect\"));\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      //const entryTypeSelectAll = await waitForElement(() => getByTestId(\"Oem\"));\n      //fireEvent.click(getByTestId(\"Oem\"));\n      const Oem2 = await waitForElement(() => getByTestId(\"Oem2\"));\n      fireEvent.click(getByTestId(\"Oem2\"));\n    });\n    fireEvent.click(getByTestId(\"severitySelect\"));\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const severitySelectAll = await waitForElement(() =>\n        getByTestId(\"Warning\")\n      );\n      fireEvent.click(getByTestId(\"Warning\"));\n    });\n  });\n\n  it(\"checks source listsubheader functionality\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"sourceSelect\");\n    fireEvent.click(getByTestId(\"sourceSelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const sourceSelectAllSubheader = await waitForElement(() =>\n        getByTestId(\"sourceSelectAllSubheader\")\n      );\n      fireEvent.click(getByTestId(\"sourceSelectAllSubheader\"));\n    });\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"checks entry type listsubheader functionality\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"entryTypeSelect\");\n    fireEvent.click(getByTestId(\"entryTypeSelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const entryTypeSelectAllSubheader = await waitForElement(() =>\n        getByTestId(\"entryTypeSelectAllSubheader\")\n      );\n      fireEvent.click(getByTestId(\"entryTypeSelectAllSubheader\"));\n    });\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"checks severity listsubheader functionality\", async () => {\n    renderComponent();\n    const { asFragment, getByTestId } = wrapper;\n    getByTestId(\"severitySelect\");\n    fireEvent.click(getByTestId(\"severitySelect\"));\n\n    await act(async () => {\n      expect(asFragment()).toMatchSnapshot();\n      const severitySelectAllSubheader = await waitForElement(() =>\n        getByTestId(\"severitySelectAllSubheader\")\n      );\n      fireEvent.click(getByTestId(\"severitySelectAllSubheader\"));\n    });\n    expect(asFragment()).toMatchSnapshot();\n  });\n\n  it(\"refreshes the bmc logs\", async () => {\n    renderComponent();\n    const { getByTitle } = wrapper;\n    fireEvent.click(getByTitle(\"Refresh Logs\"));\n  });\n});\n"]}