{"version":3,"sources":["index.test.js"],"names":["wrapper","alertClusterList","alertSubCluster","_id","name","alertFields","myMock","jest","fn","beforeEach","rootReducers","alertManagementReducer","store","i18n","test","setTimeout","getByLabelText","queryAllByText","getAllByTestId","getAllByRole","getByRole","getByTestId","getByText","getAllByText","asFragment","expect","toMatchSnapshot","afterEach","cleanup"],"mappings":";;;;AA2BA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,IAAIA,OAAJ;AACA,IAAIC,gBAAgB,GAAG,CACnB;AACIC,EAAAA,eAAe,EAAE,IADrB;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,GAAG,EAAE,GAnBT;AAoBIC,EAAAA,IAAI,EAAE,KApBV;AAqBIC,EAAAA,WAAW,EAAE,CAAC,YAAD,EAAc,cAAd;AArBjB,CADmB,CAAvB;AA0BA,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAL,EAAf;AACAC,UAAU,CAAC,MAAM;AACb,QAAMC,YAAY,GAAG,4BAAgB;AACjCC,IAAAA,sBAAsB,EAAtBA;AADiC,GAAhB,CAArB;AAGA,QAAMC,KAAK,GAAG,wBAAYF,YAAZ,CAAd;AAEAV,EAAAA,OAAO,GAAG,oBACN,6BAAC,6BAAD;AAAiB,IAAA,IAAI,EAAEa,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,oBAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,cAAD;AAAY,IAAA,gBAAgB,EAAEX,gBAA9B;AAAgD,IAAA,kBAAkB,EAAEK,MAApE;AAA4E,IAAA,qBAAqB,EAAEA,MAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADM,CAAV;AAMAL,EAAAA,gBAAgB,GAAG,IAAnB;AACH,CAbS,CAAV;AAeAa,IAAI,CAAC,+BAAD,EAAkC,YAAY;AAC9CP,EAAAA,IAAI,CAACQ,UAAL,CAAgB,KAAhB;AAD8C,mBAEwFf,OAFxF;AAAA,QAEtCgB,cAFsC,YAEtCA,cAFsC;AAAA,QAEtBC,cAFsB,YAEtBA,cAFsB;AAAA,QAENC,cAFM,YAENA,cAFM;AAAA,QAEUC,YAFV,YAEUA,YAFV;AAAA,QAEwBC,SAFxB,YAEwBA,SAFxB;AAAA,QAEmCC,WAFnC,YAEmCA,WAFnC;AAAA,QAEgDC,SAFhD,YAEgDA,SAFhD;AAAA,QAE2DC,YAF3D,YAE2DA,YAF3D;AAAA,QAEyEC,UAFzE,YAEyEA,UAFzE;AAG9CH,EAAAA,WAAW,CAAC,gBAAD,CAAX;AACAI,EAAAA,MAAM,CAACD,UAAU,EAAX,CAAN,CAAqBE,eAArB;AAEH,CANG,CAAJ;AAQAZ,IAAI,CAAC,8DAAD,EAAiE,MAAM;AAAA,oBACsBd,OADtB;AAAA,QAC/DgB,cAD+D,aAC/DA,cAD+D;AAAA,QAC/CC,cAD+C,aAC/CA,cAD+C;AAAA,QAC/BI,WAD+B,aAC/BA,WAD+B;AAAA,QAClBC,SADkB,aAClBA,SADkB;AAAA,QACPC,YADO,aACPA,YADO;AAAA,QACOC,UADP,aACOA,UADP;AAEvEC,EAAAA,MAAM,CAACD,UAAU,EAAX,CAAN,CAAqBE,eAArB;AACAL,EAAAA,WAAW,CAAC,gBAAD,CAAX;AACH,CAJG,CAAJ;AAMAM,SAAS,CAACC,eAAD,CAAT","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Alert Types Test File\n@NAME : index.test.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport React from 'react';\nimport { Provider } from 'react-redux'\nimport { ReactDOM, findDOMNode } from 'react-dom'\nimport { act } from 'react-dom/test-utils'\nimport { I18nextProvider } from \"react-i18next\";\nimport { combineReducers, createStore } from 'redux'\nimport { render, fireEvent, cleanup, getByText, getByRole, waitForElement } from '@testing-library/react';\nimport alertManagementReducer from \"../../../store/reducers/alertManagementReducer\"\nimport i18n from \"../../../i18n\";\nimport AlertTypes from './index';\n\nlet wrapper;\nlet alertClusterList = [\n    {\n        alertSubCluster: null,\n        // [\n        //     {\n        //         _id: '1',\n        //         name: 'cpu-host',\n        //         alertTypes: [\n        //             {\n        //                 type: 'cpu-idle',\n        //             },\n        //             {\n        //                 type: 'cpu-idle2',\n        //             },\n        //             {\n        //                 type: 'cpu-affinity',\n        //             },\n        //         ],\n        //     },\n        // ],\n        _id: '1',\n        name: 'CPU',\n        alertFields: [\"usage_idle\",\"usage_system\"],\n\n    },\n];\nconst myMock = jest.fn();\nbeforeEach(() => {\n    const rootReducers = combineReducers({\n        alertManagementReducer,\n    });\n    const store = createStore(rootReducers)\n\n    wrapper = render(\n        <I18nextProvider i18n={i18n}>\n            <Provider store={store}>\n                <AlertTypes alertClusterList={alertClusterList} selectAlertCluster={myMock} selectAlertSubCluster={myMock} />\n            </Provider>\n        </I18nextProvider>);\n    alertClusterList = null;\n});\n\ntest('renders alert types component', async () => {\n    jest.setTimeout(30000);\n    const { getByLabelText, queryAllByText, getAllByTestId, getAllByRole, getByRole, getByTestId, getByText, getAllByText, asFragment } = wrapper;\n    getByTestId(\"AlertsTypesTag\");\n    expect(asFragment()).toMatchSnapshot();\n\n});\n\ntest('renders alert types component with null for ternary operator', () => {\n    const { getByLabelText, queryAllByText, getByTestId, getByText, getAllByText, asFragment } = wrapper;\n    expect(asFragment()).toMatchSnapshot();\n    getByTestId(\"AlertsTypesTag\");\n});\n\nafterEach(cleanup)\n"]}