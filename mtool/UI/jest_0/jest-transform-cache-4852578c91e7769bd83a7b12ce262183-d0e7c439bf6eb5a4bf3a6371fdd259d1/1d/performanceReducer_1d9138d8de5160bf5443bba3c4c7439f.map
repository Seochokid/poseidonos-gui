{"version":3,"sources":["performanceReducer.js"],"names":["initialState","cpuUsage","yLabel","values","loaded","name","diskWrite","diskUsed","readIOPS","writeIOPS","readBandwidth","writeBandwidth","latency","power_usage","vols","performanceReducer","state","action","type","actionTypes","FETCH_CPU_USAGE","FETCH_READ_BANDWIDTH","bw","FETCH_WRITE_BANDWIDTH","FETCH_LATENCY","FETCH_READ_IOPS","iops","FETCH_WRITE_IOPS","FETCH_INPUT_POWER_VARIATION","watts","FETCH_VOL_READ_BW","level","maxiops","maxbw","FETCH_VOL_WRITE_BW","FETCH_VOL_READ_IOPS","FETCH_VOL_WRITE_IOPS","FETCH_VOL_LATENCY","RESET_PERF_STATE"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: <Contains reducer function for Performance Component> *\n@NAME : performanceeReducer.js\n@AUTHORS: Aswin K K\n@Version : 1.0 *\n@REVISION HISTORY\n[28/08/2019] [Jay] : Prototyping..........////////////////////\n*/\n\nimport * as actionTypes from \"../actions/actionTypes\";\n\nexport const initialState = {\n    cpuUsage: {\n        yLabel: 'CPU Usage (Percentage)',\n        values: [],\n        loaded: false,\n        name: 'CPU Usage',\n    },\n    diskWrite: {\n        yLabel: 'Write (MB/S)',\n        values: [],\n        loaded: false,\n        name: 'Host Storage Write',\n    },\n    diskUsed: {\n        yLabel: 'Used (percentage)',\n        values: [],\n        loaded: false,\n        name: 'Host Storage Usage',\n    },\n    readIOPS: {\n        yLabel: 'KIOPS',\n        values: [],\n        loaded: false,\n        name: 'Read IOPS',\n    },\n    writeIOPS: {\n        yLabel: 'KIOPS',\n        values: [],\n        loaded: false,\n        name: 'Write IOPS',\n    },\n    readBandwidth: {\n        yLabel: 'Bandwidth (MB/s)',\n        values: [],\n        loaded: false,\n        name: 'Read Bandwidth',\n    },\n    writeBandwidth: {\n        yLabel: 'Bandwidth (MB/s)',\n        values: [],\n        loaded: false,\n        name: 'Write Bandwidth',\n    },\n    latency:{\n        yLabel: 'Latency (ns)',\n        values: [],\n        loaded: false,\n        name: 'Latency',\n    },\n    power_usage: {\n        yLabel: 'Watts (W)',\n        values: [],\n        loaded: false,\n        name: 'Input Power',\n    },\n    vols: {}\n}\n\nconst performanceReducer = (state = initialState, action) => {\n    switch (action.type) {\n        // case actionTypes.FETCH_DISK_USED:\n        //     return {\n        //         ...state,\n        //         diskUsed: {\n        //             ...state.diskUsed,\n        //             values: action.diskUser\n        //         }\n        //     }\n        // case actionTypes.FETCH_DISK_WRITE:\n        //     return {\n        //         ...state,\n        //         diskWrite: {\n        //             ...state.diskWrite,\n        //             values: action.diskWrite\n        //         }\n        //     }\n        case actionTypes.FETCH_CPU_USAGE:\n            return {\n                ...state,\n                cpuUsage: {\n                    ...state.cpuUsage,\n                    values: action.cpuUsage\n                }\n            }\n        case actionTypes.FETCH_READ_BANDWIDTH:\n            return {\n                ...state,\n                readBandwidth: {\n                    ...state.readBandwidth,\n                    values: action.bw\n                }\n            }\n        case actionTypes.FETCH_WRITE_BANDWIDTH:\n            return {\n                ...state,\n                writeBandwidth: {\n                    ...state.writeBandwidth,\n                    values: action.bw\n                }\n            }\n        case actionTypes.FETCH_LATENCY:\n            return {\n                ...state,\n                latency: {\n                    ...state.latency,\n                    values: action.latency\n                }\n            }\n        case actionTypes.FETCH_READ_IOPS: {\n            return {\n                ...state,\n                readIOPS: {\n                    ...state.readIOPS,\n                    values: action.iops\n                }\n            }\n        }\n        case actionTypes.FETCH_WRITE_IOPS: {\n            return {\n                ...state,\n                writeIOPS: {\n                    ...state.writeIOPS,\n                    values: action.iops\n                }\n            }\n        }\n        case actionTypes.FETCH_INPUT_POWER_VARIATION:\n            return {\n                ...state,\n                power_usage: {\n                    ...state.power_usage,\n                    values: action.watts\n                }\n            }\n        case actionTypes.FETCH_VOL_READ_BW:\n            return {\n                ...state,\n                vols: {\n                    ...state.vols,\n                    [action.level]: {\n                        ...state.vols[action.level],\n                        readBandwidth: {\n                            yLabel: 'Bandwidth (MB/s)',\n                            values: action.bw,\n                            name: `Read Bandwidth ${action.name}`,\n                            maxiops: action.maxiops !== 0 ? action.maxiops : null,\n                            maxbw: action.maxbw !== 0 ? action.maxbw : null\n                        }\n                    }\n                }\n            }\n        case actionTypes.FETCH_VOL_WRITE_BW:\n            return {\n                ...state,\n                vols: {\n                    ...state.vols,\n                    [action.level]: {\n                        ...state.vols[action.level],\n                        writeBandwidth: {\n                            yLabel: 'Bandwidth (MB/s)',\n                            values: action.bw,\n                            name: `Write Bandwidth ${action.name}`,\n                            maxiops: action.maxiops !== 0 ? action.maxiops : null,\n                            maxbw: action.maxbw !== 0 ? action.maxbw : null\n                        }\n                    }\n                }\n            }\n        case actionTypes.FETCH_VOL_READ_IOPS: {\n            return {\n                ...state,\n                vols: {\n                    ...state.vols,\n                    [action.level]: {\n                        ...state.vols[action.level],\n                        readIOPS: {\n                            yLabel: 'KIOPS',\n                            values: action.iops,\n                            name: `Read IOPS ${action.name}`,\n                            maxiops: action.maxiops !== 0 ? action.maxiops : null,\n                            maxbw: action.maxbw !== 0 ? action.maxbw : null\n                        }\n                    }\n                }\n            }\n        }\n        case actionTypes.FETCH_VOL_WRITE_IOPS: {\n            return {\n                ...state,\n                vols: {\n                    ...state.vols,\n                    [action.level]: {\n                        ...state.vols[action.level],\n                        writeIOPS: {\n                            yLabel: 'KIOPS',\n                            values: action.iops,\n                            name: `Write IOPS ${action.name}`,\n                            maxiops: action.maxiops !== 0 ? action.maxiops: null,\n                            maxbw: action.maxbw !== 0 ? action.maxbw : null\n                        }\n                    }\n                }\n            }\n        }\n        case actionTypes.FETCH_VOL_LATENCY: {\n            return {\n                ...state,\n                vols: {\n                    ...state.vols,\n                    [action.level]: {\n                        ...state.vols[action.level],\n                        latency: {\n                            yLabel: 'Latency (ns)',\n                            values: action.latency,\n                            name: `Latency ${action.name}`,\n                           // maxiops: action.maxiops !== 0 ? action.maxiops: null,\n                           // maxbw: action.maxbw !== 0 ? action.maxbw : null\n                        }\n                    }\n                }\n            }\n        }\n        case actionTypes.RESET_PERF_STATE: {\n            return {\n                ...initialState\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport default performanceReducer;"]}