466a8d1e3eab0c8308d3b6ea3248b810
/* istanbul ignore next */
"use strict";

var cov_14j2u8ma0s = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/IbofOsOperationComponents/LinearProgressBarComponent/index.js";
  var hash = "8ec2a8c6b418e2c5a7aa117bab0f4e8dac90d30b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/IbofOsOperationComponents/LinearProgressBarComponent/index.js",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 18
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "1": {
        start: {
          line: 19,
          column: 29
        },
        end: {
          line: 31,
          column: 18
        }
      },
      "2": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "3": {
        start: {
          line: 54,
          column: 2
        },
        end: {
          line: 60,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "LinearProgressBarComponent",
        decl: {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 50
          }
        },
        loc: {
          start: {
            line: 33,
            column: 58
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 33
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "8ec2a8c6b418e2c5a7aa117bab0f4e8dac90d30b"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = LinearProgressBarComponent;

var
/* istanbul ignore next */
_react = _interopRequireDefault(require("react"));

var
/* istanbul ignore next */
_LinearProgress = _interopRequireDefault(require("@material-ui/core/LinearProgress"));

var
/* istanbul ignore next */
_styles = require("@material-ui/core/styles");

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/IbofOsOperationComponents/LinearProgressBarComponent/index.js";
const useStyles =
/* istanbul ignore next */
(cov_14j2u8ma0s.s[0]++,
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
makeStyles)({
  root: {
    flexGrow: 1,
    float: 'left',
    marginLeft: '2%',
    width: '20%'
  },
  bar: {
    color: 'black',
    backgroundColor: 'red',
    borderRadius: 20
  }
}));
const BorderLinearProgress =
/* istanbul ignore next */
(cov_14j2u8ma0s.s[1]++,
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
withStyles)({
  root: {
    height: 5,
    backgroundColor: 'darkgray'
  },
  barColorPrimary: {
    backgroundColor: 'white'
  },
  bar: {
    borderRadius: 20,
    backgroundColor: '#6fcd60'
  }
})(
/* istanbul ignore next */
_LinearProgress.
/* istanbul ignore next */
default));

function LinearProgressBarComponent(props) {
  /* istanbul ignore next */
  cov_14j2u8ma0s.f[0]++;
  const classes =
  /* istanbul ignore next */
  (cov_14j2u8ma0s.s[2]++, useStyles()); //   const [completed, setCompleted] = [50,100]
  //   React.useEffect(() => {
  //     function progress() {
  //       setCompleted(oldCompleted => {
  //         if (oldCompleted === 100) {
  //           return 0;
  //         }
  //         const diff = Math.random() * 10;
  //         return Math.min(oldCompleted + diff, 100);
  //       });
  //     }
  // const timer = setInterval(progress, 500);
  //     return () => {
  //       clearInterval(timer);
  //     };
  //   }, []);

  /* istanbul ignore next */
  cov_14j2u8ma0s.s[3]++;
  return (
    /* istanbul ignore next */
    _react.default.createElement(
    /* istanbul ignore next */
    "div",
    /* istanbul ignore next */
    {
      className: classes.root,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 55
      },
      __self: this
    },
    /* istanbul ignore next */
    _react.default.createElement(BorderLinearProgress,
    /* istanbul ignore next */
    {
      className: classes.bar,
      variant: "determinate",
      value: props.percent,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 56
      },
      __self: this
    }))
  );
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInVzZVN0eWxlcyIsIm1ha2VTdHlsZXMiLCJyb290IiwiZmxleEdyb3ciLCJmbG9hdCIsIm1hcmdpbkxlZnQiLCJ3aWR0aCIsImJhciIsImNvbG9yIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwiQm9yZGVyTGluZWFyUHJvZ3Jlc3MiLCJ3aXRoU3R5bGVzIiwiaGVpZ2h0IiwiYmFyQ29sb3JQcmltYXJ5IiwiTGluZWFyUHJvZ3Jlc3MiLCJMaW5lYXJQcm9ncmVzc0JhckNvbXBvbmVudCIsInByb3BzIiwiY2xhc3NlcyIsInBlcmNlbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBOzs7O0FBRUEsTUFBTUEsU0FBUztBQUFBO0FBQUE7QUFBRztBQUFBO0FBQUFDO0FBQUFBO0FBQUFBO0FBQUFBLFlBQVc7QUFDM0JDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxRQUFRLEVBQUUsQ0FETjtBQUVKQyxJQUFBQSxLQUFLLEVBQUUsTUFGSDtBQUdKQyxJQUFBQSxVQUFVLEVBQUUsSUFIUjtBQUlKQyxJQUFBQSxLQUFLLEVBQUM7QUFKRixHQURxQjtBQU8zQkMsRUFBQUEsR0FBRyxFQUFDO0FBQ0ZDLElBQUFBLEtBQUssRUFBQyxPQURKO0FBRUZDLElBQUFBLGVBQWUsRUFBQyxLQUZkO0FBR0ZDLElBQUFBLFlBQVksRUFBRTtBQUhaO0FBUHVCLENBQVgsQ0FBSCxDQUFmO0FBY0EsTUFBTUMsb0JBQW9CO0FBQUE7QUFBQTtBQUFHO0FBQUE7QUFBQUM7QUFBQUE7QUFBQUE7QUFBQUEsWUFBVztBQUN0Q1YsRUFBQUEsSUFBSSxFQUFFO0FBQ0pXLElBQUFBLE1BQU0sRUFBRSxDQURKO0FBRUpKLElBQUFBLGVBQWUsRUFBRTtBQUZiLEdBRGdDO0FBS3RDSyxFQUFBQSxlQUFlLEVBQUU7QUFDZkwsSUFBQUEsZUFBZSxFQUFFO0FBREYsR0FMcUI7QUFRdENGLEVBQUFBLEdBQUcsRUFBRTtBQUNIRyxJQUFBQSxZQUFZLEVBQUUsRUFEWDtBQUVIRCxJQUFBQSxlQUFlLEVBQUU7QUFGZDtBQVJpQyxDQUFYO0FBWTFCTTtBQUFBQTtBQUFBQTtBQUFBQSxPQVowQixDQUFILENBQTFCOztBQWNlLFNBQVNDLDBCQUFULENBQW9DQyxLQUFwQyxFQUEyQztBQUFBO0FBQUE7QUFDeEQsUUFBTUMsT0FBTztBQUFBO0FBQUEsMEJBQUdsQixTQUFTLEVBQVosQ0FBYixDQUR3RCxDQUV4RDtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFuQndEO0FBQUE7QUFxQnhELFNBQ0U7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBSyxNQUFBLFNBQVMsRUFBRWtCLE9BQU8sQ0FBQ2hCLElBQXhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0U7QUFBQSxpQ0FBQyxvQkFBRDtBQUFBO0FBQUE7QUFBc0IsTUFBQSxTQUFTLEVBQUVnQixPQUFPLENBQUNYLEdBQXpDO0FBQThDLE1BQUEsT0FBTyxFQUFDLGFBQXREO0FBQW9FLE1BQUEsS0FBSyxFQUFFVSxLQUFLLENBQUNFLE9BQWpGO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLE1BREY7QUFERjtBQU9EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5lYXJQcm9ncmVzcyBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9MaW5lYXJQcm9ncmVzcyc7XG5pbXBvcnQgeyBtYWtlU3R5bGVzLHdpdGhTdHlsZXMgfSBmcm9tICdAbWF0ZXJpYWwtdWkvY29yZS9zdHlsZXMnO1xuXG5jb25zdCB1c2VTdHlsZXMgPSBtYWtlU3R5bGVzKHtcbiAgcm9vdDoge1xuICAgIGZsZXhHcm93OiAxLFxuICAgIGZsb2F0OiAnbGVmdCcsXG4gICAgbWFyZ2luTGVmdDogJzIlJyxcbiAgICB3aWR0aDonMjAlJyxcbiAgfSxcbiAgYmFyOntcbiAgICBjb2xvcjonYmxhY2snLFxuICAgIGJhY2tncm91bmRDb2xvcjoncmVkJyxcbiAgICBib3JkZXJSYWRpdXM6IDIwLFxuICB9LFxufSk7XG5cbmNvbnN0IEJvcmRlckxpbmVhclByb2dyZXNzID0gd2l0aFN0eWxlcyh7XG4gIHJvb3Q6IHtcbiAgICBoZWlnaHQ6IDUsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnZGFya2dyYXknLFxuICB9LFxuICBiYXJDb2xvclByaW1hcnk6IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gIH0sXG4gIGJhcjoge1xuICAgIGJvcmRlclJhZGl1czogMjAsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnIzZmY2Q2MCcsXG4gIH0sXG59KShMaW5lYXJQcm9ncmVzcyk7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIExpbmVhclByb2dyZXNzQmFyQ29tcG9uZW50KHByb3BzKSB7XG4gIGNvbnN0IGNsYXNzZXMgPSB1c2VTdHlsZXMoKTtcbiAgLy8gICBjb25zdCBbY29tcGxldGVkLCBzZXRDb21wbGV0ZWRdID0gWzUwLDEwMF1cblxuICAvLyAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gIC8vICAgICBmdW5jdGlvbiBwcm9ncmVzcygpIHtcbiAgLy8gICAgICAgc2V0Q29tcGxldGVkKG9sZENvbXBsZXRlZCA9PiB7XG4gIC8vICAgICAgICAgaWYgKG9sZENvbXBsZXRlZCA9PT0gMTAwKSB7XG4gIC8vICAgICAgICAgICByZXR1cm4gMDtcbiAgLy8gICAgICAgICB9XG4gIC8vICAgICAgICAgY29uc3QgZGlmZiA9IE1hdGgucmFuZG9tKCkgKiAxMDtcbiAgLy8gICAgICAgICByZXR1cm4gTWF0aC5taW4ob2xkQ29tcGxldGVkICsgZGlmZiwgMTAwKTtcbiAgLy8gICAgICAgfSk7XG4gIC8vICAgICB9XG5cbiAgLy8gY29uc3QgdGltZXIgPSBzZXRJbnRlcnZhbChwcm9ncmVzcywgNTAwKTtcbiAgLy8gICAgIHJldHVybiAoKSA9PiB7XG4gIC8vICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpO1xuICAvLyAgICAgfTtcbiAgLy8gICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3Nlcy5yb290fT5cbiAgICAgIDxCb3JkZXJMaW5lYXJQcm9ncmVzcyBjbGFzc05hbWU9e2NsYXNzZXMuYmFyfSB2YXJpYW50PVwiZGV0ZXJtaW5hdGVcIiB2YWx1ZT17cHJvcHMucGVyY2VudH0gLz5cbiAgICAgIHsvKiA8YnIgLz5cbiAgICAgIDxMaW5lYXJQcm9ncmVzcyBjb2xvcj1cInNlY29uZGFyeVwiIHZhcmlhbnQ9XCJkZXRlcm1pbmF0ZVwiIHZhbHVlPXtjb21wbGV0ZWR9IC8+ICovfVxuICAgIDwvZGl2PlxuICApO1xufVxuIl19