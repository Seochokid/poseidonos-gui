{"version":3,"sources":["index.js"],"names":["styles","theme","addNewUserOuterGrid","maxWidth","flexBasis","justifyContent","addNewUserFirstInnerGrid","border","paddingBottom","spacing","backgroundColor","gridTypography","maxHeight","addNewUserTypography","textAlign","fontSize","fontWeight","color","margin","addNewUserSecondInnerGrid","addNewUserThirdInnerGrid","textField","marginLeft","width","breakpoints","down","fieldContainer","display","formWrapper","paddingTop","textFieldAfterDropdown","marginTop","selectFieldItem","textTransform","selectMenuItem","button","marginBottom","background","buttonGroup","alignItems","buttonContainer","AddNewUser","Component","constructor","props","state","render","classes","PageTheme","username","event","OnHandleChange","e","test","key","preventDefault","password","confirmpassword","value","target","name","label","mobilenumber","emailid","openAlert"],"mappings":"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","sourcesContent":["/* -------------------------------------------------------------------------------------/\n                                                                                    /\n/               COPYRIGHT (c) 2019 SAMSUNG ELECTRONICS CO., LTD.                      /\n/                          ALL RIGHTS RESERVED                                        /\n/                                                                                     /\n/   Permission is hereby granted to licensees of Samsung Electronics Co., Ltd.        /\n/   products to use or abstract this computer program for the sole purpose of         /\n/   implementing a product based on Samsung Electronics Co., Ltd. products.           /\n/   No other rights to reproduce, use, or disseminate this computer program,          /\n/   whether in part or in whole, are granted.                                         / \n/                                                                                     /\n/   Samsung Electronics Co., Ltd. makes no representation or warranties with          /\n/   respect to the performance of this computer program, and specifically disclaims   /\n/   any responsibility for any damages, special or consequential, connected           /\n/   with the use of this program.                                                     /\n/                                                                                     /\n/-------------------------------------------------------------------------------------/\n\n\nDESCRIPTION: Component corresponding to the form for adding a new user\n@NAME : index.js\n@AUTHORS: Jay Hitesh Sanghavi \n@Version : 1.0 *\n@REVISION HISTORY\n[03/06/2019] [Jay] : Prototyping..........////////////////////\n[04/06/2019] [Aswin] : Added Ids, removed commented code\n*/\n\nimport React, {\n    Component\n} from \"react\";\nimport ThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { TextField, Grid, withStyles, Typography, Select, MenuItem, ButtonGroup, Button } from '@material-ui/core';\nimport MuiPhoneNumber from 'material-ui-phone-number';\nimport \"./AddNewUser.css\";\nimport { PageTheme } from \"../../theme\"\n\nconst styles = (theme => {\n    return ({\n        addNewUserOuterGrid: {\n            maxWidth: '100%',\n            flexBasis: '100%',\n            justifyContent: 'center',\n        },\n        addNewUserFirstInnerGrid: {\n            border: '1px solid gray',\n            paddingBottom: theme.spacing(2),\n            backgroundColor: '#fff'\n        },\n        gridTypography: {\n            maxWidth: '100%',\n            flexBasis: '100%',\n            maxHeight: '5%',\n        },\n        addNewUserTypography: {\n            textAlign: 'left',\n            fontSize: '14px',\n            fontWeight: 'bold',\n            color: '#424780',\n            margin: theme.spacing(1.5),\n        },\n        addNewUserSecondInnerGrid: {\n            maxWidth: '40%',\n            maxHeight: '70%',\n            flexBasis: '40%',\n        },\n        addNewUserThirdInnerGrid: {\n            maxWidth: '20%',\n            flexBasis: '20%',\n            maxHeight: '70%',\n        },\n        textField: {\n            marginLeft: theme.spacing(3),\n            width: '70%',\n            [theme.breakpoints.down('xs')]: {\n              marginLeft: 0\n            }\n        },\n        fieldContainer: {\n            [theme.breakpoints.down('xs')]: {\n                display: 'flex',\n                justifyContent: 'center'\n            }\n        },\n        formWrapper: {\n            paddingTop: theme.spacing(2)\n        },\n        textFieldAfterDropdown: {\n            marginLeft: theme.spacing(3),\n            width: '70%',\n            marginTop: theme.spacing(1)\n        },\n        selectFieldItem: {\n            marginLeft: theme.spacing(3),\n            marginTop: theme.spacing(2),\n            color: 'black',\n            width: '70%',\n            textTransform: 'uppercase',\n            [theme.breakpoints.down('xs')]: {\n              marginLeft: 0\n            }\n        },\n        selectMenuItem: {\n            color: 'black',\n            textTransform: 'uppercase'\n        },\n        button: {\n            margin: theme.spacing(1),\n            textTransform: 'none',\n            paddingTop: '1px',\n            maxHeight: '25px',\n            color: 'white',\n            marginBottom: 0,\n            '&:hover': {\n                background: 'rgb(94,104,116)',\n                // borderColor: 'black',\n                color: 'white'\n            },\n        },\n        buttonGroup: {\n            alignItems: 'flex-end'\n        },\n        buttonContainer: {\n            [theme.breakpoints.down('xs')]: {\n                justifyContent: 'center'\n            }\n        }\n    })\n});\n\nclass AddNewUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <Grid item container sm={6} xs={12} direction=\"row\" className={classes.addNewUserOuterGrid}>\n\n                <Grid item container xs={12} direction=\"row\" className={classes.addNewUserFirstInnerGrid}>\n                    <ThemeProvider theme={PageTheme}>\n                        <Grid xs={12} item className={classes.gridTypography}>\n                            <Typography className={classes.addNewUserTypography} variant=\"h3\">Add New User</Typography>\n                        </Grid>\n                        <Grid sm={8} md={10} xs={12} item container className={classes.formWrapper}>\n                            <Grid sm={6} xs={12} className={classes.fieldContainer}>\n                                <TextField className={classes.textField}\n                                    required\n                                    multiline\n                                    rowsMax=\"1\"\n                                    inputProps={{\n                                      \"data-testid\": \"add-user-name\"\n                                    }}\n                                    margin=\"none\"\n                                    value={this.props.username}\n                                    name=\"username\"\n                                    label=\"User Name\"\n                                    placeholder=\"Enter User Name\"\n                                    onChange={(event) => this.props.OnHandleChange(event)}\n                                    onKeyDown={e => /[+-,#, ,]$/.test(e.key) && e.preventDefault()}\n                                />\n                            </Grid>\n                            <Grid sm={6} xs={12} className={classes.fieldContainer} item>\n                                <Select\n                                    disabled\n                                    className={classes.selectFieldItem}\n                                    value=\"admin\"\n                                >\n                                    <MenuItem className={classes.selectMenuItem} value=\"admin\"> admin </MenuItem>\n                                    {/* {this.props.dropdownCondition ? this.props.dropdownCondition.map((eachValue) => {\n                            return (<MenuItem className={classes.selectMenuItem} key={eachValue} value={eachValue}>{eachValue}</MenuItem>)\n                        }) : null\n                        } */}\n                                </Select>\n                            </Grid>\n                            <Grid sm={6} xs={12} className={classes.fieldContainer}>\n                                <TextField className={classes.textField}\n                                    required\n                                    inputProps={{\n                                      \"data-testid\": \"add-user-password\"\n                                    }}\n                                    margin=\"none\"\n                                    value={this.props.password}\n                                    name=\"password\"\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    placeholder=\"Enter Initial Password\"\n                                    onChange={this.props.OnHandleChange}\n                                    onKeyDown={e => /[+-,#, ,]$/.test(e.key) && e.preventDefault()}\n                                />\n                            </Grid>\n                            <Grid sm={6} xs={12} className={classes.fieldContainer}>\n                                <TextField className={classes.textField}\n                                    required\n                                    inputProps={{\n                                      \"data-testid\": \"add-user-confirm-password\"\n                                    }}\n                                    type=\"password\"\n                                    margin=\"none\"\n                                    value={this.props.confirmpassword}\n                                    name=\"confirmpassword\"\n                                    label=\"Confirm Password\"\n                                    placeholder=\"Please Confirm Password\"\n                                    onChange={this.props.OnHandleChange}\n                                    onKeyDown={e => /[+-,#, ,]$/.test(e.key) && e.preventDefault()}\n                                />\n                            </Grid>\n                            <Grid sm={6} xs={12} className={classes.fieldContainer}>\n                                <MuiPhoneNumber\n                                    inputClass={classes.textField}\n                                    onChange={(value) => this.props.OnHandleChange({ target: { value, name: 'mobilenumber' } })}\n                                    inputProps={{\n                                        'data-testid': \"add-user-phno\",\n                                        name: 'mobilenumber',\n                                        label: 'Mobile Number',\n                                        value: this.props.mobilenumber\n                                    }}\n                                    required\n                                    label=\"Phone Number\"\n                                    // onlyCountries={['in', 'kr']}\n                                    defaultCountry=\"kr\"\n                                />\n                            </Grid>\n                            <Grid sm={6} xs={12} className={classes.fieldContainer}>\n                                <TextField className={classes.textField}\n                                    required\n                                    multiline\n                                    rowsMax=\"1\"\n                                    inputProps={{\n                                      \"data-testid\": \"add-user-email\"\n                                    }}\n                                    margin=\"none\"\n                                    value={this.props.emailid}\n                                    name=\"emailid\"\n                                    label=\"Email ID\"\n                                    placeholder=\"Enter Email Id\"\n                                    onChange={this.props.OnHandleChange}\n                                    onKeyDown={e => /[+-,#, ,]$/.test(e.key) && e.preventDefault()}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Grid sm={4} md={2} xs={12} item container className={classes.buttonContainer}>\n                            <ButtonGroup size=\"small\" color=\"primary\" className={classes.buttonGroup}>\n                                <Button color=\"primary\" variant=\"contained\" onClick={() => { this.props.openAlert(\"Cancel\") }} className={classes.button}>Cancel</Button>\n                                <Button color=\"primary\" variant=\"contained\" onClick={() => { this.props.openAlert(\"Submit\") }} className={classes.button}>Submit</Button>\n                            </ButtonGroup>\n                        </Grid>\n                    </ThemeProvider>\n                </Grid>\n            </Grid>\n        )\n    }\n}\nexport default withStyles(styles)(AddNewUser);"]}