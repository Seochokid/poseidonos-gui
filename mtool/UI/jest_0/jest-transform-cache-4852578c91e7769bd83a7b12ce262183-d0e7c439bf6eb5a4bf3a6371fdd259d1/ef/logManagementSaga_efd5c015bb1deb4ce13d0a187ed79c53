7a5ab906db352f0059a8dc066ea18b22
/* istanbul ignore next */
"use strict";

var cov_1k47e15ga1 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/logManagementSaga.js";
  var hash = "7e4f82dd35bc8a5fc5c31b71d22fce5655e5a94d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/sagas/logManagementSaga.js",
    statementMap: {
      "0": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 54,
          column: 3
        }
      },
      "1": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 40,
          column: 4
        }
      },
      "2": {
        start: {
          line: 42,
          column: 19
        },
        end: {
          line: 42,
          column: 32
        }
      },
      "3": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "4": {
        start: {
          line: 44,
          column: 22
        },
        end: {
          line: 44,
          column: 24
        }
      },
      "5": {
        start: {
          line: 45,
          column: 6
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "6": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 48,
          column: 11
        }
      },
      "7": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 50,
          column: 55
        }
      },
      "8": {
        start: {
          line: 59,
          column: 2
        },
        end: {
          line: 74,
          column: 3
        }
      },
      "9": {
        start: {
          line: 60,
          column: 5
        },
        end: {
          line: 70,
          column: 6
        }
      },
      "10": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 58
        }
      },
      "11": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 73,
          column: 58
        }
      },
      "12": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 93,
          column: 3
        }
      },
      "13": {
        start: {
          line: 79,
          column: 21
        },
        end: {
          line: 85,
          column: 4
        }
      },
      "14": {
        start: {
          line: 87,
          column: 19
        },
        end: {
          line: 87,
          column: 32
        }
      },
      "15": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "16": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 52
        }
      },
      "17": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 69
        }
      },
      "18": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 100,
          column: 70
        }
      },
      "19": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 70
        }
      }
    },
    fnMap: {
      "0": {
        name: "getIbofOsLogs",
        decl: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 30
          }
        },
        loc: {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 55,
            column: 1
          }
        },
        line: 32
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 45,
            column: 21
          },
          end: {
            line: 45,
            column: 22
          }
        },
        loc: {
          start: {
            line: 45,
            column: 28
          },
          end: {
            line: 49,
            column: 7
          }
        },
        line: 45
      },
      "2": {
        name: "setLiveLogsDb",
        decl: {
          start: {
            line: 57,
            column: 17
          },
          end: {
            line: 57,
            column: 30
          }
        },
        loc: {
          start: {
            line: 57,
            column: 39
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 57
      },
      "3": {
        name: "getLiveLogsDb",
        decl: {
          start: {
            line: 77,
            column: 17
          },
          end: {
            line: 77,
            column: 30
          }
        },
        loc: {
          start: {
            line: 77,
            column: 33
          },
          end: {
            line: 94,
            column: 1
          }
        },
        line: 77
      },
      "4": {
        name: "logManagementWatcher",
        decl: {
          start: {
            line: 98,
            column: 17
          },
          end: {
            line: 98,
            column: 37
          }
        },
        loc: {
          start: {
            line: 98,
            column: 40
          },
          end: {
            line: 102,
            column: 3
          }
        },
        line: 98
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }],
        line: 43
      },
      "1": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }, {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 90,
            column: 5
          }
        }],
        line: 88
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "7e4f82dd35bc8a5fc5c31b71d22fce5655e5a94d"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getIbofOsLogs = getIbofOsLogs;
exports.setLiveLogsDb = setLiveLogsDb;
exports.getLiveLogsDb = getLiveLogsDb;
exports.logManagementWatcher = logManagementWatcher;

var _defineProperty2 = _interopRequireDefault(require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/defineProperty"));

var
/* istanbul ignore next */
_axios = _interopRequireDefault(require("axios"));

var
/* istanbul ignore next */
_effects = require("redux-saga/effects");

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../store/actions/actionTypes"));

var
/* istanbul ignore next */
actionCreators = _interopRequireWildcard(require("../store/actions/exportActionCreators"));

/* istanbul ignore next */ function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function* getIbofOsLogs() {
  /* istanbul ignore next */
  cov_1k47e15ga1.f[0]++;
  cov_1k47e15ga1.s[0]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_1k47e15ga1.s[1]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], `/api/v1.0/get_Ibof_OS_Logs/?ts=${Date.now()}`, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));
    const result =
    /* istanbul ignore next */
    (cov_1k47e15ga1.s[2]++, response.data);

    /* istanbul ignore next */
    cov_1k47e15ga1.s[3]++;

    if (result) {
      /* istanbul ignore next */
      cov_1k47e15ga1.b[0][0]++;
      const logList =
      /* istanbul ignore next */
      (cov_1k47e15ga1.s[4]++, []);

      /* istanbul ignore next */
      cov_1k47e15ga1.s[5]++;
      result.forEach(log => {
        /* istanbul ignore next */
        cov_1k47e15ga1.f[1]++;
        cov_1k47e15ga1.s[6]++;
        logList.push(
        /* istanbul ignore next */
        _objectSpread({}, log));
      });

      /* istanbul ignore next */
      cov_1k47e15ga1.s[7]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.getIbofOsLogs(logList))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1k47e15ga1.b[0][1]++;
    }
  } catch (error) {//  console.log(error);
  }
}

function* setLiveLogsDb(action) {
  /* istanbul ignore next */
  cov_1k47e15ga1.f[2]++;
  cov_1k47e15ga1.s[8]++;

  try {
    /* istanbul ignore next */
    cov_1k47e15ga1.s[9]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.post], '/api/v1.0/set_live_logs/', {
        "liveLogs": action.payload
      }, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    );

    /* istanbul ignore next */
    cov_1k47e15ga1.s[10]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.setLiveLogs(action.payload))
    );
  } catch (error) {
    /* istanbul ignore next */
    cov_1k47e15ga1.s[11]++;
    yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      put)(actionCreators.setLiveLogs(action.payload))
    );
  }
}

function* getLiveLogsDb() {
  /* istanbul ignore next */
  cov_1k47e15ga1.f[3]++;
  cov_1k47e15ga1.s[12]++;

  try {
    const response =
    /* istanbul ignore next */
    (cov_1k47e15ga1.s[13]++, yield (
      /* istanbul ignore next */
      (0,
      /* istanbul ignore next */
      _effects.
      /* istanbul ignore next */
      call)([
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      _axios.
      /* istanbul ignore next */
      default.get], `/api/v1.0/get_live_logs/?ts=${Date.now()}`, {
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'x-access-token': localStorage.getItem('token')
        }
      })
    ));
    const result =
    /* istanbul ignore next */
    (cov_1k47e15ga1.s[14]++, response.data);

    /* istanbul ignore next */
    cov_1k47e15ga1.s[15]++;

    if (result) {
      /* istanbul ignore next */
      cov_1k47e15ga1.b[1][0]++;
      cov_1k47e15ga1.s[16]++;
      yield (
        /* istanbul ignore next */
        (0,
        /* istanbul ignore next */
        _effects.
        /* istanbul ignore next */
        put)(actionCreators.setLiveLogs(result))
      );
    } else
    /* istanbul ignore next */
    {
      cov_1k47e15ga1.b[1][1]++;
    }
  } catch (error) {// console.log(error);
  }
}

function* logManagementWatcher() {
  /* istanbul ignore next */
  cov_1k47e15ga1.f[4]++;
  cov_1k47e15ga1.s[17]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_GET_IBOFOS_LOGS, getIbofOsLogs)
  );

  /* istanbul ignore next */
  cov_1k47e15ga1.s[18]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_SET_LIVE_LOGS_DB, setLiveLogsDb)
  );

  /* istanbul ignore next */
  cov_1k47e15ga1.s[19]++;
  yield (
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _effects.
    /* istanbul ignore next */
    takeEvery)(actionTypes.SAGA_GET_LIVE_LOGS_DB, getLiveLogsDb)
  );
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,