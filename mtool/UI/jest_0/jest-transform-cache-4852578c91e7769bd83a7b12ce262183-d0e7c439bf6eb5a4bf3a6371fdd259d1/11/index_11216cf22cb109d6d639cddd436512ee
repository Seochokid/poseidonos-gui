aa91eabeb1a28b21f8684f1497f4d6db
/* istanbul ignore next */
"use strict";

var cov_261s5vk800 = function () {
  var path = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/DriveComponents/DriveTable/index.js";
  var hash = "d0e2144b5efd7346b92d715317567a5339ceb62f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/DriveComponents/DriveTable/index.js",
    statementMap: {
      "0": {
        start: {
          line: 53,
          column: 15
        },
        end: {
          line: 80,
          column: 2
        }
      },
      "1": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 80,
          column: 1
        }
      },
      "2": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 21
        }
      },
      "3": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 118,
          column: 11
        }
      },
      "4": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 213,
          column: 10
        }
      },
      "5": {
        start: {
          line: 131,
          column: 23
        },
        end: {
          line: 131,
          column: 77
        }
      },
      "6": {
        start: {
          line: 143,
          column: 23
        },
        end: {
          line: 143,
          column: 125
        }
      },
      "7": {
        start: {
          line: 155,
          column: 23
        },
        end: {
          line: 155,
          column: 89
        }
      },
      "8": {
        start: {
          line: 167,
          column: 23
        },
        end: {
          line: 167,
          column: 74
        }
      },
      "9": {
        start: {
          line: 179,
          column: 23
        },
        end: {
          line: 179,
          column: 68
        }
      },
      "10": {
        start: {
          line: 191,
          column: 23
        },
        end: {
          line: 191,
          column: 74
        }
      },
      "11": {
        start: {
          line: 203,
          column: 24
        },
        end: {
          line: 209,
          column: 26
        }
      },
      "12": {
        start: {
          line: 206,
          column: 42
        },
        end: {
          line: 206,
          column: 63
        }
      },
      "13": {
        start: {
          line: 220,
          column: 28
        },
        end: {
          line: 220,
          column: 38
        }
      },
      "14": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "15": {
        start: {
          line: 278,
          column: 24
        },
        end: {
          line: 282,
          column: 1
        }
      },
      "16": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 281,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 16
          }
        },
        loc: {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 53
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 84
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 129,
            column: 28
          },
          end: {
            line: 129,
            column: 29
          }
        },
        loc: {
          start: {
            line: 131,
            column: 23
          },
          end: {
            line: 131,
            column: 77
          }
        },
        line: 131
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 141,
            column: 28
          },
          end: {
            line: 141,
            column: 29
          }
        },
        loc: {
          start: {
            line: 143,
            column: 23
          },
          end: {
            line: 143,
            column: 125
          }
        },
        line: 143
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 153,
            column: 28
          },
          end: {
            line: 153,
            column: 29
          }
        },
        loc: {
          start: {
            line: 155,
            column: 23
          },
          end: {
            line: 155,
            column: 89
          }
        },
        line: 155
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 165,
            column: 28
          },
          end: {
            line: 165,
            column: 29
          }
        },
        loc: {
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 167,
            column: 74
          }
        },
        line: 167
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 177,
            column: 28
          },
          end: {
            line: 177,
            column: 29
          }
        },
        loc: {
          start: {
            line: 179,
            column: 23
          },
          end: {
            line: 179,
            column: 68
          }
        },
        line: 179
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 189,
            column: 28
          },
          end: {
            line: 189,
            column: 29
          }
        },
        loc: {
          start: {
            line: 191,
            column: 23
          },
          end: {
            line: 191,
            column: 74
          }
        },
        line: 191
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 201,
            column: 28
          },
          end: {
            line: 201,
            column: 29
          }
        },
        loc: {
          start: {
            line: 203,
            column: 24
          },
          end: {
            line: 209,
            column: 26
          }
        },
        line: 203
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 206,
            column: 36
          },
          end: {
            line: 206,
            column: 37
          }
        },
        loc: {
          start: {
            line: 206,
            column: 42
          },
          end: {
            line: 206,
            column: 63
          }
        },
        line: 206
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 24
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 216
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 13
          },
          end: {
            line: 274,
            column: 5
          }
        },
        line: 219
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 278,
            column: 24
          },
          end: {
            line: 278,
            column: 25
          }
        },
        loc: {
          start: {
            line: 278,
            column: 33
          },
          end: {
            line: 282,
            column: 1
          }
        },
        line: 278
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 131,
            column: 27
          },
          end: {
            line: 131,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 47
          },
          end: {
            line: 131,
            column: 65
          }
        }, {
          start: {
            line: 131,
            column: 68
          },
          end: {
            line: 131,
            column: 72
          }
        }],
        line: 131
      },
      "1": {
        loc: {
          start: {
            line: 143,
            column: 33
          },
          end: {
            line: 143,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 143,
            column: 86
          },
          end: {
            line: 143,
            column: 100
          }
        }, {
          start: {
            line: 143,
            column: 103
          },
          end: {
            line: 143,
            column: 121
          }
        }],
        line: 143
      },
      "2": {
        loc: {
          start: {
            line: 143,
            column: 34
          },
          end: {
            line: 143,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 34
          },
          end: {
            line: 143,
            column: 48
          }
        }, {
          start: {
            line: 143,
            column: 52
          },
          end: {
            line: 143,
            column: 82
          }
        }],
        line: 143
      },
      "3": {
        loc: {
          start: {
            line: 155,
            column: 27
          },
          end: {
            line: 155,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 57
          },
          end: {
            line: 155,
            column: 77
          }
        }, {
          start: {
            line: 155,
            column: 80
          },
          end: {
            line: 155,
            column: 84
          }
        }],
        line: 155
      },
      "4": {
        loc: {
          start: {
            line: 167,
            column: 27
          },
          end: {
            line: 167,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 46
          },
          end: {
            line: 167,
            column: 62
          }
        }, {
          start: {
            line: 167,
            column: 65
          },
          end: {
            line: 167,
            column: 69
          }
        }],
        line: 167
      },
      "5": {
        loc: {
          start: {
            line: 179,
            column: 27
          },
          end: {
            line: 179,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 43
          },
          end: {
            line: 179,
            column: 56
          }
        }, {
          start: {
            line: 179,
            column: 59
          },
          end: {
            line: 179,
            column: 63
          }
        }],
        line: 179
      },
      "6": {
        loc: {
          start: {
            line: 191,
            column: 27
          },
          end: {
            line: 191,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 191,
            column: 46
          },
          end: {
            line: 191,
            column: 62
          }
        }, {
          start: {
            line: 191,
            column: 65
          },
          end: {
            line: 191,
            column: 69
          }
        }],
        line: 191
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "d0e2144b5efd7346b92d715317567a5339ceb62f"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireWildcard = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("/home/ibof07/pk/ibofmgmt/Code/UI/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var
/* istanbul ignore next */
_react = _interopRequireWildcard(require("react"));

var
/* istanbul ignore next */
_reactRedux = require("react-redux");

var
/* istanbul ignore next */
_styles = require("@material-ui/core/styles");

var
/* istanbul ignore next */
_materialTable = _interopRequireDefault(require("material-table"));

var
/* istanbul ignore next */
_core = require("@material-ui/core");

var
/* istanbul ignore next */
_Grid = _interopRequireDefault(require("@material-ui/core/Grid"));

var
/* istanbul ignore next */
_MuiThemeProvider = _interopRequireDefault(require("@material-ui/core/styles/MuiThemeProvider"));

var
/* istanbul ignore next */
_Search = _interopRequireDefault(require("@material-ui/icons/Search"));

var
/* istanbul ignore next */
_SaveAlt = _interopRequireDefault(require("@material-ui/icons/SaveAlt"));

var
/* istanbul ignore next */
_ChevronLeft = _interopRequireDefault(require("@material-ui/icons/ChevronLeft"));

var
/* istanbul ignore next */
_ChevronRight = _interopRequireDefault(require("@material-ui/icons/ChevronRight"));

var
/* istanbul ignore next */
_FirstPage = _interopRequireDefault(require("@material-ui/icons/FirstPage"));

var
/* istanbul ignore next */
_LastPage = _interopRequireDefault(require("@material-ui/icons/LastPage"));

var
/* istanbul ignore next */
_Add = _interopRequireDefault(require("@material-ui/icons/Add"));

var
/* istanbul ignore next */
_Check = _interopRequireDefault(require("@material-ui/icons/Check"));

var
/* istanbul ignore next */
_FilterList = _interopRequireDefault(require("@material-ui/icons/FilterList"));

var
/* istanbul ignore next */
_Remove = _interopRequireDefault(require("@material-ui/icons/Remove"));

var
/* istanbul ignore next */
_Edit = _interopRequireDefault(require("@material-ui/icons/Edit"));

var
/* istanbul ignore next */
_Delete = _interopRequireDefault(require("@material-ui/icons/Delete"));

var
/* istanbul ignore next */
_ArrowUpward = _interopRequireDefault(require("@material-ui/icons/ArrowUpward"));

var
/* istanbul ignore next */
_Clear = _interopRequireDefault(require("@material-ui/icons/Clear"));

var
/* istanbul ignore next */
_Ok14x = _interopRequireDefault(require("../../../assets/images/Ok14x14.png"));

var
/* istanbul ignore next */
_NotOk14x = _interopRequireDefault(require("../../../assets/images/Not-Ok14x14.png"));

var
/* istanbul ignore next */
actionTypes = _interopRequireWildcard(require("../../../store/actions/actionTypes"));

/* istanbul ignore next */
var _jsxFileName = "/home/ibof07/pk/ibofmgmt/Code/UI/src/components/DriveComponents/DriveTable/index.js";
cov_261s5vk800.s[0]++;

const styles = theme => {
  /* istanbul ignore next */
  cov_261s5vk800.f[0]++;
  cov_261s5vk800.s[1]++;
  return {
    multilineColor: {
      color: 'black'
    },
    root: {
      flexGrow: 1
    },
    Paper: {
      marginTop: theme.spacing(2),
      width: '100%',
      maxHeight: '100%'
    },
    powerParentGrid: {
      maxWidth: '100%',
      flexBasis: '100%',
      minHeight: '100%'
    },
    powerOuterGrid: {
      border: '1px solid gray',
      maxWidth: '100%',
      flexBasis: '100%',
      overflowY: 'auto',
      overflowX: 'hidden',
      background: '#fff'
    }
  };
};

class DriveTable extends
/* istanbul ignore next */
_react.
/* istanbul ignore next */
Component {
  constructor(props) {
    /* istanbul ignore next */
    cov_261s5vk800.f[1]++;
    cov_261s5vk800.s[2]++;
    super(props);

    /* istanbul ignore next */
    cov_261s5vk800.s[3]++;
    this.theme =
    /* istanbul ignore next */
    (0,
    /* istanbul ignore next */
    _core.
    /* istanbul ignore next */
    createMuiTheme)({
      overrides: {
        MuiSvgIcon: {
          //  stylesheet name
          root: {
            //  rule name
            color: '#808080'
          }
        },
        MuiTablePagination: {
          menuItem: {
            fontSize: "12px",
            minHeight: "0px"
          },
          select: {
            width: "45px"
          },
          toolbar: {
            maxHeight: '50px',
            minHeight: '20px'
          }
        }
      },
      palette: {
        primary: {
          main: '#4caf50'
        },
        secondary: {
          main: '#808080'
        }
      }
    });

    /* istanbul ignore next */
    cov_261s5vk800.s[4]++;
    this.state = {
      columns: [{
        title: 'Slot Number',
        field: 'SlotNumber',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        },
        render: rowData => {
          /* istanbul ignore next */
          cov_261s5vk800.f[2]++;
          cov_261s5vk800.s[5]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "p",
            /* istanbul ignore next */
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 131
              },
              __self: this
            }, rowData.SlotNumber ?
            /* istanbul ignore next */
            (cov_261s5vk800.b[0][0]++, rowData.SlotNumber) :
            /* istanbul ignore next */
            (cov_261s5vk800.b[0][1]++, 'NA'))
          );
        }
      }, {
        title: 'Health',
        field: 'Status.Health',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        },
        render: rowData => {
          /* istanbul ignore next */
          cov_261s5vk800.f[3]++;
          cov_261s5vk800.s[6]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "img",
            /* istanbul ignore next */
            {
              src:
              /* istanbul ignore next */
              (cov_261s5vk800.b[2][0]++, rowData.Status) &&
              /* istanbul ignore next */
              (cov_261s5vk800.b[2][1]++, rowData.Status.Health === 'OK') ?
              /* istanbul ignore next */
              (cov_261s5vk800.b[1][0]++,
              /* istanbul ignore next */
              _Ok14x.
              /* istanbul ignore next */
              default) :
              /* istanbul ignore next */
              (cov_261s5vk800.b[1][1]++,
              /* istanbul ignore next */
              _NotOk14x.
              /* istanbul ignore next */
              default),
              __source: {
                fileName: _jsxFileName,
                lineNumber: 143
              },
              __self: this
            })
          );
        }
      }, {
        title: 'Serial Number',
        field: 'SerialNumber',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        },
        render: rowData => {
          /* istanbul ignore next */
          cov_261s5vk800.f[4]++;
          cov_261s5vk800.s[7]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "p",
            /* istanbul ignore next */
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 155
              },
              __self: this
            }, rowData.SerialNumber !== '' ?
            /* istanbul ignore next */
            (cov_261s5vk800.b[3][0]++, rowData.SerialNumber) :
            /* istanbul ignore next */
            (cov_261s5vk800.b[3][1]++, 'NA'))
          );
        }
      }, {
        title: 'Firmware',
        field: 'Firmware',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        },
        render: rowData => {
          /* istanbul ignore next */
          cov_261s5vk800.f[5]++;
          cov_261s5vk800.s[8]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "p",
            /* istanbul ignore next */
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 167
              },
              __self: this
            }, rowData.Firmware ?
            /* istanbul ignore next */
            (cov_261s5vk800.b[4][0]++, rowData.Firmware) :
            /* istanbul ignore next */
            (cov_261s5vk800.b[4][1]++, 'NA'))
          );
        }
      }, {
        title: 'State',
        field: 'State',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        },
        render: rowData => {
          /* istanbul ignore next */
          cov_261s5vk800.f[6]++;
          cov_261s5vk800.s[9]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "p",
            /* istanbul ignore next */
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 179
              },
              __self: this
            }, rowData.State ?
            /* istanbul ignore next */
            (cov_261s5vk800.b[5][0]++, rowData.State) :
            /* istanbul ignore next */
            (cov_261s5vk800.b[5][1]++, 'NA'))
          );
        }
      }, {
        title: 'Raw Capacity',
        field: 'RawCapacity',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        },
        render: rowData => {
          /* istanbul ignore next */
          cov_261s5vk800.f[7]++;
          cov_261s5vk800.s[10]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            "p",
            /* istanbul ignore next */
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 191
              },
              __self: this
            }, rowData.Capacity ?
            /* istanbul ignore next */
            (cov_261s5vk800.b[6][0]++, rowData.Capacity) :
            /* istanbul ignore next */
            (cov_261s5vk800.b[6][1]++, 'NA'))
          );
        }
      }, {
        title: 'LED',
        field: 'active',
        cellStyle: {
          fontFamily: 'Arial',
          fontSize: '12px'
        },
        render: rowData => {
          /* istanbul ignore next */
          cov_261s5vk800.f[8]++;
          cov_261s5vk800.s[11]++;
          return (
            /* istanbul ignore next */
            _react.default.createElement(
            /* istanbul ignore next */
            _core.
            /* istanbul ignore next */
            Switch,
            /* istanbul ignore next */
            {
              size: "small",
              checked: rowData.active,
              onChange: () => {
                /* istanbul ignore next */
                cov_261s5vk800.f[9]++;
                cov_261s5vk800.s[12]++;
                return console.log("Switch");
              } // this.props.togglealertstatus(row.tableData.id)}
              ,
              color: "primary",
              inputProps: {
                'aria-label': 'primary checkbox'
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 203
              },
              __self: this
            })
          );
        }
      }]
    };
  }

  componentDidMount() {
    /* istanbul ignore next */
    cov_261s5vk800.f[10]++;
  }

  render() {
    /* istanbul ignore next */
    cov_261s5vk800.f[11]++;

    const _ref = (cov_261s5vk800.s[13]++, this.props),
          classes = _ref.classes;

    /* istanbul ignore next */
    cov_261s5vk800.s[14]++;
    return (
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _core.
      /* istanbul ignore next */
      Paper,
      /* istanbul ignore next */
      {
        className: classes.Paper,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 222
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        sm: 6,
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        container:
        /* istanbul ignore next */
        true,
        className: classes.powerParentGrid,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 223
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _Grid.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        xs: 12,
        item:
        /* istanbul ignore next */
        true,
        className: classes.powerOuterGrid,

        /* istanbul ignore next */
        "data-testid": "DriveTable-table",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 224
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _MuiThemeProvider.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        theme: this.theme,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 225
        },
        __self: this
      },
      /* istanbul ignore next */
      _react.default.createElement(
      /* istanbul ignore next */
      _materialTable.
      /* istanbul ignore next */
      default,
      /* istanbul ignore next */
      {
        icons: {
          Check:
          /* istanbul ignore next */
          _Check.
          /* istanbul ignore next */
          default,
          FirstPage:
          /* istanbul ignore next */
          _FirstPage.
          /* istanbul ignore next */
          default,
          LastPage:
          /* istanbul ignore next */
          _LastPage.
          /* istanbul ignore next */
          default,
          NextPage:
          /* istanbul ignore next */
          _ChevronRight.
          /* istanbul ignore next */
          default,
          PreviousPage:
          /* istanbul ignore next */
          _ChevronLeft.
          /* istanbul ignore next */
          default,
          Search:
          /* istanbul ignore next */
          _Search.
          /* istanbul ignore next */
          default,
          ThirdStateCheck:
          /* istanbul ignore next */
          _Remove.
          /* istanbul ignore next */
          default,
          DetailPanel:
          /* istanbul ignore next */
          _ChevronRight.
          /* istanbul ignore next */
          default,
          Export:
          /* istanbul ignore next */
          _SaveAlt.
          /* istanbul ignore next */
          default,
          Filter:
          /* istanbul ignore next */
          _FilterList.
          /* istanbul ignore next */
          default,
          Add:
          /* istanbul ignore next */
          _Add.
          /* istanbul ignore next */
          default,
          Edit:
          /* istanbul ignore next */
          _Edit.
          /* istanbul ignore next */
          default,
          Delete:
          /* istanbul ignore next */
          _Delete.
          /* istanbul ignore next */
          default,
          SortArrow:
          /* istanbul ignore next */
          _ArrowUpward.
          /* istanbul ignore next */
          default,
          Clear:
          /* istanbul ignore next */
          _Clear.
          /* istanbul ignore next */
          default
        },
        columns: this.state.columns,
        data: this.props.chassis_front_list,
        options: {
          actionsColumnIndex: -1,
          selection: false,
          sorting: true,
          toolbar: false,
          rowStyle: {
            fontSize: '4px'
          },
          search: false,
          paginationType: 'normal',
          loadingType: 'linear',
          maxBodyHeight: '260px',
          headerStyle: {
            backgroundColor: '#788595',
            color: 'rgba(255, 255, 255, 0.87)',
            fontSize: '14px',
            height: '10%',
            paddingTop: '2px',
            paddingBottom: '2px'
          }
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 226
        },
        __self: this
      })))))
    );
  }

}

/* istanbul ignore next */
cov_261s5vk800.s[15]++;

const mapStateToProps = state => {
  /* istanbul ignore next */
  cov_261s5vk800.f[12]++;
  cov_261s5vk800.s[16]++;
  return {
    chassis_front_list: state.hardwareOverviewReducer.chassis_front_list
  };
};

/* istanbul ignore next */
var _default =
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_styles.
/* istanbul ignore next */
withStyles)(styles)(
/* istanbul ignore next */
(0,
/* istanbul ignore next */
_reactRedux.
/* istanbul ignore next */
connect)(mapStateToProps)(DriveTable));

/* istanbul ignore next */
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,