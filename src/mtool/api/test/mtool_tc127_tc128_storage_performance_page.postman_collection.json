{
	"info": {
		"_postman_id": "b7c2b54b-726a-48c8-be30-f00956eae071",
		"name": "mtool_tc127_tc128_storage_performance_page",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "54e0c73d-d6df-45c0-ba21-5239641d8e9f",
						"exec": [
							"// save the response into a local variable so that we can access it later in the script\r",
							"let response = pm.response.json();\r",
							"\r",
							"// retrieve the token value from the response\r",
							"let token = response[\"token\"];\r",
							"\r",
							"// save the token value to variables so that it can used in subsequent APIs\r",
							"pm.variables.set('token', token);\r",
							"//pm.environment.set('token', token);\r",
							"postman.setEnvironmentVariable(\"token\", token);\r",
							" //console.log(\"response\",response);\r",
							"\r",
							"pm.test(\"Logged in as admin...\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"username\":\"admin\",\"password\":\"admin\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/login/",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"login",
						""
					]
				},
				"description": "login to MTool"
			},
			"response": []
		},
		{
			"name": "Get devices",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5c32a9e8-3ca9-40e5-a731-f38b311d4fee",
						"exec": [
							"// save the response into a local variable so that we can access it later in the script\r",
							"let response = pm.response.json();\r",
							"\r",
							"console.log(response);\r",
							"try {\r",
							"    let devices = response.devices.map(d => d.name)\r",
							"    console.log(\"devices-> \",devices)\r",
							"    // save the token value to variables so that it can used in subsequent APIs\r",
							"    pm.variables.set('device', devices[0]);\r",
							"    console.log('device is....', devices[0]);\r",
							"    postman.setEnvironmentVariable(\"device\",  devices[0]);\r",
							"}\r",
							"catch (err) {\r",
							"    console.log('err....', err);\r",
							"}\r",
							"pm.test(\"Get device info...\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "856a7174-68dc-4483-9941-ea45b3feaa6b",
						"exec": [
							"//setTimeout( function() {}, 2000)\r",
							"//pm.Wait(5000);\r",
							"\r",
							"let temp_token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOiJhZG1pbiIsImV4cCI6MTU5NzQwMDc3Mn0.u2dTsSz6OKOHQKLt2XjpRPFLRCJmzlC7dafmrq_VcWc'\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-access-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/get_devices/",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"get_devices",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Array",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a7340a96-a3fd-4781-b3cd-d69d44b77682",
						"exec": [
							"pm.test(\"Deleted Array, if any...\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-access-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"arrayname\":\"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/delete_array/POSArray",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"delete_array",
						"POSArray"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Array",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb6b588d-7af2-4aff-8021-7c18e893c10c",
						"exec": [
							"pm.test(\"Created an array...\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json(); \r",
							"console.log(jsonData.result.status.description)\r",
							"pm.test(\"Verify Json values\", function () { \r",
							"    pm.expect(jsonData.result.status.description).is.to.equal(\"Success\"); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-access-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"size\":\"01600321314816160032131481616003213148161600321314816\",\"arrayname\":\"{{arrayName}}\",\"raidtype\":\"raid5\",\"storageDisks\":[{\"deviceName\":\"{{storageDisk1}}\"},{\"deviceName\":\"{{storageDisk2}}\"},{\"deviceName\":\"{{storageDisk3}}\"}],\"spareDisks\":[{\"deviceName\":\"{{spareDisk1}}\"}],\"writeBufferDisk\":[],\"metaDisk\":\"uram0\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/create_arrays/",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"create_arrays",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Volume",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f855199-0b98-4c3e-815b-9cdb097a63e9",
						"exec": [
							"pm.test(\"Volume created...\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-access-token",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"{{volName}}\",\"size\":\"10\",\"description\":\"\",\"unit\":\"GB\",\"arrayname\":\"{{arrayName}}\",\"maxbw\":0,\"maxiops\":0,\"count\":\"1\",\"suffix\":0,\"stop_on_error\":false,\"mount_vol\":true,\"array\":\"{{arrayName}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/save-volume/",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"save-volume",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update vol_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1813254-695e-416d-a9fc-c5e3769dda96",
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Volume updated...\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"console.log(jsonData.result.status.description)\r",
							"pm.test(\"Verify Json values\", function () {\r",
							"    pm.expect(jsonData.result.status.description).is.to.equal(\"Success\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-access-token",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"maxiops\":10,\"maxbw\":12,\"name\":\"{{volName}}\",\"array\":\"{{arrayName}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/update-volume/",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"update-volume",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Volumes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bb1912e5-e669-460b-9f1c-86dcf9a50d9b",
						"exec": [
							"pm.test(\"Get Volume data is successful...\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = pm.response.json();\r",
							"console.log(\"volumes\",jsonData.Oem)\r",
							"\r",
							"\r",
							" pm.test(\"Verify Json values\", function () {\r",
							"     pm.expect(jsonData.Oem.MaxBandwidth).is.to.equal(12);\r",
							"     pm.expect(jsonData.Oem.MaxIOPS).is.to.equal(10);\r",
							" });\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "755f54fc-8fba-42c2-a417-c8ad1ed52a62",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-access-token",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}:{{port}}/redfish/v1/StorageServices/1/Volumes/0",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"redfish",
						"v1",
						"StorageServices",
						"1",
						"Volumes",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "vol_bw_read_0",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "36c09d09-f909-4e0b-8607-33c20b1e59e3",
						"exec": [
							"pm.test(\"Data received\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json(); \r",
							"data = jsonData.res\r",
							"bw_sum = 0 \r",
							"for( i= 0; i<data.length;i++) {\r",
							"    bw_sum = bw_sum + data[i].bw\r",
							"}\r",
							"console.log(\"bw_sum  \",bw_sum)\r",
							"pm.test(\"Verify Json values\", function () {  \r",
							"    pm.expect(bw_sum/data.length).to.be.below(12000001); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-access-token",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/bw_read/1m/0",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"bw_read",
						"1m",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "vol_bw_write_0",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "00df950e-371f-4dd6-8b9f-ebf673015737",
						"exec": [
							"pm.test(\"Data received\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json(); \r",
							"data = jsonData.res\r",
							"bw_sum = 0 \r",
							"for( i= 0; i<data.length;i++) {\r",
							"    bw_sum = bw_sum + data[i].bw\r",
							"}\r",
							"console.log(\"bw_sum  \",bw_sum)\r",
							"pm.test(\"Verify Json values\", function () { \r",
							"     pm.expect(bw_sum/data.length).to.be.below(12000001);  \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-access-token",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/bw_write/1m/0",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"bw_write",
						"1m",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "vol_iops_read_0",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dc34ab84-613b-4edd-9b6e-aa3676aef2c2",
						"exec": [
							"pm.test(\"Data received\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var jsonData = pm.response.json(); \r",
							"data = jsonData.res\r",
							"iops_sum = 0 \r",
							"for( i= 0; i<data.length;i++) {\r",
							"    iops_sum = iops_sum + data[i].iops\r",
							"}\r",
							"console.log(\"iops_sum  \",iops_sum)\r",
							"pm.test(\"Verify Json values\", function () { \r",
							"   pm.expect(iops_sum*1000/data.length).to.be.below(10001); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-access-token",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/iops_read/1m/0",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"iops_read",
						"1m",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "vol_iops_write_0",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7ef6622-d3d1-40f2-9839-1235a4139f4c",
						"exec": [
							"pm.test(\"Data received\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json(); \r",
							"data = jsonData.res\r",
							"iops_sum = 0 \r",
							"for( i= 0; i<data.length;i++) {\r",
							"    iops_sum = iops_sum + data[i].iops\r",
							"}\r",
							"console.log(\"iops_sum  \",iops_sum/data.length)\r",
							"pm.test(\"Verify Json values\", function () { \r",
							"   pm.expect(iops_sum*1000/data.length).to.be.below(10001); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-access-token",
						"type": "text",
						"value": "{{token}}"
					}
				],
				"url": {
					"raw": "http://{{host}}:{{port}}/api/v1.0/iops_write/1m/0",
					"protocol": "http",
					"host": [
						"{{host}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1.0",
						"iops_write",
						"1m",
						"0"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}