// Code generated for package util by go-bindata DO NOT EDIT. (@generated)
// sources:
// ../resources/events.yaml
package util

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ResourcesEventsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5d\xcd\x72\x1b\xb7\xb2\xde\xe7\x29\x50\x5e\x9c\x4a\xaa\xac\x5c\x4b\x24\x63\xd1\x3b\x59\x96\x5c\x3a\xd7\xb2\x5c\xa2\x9c\x73\xef\x2a\x05\xce\x34\x49\x44\x33\xc0\x04\xc0\x50\x66\x52\x79\x17\x3e\x0b\x9f\xec\x14\x80\xf9\x23\x81\x21\x9b\xa0\x2b\x5e\x59\xe4\x0c\xbe\xee\x46\xa3\xff\xd0\x00\xcf\xce\xce\x7e\xf8\x28\x68\xf6\x8e\xdc\x2c\x81\x6b\x45\xbe\x72\x36\x63\x09\xd5\x4c\xf0\x1f\x72\x91\x96\x19\xa8\x77\x3f\x10\x72\x46\x38\xcd\xe1\x1d\x79\x75\xfd\x70\x7f\xff\xf0\xf9\xd5\x0f\x84\x10\x92\x88\x92\xeb\x77\x64\x3c\x1e\xdb\x3f\x59\x3a\xd1\x54\xea\x77\xe4\x4d\xf5\xe7\x0d\x4f\xdf\x11\xd2\x7e\xcf\x67\xe2\x9d\xfd\x9f\x19\x2f\x11\x29\xd4\x8f\x9a\x7f\x19\x2c\x21\x7b\x47\x5e\xdd\x7d\xbe\x7d\x78\xd5\x7c\x9a\x83\x52\x74\x6e\x80\x27\x65\x92\x80\x52\xed\x57\x85\x14\xd3\x0c\xf2\x77\xe4\x55\xfb\x99\x12\x59\x69\x48\xaf\x3e\x6c\xa9\xfe\x74\xb7\x43\xf2\x36\xc5\xe7\x6f\xde\xec\x10\x7d\xfe\x66\x7c\xd9\x4b\x75\xf3\x38\x86\xf0\x24\x63\x44\x81\x5c\x82\x24\x8c\x33\xcd\x68\xc6\xfe\x84\xf4\x28\x3e\x76\xb0\xcf\xd1\xd8\x1c\x5e\x48\x92\x31\xe0\xfa\x14\xbc\x8b\x5d\x3c\x03\xe7\xa3\x39\x20\x92\x32\x95\x08\xce\x21\xd1\x90\x7a\xa0\x3e\xa2\x0f\x37\xc0\xc1\x49\xf8\xa3\x04\xa5\x49\xae\xe6\x44\x42\xb2\x8c\xc2\x1a\x62\xb1\x54\x21\xb8\x02\x0b\xa6\x80\xeb\x28\xb0\x11\x0e\x0c\x38\x9d\x66\x40\x9e\x01\x8a\x33\x9a\xb1\x25\x44\x81\xfd\xb2\x0b\xf6\x9f\xab\xc7\xcf\x08\x30\x32\xa3\x2c\x8b\x9c\xb9\xb7\x47\x31\x28\xa1\x54\x70\x46\xd3\x54\x46\x81\x5d\x1e\xc5\x60\x0b\xb6\x59\xc7\x73\x78\xee\x2d\xfb\x1e\xd0\x6f\x09\x14\x66\x08\x22\x38\x49\x44\x9e\x53\x9e\x1a\x1c\x63\xc1\x18\x9f\x47\x41\x7b\xab\xfe\xe6\xf1\xf1\xe1\xd1\xc7\x76\xdc\x11\x2d\x8c\xa2\xc6\x71\x89\x5c\xf0\x37\xff\x77\xf7\x14\x35\xbe\xb7\xc2\xc3\x52\x34\xe3\xef\x70\xb9\x17\xa5\x31\xf7\x77\xef\xc5\xed\xc3\x84\x4c\x34\xd5\x40\xee\x29\xa7\x73\x90\x5b\xf6\xff\xa2\x31\xf7\xb5\x03\x38\xf7\x1c\xc0\xc5\x1e\xb7\xd5\x3c\xde\xe1\xe1\xc3\xcd\xfb\xaf\x1f\x7d\x26\x94\x21\xe2\xb7\xa2\x9c\x66\x4c\x2d\x20\x46\xd5\xcf\x7d\x83\x1f\x9e\x0f\x0b\x45\x12\xc1\x35\x7c\xd3\x84\xa6\x69\x94\x92\x9f\x63\xed\xfd\x36\x9c\x84\x5c\x2c\x23\x01\x91\x16\x7f\x1b\xb0\x2c\x52\x1a\xe7\x62\xce\xb1\x66\xbf\x02\x5c\x50\x3e\x8f\x03\xf2\xed\x45\x18\xe8\xe9\xfd\x87\x88\xe1\x2f\x7c\x25\x7c\xbc\xf9\xf2\xf0\xf8\xf4\xdb\xd3\xe3\xd5\xf5\xcd\xf7\x81\xd9\x41\xf8\x6e\xb4\x0f\xbc\x39\xd8\x4f\x3b\xab\xd6\xf4\x4a\x69\xc8\xc9\x23\x24\x62\x09\x72\x45\xee\x78\x21\xc5\x5c\x82\x52\x47\xda\x88\x5f\x45\x56\xe6\x10\x32\x0e\x83\x5d\xe3\x70\xe1\x45\x87\x17\xfb\x8c\xc3\x45\x20\x3a\x0c\x4f\xbb\xa3\x81\x24\x12\xe2\x34\xf9\x22\x10\x0b\xee\x45\x4a\x21\x83\x58\x24\xa4\x55\xa8\x90\x72\x23\xcb\x48\x24\xa4\x39\xa8\x90\x4a\x7e\x0a\x16\xd2\x12\x54\x58\xd6\xa6\x1a\xd7\xaa\x17\x40\x32\xa6\x22\xe2\xc0\x0b\x74\x1c\xe8\x30\x37\xeb\xca\xb2\x92\x99\x14\xb9\x01\xde\xac\x63\x91\xb1\xe1\xcb\xd3\x02\xea\xf0\x1a\x52\xb2\xac\x74\x47\x80\x22\x5c\x68\x02\xdf\x42\xf0\xf6\xa5\xea\xd1\x17\xa6\x17\x56\x44\xde\x20\x66\xf1\x11\x21\xeb\x3f\xef\x3e\xf4\x0d\xdb\x66\x24\x37\x5c\x83\xb4\xa3\x25\x42\x4a\x48\x74\xff\x58\x74\x66\x1e\x4d\x16\x90\x3c\x33\x3e\xb7\xef\x54\x5f\x76\x24\xd6\x11\x87\xb7\x78\xc2\xe2\xa8\x26\x5f\xb1\x3f\x81\x30\x45\xb4\x10\x24\xa3\x72\xee\xc7\xe5\xcd\x82\xa6\xdc\xb2\x34\x6d\xd6\x36\x99\x42\x42\x4b\x05\x96\xa6\x9c\x7e\x63\x79\x99\x13\x5e\xe6\x53\x90\x44\xcc\x2a\x2a\x15\xd1\x0b\xaa\xed\xdb\x9d\x37\x99\xb2\xe1\x24\x74\xbd\x79\x2b\x9d\x47\xd0\x72\x55\x31\x6e\x15\xc5\x30\x5e\x9a\xf4\xcb\x50\x2f\x57\xb5\x00\x68\x2e\xf8\xdc\xc9\xd8\x3c\x51\x0f\x5e\x01\xfb\xa2\xf1\x56\x7b\x4f\x88\x66\x29\x73\xc3\xd9\x38\x7b\xd9\xca\x2a\xac\x22\x9e\x4a\x58\xb1\x3a\x0e\x15\xb9\x92\x92\xae\x48\x42\x0b\x9a\xac\x02\xdc\x5e\x9b\xa9\xb5\x32\x54\xce\x0f\xd8\x27\x99\x5e\x11\x13\x60\x5b\x49\xcc\x29\xe3\x1e\x3b\x17\x48\xc5\xdf\x99\xbf\x05\x5d\x02\xa1\x64\x9a\x51\xfe\x6c\xd5\xcd\x67\xe9\xbd\xfd\x8e\x39\x15\xa6\x59\x26\x5e\xcc\x4a\x6d\xb5\x72\xeb\x2d\xac\x52\x77\xde\xb7\x92\x65\x22\xc0\xd2\x71\xca\x6b\xc6\xdd\xac\x1b\xf5\x15\x81\x24\xa4\xfb\x28\x01\x43\xa0\xd3\x3e\xef\x85\x5d\x36\xe8\x16\xf1\x56\x87\x3b\xab\xda\x2a\xc8\xb7\x6f\x26\x8c\x92\x34\xd1\x20\x7d\x6d\xbb\x40\x6a\x5b\x97\x40\xa6\x48\x5a\x16\x19\x4b\x82\xae\x93\x5c\x6d\xd9\x22\xda\x3e\xeb\xde\xa6\x99\x04\x9a\xae\xdc\x82\x50\x7b\x38\x4b\xd9\x6c\x06\x12\xb8\x0e\x4c\x68\x87\x01\x64\x46\xf3\x95\xd3\xc4\x64\x86\xdd\xa5\x12\xd6\xab\xd0\x5c\x98\xc8\x97\x32\xae\x08\x25\x4a\x4b\x67\xe1\xa8\xde\x51\xbe\xbd\xca\xe6\xcd\x53\x0e\xa0\x95\xf7\x95\x2c\xb3\x80\x4d\x18\x20\x17\xd1\x63\xb3\xc2\xed\xd2\xde\x63\x2e\xfb\xed\x41\xd0\xcc\x86\xad\xde\x96\xb9\x2f\x84\x52\x2c\x6c\x87\x3a\x8c\x20\x97\x4e\x80\x11\x95\xd3\x2c\x3b\x9e\x91\xcd\x7a\xfb\xc5\x90\x45\xcb\x19\xb7\x5e\xc1\xcc\x63\xe2\x5b\x53\x6b\xe1\xa4\xe1\xdb\xe7\x07\xb9\x7c\x76\xf8\x71\x4a\xc3\xe6\x3c\xb4\x7e\x42\x1c\x6d\xd6\xf6\xbd\x66\x6d\xdb\x97\xdd\x02\x9b\x66\x22\x79\xde\xb6\xfa\x2d\x8f\x77\xbc\x28\xf5\x16\x2f\x5a\x18\x0f\x97\x97\x99\x66\x45\x06\xc6\x03\x7a\x03\xb4\xec\x0d\x8f\x33\xde\xf5\xd2\xee\x8b\x0a\xc9\x95\xd6\x90\x17\xda\x10\x61\x9f\x69\xed\x57\xbd\x9c\xfa\x86\x68\x59\xfa\x2c\xf4\xc2\xea\x9c\x20\xa9\xf0\x29\x3e\xce\x36\xd7\x70\xfd\x91\x6c\x97\xe6\xea\xa9\x7e\xaa\xfd\x61\xb0\x74\x8f\xfc\xbc\x85\xcf\x84\x4f\xf7\x75\xe5\x1f\x5d\x3a\x51\x8b\xa9\xa2\xa7\x97\x78\x17\x39\x57\xef\xd0\xbe\xb7\x5a\x5a\x3b\x3c\x57\x2f\xd5\xb1\x8c\x5d\xf7\x15\x9b\xdb\x81\x9e\xc7\xd2\x2f\x1e\x4b\x37\x52\x0a\xe9\xf3\x74\x4b\x59\x66\xa0\x5c\x64\x54\x43\xe5\xa0\x69\x4c\xa4\xfd\x8b\x5f\xad\xdb\x0f\x2b\x0a\xe0\x27\x83\x7a\x76\xe0\x00\xa8\xd1\x97\x93\x41\x3d\xd7\x77\x00\xf4\x45\xb2\xef\x20\x5f\x2f\x6f\xeb\x41\xfd\xb5\xc5\xd9\xac\x6d\xe9\x88\x6b\x32\x95\xe2\x19\x78\x0c\xee\x5b\xac\x3a\xdd\x43\x2e\x8c\x8b\x72\xc6\x9c\x09\xee\xca\xce\xa5\x0c\xad\x0f\x92\x50\x55\xad\x63\xb5\x10\x65\x96\x12\x0e\x4b\x93\x19\x24\x49\x29\xc9\x19\x59\x00\x2d\x3a\x43\x91\xdd\x91\xda\x35\xf3\xd4\x1b\x02\xbf\xc5\x6a\xe4\x1d\x5f\xd2\x8c\xa5\x84\xf1\x14\xbe\x11\xd8\x7a\x08\x4f\xb2\x7d\xfb\xc7\x6a\x96\x59\xfa\x13\x61\x26\x08\xe1\x34\xcb\x56\x64\x2e\x29\xaf\x32\x1b\xe6\xc0\x82\x4e\xc3\x3d\x4f\x32\x31\x67\xc9\x66\xdd\x25\xa4\xc3\xd5\xb1\x2a\x6f\xa5\xf8\xf3\x66\xcd\xe1\x65\xb3\x6e\x32\xc7\x08\x06\xbf\xba\x7d\x05\x2d\xc8\x9c\x2d\xa1\x4d\x42\x5f\x93\x14\x54\x61\x54\xbc\x13\x55\xd9\xca\x52\x1d\xa8\xe5\xf4\x5b\x3c\xbf\xd8\xd5\x66\xfc\xb7\xa2\x2e\x2d\xae\x88\xd8\x89\x75\xf1\xac\x5e\x79\x79\x7d\x3d\xf2\xc1\x30\x1a\xc7\xd5\xa5\xef\xe1\xa9\xe4\xdd\x8d\x92\x86\xaf\x87\x52\x9b\x70\xe1\x0f\xa1\x88\xa4\x3c\x14\x54\x5e\x91\x25\xcd\x4a\x20\x19\x28\x9b\x50\xf3\xed\xe8\xaa\xb0\x79\x80\x99\x3a\x33\x86\x7b\xf4\x85\xaa\x3a\xc8\x46\x85\x68\xed\x9b\xdd\x84\xbd\x0e\xd3\xb7\x52\xd1\x9f\x3d\x66\xc7\x78\x66\x5d\x36\x6c\x75\xa6\x2f\x30\x68\x33\xd6\x9d\x82\x83\x90\x24\x13\x34\x85\xd4\xce\x9a\x28\x35\x61\x53\x31\x13\x6a\x4f\x50\xd3\x18\x8f\xca\xc3\xba\x38\xc3\xbd\xe6\xb3\xe1\xc7\x38\x7d\x6c\x54\x35\xdb\x5b\x5a\x66\x81\xba\x51\xcd\x41\xb5\x4b\xd6\x72\x52\x80\x9c\x09\x99\x1b\x43\xe1\xe6\x70\xf2\xf4\xf0\xc5\xd5\xe4\x11\x96\x7a\xec\x07\xc5\x7d\xf4\x7d\x10\xbc\xd2\xed\x1e\x6b\x37\x11\x66\xf9\x98\xef\x14\xc9\xe9\xaa\x5a\x18\x69\x29\x9b\xb4\xa3\xd9\xda\x33\xca\xd9\xa9\x7c\xbd\x76\xda\x60\x96\x4c\x39\x55\xe6\x33\xae\x8d\xaf\x97\xce\x90\xe7\xd5\xf4\xbe\x08\xf9\x4c\x5e\x20\xcb\x7e\x0e\xa5\x6f\x06\xd8\xd6\x04\x2c\x09\x64\x41\x79\x9a\x19\x28\x9a\x99\x89\x9d\x2f\x08\xd3\xb5\xd8\x1c\x65\x96\x97\x52\x81\x24\x0e\x32\xf1\xe2\xa2\xc0\xfe\x55\xaf\x78\x0c\xe5\x6e\x06\x0d\x42\x5f\xb1\xda\x0f\xab\xbb\x46\x83\x8b\xce\x30\xbb\x43\xb4\xac\x4e\xea\x67\x14\xc9\x4b\xb5\x53\x40\x9b\x09\x59\xc5\x9a\x86\xf9\xb6\x72\xd5\x94\xf4\xef\xdf\x3f\x06\x77\xfb\xce\xbd\x82\xfe\xc0\x2b\xe8\x0f\xf6\x15\xf4\x07\xd8\x82\xfe\x95\xf3\xd1\x26\xde\xb0\xee\x5f\xb9\xa6\x95\x88\x48\x63\x80\xad\xec\xe7\x53\x49\x52\xaa\x69\x1d\xb8\x1a\x7d\xb3\x21\x56\x14\x28\xb2\xc8\xdf\x80\xd2\x34\x3d\x11\x11\x59\xec\x2f\xa8\x64\x7a\xe5\x92\xfd\x93\xc4\x8a\xdd\xfa\x73\xaa\x5a\x96\x2c\x3d\x1d\x14\x5b\x77\x4f\x61\xc9\x12\x97\x98\xcf\x44\x19\xb3\x79\x7f\x31\xc0\x16\xb5\xb7\x04\x6a\x02\xca\x28\x30\x64\xe5\xc1\x97\x66\x34\x22\xb2\xd2\xd6\x68\xe8\x69\xc2\xf4\xb4\xa5\x1f\xed\x19\x56\xa7\x81\xf9\xf5\xb5\x9e\x0e\x8f\x5d\x2b\x13\x2b\x4b\xbf\x0e\xd6\x03\xd8\x08\xd3\xd5\xea\x83\x4e\x12\x83\xe7\x07\xeb\xfd\x78\xc6\xf5\x53\x7d\x02\x98\x1f\x29\x87\xc1\xe6\xa0\xb7\xf4\x13\x2f\xcd\xc6\xf1\x7c\xb0\xeb\x16\xe7\x7a\x86\x9e\xeb\x19\xee\x73\x3d\x43\xac\xeb\xb9\x73\xbd\x85\x44\x25\x34\x26\xb3\x1d\x62\xfd\xcd\x23\x44\x23\x20\x9d\xcb\x27\xa6\x74\x65\x0a\xa3\x60\x90\x1e\xc5\xc2\x50\x13\x61\x6f\xd6\x27\xa0\x05\xfd\xc9\xff\x84\xcd\xc4\x2d\xe3\xa9\xe1\xec\xc7\x92\xa5\x3f\x45\xa1\x79\x5b\xc7\x3d\x4a\x6d\xe6\x28\x7a\xed\x0c\xfd\xe6\xc1\x1e\x98\xca\x61\xd9\xe2\x55\x3c\x9a\xd7\x36\xb8\x1f\x2d\xc9\x84\x8a\xb7\x42\x43\x6c\xe3\x60\x85\xb6\x59\xf7\x1b\x75\xe2\x16\x7e\xa7\x50\xee\x0a\xdb\xf5\x8e\xbd\xc9\x2b\xfd\xb7\xf7\x90\x36\xc6\x91\xf6\x59\x70\x0b\x61\xd3\xd8\x0f\x61\xdd\x25\x0f\x3c\x5b\x91\x14\x34\x4d\x16\x90\x36\xb2\x73\xa9\xea\x6e\xb3\x56\x3f\x49\xd8\x0e\xa6\x94\x42\x2e\xb8\xc9\xce\x64\x4c\x6b\xc2\xd0\x0f\x5b\x0e\xe0\x88\x22\x0a\x06\x69\x83\x2a\x71\x51\x6d\xc4\x97\xdb\xb6\x66\xd0\x91\x2d\xcd\x17\x43\x3f\x68\xd9\x87\x6a\xcc\xd1\xf7\x81\x45\xc6\xba\x8e\xcb\x13\x4c\xee\x39\xb2\xa3\xc5\xf1\x75\x0a\x10\xb2\xab\x79\x8b\xa3\x78\x53\x71\xee\x59\xa6\x3e\x53\xf1\x7d\xe0\x90\x96\xa9\x6c\x4a\x8f\x76\xb9\x91\x5c\x70\xa6\x85\x0c\x35\x16\x13\x9a\x65\x9d\xef\xab\xe5\xa3\x08\x95\xcd\xb6\xd3\x66\x2d\x4b\x6e\x32\xff\xd7\x44\x48\x93\xa8\x57\x8f\xab\xbe\x8e\x1c\x9f\x6e\xa4\xd9\xea\xd2\x2d\x8a\x43\x64\x6f\xd6\x3e\xdd\x9b\x75\x87\x70\x3b\x4a\x01\x69\x34\xdd\x7e\x57\x48\x9f\xe3\x69\x8d\x4e\x01\x29\x29\x39\x7c\x2b\xec\xaa\xcc\x56\x3e\xe9\x98\x87\xf7\xd0\xe4\xd9\xc1\x9e\xbe\xe2\x42\x42\x61\x84\x11\xbf\x98\xfc\xae\x8b\x1e\x28\x09\x19\x50\x75\x1c\x54\x13\x1b\xdb\x1a\xe6\x81\xfe\xca\x91\x17\x13\xbf\xdd\x17\x13\x8f\xfc\x98\xb8\x2f\x53\xb2\x05\xd4\x6a\x6f\x34\xa5\xcd\x8e\xee\xcf\x11\xf2\x1a\xf9\x11\x32\x06\xd5\xee\xc8\x9e\x04\x8b\xcd\x9a\x1c\x6c\x4f\x49\xfe\x18\x40\x6c\xe6\xe4\x00\xb7\x1b\xf8\xe2\x10\xfd\xdd\xbc\x30\xe2\x87\xd3\x0b\x24\x23\x74\x0c\xad\x17\xd0\x69\xd1\x53\x2a\x6d\x8b\x92\x53\xd0\x2f\x00\x9c\xfc\xf5\xb7\xad\x7e\xfd\xf5\x77\x14\x21\xd8\x28\x9b\x2f\xf3\xda\xb7\x9c\x94\x80\x8f\xd0\x91\xf6\x44\x55\x3d\x22\x35\xc3\x73\x5b\x5c\x94\x6e\x3f\xe5\xaf\xbf\xc9\x74\xa5\x21\x6e\xaa\x3d\x1f\xd7\x4f\x42\x2b\xef\x66\xcf\xc9\x10\x15\x87\xeb\xf9\xa8\x1e\xdc\xfb\xf7\x8f\x9b\xb5\xdd\x18\x8f\x16\xb3\x1f\x33\xf7\x63\x55\xdb\xe1\xf1\x58\x58\xa3\x64\x77\x5f\xce\xb4\xc8\x40\x52\x9e\x80\xb5\xac\xe4\x44\x3e\xb1\x96\xe9\x3f\x52\xf0\xb9\x47\x41\x0e\x7a\x21\x52\xa2\x57\x45\x8c\xfb\x1a\xf9\x41\x75\x0f\xfa\xab\xbf\xfe\x26\x5f\xa8\xd4\xcc\x6e\xb9\xd4\x0d\x95\x8e\x6d\xff\x58\x24\x06\x19\x6b\xae\x5a\x64\xc1\xed\x6e\xdc\x29\xa0\x58\xb3\x65\x85\xbd\x59\x3b\xe3\x0c\x4b\x93\x44\xb0\x28\x43\xe9\x07\xdb\x3d\x88\xd5\x26\xbe\xdb\xe3\xa5\x19\xa1\x69\x2a\x41\xa9\x13\x14\x0b\x6b\x24\x9c\x62\x19\x0d\xb2\xfb\x63\xd4\x39\xa4\x9e\x84\xf8\x69\x01\xee\xd1\x1f\xcd\xb3\xd3\x72\x36\x33\x96\xdd\xed\xac\xa5\x54\xd3\x33\xa5\x85\xa4\x73\xf8\x89\xa8\x02\x12\x36\x63\x90\x92\xe9\xca\xda\x9e\xee\xc0\xcd\x8e\x1e\x4d\x74\x49\xb3\xfa\x53\x3b\xb2\x0d\xc8\xea\x8e\xd1\xd0\x5e\x5e\xbb\x97\xec\x9e\xef\xeb\xe9\x1b\xf9\xb1\x69\x38\xa5\xb2\x9b\x81\x75\x68\x46\xda\xc4\x31\x46\xec\xd8\x96\x62\x6e\x0c\x47\x4e\x99\x49\x1a\x88\x3a\x2d\x0a\x1d\xf9\x51\xe8\xe1\x73\x8d\x2f\xb4\xa8\x70\xed\xe6\xa2\x99\xbc\x18\x68\xbf\xe0\x1e\x96\xb1\xa7\x01\x0b\xaa\xc8\xd4\xf8\xff\xc8\x33\x76\x17\x23\xbf\xf4\x7e\x2c\x74\xf4\x79\xbb\x8b\x11\xb6\x5f\xb4\x95\x38\x4d\x53\x8f\x14\x7f\x81\x79\xc4\xc6\xf5\x5e\xfb\xf4\x22\xf7\x7c\x5a\x7a\x9d\x70\x10\x24\x1b\x9b\xd0\x25\x76\xfb\xd0\x4a\xdd\x68\x6e\xe2\xcd\xaa\x07\x21\x63\xca\x36\xa0\x74\x87\x0d\x2c\x74\x9f\x07\x6c\x2d\xa6\x33\xae\x4b\xd3\x93\x0c\xa8\x8c\x9c\x68\xac\xcf\xd8\x9e\x69\x21\x6b\x01\xf6\x89\x8d\x36\x8d\x29\xbd\x7b\xf9\x3e\x31\x58\x77\x72\x2c\x31\x25\x7f\xe6\xe2\x85\x6f\xcd\xe3\x8b\x75\x0c\xe1\xc3\x17\x3e\x65\xd8\xb0\x78\x9b\xb2\x7d\xcb\xa0\xd5\xa1\x8a\xaa\x4e\x36\x58\x69\x92\x95\x21\x82\xba\x40\x53\xee\x1e\xcd\x51\x9a\xea\x52\xc5\x1f\x8e\xbd\xf8\xc5\x4f\xae\xaf\x1f\xef\x9e\xee\xae\xaf\x3e\x05\x82\xf4\xff\x9f\x3c\xdd\xdc\xdb\xc6\x9c\x2f\x37\x81\x2e\xba\x99\x09\xf9\x48\x1b\xf2\xd5\x07\x99\x48\x5a\x82\xeb\xeb\xb5\xc2\xe9\xef\x67\x94\x50\x64\xd4\x3e\x61\x06\x6a\x96\x85\x75\x9b\x67\x75\xc7\x43\x25\xc8\xa6\xe4\xf0\x08\xd3\x92\x65\xe9\x81\x8d\xb8\x4b\xaf\xe8\x70\xb9\xaf\xe8\x70\x89\x3d\xb6\x27\x1d\x3a\x39\xee\x5c\xea\x0e\x96\xb7\x56\x7a\xba\x14\x5c\xa0\x92\xd8\xf3\x20\x85\xd5\xb2\x4c\x24\xcf\x51\x13\x7f\x89\xbd\xbe\x61\x07\x74\xb3\x66\x8a\x94\x3c\x1e\x17\xbb\xc5\x50\x0b\x36\x11\x79\x61\xdb\xc1\xab\x8e\x8c\x59\x99\x05\xea\x70\x18\x60\x6c\xee\xf4\xaa\x86\x96\xa0\xca\x4c\xb7\xa4\x54\x8a\x1b\x13\xd0\x5f\x62\x7b\x27\x7a\xc1\xab\x0a\x63\x1c\x38\xd2\xa5\xda\x50\xcf\xc1\x69\x2a\xe7\x10\xe8\xdf\xd3\x8b\x9d\xf0\xd3\x75\xf6\xba\x26\xbe\x4c\xb8\xc3\x06\x94\xaf\x48\x51\xe7\x60\x18\xfa\x90\xee\x92\x0b\xc2\xa1\xf6\xf9\x96\x4e\x9f\x40\x77\x8a\xbf\x22\x29\x85\xb9\xa4\xc1\xa3\x94\x3e\x0d\x58\xef\x79\xdb\x46\xa6\xb6\x1e\x5f\x51\xf2\xba\x6e\x2b\x60\xca\x15\xbc\xb7\x5b\x17\x71\xe5\xd3\x6b\xc1\x67\x6c\x8e\x6b\x2d\x18\x7b\x16\x6d\xdf\xd5\x4b\xcd\xe3\x07\x85\x9c\x58\x1a\xc8\x8c\xd9\x7b\x54\x68\x4a\x52\xc1\x63\x62\xfd\x31\xb6\xc7\x60\x0e\xba\xea\xaf\x8d\x46\x42\xee\xf3\xb9\xc4\xd5\x61\xc5\x37\x78\x8d\xb1\x3d\x07\x5d\xb8\xc8\xae\x9d\x71\xa0\x99\xac\xaf\x73\xb3\xbe\x22\xa9\x9a\x40\x9b\x72\xc6\x26\xe5\xe3\x40\x63\xd9\x21\xdc\x67\x58\xc5\xe3\x05\x76\x67\xc2\xad\xee\x5d\xf5\xb4\x9d\x08\xb1\x92\xf5\xf3\xdf\xc3\x88\xd5\x99\xb8\x78\x2e\xb1\x07\x18\xb6\x30\x4f\xaa\xdb\x8d\xfd\xd3\xaa\x08\xc9\x9e\xd8\x8f\x35\xbe\xc0\x9e\xd8\xf9\x5d\x09\x4e\x52\x91\xd4\x16\x5b\x4c\x7f\x87\x24\xe0\x77\x6a\x25\x6b\x8d\xc5\xbf\xdc\xfa\xb2\xc7\xb7\xec\x07\xae\x8d\x7d\x5b\x31\x5e\x77\x8a\x9e\xe4\x5f\x61\xb6\x82\x96\xf8\x9e\x16\xc5\xa1\x6b\x84\x06\xde\x4d\x21\x83\xf3\x1d\x13\xdc\x6e\x8c\xb9\x2e\x3e\x71\x68\xc8\x0b\x6f\xc8\xdd\x5e\xe5\x66\xc8\x8f\xd7\xfb\x3d\xc4\xc0\x6b\x3e\x1b\xec\x6b\x3e\x1b\xa0\x9b\xcf\x3e\x5e\x13\x2d\xd9\x7c\x0e\x51\x89\xea\x00\xdd\x7c\xf6\xf1\xda\xb9\xd8\x48\x14\xa4\x53\xf8\x78\xbd\x59\xc7\x39\x9e\x01\xba\xfb\xec\xe3\x75\x73\xcb\x40\x64\xcf\xcc\x00\xdd\x9b\xf3\x2b\x4b\x34\xcb\x9b\x70\x3d\x11\x5c\x69\x59\x26\x3a\x66\x21\x0f\xd0\x9d\x3a\x9f\x04\x35\x31\xeb\x12\xa4\x02\x92\xd3\x88\x76\x9d\x01\xba\x5d\xc7\x62\x39\xe7\x6a\x0f\x12\x1f\x7b\x19\xd0\x3d\x68\x7a\x3b\xd9\x5a\x3c\xa3\xdd\xc5\x33\xf4\xd6\xf6\x70\xdf\xe2\x19\x06\x6e\x01\xea\xd9\x5f\xbf\x77\xff\x69\xeb\xd8\x29\x4c\xcb\xf9\x3c\xea\xa2\xb8\x61\xe0\x64\x47\x58\x66\x1e\xaa\xe1\xc2\x18\xc3\x6e\x84\x8e\xc7\x0d\x5c\x46\x15\x4e\x29\xee\x9a\x4b\x30\xc9\xfd\xed\x64\xeb\xb4\xe2\x71\x78\xc8\x6a\xf5\xbd\x3d\x8c\x72\x1a\x14\x32\x55\xfb\x5a\x1d\xcd\x3e\x05\x2c\x70\xd6\xa4\x6f\xf7\xf0\x76\x62\x7c\x64\xf4\xed\x47\xc3\xc0\x19\x93\xfd\x50\x27\x5c\xb5\x34\x0c\x9c\x2d\xe9\x03\xdb\x55\xcc\xc8\x98\x63\x18\x38\x5c\xd2\x03\x59\x9f\x79\x2d\xa8\xa4\x39\x74\xee\x28\x39\x0e\x0e\xbb\x2f\x68\xac\xbe\xad\x05\x46\xa1\x60\xd3\xd2\xba\xde\x18\x8f\x74\x7c\xc5\xb6\xbd\xe1\x36\x0a\xf0\xf8\x42\xec\xd4\xb6\x87\x95\x11\xde\x65\x38\x40\xf7\x22\x70\x41\x72\x48\x19\xb5\xda\x78\x7f\x3b\x89\x02\xc3\x36\x20\x54\xb7\x74\x6c\xdd\x83\x32\x65\x31\xae\x20\x70\xee\xe8\xa0\x3c\x4d\x9c\x1c\x05\x85\x35\x25\xac\x39\x5e\x7e\x8a\xb7\x09\x9c\x3c\x3a\xc8\x5a\x55\x2e\x36\xe9\x40\x14\x22\xd6\x98\xb4\x88\x33\x56\x6d\x15\x47\x63\x62\x2d\x4a\x0d\xd2\x24\x4d\x05\x84\xae\x75\xc1\x40\x1e\xbf\x67\x74\x3a\x9b\x58\x43\xa3\x25\x6b\xd5\xb4\x65\x3a\xda\xd7\xfa\x0d\xbe\x87\xb5\xc8\x9e\x3e\x38\x89\x5b\xac\xd9\xe9\x48\xd8\x65\xa9\x27\xa1\x62\xed\x4f\x8b\x5a\xdd\xba\x72\x0a\x2a\xba\xc5\xb6\xab\xc0\xb5\xe3\x8a\xdd\x52\x18\x0e\x02\x95\x9c\x43\xcc\xda\xaa\xc0\x49\xac\x1e\x6f\x91\x5c\xef\x57\x75\x9d\x64\x34\x2e\xd6\x2e\xbd\x48\xa1\xdb\x5b\xa9\xdc\x4d\x14\xda\x96\xeb\xed\x96\xa9\xec\xf8\x1d\x8f\x0e\xeb\xf9\x24\xcd\x49\xca\xd4\x33\x86\x28\xac\xe1\xea\xde\x56\x0d\xcf\xfd\x82\x38\x9a\x00\xac\x19\xb3\xf3\xfe\x0f\x09\x05\x6b\xe6\xfe\xd1\x99\xc2\x9a\x40\x97\xda\xf4\xdc\x9d\x7e\x34\x2a\xd6\x06\xd6\xb7\x5d\x7d\x2f\x5c\xac\x15\xac\x43\xbe\x93\x11\xd1\xa7\x7a\xbd\x40\x25\x07\x4d\x49\xd5\x93\x16\x63\x18\xd0\xc7\x7b\x77\x9d\xdb\xc9\xc0\xe8\x73\xbe\x1d\xa0\x5a\xd3\xa3\xb3\x15\xf4\x81\xdf\xb0\xa0\x7b\x2e\x2f\xc3\x00\x1f\x6f\xeb\x6c\xf8\x72\x2a\xec\xf1\x81\x5a\x67\x7a\x4f\xc0\x45\xb7\xad\x0b\x4d\x80\xdb\x0b\x4a\x54\x41\x13\x68\x25\x1e\x05\x8b\xb5\x53\x34\xcb\x85\xd2\x64\x56\x06\x2e\x6a\xc4\xe0\x60\x2d\x53\x1d\xa5\x58\xa1\x46\x45\x29\x03\xac\x31\xb2\xf7\xc4\x52\x4d\x33\x31\x0f\x5d\x9a\x75\x04\xa4\x7f\x97\x62\x0f\x24\xf0\x3f\x4a\x28\xe3\x7f\x0d\x64\x38\xf0\x2f\x41\xdc\xaf\x9f\xd6\xb5\x2d\xa9\x64\xa2\x54\xc6\x0a\xa8\xb8\xc4\x70\x18\xd1\x4f\x4a\x97\x40\x18\x17\x69\x94\x62\x0e\x8f\xb7\x3b\x85\x28\xdc\x6d\xde\x94\x58\x29\x47\xc1\x1e\x6f\x75\x8a\x52\x2d\x6c\x33\x46\x34\x6a\x60\x43\xa8\xbf\x39\xec\xba\xd5\xd8\x63\x2e\xdc\x6b\x8a\xf2\x93\x95\x3a\xb3\xfd\xeb\x5b\x75\xf9\xcb\xdd\xb2\xbc\x77\x78\x6c\x38\x7a\xbb\xa7\x2c\x1f\x38\x3c\xd6\x53\x96\x77\x26\xf2\x37\x4b\x42\x84\xac\x02\xc7\x40\x7a\x80\x5c\xf7\xcc\x6f\x34\x8d\xc7\xf2\xf3\xac\xbd\x3f\x47\x52\xfd\xa4\xc5\x31\x78\xcd\xb4\x7c\x12\x73\xff\xe7\x54\x76\xe7\xe4\xd2\x9b\x93\x7d\x5b\x25\xa3\xc0\x05\x70\xe1\x0e\x5f\x96\x69\x90\x44\xad\xb8\xa6\x7d\x77\x13\x22\xa4\x75\x89\x6f\x74\xaf\x10\x5d\x6a\xea\x4a\x0e\x05\xd5\x8b\x28\x54\xe4\x2e\x42\xdb\x3b\x9a\x89\xf9\x99\x7d\xd4\xe5\x47\xfa\x68\xe3\xdf\xfe\x22\xce\xc3\x17\xaa\x17\x67\x7c\x99\xcf\xf6\x6f\x11\x8f\xbc\x5d\xae\xd1\x9b\xbe\xed\xe6\x6a\xd0\x99\xb4\xd7\x6a\x1e\xe8\xb7\x1c\x79\xbf\xb0\x33\xea\xdd\x1a\xaf\x06\x9e\xd2\xe4\xf9\xf0\xb8\xde\xfe\xf8\x68\xf7\xc7\x39\x9a\x71\x5d\x3f\xd6\xee\x78\x3b\x03\x8e\x3d\x09\x8c\xf7\xb5\x51\x8d\xd1\xbf\xf6\x31\xf9\x72\x75\x7d\xb3\xfd\x1d\x5a\x7b\xc6\x81\x5f\xfa\x38\x68\xef\xeb\xdc\x69\xeb\x06\xbf\x4e\x26\x53\x5d\x08\x18\xba\x5f\x70\x0f\x1d\xc7\xfb\xd7\x43\x74\x2c\xd8\x7c\x01\x92\x14\x92\x09\x7b\x27\xd5\xef\x62\x4a\x54\x99\x2c\x08\x55\x75\x2f\x1d\xe3\xd6\x8f\xd4\x3d\xb5\x8c\xcf\x43\xa7\x6b\xf4\xce\x05\x86\x94\xbc\x2c\xda\x62\x42\x87\x87\xe3\x5d\x36\x4a\x92\x75\x48\xd8\x1c\xd2\xd8\x27\xd6\x4e\x63\x09\xa7\x73\xb0\xb7\x3d\x4c\x34\x4d\x9e\x7f\xbc\x1f\xff\xef\x4f\x9e\x92\xee\xfe\x60\xd5\x1b\xff\x47\x69\xda\x8f\x7a\x7e\xb2\x0a\x1b\xfc\x4d\x80\x5b\x89\xf7\x5c\x87\x58\xfd\xbc\x1f\x13\xbc\xfe\xac\x39\x10\xfb\xe5\x61\x62\xbb\xb3\x77\x79\x0a\x4c\x96\x04\xd7\x2d\xf9\xe5\x61\xe2\x93\x8a\xde\xb9\xf8\xb7\x12\x7c\xa7\x93\xa8\xa1\xf3\x9e\x56\xf7\x47\xfe\x5b\x85\x9a\x4e\xc9\x57\x05\x55\xd3\x80\x1d\xc5\x15\x59\x7d\x5a\xd0\x35\xcc\xeb\x56\x2e\xff\x94\xe4\xfe\x1b\x00\x00\xff\xff\xfa\x84\x3d\xa6\xc0\x73\x00\x00")

func ResourcesEventsYamlBytes() ([]byte, error) {
	return bindataRead(
		_ResourcesEventsYaml,
		"../resources/events.yaml",
	)
}

func ResourcesEventsYaml() (*asset, error) {
	bytes, err := ResourcesEventsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../resources/events.yaml", size: 29632, mode: os.FileMode(420), modTime: time.Unix(1594712971, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../resources/events.yaml": ResourcesEventsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"resources": &bintree{nil, map[string]*bintree{
			"events.yaml": &bintree{ResourcesEventsYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
