// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// ../resources/events.yaml
package util

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ResourcesEventsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5d\xcd\x72\x1b\xb7\xb2\xde\xfb\x29\x50\x5e\x9c\x4a\xaa\xac\x9c\x88\x3f\xb1\xe8\x9d\x2c\x4b\x2e\xd5\xb5\x22\x97\x24\xe7\xdc\xbb\x4a\x81\x33\x4d\x12\xd1\x0c\x30\x01\x30\x94\x78\x52\x79\x17\x3e\x0b\x9f\xec\x16\x80\xf9\x23\x81\x21\x9b\xa0\x2b\x5e\x59\xe4\x0c\xbe\xee\x46\xa3\xff\xd0\x00\xcf\xce\xce\xde\x7c\x16\x34\xfb\x40\xae\x97\xc0\xb5\x22\xdf\x38\x9b\xb1\x84\x6a\x26\xf8\x9b\x5c\xa4\x65\x06\xea\xc3\x1b\x42\xce\x08\xa7\x39\x7c\x20\x6f\xaf\xbe\xdc\xbe\x7d\x43\x08\x21\x89\x28\xb9\x56\x1f\xc8\xf9\xcf\x3f\xdb\xbf\x59\xfa\xa8\xa9\xd4\xf6\x83\xfa\x93\x6b\x9e\x7e\x20\x84\x9c\xff\x3c\x99\x54\xef\xa4\x6e\x38\xf3\xef\xcc\xfe\xd9\x79\xde\xfc\xcb\x60\x09\xd9\x07\xf2\xf6\xf6\xd7\x9b\xfb\xb7\xcd\xa7\x39\x28\x45\xe7\x06\x3e\xc9\x18\x51\x20\x97\x20\x09\xe3\x4c\x33\x9a\xb1\xff\x42\xda\x3e\x59\x48\x31\xcd\x20\xff\x40\xde\xb6\x9f\x29\x91\x95\x86\x9f\xce\x87\x1d\xec\x73\x34\x36\x87\x17\x92\x64\x0c\xb8\x3e\x05\x6f\xb0\x8b\x67\xe0\x7c\x34\x07\x44\x52\xa6\x12\xc1\x39\x24\x1a\x52\x0f\xd4\x47\xf4\xe1\x86\x38\x38\x09\x7f\x96\xa0\x34\xc9\xd5\x9c\x48\x48\x96\x51\x58\x23\x2c\x96\x2a\x04\x57\x60\xc1\x14\x70\x1d\x05\x36\xc6\x81\x01\xa7\xd3\x0c\xc8\x33\x40\x71\x46\x33\xb6\x84\x28\xb0\x5f\x76\xc1\xfe\x73\xf9\xf0\x2b\x02\x8c\xcc\x28\xcb\x22\x67\xee\xfd\x51\x0c\x4a\x28\x15\x9c\xd1\x34\x95\x51\x60\x17\x47\x31\xd8\x82\x6d\xd6\xf1\x1c\x9e\x7b\xcb\xbe\x07\xf4\x35\x81\xc2\x0c\x41\x04\x27\x89\xc8\x73\xca\x53\x83\x93\x80\x52\x8c\xcf\xa3\xa0\xbd\x55\x7f\xfd\xf0\x70\xff\xe0\x63\x3b\xee\x88\x16\x46\x51\xe3\xb8\x44\x2e\xf8\xeb\xff\xbd\x7d\x8a\x1a\xdf\x5b\xe1\x61\x29\x9a\xf1\x77\xb8\xdc\x8b\xd2\x58\xfc\xdb\x8f\xe2\xe6\xfe\x91\x3c\x6a\xaa\x81\xdc\x51\x4e\xe7\x20\xb7\x5d\xc0\xc0\x73\x01\xe7\x9e\x0b\x18\xec\x75\x01\xe7\xbe\x0b\xf8\x74\xfd\xf1\xdb\x67\x9f\x0d\x65\xc8\xf8\xbd\x28\xa7\x19\x53\x0b\x88\x51\xf6\x73\xdf\xe4\x87\x67\xc4\x42\x91\x44\x70\x0d\xaf\x9a\xd0\x34\x8d\x52\xf3\x73\xac\xc5\xdf\x86\x93\x90\x8b\x65\x24\x20\xd2\xe6\x6f\x03\x96\x45\x4a\xe3\x9c\xcc\x39\xd6\xf0\x57\x80\x0b\xca\xe7\x71\x40\xbe\xc5\x08\x03\x3d\x7d\xfc\x14\x31\xfc\xc0\x57\xc2\x87\xeb\xaf\xf7\x0f\x4f\xbf\x3f\x3d\x5c\x5e\x5d\x7f\x1f\x98\x1d\x84\xef\x46\xfb\xd0\x9b\x83\xfd\xb4\xb3\x6a\x55\xaf\x94\x86\x9c\x3c\x40\x22\x96\x20\x57\xe4\x96\x17\x52\xcc\x25\x28\x75\xa4\x95\xf8\x4d\x64\x65\x0e\x41\xf3\x30\xdc\x35\x0f\x03\x2f\x42\x1c\xec\x35\x0f\x83\x40\x84\x18\x9e\x78\x47\x05\x49\x24\xc4\xe9\xf2\x20\x10\x0f\xee\x45\x4a\x21\x83\x58\x24\xa4\x5d\xa8\x90\x72\x23\xcd\x48\x24\xa4\x41\xa8\x90\x4a\x7e\x0a\x16\xd2\x16\x54\x58\xd6\xaa\x1a\xf7\xaa\x17\x40\x32\xa6\x22\x62\xc1\x01\x3a\x16\x74\x98\x9b\x75\x65\x5b\xc9\x4c\x8a\xdc\x00\x6f\xd6\xb1\xc8\xd8\x10\xe6\x69\x01\x75\x88\x0d\x29\x59\x56\xba\x23\x40\x11\x2e\x34\x81\xd7\x10\xbc\x7d\xa9\x7a\xf4\x85\xe9\x85\x15\x91\x37\x88\x59\x7e\x44\xc8\xfa\xcf\xdb\x4f\x7d\xc3\xb6\x59\xc9\x35\xd7\x20\xed\x68\x89\x90\x12\x12\xdd\x3f\x16\x9d\x99\x47\x93\x05\x24\xcf\x8c\xcf\xed\x3b\xd5\x97\x19\x53\xbe\x34\xbc\xb5\x13\x96\x46\x35\xf7\x8a\xfd\x17\x08\x53\x44\x0b\x41\x32\x2a\xe7\x7e\x68\xde\xac\x67\xca\x2d\x47\xd3\x66\x69\x93\x29\x24\xb4\x54\x60\x49\xca\xe9\x2b\xcb\xcb\x9c\xf0\x32\x9f\x82\x24\x62\x56\x11\xa9\x88\x5e\x50\x6d\xdf\xee\xbc\xc9\x94\x8d\x28\xa1\xeb\xce\x5b\xe1\x3c\x80\x96\xab\x8a\x6f\xab\x27\x86\xef\xd2\x64\x60\x86\x7a\xb9\xaa\xf9\xa7\xb9\xe0\x73\x27\x62\xf3\x44\x3d\x78\x05\xec\x8b\xc6\x5b\xec\x3d\x51\x9a\xa5\xcc\x0d\x67\x43\xed\x65\x2b\xab\xb0\x86\x78\x1a\x61\xc5\xea\x38\x54\xe4\x52\x4a\xba\x22\x09\x2d\x68\xb2\x0a\x70\x7b\x65\x66\xd6\xca\x50\x39\x47\x60\x9f\x64\x7a\x45\x4c\x8c\x6d\x25\x31\xa7\x8c\x7b\xec\x0c\x90\x7a\xbf\x33\x7f\x0b\xba\x04\x42\xc9\x34\xa3\xfc\xd9\x6a\x9b\xcf\xd2\x47\xfb\x1d\x73\x1a\x4c\xb3\x4c\xbc\x98\x85\xda\x2a\xe5\xd6\x5b\x58\x9d\xee\xbc\x6f\x25\xcb\x44\x80\xa5\xe3\x94\xd7\x8c\xbb\x59\x37\xea\x2b\x02\x79\x48\xf7\x51\x02\x86\x40\xa7\x7d\xde\x0b\xbb\x6c\xd0\x2d\xe2\xad\x0e\x77\x16\xb5\x55\x90\xd7\x57\x13\x47\x49\x9a\x68\x90\xbe\xb6\x0d\x90\xda\xd6\x25\x90\x29\x92\x96\x45\xc6\x92\xa0\xe7\x24\x97\x5b\xa6\x88\xb6\xcf\xba\xb7\x69\x26\x81\xa6\x2b\xb7\x20\xd4\x1e\xce\x52\x36\x9b\x81\x04\xae\x03\x13\xda\x61\x00\x99\xd4\x7c\xe3\x34\x31\xc9\x61\x77\xa9\x84\xf5\x2a\x34\x17\x26\xf4\xa5\x8c\x2b\x42\x89\xd2\xd2\x19\x38\xaa\x77\x94\x6f\xaf\xb2\x79\xf3\x94\x03\x68\xe5\x7d\x25\xcb\x2c\x60\x13\x86\xc8\x45\xf4\xd0\xac\x70\xbb\xb4\xf7\x98\xcb\x7e\x7b\x10\x34\xb3\x61\xab\xb7\x65\xed\x0b\xa1\x14\x0b\xdb\xa1\x0e\x23\xc8\xa5\x13\x60\x44\xe5\x34\xcb\x8e\x67\x64\xb3\xde\x7e\x31\x64\xd1\x72\xc6\xad\x57\x30\xf3\x98\xf8\xd6\xd4\x5a\x38\x69\xf8\xf6\xf9\x41\x2e\x9f\x1d\x7e\x9c\xd2\xb0\x39\x0f\xad\x9f\x10\x47\x9b\xb5\x7d\xaf\x59\xdb\xf6\x65\xb7\xc0\xa6\x99\x48\x9e\xb7\xad\x7e\xcb\xe3\x2d\x2f\x4a\xbd\xc5\x8b\x16\xc6\xc3\xe5\x65\xa6\x59\x91\x81\xf1\x80\xde\x00\x2d\x7b\xa3\xe3\x8c\x77\xbd\xb4\xfb\x82\x42\x72\xa9\x35\xe4\x85\x36\x44\xd8\x67\x5a\xfb\x55\x2f\xa7\xbe\x21\x5a\x96\x7e\x15\x7a\x61\x75\x4e\x90\x54\xf8\x14\x1f\x67\x9b\x6b\xb8\xfe\x40\xb6\x4b\x73\xf5\x54\x3f\xd5\xfe\x30\x58\xba\xc7\x7e\xda\xc2\x67\xc2\xa7\xfb\xaa\xf2\x8f\x2e\x9b\xa8\xc5\x54\xd1\xd3\x4b\xbc\x0b\x9c\xab\x77\x68\xdf\x5b\x2d\xad\x1d\x9e\xab\x97\xea\x58\xc6\xae\xfb\x8a\xcd\xed\x38\xcf\x63\xe9\x17\x8f\xa5\x6b\x29\x85\xf4\x79\xba\xa1\x2c\x33\x50\x2e\x32\xaa\xa1\x72\xd0\x34\x26\xd0\xfe\xc5\x2f\xd8\xed\x87\x15\x05\xf0\x93\x41\x3d\x3b\x70\x00\xd4\xe8\xcb\xc9\xa0\x9e\xeb\x3b\x00\xfa\x22\xd9\x77\x90\xaf\x97\xb6\xf5\xa0\xfe\xd6\xe2\x6c\xd6\xb6\x76\xc4\x35\x99\x4a\xf1\x0c\x3c\x06\xf7\x3d\x56\x9d\xee\x20\x17\xc6\x45\x39\x63\xce\x04\x77\x95\xe7\x52\x86\xd6\x07\x49\xa8\xaa\xd6\xb1\x5a\x88\x32\x4b\x09\x87\xa5\xc9\x0c\x92\xa4\x94\xe4\x8c\x2c\x80\x16\x9d\xa1\xc8\xee\x48\xed\x9a\x79\xea\x0d\x81\xdf\x63\x35\xf2\x96\x2f\x69\xc6\x52\xc2\x78\x0a\xaf\x04\xb6\x1e\xc2\x93\x6c\xdf\xfe\xa1\x9a\x65\x96\xfe\x48\x98\x09\x42\x38\xcd\xb2\x15\x99\x4b\xca\xab\xcc\x86\x39\xb0\xa0\xd3\x70\xcf\x93\x4c\xcc\x59\xb2\x59\x77\x09\xe9\x70\x75\xac\xca\x5b\x29\xfe\xb4\x59\x73\x78\xd9\xac\x9b\xc4\x31\x82\xc1\x6f\x6e\x6b\x41\x0b\x32\x67\x4b\x68\x73\xd0\x77\x24\x05\x55\x18\x15\xef\x44\x55\xb6\xb4\x54\x07\x6a\x39\x7d\x8d\xe7\x17\xbb\xda\x8c\xff\x56\xd4\x65\xc5\x15\x11\x3b\xb1\x2e\x9e\xd5\x4b\x2f\xad\xaf\x47\x3e\x18\x46\xe3\xb8\xba\xf0\x3d\x3c\x95\xbc\xbb\x57\xd2\xf0\x75\x5f\x6a\x13\x2e\xfc\x29\x14\x91\x94\x87\x82\xca\x4b\xb2\xa4\x59\x09\x24\x03\x65\x13\x6a\xbe\x1d\x5d\x15\x36\x0f\x30\x53\x67\xc6\x70\x8f\xbe\x50\x55\x07\xd9\xa8\x10\xad\x7d\xb3\x9b\xb0\xd7\x61\xfa\x56\x2a\xfa\x93\xc7\xec\x04\xcf\xac\xcb\x86\xad\xce\xf4\x05\x06\x6d\xc6\xba\x53\x70\x10\x92\x64\x82\xa6\x90\xda\x59\x13\xa5\x26\x6c\x2a\x66\x42\xed\x09\x6a\x1a\xe3\x51\x79\x58\x17\x67\xb8\xd7\x7c\x36\xfc\x18\xa7\x8f\x8d\xaa\x68\x7b\x43\xcb\x2c\x50\x36\xaa\x39\xa8\x36\xca\x5a\x4e\x0a\x90\x33\x21\x73\x63\x28\xdc\x1c\x3e\x3e\xdd\x7f\x75\x45\x79\x84\xa5\x9e\xf8\x41\x71\x1f\x7d\x9f\x04\xaf\x74\xbb\xc7\xda\x3d\x0a\xb3\x7c\xcc\x77\x8a\xe4\x74\x55\x2d\x8c\xb4\x94\x4d\xda\xd1\xec\xee\x19\xe5\xec\x14\xbe\xde\x39\x6d\x30\x4b\xa6\x9c\x2a\xf3\x19\xd7\xc6\xd7\x4b\x67\xc8\xf3\x6a\x7a\x5f\x84\x7c\x26\x2f\x90\x65\x3f\x85\xd2\x37\x03\x6c\x6b\x02\x96\x04\xb2\xa0\x3c\xcd\x0c\x14\xcd\xcc\xc4\xce\x17\x84\xe9\x5a\x6c\x8e\x32\xcb\x4b\xa9\x40\x12\x07\x99\x78\x71\x51\x60\x03\xab\x57\x3c\x86\x72\x37\x83\x06\xa1\xaf\x56\xed\x87\xd5\x5d\xa3\xc1\x45\x67\x98\xdd\x21\x5a\x56\x1f\xeb\x67\x14\xc9\x4b\xb5\x53\x40\x9b\x09\x59\xc5\x9a\x86\xf9\xb6\x72\xd5\xd4\xf4\xef\x3e\x3e\x84\x37\xfc\xbc\x9e\x8f\xc1\xd0\xab\xe8\x0f\xf7\x56\xf4\x87\xd8\x8a\xfe\xa5\xf3\xd2\x26\xe2\xb0\x01\x80\x2a\x93\x04\xbd\x3b\xb1\x03\x89\x2c\xed\xe7\x53\x49\x52\xaa\x69\x1d\xba\x1a\x8d\xb3\x41\x56\x14\x28\xb2\xca\xdf\x80\xd2\x34\x3d\x11\x11\x59\xed\x2f\xa8\x64\x7a\xe5\xd2\xfd\x93\xc4\x8a\xdd\xfd\x73\xca\x5a\x96\x2c\x3d\x1d\x14\x5b\x78\x4f\x61\xc9\x12\x97\x9a\xcf\x44\x19\xb3\x83\x3f\x18\x62\xcb\xda\x5b\x02\x35\x21\x65\x14\x18\xb2\xf6\xe0\x4b\x33\x1a\x11\x59\x6b\x6b\x34\xf4\x34\x61\x7a\xda\xd2\x8f\xf6\x0c\xab\xd3\xc0\xfc\x0a\x5b\x4f\x9b\xc7\xae\x95\x89\x95\xa5\x5f\x09\xeb\x01\x6c\x84\xe9\xaa\xf5\x41\x37\x89\xc1\xf3\xc3\xf5\x7e\x3c\xe3\xfc\xa9\x3e\x01\xcc\x8f\x95\xc3\x60\x73\xd0\x5b\xfa\x89\x97\x66\xe3\x7a\x3e\xd9\x75\x8b\x74\x3e\x23\xcf\xf9\x8c\xf6\x3a\x9f\x11\xd6\xf9\xdc\xba\x16\x43\xa2\x12\x1a\x93\xdd\x8e\xb0\x1e\xe7\x01\xa2\x11\x90\xee\xe5\x0b\x53\xba\x32\x86\x51\x30\x48\x9f\x62\x61\xa8\x89\xb2\x37\xeb\x13\xd0\x82\x1e\xe5\xdf\x61\x43\x71\xc3\x78\x6a\x38\xfb\xa1\x64\xe9\x8f\x51\x68\xde\xee\x71\x8f\x5a\x9b\x39\x8a\x5e\x3d\x23\xbf\x87\xb0\x07\xa6\x72\x59\xb6\x80\x15\x8f\xe6\x75\x0f\xee\x47\x4b\x32\xa1\xe2\xed\xd0\x08\xdb\x3f\x58\xa1\x6d\xd6\xfd\x66\x9d\xb8\xa5\xdf\x29\x96\xbb\xe2\x76\xbd\x69\x6f\x72\x4b\xff\xed\x3d\xa4\x4d\x70\xa4\xfd\x2a\xb8\x85\xb0\xa9\xec\xa7\xb0\xee\x92\x7b\x9e\xad\x48\x0a\x9a\x26\x0b\x48\x1b\xd9\xb9\x74\x75\xb7\x63\xab\x9f\x24\x6c\x1b\x53\x4a\x21\x17\xdc\x64\x68\x32\xa6\x3b\x61\xe4\x07\x2e\x07\x70\x44\x11\x05\x83\xb4\x41\x95\xb8\xa8\x36\xe2\xcb\x6d\x77\x33\xe8\xc8\xce\xe6\xc1\xc8\x0f\x5b\xf6\xa1\x1a\x73\xf4\x7d\x60\x91\xd1\xae\xe3\xf2\x04\x93\x7b\x8e\x6c\x6a\x71\x7c\x9d\x02\x84\x6c\x6e\xde\xe2\x28\xde\x54\x9c\x7b\x96\xa9\xcf\x54\x7c\x1f\x38\xa4\x65\x2a\x9b\xf2\xa3\x5d\x6e\x24\x17\x9c\x69\x21\x43\xfd\xc5\x84\x66\x59\xe7\xfb\x6a\xf9\x28\x42\x65\xb3\xf5\xb4\x59\xcb\x92\x9b\xec\xff\x1d\x11\xd2\x24\xeb\xd5\xe3\xaa\xaf\x29\xc7\xa7\x1b\x69\xb6\xba\x74\x8b\xe2\x10\xd9\x9b\xb5\x4f\xf7\x66\xdd\x21\xdc\x8e\x52\x40\x1a\x4d\xb7\xdf\x19\xd2\xe7\x78\x5a\xa3\x53\x40\x4a\x4a\x0e\xaf\x85\x5d\x95\xd9\xca\x27\x1d\xf3\xf0\x1e\x9a\x3c\x3b\xd8\xd3\x5c\x5c\x48\x28\x8c\x30\xe2\x17\x93\xdf\x79\xd1\x03\x25\x21\x03\xaa\x8e\x83\x6a\xa2\x63\x5b\xc7\x3c\xd4\x64\x39\xf6\xa2\xe2\xf7\x7b\xa3\xe2\xb1\x1f\x15\xf7\x65\x4b\xb6\x8c\x5a\xed\x90\xa6\xb4\xd9\xd7\xfd\x29\x42\x62\x63\x3f\x46\xc6\xa0\xda\x7d\xd9\x93\x60\xb1\x99\x93\x83\xed\x29\xcc\x1f\x03\x88\xcd\x9e\x1c\xe0\x76\x17\x5f\x1c\xa2\xbf\xa7\x17\x46\xfc\x74\x7a\x91\x64\x8c\x8e\xa2\xf5\x02\x3a\x8d\x7a\x4a\xa5\x6d\x69\x72\x0a\xfa\x05\x80\x93\xbf\xfe\xb6\x15\xb0\xbf\xfe\x8e\x22\x04\x1b\x67\xf3\x65\x5e\x7b\x97\x93\x92\xf0\x31\x3a\xd6\x7e\x54\x55\xa7\x48\xcd\xf0\xdc\x16\x18\xa5\xdb\x55\xf9\xeb\x6f\x32\x5d\x69\x88\x9b\x6a\xcf\xcb\xf5\x93\xd0\xca\xbb\xd9\x79\x32\x44\xc5\xe1\x7a\x5e\xaa\x07\xf7\xee\xe3\xc3\x66\x6d\xb7\xc7\xa3\xc5\xec\x47\xcd\xfd\x58\xd5\xa6\x78\x3c\x16\xd6\x28\xd9\x3d\x98\x33\x2d\x32\x90\x94\x27\x40\x18\x9f\x55\x6d\x00\xf1\xd8\x58\xcb\xf4\x1f\x29\xf8\xdc\xa3\x20\x07\xbd\x10\x29\xd1\xab\x22\xc6\x81\x8d\xfd\xb0\xba\x07\xfd\xed\x5f\x7f\x93\xaf\x54\x6a\x66\x37\x5e\xea\xb6\x4a\xc7\xb6\x7f\x3e\x12\x83\x8c\x35\x57\x2d\xb2\xe0\x76\x4f\xee\x14\x50\xac\xd9\xb2\xc2\xde\xac\x9d\x71\x86\xa5\x49\x23\x58\x94\xa1\xf4\xc3\xed\x1e\xc4\x6a\x2b\xdf\xed\xf4\xd2\x8c\xd0\x34\x95\xa0\xd4\x09\x8a\x85\x35\x12\x4e\xb1\x8c\x06\xd9\x5d\x32\xea\x1c\x52\x4f\x4a\xfc\xb4\x00\xf7\xe8\x0f\xe6\xd9\x69\x39\x9b\x19\xcb\xee\xf6\xd7\x52\xaa\xe9\x99\xd2\x42\xd2\x39\xfc\x48\x54\x01\x09\x9b\x31\x48\xc9\x74\x65\x6d\x4f\x77\xe0\x66\x5f\x8f\x26\xba\xa4\x59\xfd\xa9\x1d\xd9\x86\x64\x75\xdf\x68\x68\x47\xaf\xdd\x51\x76\xcf\xf7\x75\xf6\x8d\xfd\xe8\x34\x9c\x54\xd9\x2d\xc1\x3a\x38\x23\x6d\xea\x18\x23\x76\x6c\x63\x31\x37\x86\x23\xa7\xcc\xa4\x0d\x44\x9d\x16\x87\x8e\xfd\x38\xf4\xf0\x01\xc7\x17\x5a\x54\xb8\x76\x8b\xd1\x4c\x5e\x0c\xb4\x5f\x74\x0f\xcb\xd8\xd3\x80\x05\x55\x64\x6a\xfc\x7f\xe4\x51\xbb\xc1\xd8\x2f\xbf\x1f\x0b\x1d\x7d\xec\x6e\x30\xc6\x76\x8d\xb6\x12\xa7\x69\xea\x91\xe2\x2f\x30\x8f\xd8\xb8\x0e\x6c\x9f\x5e\xe4\xbe\x4f\x4b\xaf\x13\x0e\x82\x64\x63\x13\xba\xc4\x6e\x9f\x5c\xa9\xdb\xcd\x4d\xbc\x59\x75\x22\x64\x4c\xd9\x36\x94\xee\xb0\x81\x85\xee\xf3\x80\xad\xc6\x74\xc6\x75\x89\x7a\x92\x01\x95\x91\x13\x8d\xf5\x19\xdb\x33\x2d\x64\x2d\xc0\x3e\xb1\xd1\xa6\x3d\xa5\x77\x47\xdf\x27\x06\xeb\x4e\x8e\x25\xa6\xe4\xcf\x5c\xbc\xf0\xad\x79\x7c\xb1\x8e\x21\x7c\x04\xc3\xa7\x0c\x1b\x16\x6f\x53\xb6\x6f\x19\xb4\x3a\x54\x51\xd5\xc9\x06\x2b\x4d\xb2\x32\x44\x50\x17\x68\xcd\xdd\xa3\x39\x4a\x53\x5d\xaa\xf8\x33\xb2\x83\x5f\xfc\xe4\xfa\xea\xe1\xf6\xe9\xf6\xea\xf2\x4b\x20\x48\xff\xbf\xc7\xa7\xeb\x3b\xdb\x9e\xf3\xf5\x3a\xd0\x4b\x37\x33\x21\x1f\x69\x43\xbe\xfa\x38\x13\x49\x4b\x70\xdd\xbd\x56\x38\xfd\x5d\x8d\x12\x8a\x8c\xda\x27\xcc\x40\xcd\xb2\xb0\x6e\xf3\xac\xee\x7a\xa8\x04\xd9\x14\x1d\x1e\x60\x5a\xb2\x2c\x3d\xb4\x19\x77\xe1\x95\x1d\x2e\xf6\x96\x1d\x2e\xb0\xa7\xf7\xa4\xc3\x27\xc7\x1d\x50\xdd\xc1\xf2\x56\x4b\x4f\xaf\x82\x0b\x55\x12\x7b\x2e\xa4\xb0\x7a\x96\x89\xe4\x39\x6a\xea\x2f\xb0\x37\x39\xec\x80\x6e\xd6\x4c\x91\x92\xc7\xe3\x62\xb7\x19\x6a\xc1\x26\x22\x2f\x6c\x5b\x78\xd5\x97\x31\x2b\xb3\x40\x2d\x0e\x03\x8c\xcd\x9e\xde\xd6\xd0\x12\x54\x99\xe9\x96\x94\x4a\x75\x63\x42\xfa\x0b\x6c\x07\x45\x2f\x78\x55\x65\x8c\x03\x47\x3a\x55\x1b\xec\x39\x38\x4d\xe5\x1c\x02\x7d\x7c\x7a\xb1\x13\x80\xba\x0e\x5f\xd7\xcc\x97\x09\x77\xe8\x80\xf2\x15\x29\xea\x2c\x0c\x43\x1f\xd2\x61\x72\x41\x38\xd4\x5e\xdf\xd2\xe9\x13\xe8\x8e\xf3\x57\x24\xa5\x30\x97\x34\x78\xa4\xd2\xa7\x01\xeb\x3f\x6f\xda\xd8\xd4\xd6\xe4\x2b\x4a\xde\xd5\xcd\x05\x4c\xb9\xa2\xf7\x76\x0b\x23\xae\x84\x7a\x25\xf8\x8c\xcd\x91\x0d\x06\x13\xcf\xa6\x4d\xf6\xda\xb4\x09\xb6\xc1\x20\xb1\x54\x90\x19\xb3\x97\xaa\xd0\x94\xa4\x82\xc7\xc4\xfb\x13\x6c\xa7\xc1\x1c\x74\xd5\x69\x1b\x8d\x84\xdc\xed\x73\xc9\xab\xc3\x8a\x6f\xf4\x9a\x60\x3b\x0f\xba\x70\x91\xdd\x3b\x93\x40\x53\x59\x5f\x0f\x67\x7d\x5f\x52\x35\x81\x36\xed\x8c\x4d\xcc\x27\x81\x06\xb3\x43\xb8\xcf\xb0\x8a\xc7\x0b\xec\xd1\x84\x9b\xde\xbb\xea\x69\xfb\x11\x62\x25\xeb\xe7\xc0\x87\x11\xab\xd3\x71\xf1\x5c\x62\x8f\x32\x6c\x61\x9e\x54\xbb\x9b\xf8\xe7\x56\x11\x92\x3d\xb1\x2f\x6b\x32\xc0\x9e\xdd\xf9\x43\x09\x4e\x52\x91\xd4\x36\x5b\x4c\xff\x80\x24\xe0\x79\x6a\x25\x6b\x8d\xc5\xbf\xdc\xfa\xb2\x07\xb9\xec\x07\xae\xa1\x7d\x5b\x31\xde\x75\x0a\x9f\xe4\x5f\x61\xb6\x82\xb6\xf8\x8e\x16\xc5\xc1\x3b\x85\x86\xde\xa5\x21\xc3\xf3\x5d\x23\xdc\x6e\x90\xb9\x7e\x3e\x71\x70\xd0\x81\x37\xa8\xd7\xb7\xdc\x0c\xfa\xf9\xea\x80\x9f\x18\x7a\x8d\x68\xc3\xbd\x8d\x68\x43\x74\x23\xda\xe7\x2b\xa2\x25\x9b\xcf\x21\x2a\x65\x1d\xa2\x1b\xd1\x3e\x5f\x39\x57\x1b\x89\x82\x74\x0d\x9f\xaf\x36\xeb\x38\xf7\x33\x44\x77\xa2\x7d\xbe\x6a\x6e\x1d\x88\xec\x9f\x19\xa2\xfb\x74\x7e\x63\x89\x66\x79\x13\xb6\x27\x82\x2b\x2d\xcb\x44\xc7\x2c\xe7\x21\xba\x6b\xe7\x8b\xa0\x26\x76\x5d\x82\x54\x40\x72\x1a\xd1\xba\x33\x44\xb7\xee\x58\x2c\xe7\x62\xed\xc1\xe2\x63\x6f\x07\xba\x03\x4d\x6f\x1e\xb7\x97\xcf\x78\x77\xf9\x8c\xbc\x15\x3e\xda\xbb\x7c\x46\x81\x6b\x81\x7a\x76\xdb\xef\xdc\x7f\xda\x9a\x76\x0a\xd3\x72\x3e\x8f\xba\x3d\x6e\x14\x38\xeb\x11\x96\x9a\x87\xca\xb8\x33\x8a\xdd\x58\x1d\x8f\x1b\xb8\x9f\x2a\x9c\x5c\xdc\x36\x37\x63\x92\xbb\x9b\xc7\xad\xf3\x8b\xc7\xe1\x21\x2b\xd7\x77\xf6\x78\xca\x69\x50\xc8\xa4\xed\x5b\x75\x58\xfb\x14\xb0\xc0\xd9\x93\xbe\x9d\xc4\x9b\x47\xe3\x2b\xa3\xaf\x43\x1a\x05\xce\x9c\xec\x87\x3a\xe1\xee\xa5\x51\xe0\xac\x49\x1f\xd8\xae\x62\x46\xc6\x1e\xa3\xc0\x61\x93\x1e\xc8\xfa\x14\x6c\x41\x25\xcd\xa1\x73\x6b\xc9\x71\x70\xd8\x3d\x42\x63\xf7\x6d\x5d\x30\x0a\x05\x9b\xa0\xd6\xb5\xc7\x78\xa4\xe3\xab\xb7\xed\xb5\xb7\x51\x80\xc7\x17\x65\xa7\xb6\x59\xac\x8c\xf0\x2f\xa3\x21\xba\x2f\x81\x0b\x92\x43\xca\xa8\xd5\xc6\xbb\x9b\xc7\x28\x30\x6c\x33\x42\x75\x6f\xc7\xd6\xcd\x28\x53\x16\xe3\x0a\x02\xe7\x90\x0e\xca\xd3\xc4\xcb\x51\x50\x58\x53\xc2\x9a\x03\xe7\xa7\x78\x9b\xc0\x49\xa4\x83\xac\x55\xa5\x63\x93\x16\x44\x21\x62\x8d\x49\x8b\x38\x63\xd5\xb6\x71\x34\x26\xd6\xa2\xd4\x20\x4d\xf2\x54\x40\xe8\xa2\x17\x0c\xe4\xf1\xfb\x47\xa7\xb3\x89\x35\x34\x5a\xb2\x56\x4d\x5b\xa6\xa3\x7d\xad\xdf\xee\x7b\x58\x8b\xec\x59\x84\x93\xb8\xc5\x9a\x9d\x8e\x84\x5d\xb6\x7a\x12\x2a\xd6\xfe\xb4\xa8\xd5\x3d\x2c\xa7\xa0\xa2\x1b\x6e\xbb\x0a\x5c\x3b\xae\xd8\xcd\x85\xd1\x30\x50\xd1\x39\xc4\xac\xad\x0e\x9c\xc4\xea\xf1\x16\xc9\xf5\x81\x55\xf7\x4b\x46\xe3\x62\xed\xd2\x8b\x14\xba\xbd\xa7\xca\xdd\x4d\xa1\x6d\xe1\xde\x6e\x9f\xca\x8e\xdf\xf1\xe8\xb0\x9e\x4f\xd2\x9c\xa4\x4c\x3d\x63\x88\xc2\x1a\xae\xee\x15\xd6\xf0\xdc\x2f\x88\xa3\x09\xc0\x9a\x31\x3b\xef\xff\x90\x50\xb0\x66\xee\x1f\x9d\x29\xac\x09\x74\xa9\x4d\xcf\x85\xea\x47\xa3\x62\x6d\x60\x7d\xff\xd5\xf7\xc2\xc5\x5a\xc1\x3a\xe4\x3b\x19\x11\x7d\xca\xd7\x0b\x54\x72\xd0\x94\x54\xfd\x69\x31\x86\x01\x7d\xdc\x77\xd7\xb9\x9d\x0c\x8c\x3e\xf7\xdb\x01\xaa\x35\x3d\x3a\x5b\x41\x1f\x00\x0e\x0b\xba\xe7\x3a\x33\x0c\xf0\xf1\xb6\xce\x86\x2f\xa7\xc2\x1e\x1f\xa8\x75\xa6\xf7\x04\x5c\x74\x0b\xbb\xd0\x04\xb8\xbd\xb2\x44\x15\x34\x81\x56\xe2\x51\xb0\x58\x3b\x45\xb3\x5c\x28\x4d\x66\x65\xe0\xea\x46\x0c\x0e\xd6\x32\xd5\x51\x8a\x15\x6a\x54\x94\x32\xc4\x1a\x23\x7b\x73\x2c\xd5\x34\x13\xf3\xd0\x35\x5a\x47\x40\xfa\xb7\x2b\xf6\x40\x02\xff\xb3\x84\x32\xfe\x27\x42\x46\x43\xff\x5a\xc4\xfd\xfa\x69\x5d\xdb\x92\x4a\x26\x4a\x65\xac\x80\x8a\x4b\x0c\x47\x11\xbd\xa5\x74\x09\x84\x71\x91\x46\x29\xe6\xe8\x78\xbb\x53\x88\xc2\x5d\xef\x4d\x89\x95\x72\x14\xec\xf1\x56\xa7\x28\xd5\xc2\xb6\x65\x44\xa3\x06\xb6\x84\xfa\x1b\xc5\xae\x5a\x8d\x3d\xe6\x0a\xbe\xa6\x2c\xff\xb8\x52\x67\xb6\x97\x7d\xbb\x32\x7f\xb1\x5b\x98\xf7\x8e\x92\x8d\xc6\xef\xf7\x15\xe6\x03\x47\xc9\x7a\x0a\xf3\xce\x48\xfe\x6e\x89\x88\x90\x56\xe0\x50\x48\x0f\x90\xeb\xa4\xf9\x9d\xa6\xf1\x58\x7e\xa6\xb5\xf7\x37\x4a\xaa\xdf\xb9\x38\x06\xaf\x99\x98\x2f\x62\x1e\xf8\x95\x95\xdd\x59\xb9\xf0\x66\x65\xef\x76\xc9\x38\x70\x2d\x5c\xb8\xe3\x97\x65\x1a\x24\x51\x2b\xae\x69\xdf\x8d\x85\x08\x79\x5d\xe0\x1b\xdf\x2b\x44\x97\x9e\xba\xb2\x43\x41\xf5\x22\x0a\x15\xb9\x93\xd0\xf6\x92\x66\x62\x7e\x66\x1f\x75\x39\x92\x3e\xda\x01\xb4\x3f\x95\x73\xff\x95\xea\xc5\x19\x5f\xe6\xb3\x03\x5b\xc5\x63\x6f\xaf\x6b\xec\xfd\x48\xda\xee\xb0\x33\x69\xaf\xdb\x3c\xd4\x81\x39\xf6\x7e\x7c\x67\xdc\xbf\x51\x5e\x0d\x3d\xa5\xc9\x33\x62\x64\x6f\xb7\x7c\xec\xfd\x6e\x47\x33\xb2\xeb\xd1\xf2\x46\xdc\x19\x72\xe2\xc9\x61\xb2\xb7\xb5\x6a\x82\xfe\x29\x90\xc7\xaf\x97\x57\xd7\xdb\xdf\xa1\xb5\x68\x12\xf8\x19\x90\x83\xb6\xbf\xce\xa3\xb6\xee\xf7\xeb\x64\x35\xd5\x75\x81\xa1\xdb\x07\xf7\xd0\x71\xbc\xaf\x3d\x44\xc7\x82\xcd\x17\x20\x49\x21\x99\xb0\xf7\x55\xfd\x21\xa6\x44\x95\xc9\x82\x50\x55\x77\xd8\x31\x6e\x7d\x4a\xdd\x69\xcb\xf8\x3c\x74\xea\x46\xef\x5c\x6f\x48\xc9\xcb\xa2\x2d\x2c\x74\x78\x38\xde\x7d\xa3\x24\x59\x87\x87\xcd\xe1\x8d\x7d\x62\x6d\xb7\xa2\x27\xff\x43\x7e\xb8\x3b\x7b\x12\x22\xfb\xf7\xa7\xb3\xcb\x39\x70\xfd\xa3\xaf\xa5\x81\xdf\x34\xdc\x6d\x01\xb4\x1f\xbd\xf9\xff\x00\x00\x00\xff\xff\xfc\xb2\xb8\x09\x41\x71\x00\x00")

func ResourcesEventsYamlBytes() ([]byte, error) {
	return bindataRead(
		_ResourcesEventsYaml,
		"../resources/events.yaml",
	)
}

func ResourcesEventsYaml() (*asset, error) {
	bytes, err := ResourcesEventsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../resources/events.yaml", size: 28993, mode: os.FileMode(420), modTime: time.Unix(1593651425, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../resources/events.yaml": ResourcesEventsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"resources": &bintree{nil, map[string]*bintree{
			"events.yaml": &bintree{ResourcesEventsYaml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
